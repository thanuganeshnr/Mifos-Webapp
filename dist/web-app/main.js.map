{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/accounting/accounting-routing.module.ts","webpack:///./src/app/accounting/accounting-rules/accounting-rule.resolver.ts","webpack:///./src/app/accounting/accounting-rules/accounting-rules-template.resolver.ts","webpack:///./src/app/accounting/accounting-rules/accounting-rules.component.html","webpack:///./src/app/accounting/accounting-rules/accounting-rules.component.scss","webpack:///./src/app/accounting/accounting-rules/accounting-rules.component.ts","webpack:///./src/app/accounting/accounting-rules/accounting-rules.resolver.ts","webpack:///./src/app/accounting/accounting-rules/create-rule/create-rule.component.html","webpack:///./src/app/accounting/accounting-rules/create-rule/create-rule.component.scss","webpack:///./src/app/accounting/accounting-rules/create-rule/create-rule.component.ts","webpack:///./src/app/accounting/accounting-rules/edit-rule/edit-rule.component.html","webpack:///./src/app/accounting/accounting-rules/edit-rule/edit-rule.component.scss","webpack:///./src/app/accounting/accounting-rules/edit-rule/edit-rule.component.ts","webpack:///./src/app/accounting/accounting-rules/one-of-the-fields-is-required.validator.ts","webpack:///./src/app/accounting/accounting-rules/view-rule/view-rule.component.html","webpack:///./src/app/accounting/accounting-rules/view-rule/view-rule.component.scss","webpack:///./src/app/accounting/accounting-rules/view-rule/view-rule.component.ts","webpack:///./src/app/accounting/accounting.component.html","webpack:///./src/app/accounting/accounting.component.scss","webpack:///./src/app/accounting/accounting.component.ts","webpack:///./src/app/accounting/accounting.module.ts","webpack:///./src/app/accounting/accounting.service.ts","webpack:///./src/app/accounting/chart-of-accounts/chart-of-accounts.component.html","webpack:///./src/app/accounting/chart-of-accounts/chart-of-accounts.component.scss","webpack:///./src/app/accounting/chart-of-accounts/chart-of-accounts.component.ts","webpack:///./src/app/accounting/chart-of-accounts/chart-of-accounts.resolver.ts","webpack:///./src/app/accounting/chart-of-accounts/create-gl-account/chart-of-accounts-template.resolver.ts","webpack:///./src/app/accounting/chart-of-accounts/create-gl-account/create-gl-account.component.html","webpack:///./src/app/accounting/chart-of-accounts/create-gl-account/create-gl-account.component.scss","webpack:///./src/app/accounting/chart-of-accounts/create-gl-account/create-gl-account.component.ts","webpack:///./src/app/accounting/chart-of-accounts/edit-gl-account/edit-gl-account.component.html","webpack:///./src/app/accounting/chart-of-accounts/edit-gl-account/edit-gl-account.component.scss","webpack:///./src/app/accounting/chart-of-accounts/edit-gl-account/edit-gl-account.component.ts","webpack:///./src/app/accounting/chart-of-accounts/gl-account-and-chart-of-accounts-template.resolver.ts","webpack:///./src/app/accounting/chart-of-accounts/gl-account-node.model.ts","webpack:///./src/app/accounting/chart-of-accounts/gl-account-tree.service.ts","webpack:///./src/app/accounting/chart-of-accounts/view-gl-account/view-gl-account.component.html","webpack:///./src/app/accounting/chart-of-accounts/view-gl-account/view-gl-account.component.scss","webpack:///./src/app/accounting/chart-of-accounts/view-gl-account/view-gl-account.component.ts","webpack:///./src/app/accounting/closing-entries/closing-entries.component.html","webpack:///./src/app/accounting/closing-entries/closing-entries.component.scss","webpack:///./src/app/accounting/closing-entries/closing-entries.component.ts","webpack:///./src/app/accounting/closing-entries/closing-entries.resolver.ts","webpack:///./src/app/accounting/closing-entries/closing-entry.resolver.ts","webpack:///./src/app/accounting/closing-entries/create-closure/create-closure.component.html","webpack:///./src/app/accounting/closing-entries/create-closure/create-closure.component.scss","webpack:///./src/app/accounting/closing-entries/create-closure/create-closure.component.ts","webpack:///./src/app/accounting/closing-entries/edit-closure/edit-closure.component.html","webpack:///./src/app/accounting/closing-entries/edit-closure/edit-closure.component.scss","webpack:///./src/app/accounting/closing-entries/edit-closure/edit-closure.component.ts","webpack:///./src/app/accounting/closing-entries/view-closure/view-closure.component.html","webpack:///./src/app/accounting/closing-entries/view-closure/view-closure.component.scss","webpack:///./src/app/accounting/closing-entries/view-closure/view-closure.component.ts","webpack:///./src/app/accounting/common-resolvers/accounting-rules-associations.resolver.ts","webpack:///./src/app/accounting/common-resolvers/currencies.resolver.ts","webpack:///./src/app/accounting/common-resolvers/gl-accounts.resolver.ts","webpack:///./src/app/accounting/common-resolvers/loan-products.resolver.ts","webpack:///./src/app/accounting/common-resolvers/offices.resolver.ts","webpack:///./src/app/accounting/common-resolvers/payment-types.resolver.ts","webpack:///./src/app/accounting/common-resolvers/provisioning-categories.resolver.ts","webpack:///./src/app/accounting/create-journal-entry/create-journal-entry.component.html","webpack:///./src/app/accounting/create-journal-entry/create-journal-entry.component.scss","webpack:///./src/app/accounting/create-journal-entry/create-journal-entry.component.ts","webpack:///./src/app/accounting/financial-activity-mappings/create-financial-activity-mapping/create-financial-activity-mapping.component.html","webpack:///./src/app/accounting/financial-activity-mappings/create-financial-activity-mapping/create-financial-activity-mapping.component.scss","webpack:///./src/app/accounting/financial-activity-mappings/create-financial-activity-mapping/create-financial-activity-mapping.component.ts","webpack:///./src/app/accounting/financial-activity-mappings/create-financial-activity-mapping/financial-activity-mappings-template.resolver.ts","webpack:///./src/app/accounting/financial-activity-mappings/edit-financial-activity-mapping/edit-financial-activity-mapping.component.html","webpack:///./src/app/accounting/financial-activity-mappings/edit-financial-activity-mapping/edit-financial-activity-mapping.component.scss","webpack:///./src/app/accounting/financial-activity-mappings/edit-financial-activity-mapping/edit-financial-activity-mapping.component.ts","webpack:///./src/app/accounting/financial-activity-mappings/edit-financial-activity-mapping/financial-activity-mapping-and-template.resolver.ts","webpack:///./src/app/accounting/financial-activity-mappings/financial-activity-mappings.component.html","webpack:///./src/app/accounting/financial-activity-mappings/financial-activity-mappings.component.scss","webpack:///./src/app/accounting/financial-activity-mappings/financial-activity-mappings.component.ts","webpack:///./src/app/accounting/financial-activity-mappings/financial-activity-mappings.resolver.ts","webpack:///./src/app/accounting/financial-activity-mappings/view-financial-activity-mapping/financial-activity-mapping.resolver.ts","webpack:///./src/app/accounting/financial-activity-mappings/view-financial-activity-mapping/view-financial-activity-mapping.component.html","webpack:///./src/app/accounting/financial-activity-mappings/view-financial-activity-mapping/view-financial-activity-mapping.component.scss","webpack:///./src/app/accounting/financial-activity-mappings/view-financial-activity-mapping/view-financial-activity-mapping.component.ts","webpack:///./src/app/accounting/frequent-postings/frequent-postings.component.html","webpack:///./src/app/accounting/frequent-postings/frequent-postings.component.scss","webpack:///./src/app/accounting/frequent-postings/frequent-postings.component.ts","webpack:///./src/app/accounting/migrate-opening-balances/migrate-opening-balances.component.html","webpack:///./src/app/accounting/migrate-opening-balances/migrate-opening-balances.component.scss","webpack:///./src/app/accounting/migrate-opening-balances/migrate-opening-balances.component.ts","webpack:///./src/app/accounting/migrate-opening-balances/only-one-of-the-fields-is-required.validator.ts","webpack:///./src/app/accounting/periodic-accruals/periodic-accruals.component.html","webpack:///./src/app/accounting/periodic-accruals/periodic-accruals.component.scss","webpack:///./src/app/accounting/periodic-accruals/periodic-accruals.component.ts","webpack:///./src/app/accounting/provisioning-entries/create-provisioning-entry/create-provisioning-entry.component.html","webpack:///./src/app/accounting/provisioning-entries/create-provisioning-entry/create-provisioning-entry.component.scss","webpack:///./src/app/accounting/provisioning-entries/create-provisioning-entry/create-provisioning-entry.component.ts","webpack:///./src/app/accounting/provisioning-entries/provisioning-entries.component.html","webpack:///./src/app/accounting/provisioning-entries/provisioning-entries.component.scss","webpack:///./src/app/accounting/provisioning-entries/provisioning-entries.component.ts","webpack:///./src/app/accounting/provisioning-entries/provisioning-entries.resolver.ts","webpack:///./src/app/accounting/provisioning-entries/view-provisioning-entry/provisioning-entry-entries.resolver.ts","webpack:///./src/app/accounting/provisioning-entries/view-provisioning-entry/provisioning-entry.resolver.ts","webpack:///./src/app/accounting/provisioning-entries/view-provisioning-entry/view-provisioning-entry.component.html","webpack:///./src/app/accounting/provisioning-entries/view-provisioning-entry/view-provisioning-entry.component.scss","webpack:///./src/app/accounting/provisioning-entries/view-provisioning-entry/view-provisioning-entry.component.ts","webpack:///./src/app/accounting/provisioning-entries/view-provisioning-journal-entries/provisioning-journal-entries.resolver.ts","webpack:///./src/app/accounting/provisioning-entries/view-provisioning-journal-entries/view-provisioning-journal-entries.component.html","webpack:///./src/app/accounting/provisioning-entries/view-provisioning-journal-entries/view-provisioning-journal-entries.component.scss","webpack:///./src/app/accounting/provisioning-entries/view-provisioning-journal-entries/view-provisioning-journal-entries.component.ts","webpack:///./src/app/accounting/revert-transaction/revert-transaction.component.html","webpack:///./src/app/accounting/revert-transaction/revert-transaction.component.scss","webpack:///./src/app/accounting/revert-transaction/revert-transaction.component.ts","webpack:///./src/app/accounting/search-journal-entry/journal-entry.datasource.ts","webpack:///./src/app/accounting/search-journal-entry/search-journal-entry.component.html","webpack:///./src/app/accounting/search-journal-entry/search-journal-entry.component.scss","webpack:///./src/app/accounting/search-journal-entry/search-journal-entry.component.ts","webpack:///./src/app/accounting/view-journal-entry/view-journal-entry.component.html","webpack:///./src/app/accounting/view-journal-entry/view-journal-entry.component.scss","webpack:///./src/app/accounting/view-journal-entry/view-journal-entry.component.ts","webpack:///./src/app/accounting/view-transaction/transaction.resolver.ts","webpack:///./src/app/accounting/view-transaction/view-transaction.component.html","webpack:///./src/app/accounting/view-transaction/view-transaction.component.scss","webpack:///./src/app/accounting/view-transaction/view-transaction.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/centers/centers-routing.module.ts","webpack:///./src/app/centers/centers-view/centers-view.component.html","webpack:///./src/app/centers/centers-view/centers-view.component.scss","webpack:///./src/app/centers/centers-view/centers-view.component.ts","webpack:///./src/app/centers/centers-view/edit-center/edit-center.component.html","webpack:///./src/app/centers/centers-view/edit-center/edit-center.component.scss","webpack:///./src/app/centers/centers-view/edit-center/edit-center.component.ts","webpack:///./src/app/centers/centers-view/general-tab/general-tab.component.html","webpack:///./src/app/centers/centers-view/general-tab/general-tab.component.scss","webpack:///./src/app/centers/centers-view/general-tab/general-tab.component.ts","webpack:///./src/app/centers/centers-view/notes-tab/notes-tab.component.html","webpack:///./src/app/centers/centers-view/notes-tab/notes-tab.component.scss","webpack:///./src/app/centers/centers-view/notes-tab/notes-tab.component.ts","webpack:///./src/app/centers/centers.component.html","webpack:///./src/app/centers/centers.component.scss","webpack:///./src/app/centers/centers.component.ts","webpack:///./src/app/centers/centers.module.ts","webpack:///./src/app/centers/centers.service.ts","webpack:///./src/app/clients/clients-routing.module.ts","webpack:///./src/app/clients/clients-view/address-tab/address-tab.component.html","webpack:///./src/app/clients/clients-view/address-tab/address-tab.component.scss","webpack:///./src/app/clients/clients-view/address-tab/address-tab.component.ts","webpack:///./src/app/clients/clients-view/clients-view.component.html","webpack:///./src/app/clients/clients-view/clients-view.component.scss","webpack:///./src/app/clients/clients-view/clients-view.component.ts","webpack:///./src/app/clients/clients-view/datatable-tab/datatable-tab.component.html","webpack:///./src/app/clients/clients-view/datatable-tab/datatable-tab.component.scss","webpack:///./src/app/clients/clients-view/datatable-tab/datatable-tab.component.ts","webpack:///./src/app/clients/clients-view/datatable-tab/multi-row/multi-row.component.html","webpack:///./src/app/clients/clients-view/datatable-tab/multi-row/multi-row.component.scss","webpack:///./src/app/clients/clients-view/datatable-tab/multi-row/multi-row.component.ts","webpack:///./src/app/clients/clients-view/datatable-tab/single-row/single-row.component.html","webpack:///./src/app/clients/clients-view/datatable-tab/single-row/single-row.component.scss","webpack:///./src/app/clients/clients-view/datatable-tab/single-row/single-row.component.ts","webpack:///./src/app/clients/clients-view/documents-tab/documents-tab.component.html","webpack:///./src/app/clients/clients-view/documents-tab/documents-tab.component.scss","webpack:///./src/app/clients/clients-view/documents-tab/documents-tab.component.ts","webpack:///./src/app/clients/clients-view/edit-notes-dialog/edit-notes-dialog.component.html","webpack:///./src/app/clients/clients-view/edit-notes-dialog/edit-notes-dialog.component.scss","webpack:///./src/app/clients/clients-view/edit-notes-dialog/edit-notes-dialog.component.ts","webpack:///./src/app/clients/clients-view/family-members-tab/add-family-member/add-family-member.component.html","webpack:///./src/app/clients/clients-view/family-members-tab/add-family-member/add-family-member.component.scss","webpack:///./src/app/clients/clients-view/family-members-tab/add-family-member/add-family-member.component.ts","webpack:///./src/app/clients/clients-view/family-members-tab/edit-family-member/edit-family-member.component.html","webpack:///./src/app/clients/clients-view/family-members-tab/edit-family-member/edit-family-member.component.scss","webpack:///./src/app/clients/clients-view/family-members-tab/edit-family-member/edit-family-member.component.ts","webpack:///./src/app/clients/clients-view/family-members-tab/family-members-tab.component.html","webpack:///./src/app/clients/clients-view/family-members-tab/family-members-tab.component.scss","webpack:///./src/app/clients/clients-view/family-members-tab/family-members-tab.component.ts","webpack:///./src/app/clients/clients-view/general-tab/general-tab.component.html","webpack:///./src/app/clients/clients-view/general-tab/general-tab.component.scss","webpack:///./src/app/clients/clients-view/general-tab/general-tab.component.ts","webpack:///./src/app/clients/clients-view/identities-tab/identities-tab.component.html","webpack:///./src/app/clients/clients-view/identities-tab/identities-tab.component.scss","webpack:///./src/app/clients/clients-view/identities-tab/identities-tab.component.ts","webpack:///./src/app/clients/clients-view/notes-tab/notes-tab.component.html","webpack:///./src/app/clients/clients-view/notes-tab/notes-tab.component.scss","webpack:///./src/app/clients/clients-view/notes-tab/notes-tab.component.ts","webpack:///./src/app/clients/clients-view/upload-document-dialog/upload-document-dialog.component.html","webpack:///./src/app/clients/clients-view/upload-document-dialog/upload-document-dialog.component.scss","webpack:///./src/app/clients/clients-view/upload-document-dialog/upload-document-dialog.component.ts","webpack:///./src/app/clients/clients.component.html","webpack:///./src/app/clients/clients.component.scss","webpack:///./src/app/clients/clients.component.ts","webpack:///./src/app/clients/clients.datasource.ts","webpack:///./src/app/clients/clients.module.ts","webpack:///./src/app/clients/clients.service.ts","webpack:///./src/app/clients/common-resolvers/client-accounts.resolver.ts","webpack:///./src/app/clients/common-resolvers/client-address-fieldconfiguration.resolver.ts","webpack:///./src/app/clients/common-resolvers/client-address-template.resolver.ts","webpack:///./src/app/clients/common-resolvers/client-address.resolver.ts","webpack:///./src/app/clients/common-resolvers/client-charges.resolver.ts","webpack:///./src/app/clients/common-resolvers/client-datatable.resolver.ts","webpack:///./src/app/clients/common-resolvers/client-datatables.resolver.ts","webpack:///./src/app/clients/common-resolvers/client-document.resolver.ts","webpack:///./src/app/clients/common-resolvers/client-family-member.resolver.ts","webpack:///./src/app/clients/common-resolvers/client-family-members.resolver.ts","webpack:///./src/app/clients/common-resolvers/client-identifier-template.resolver.ts","webpack:///./src/app/clients/common-resolvers/client-identities.resolver.ts","webpack:///./src/app/clients/common-resolvers/client-notes.resolver.ts","webpack:///./src/app/clients/common-resolvers/client-summary.resolver.ts","webpack:///./src/app/clients/common-resolvers/client-template.resolver.ts","webpack:///./src/app/clients/common-resolvers/client-view.resolver.ts","webpack:///./src/app/core/alert/alert.service.ts","webpack:///./src/app/core/authentication/authentication.guard.ts","webpack:///./src/app/core/authentication/authentication.interceptor.ts","webpack:///./src/app/core/authentication/authentication.service.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/http/api-prefix.interceptor.ts","webpack:///./src/app/core/http/cache.interceptor.ts","webpack:///./src/app/core/http/error-handler.interceptor.ts","webpack:///./src/app/core/http/http-cache.service.ts","webpack:///./src/app/core/http/http.service.ts","webpack:///./src/app/core/i18n/i18n.service.ts","webpack:///./src/app/core/logger/logger.service.ts","webpack:///./src/app/core/progress-bar/progress-bar.service.ts","webpack:///./src/app/core/progress-bar/progress.interceptor.ts","webpack:///./src/app/core/route/route-reusable-strategy.ts","webpack:///./src/app/core/route/route.service.ts","webpack:///./src/app/core/shell/breadcrumb/breadcrumb.component.html","webpack:///./src/app/core/shell/breadcrumb/breadcrumb.component.scss","webpack:///./src/app/core/shell/breadcrumb/breadcrumb.component.ts","webpack:///./src/app/core/shell/content/content.component.html","webpack:///./src/app/core/shell/content/content.component.scss","webpack:///./src/app/core/shell/content/content.component.ts","webpack:///./src/app/core/shell/shell.component.html","webpack:///./src/app/core/shell/shell.component.scss","webpack:///./src/app/core/shell/shell.component.ts","webpack:///./src/app/core/shell/sidenav/sidenav.component.html","webpack:///./src/app/core/shell/sidenav/sidenav.component.scss","webpack:///./src/app/core/shell/sidenav/sidenav.component.ts","webpack:///./src/app/core/shell/toolbar/toolbar.component.html","webpack:///./src/app/core/shell/toolbar/toolbar.component.scss","webpack:///./src/app/core/shell/toolbar/toolbar.component.ts","webpack:///./src/app/groups/groups-routing.module.ts","webpack:///./src/app/groups/groups-view/committee-tab/committee-tab.component.html","webpack:///./src/app/groups/groups-view/committee-tab/committee-tab.component.scss","webpack:///./src/app/groups/groups-view/committee-tab/committee-tab.component.ts","webpack:///./src/app/groups/groups-view/edit-group/edit-group.component.html","webpack:///./src/app/groups/groups-view/edit-group/edit-group.component.scss","webpack:///./src/app/groups/groups-view/edit-group/edit-group.component.ts","webpack:///./src/app/groups/groups-view/general-tab/general-tab.component.html","webpack:///./src/app/groups/groups-view/general-tab/general-tab.component.scss","webpack:///./src/app/groups/groups-view/general-tab/general-tab.component.ts","webpack:///./src/app/groups/groups-view/groups-view.component.html","webpack:///./src/app/groups/groups-view/groups-view.component.scss","webpack:///./src/app/groups/groups-view/groups-view.component.ts","webpack:///./src/app/groups/groups-view/notes-tab/notes-tab.component.html","webpack:///./src/app/groups/groups-view/notes-tab/notes-tab.component.scss","webpack:///./src/app/groups/groups-view/notes-tab/notes-tab.component.ts","webpack:///./src/app/groups/groups.component.html","webpack:///./src/app/groups/groups.component.scss","webpack:///./src/app/groups/groups.component.ts","webpack:///./src/app/groups/groups.module.ts","webpack:///./src/app/groups/groups.service.ts","webpack:///./src/app/home/dashboard/dashboard.component.html","webpack:///./src/app/home/dashboard/dashboard.component.scss","webpack:///./src/app/home/dashboard/dashboard.component.ts","webpack:///./src/app/home/home-routing.module.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/login/login-form/login-form.component.html","webpack:///./src/app/login/login-form/login-form.component.scss","webpack:///./src/app/login/login-form/login-form.component.ts","webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/reset-password/confirm-password.validator.ts","webpack:///./src/app/login/reset-password/reset-password.component.html","webpack:///./src/app/login/reset-password/reset-password.component.scss","webpack:///./src/app/login/reset-password/reset-password.component.ts","webpack:///./src/app/login/two-factor-authentication/two-factor-authentication.component.html","webpack:///./src/app/login/two-factor-authentication/two-factor-authentication.component.scss","webpack:///./src/app/login/two-factor-authentication/two-factor-authentication.component.ts","webpack:///./src/app/navigation/navigation-routing.module.ts","webpack:///./src/app/navigation/navigation.component.html","webpack:///./src/app/navigation/navigation.component.scss","webpack:///./src/app/navigation/navigation.component.ts","webpack:///./src/app/navigation/navigation.module.ts","webpack:///./src/app/organization/adhoc-query/adhoc-queries.resolver.ts","webpack:///./src/app/organization/adhoc-query/adhoc-query.component.html","webpack:///./src/app/organization/adhoc-query/adhoc-query.component.scss","webpack:///./src/app/organization/adhoc-query/adhoc-query.component.ts","webpack:///./src/app/organization/adhoc-query/adhoc-query.resolver.ts","webpack:///./src/app/organization/adhoc-query/view-adhoc-query/view-adhoc-query.component.html","webpack:///./src/app/organization/adhoc-query/view-adhoc-query/view-adhoc-query.component.scss","webpack:///./src/app/organization/adhoc-query/view-adhoc-query/view-adhoc-query.component.ts","webpack:///./src/app/organization/currencies/currencies.component.html","webpack:///./src/app/organization/currencies/currencies.component.scss","webpack:///./src/app/organization/currencies/currencies.component.ts","webpack:///./src/app/organization/currencies/currencies.resolver.ts","webpack:///./src/app/organization/employees/create-employee/create-employee.component.html","webpack:///./src/app/organization/employees/create-employee/create-employee.component.scss","webpack:///./src/app/organization/employees/create-employee/create-employee.component.ts","webpack:///./src/app/organization/employees/employee.resolver.ts","webpack:///./src/app/organization/employees/employees.component.html","webpack:///./src/app/organization/employees/employees.component.scss","webpack:///./src/app/organization/employees/employees.component.ts","webpack:///./src/app/organization/employees/employees.resolver.ts","webpack:///./src/app/organization/employees/view-employee/view-employee.component.html","webpack:///./src/app/organization/employees/view-employee/view-employee.component.scss","webpack:///./src/app/organization/employees/view-employee/view-employee.component.ts","webpack:///./src/app/organization/entity-data-table-checks/entity-data-table-checks.component.html","webpack:///./src/app/organization/entity-data-table-checks/entity-data-table-checks.component.scss","webpack:///./src/app/organization/entity-data-table-checks/entity-data-table-checks.component.ts","webpack:///./src/app/organization/entity-data-table-checks/entity-data-table-checks.resolver.ts","webpack:///./src/app/organization/holidays/holidays.component.html","webpack:///./src/app/organization/holidays/holidays.component.scss","webpack:///./src/app/organization/holidays/holidays.component.ts","webpack:///./src/app/organization/loan-provisioning-criteria/loan-provisioning-criteria.component.html","webpack:///./src/app/organization/loan-provisioning-criteria/loan-provisioning-criteria.component.scss","webpack:///./src/app/organization/loan-provisioning-criteria/loan-provisioning-criteria.component.ts","webpack:///./src/app/organization/loan-provisioning-criteria/loan-provisioning-criteria.resolver.ts","webpack:///./src/app/organization/offices/create-office/create-office.component.html","webpack:///./src/app/organization/offices/create-office/create-office.component.scss","webpack:///./src/app/organization/offices/create-office/create-office.component.ts","webpack:///./src/app/organization/offices/offices.component.html","webpack:///./src/app/organization/offices/offices.component.scss","webpack:///./src/app/organization/offices/offices.component.ts","webpack:///./src/app/organization/offices/offices.resolver.ts","webpack:///./src/app/organization/organization-routing.module.ts","webpack:///./src/app/organization/organization.component.html","webpack:///./src/app/organization/organization.component.scss","webpack:///./src/app/organization/organization.component.ts","webpack:///./src/app/organization/organization.module.ts","webpack:///./src/app/organization/organization.service.ts","webpack:///./src/app/organization/password-preferences/password-preferences-template.resolver.ts","webpack:///./src/app/organization/password-preferences/password-preferences.component.html","webpack:///./src/app/organization/password-preferences/password-preferences.component.scss","webpack:///./src/app/organization/password-preferences/password-preferences.component.ts","webpack:///./src/app/organization/payment-types/create-payment-type/create-payment-type.component.html","webpack:///./src/app/organization/payment-types/create-payment-type/create-payment-type.component.scss","webpack:///./src/app/organization/payment-types/create-payment-type/create-payment-type.component.ts","webpack:///./src/app/organization/payment-types/edit-payment-type/edit-payment-type.component.html","webpack:///./src/app/organization/payment-types/edit-payment-type/edit-payment-type.component.scss","webpack:///./src/app/organization/payment-types/edit-payment-type/edit-payment-type.component.ts","webpack:///./src/app/organization/payment-types/payment-type.resolver.ts","webpack:///./src/app/organization/payment-types/payment-types.component.html","webpack:///./src/app/organization/payment-types/payment-types.component.scss","webpack:///./src/app/organization/payment-types/payment-types.component.ts","webpack:///./src/app/organization/payment-types/payment-types.resolver.ts","webpack:///./src/app/organization/sms-campaigns/sms-campaigns.component.html","webpack:///./src/app/organization/sms-campaigns/sms-campaigns.component.scss","webpack:///./src/app/organization/sms-campaigns/sms-campaigns.component.ts","webpack:///./src/app/organization/sms-campaigns/sms-campaigns.resolver.ts","webpack:///./src/app/organization/tellers/teller.resolver.ts","webpack:///./src/app/organization/tellers/tellers.component.html","webpack:///./src/app/organization/tellers/tellers.component.scss","webpack:///./src/app/organization/tellers/tellers.component.ts","webpack:///./src/app/organization/tellers/tellers.resolver.ts","webpack:///./src/app/organization/tellers/view-teller/view-teller.component.html","webpack:///./src/app/organization/tellers/view-teller/view-teller.component.scss","webpack:///./src/app/organization/tellers/view-teller/view-teller.component.ts","webpack:///./src/app/organization/working-days/working-days.component.html","webpack:///./src/app/organization/working-days/working-days.component.scss","webpack:///./src/app/organization/working-days/working-days.component.ts","webpack:///./src/app/organization/working-days/working-days.resolver.ts","webpack:///./src/app/pipes/accounts-filter.pipe.ts","webpack:///./src/app/pipes/charges-filter.pipe.ts","webpack:///./src/app/pipes/charges-penalty-filter.pipe.ts","webpack:///./src/app/pipes/find.pipe.ts","webpack:///./src/app/pipes/pipes.module.ts","webpack:///./src/app/pipes/status-lookup.pipe.ts","webpack:///./src/app/products/charges/charge.resolver.ts","webpack:///./src/app/products/charges/charges.component.html","webpack:///./src/app/products/charges/charges.component.scss","webpack:///./src/app/products/charges/charges.component.ts","webpack:///./src/app/products/charges/charges.resolver.ts","webpack:///./src/app/products/charges/view-charge/view-charge.component.html","webpack:///./src/app/products/charges/view-charge/view-charge.component.scss","webpack:///./src/app/products/charges/view-charge/view-charge.component.ts","webpack:///./src/app/products/deposit-product-incentive-form-dialog/deposit-product-incentive-form-dialog.component.html","webpack:///./src/app/products/deposit-product-incentive-form-dialog/deposit-product-incentive-form-dialog.component.scss","webpack:///./src/app/products/deposit-product-incentive-form-dialog/deposit-product-incentive-form-dialog.component.ts","webpack:///./src/app/products/fixed-deposit-products/create-fixed-deposit-product/create-fixed-deposit-product.component.html","webpack:///./src/app/products/fixed-deposit-products/create-fixed-deposit-product/create-fixed-deposit-product.component.scss","webpack:///./src/app/products/fixed-deposit-products/create-fixed-deposit-product/create-fixed-deposit-product.component.ts","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-accounting-step/fixed-deposit-product-accounting-step.component.html","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-accounting-step/fixed-deposit-product-accounting-step.component.scss","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-accounting-step/fixed-deposit-product-accounting-step.component.ts","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-charges-step/fixed-deposit-product-charges-step.component.html","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-charges-step/fixed-deposit-product-charges-step.component.scss","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-charges-step/fixed-deposit-product-charges-step.component.ts","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-currency-step/fixed-deposit-product-currency-step.component.html","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-currency-step/fixed-deposit-product-currency-step.component.scss","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-currency-step/fixed-deposit-product-currency-step.component.ts","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-details-step/fixed-deposit-product-details-step.component.html","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-details-step/fixed-deposit-product-details-step.component.scss","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-details-step/fixed-deposit-product-details-step.component.ts","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-interest-rate-chart-step/fixed-deposit-product-interest-rate-chart-step.component.html","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-interest-rate-chart-step/fixed-deposit-product-interest-rate-chart-step.component.scss","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-interest-rate-chart-step/fixed-deposit-product-interest-rate-chart-step.component.ts","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-preview-step/fixed-deposit-product-preview-step.component.html","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-preview-step/fixed-deposit-product-preview-step.component.scss","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-preview-step/fixed-deposit-product-preview-step.component.ts","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-settings-step/fixed-deposit-product-settings-step.component.html","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-settings-step/fixed-deposit-product-settings-step.component.scss","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-settings-step/fixed-deposit-product-settings-step.component.ts","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-terms-step/fixed-deposit-product-terms-step.component.html","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-terms-step/fixed-deposit-product-terms-step.component.scss","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-terms-step/fixed-deposit-product-terms-step.component.ts","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-products-template.resolver.ts","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-products.component.html","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-products.component.scss","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-products.component.ts","webpack:///./src/app/products/fixed-deposit-products/fixed-deposit-products.resolver.ts","webpack:///./src/app/products/loan-products/create-loan-product/create-loan-product.component.html","webpack:///./src/app/products/loan-products/create-loan-product/create-loan-product.component.scss","webpack:///./src/app/products/loan-products/create-loan-product/create-loan-product.component.ts","webpack:///./src/app/products/loan-products/edit-loan-product/edit-loan-product.component.html","webpack:///./src/app/products/loan-products/edit-loan-product/edit-loan-product.component.scss","webpack:///./src/app/products/loan-products/edit-loan-product/edit-loan-product.component.ts","webpack:///./src/app/products/loan-products/edit-loan-product/loan-product-and-template.resolver.ts","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-accounting-step/loan-product-accounting-step.component.html","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-accounting-step/loan-product-accounting-step.component.scss","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-accounting-step/loan-product-accounting-step.component.ts","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-charges-step/loan-product-charges-step.component.html","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-charges-step/loan-product-charges-step.component.scss","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-charges-step/loan-product-charges-step.component.ts","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-currency-step/loan-product-currency-step.component.html","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-currency-step/loan-product-currency-step.component.scss","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-currency-step/loan-product-currency-step.component.ts","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-details-step/loan-product-details-step.component.html","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-details-step/loan-product-details-step.component.scss","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-details-step/loan-product-details-step.component.ts","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-preview-step/loan-product-preview-step.component.html","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-preview-step/loan-product-preview-step.component.scss","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-preview-step/loan-product-preview-step.component.ts","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-settings-step/loan-product-settings-step.component.html","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-settings-step/loan-product-settings-step.component.scss","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-settings-step/loan-product-settings-step.component.ts","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-terms-step/loan-product-terms-step.component.html","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-terms-step/loan-product-terms-step.component.scss","webpack:///./src/app/products/loan-products/loan-product-stepper/loan-product-terms-step/loan-product-terms-step.component.ts","webpack:///./src/app/products/loan-products/loan-product.resolver.ts","webpack:///./src/app/products/loan-products/loan-products-template.resolver.ts","webpack:///./src/app/products/loan-products/loan-products.component.html","webpack:///./src/app/products/loan-products/loan-products.component.scss","webpack:///./src/app/products/loan-products/loan-products.component.ts","webpack:///./src/app/products/loan-products/loan-products.resolver.ts","webpack:///./src/app/products/loan-products/view-loan-product/view-loan-product.component.html","webpack:///./src/app/products/loan-products/view-loan-product/view-loan-product.component.scss","webpack:///./src/app/products/loan-products/view-loan-product/view-loan-product.component.ts","webpack:///./src/app/products/manage-tax-components/manage-tax-components.component.html","webpack:///./src/app/products/manage-tax-components/manage-tax-components.component.scss","webpack:///./src/app/products/manage-tax-components/manage-tax-components.component.ts","webpack:///./src/app/products/manage-tax-components/manage-tax-components.resolver.ts","webpack:///./src/app/products/manage-tax-components/tax-component.resolver.ts","webpack:///./src/app/products/manage-tax-components/view-tax-component/view-tax-component.component.html","webpack:///./src/app/products/manage-tax-components/view-tax-component/view-tax-component.component.scss","webpack:///./src/app/products/manage-tax-components/view-tax-component/view-tax-component.component.ts","webpack:///./src/app/products/manage-tax-configurations/manage-tax-configurations.component.html","webpack:///./src/app/products/manage-tax-configurations/manage-tax-configurations.component.ts","webpack:///./src/app/products/manage-tax-groups/manage-tax-groups.component.html","webpack:///./src/app/products/manage-tax-groups/manage-tax-groups.component.scss","webpack:///./src/app/products/manage-tax-groups/manage-tax-groups.component.ts","webpack:///./src/app/products/manage-tax-groups/manage-tax-groups.resolver.ts","webpack:///./src/app/products/products-mix/products-mix.component.html","webpack:///./src/app/products/products-mix/products-mix.component.scss","webpack:///./src/app/products/products-mix/products-mix.component.ts","webpack:///./src/app/products/products-mix/products-mix.resolver.ts","webpack:///./src/app/products/products-routing.module.ts","webpack:///./src/app/products/products.component.html","webpack:///./src/app/products/products.component.scss","webpack:///./src/app/products/products.component.ts","webpack:///./src/app/products/products.module.ts","webpack:///./src/app/products/products.service.ts","webpack:///./src/app/products/recurring-deposit-products/recurring-deposit-products.component.html","webpack:///./src/app/products/recurring-deposit-products/recurring-deposit-products.component.scss","webpack:///./src/app/products/recurring-deposit-products/recurring-deposit-products.component.ts","webpack:///./src/app/products/recurring-deposit-products/recurring-deposit-products.resolver.ts","webpack:///./src/app/products/saving-products/create-saving-product/create-saving-product.component.html","webpack:///./src/app/products/saving-products/create-saving-product/create-saving-product.component.scss","webpack:///./src/app/products/saving-products/create-saving-product/create-saving-product.component.ts","webpack:///./src/app/products/saving-products/edit-saving-product/edit-saving-product.component.html","webpack:///./src/app/products/saving-products/edit-saving-product/edit-saving-product.component.scss","webpack:///./src/app/products/saving-products/edit-saving-product/edit-saving-product.component.ts","webpack:///./src/app/products/saving-products/edit-saving-product/saving-product-and-template.resolver.ts","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-accounting-step/saving-product-accounting-step.component.html","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-accounting-step/saving-product-accounting-step.component.scss","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-accounting-step/saving-product-accounting-step.component.ts","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-charges-step/saving-product-charges-step.component.html","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-charges-step/saving-product-charges-step.component.scss","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-charges-step/saving-product-charges-step.component.ts","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-currency-step/saving-product-currency-step.component.html","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-currency-step/saving-product-currency-step.component.scss","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-currency-step/saving-product-currency-step.component.ts","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-details-step/saving-product-details-step.component.html","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-details-step/saving-product-details-step.component.scss","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-details-step/saving-product-details-step.component.ts","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-preview-step/saving-product-preview-step.component.html","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-preview-step/saving-product-preview-step.component.scss","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-preview-step/saving-product-preview-step.component.ts","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-settings-step/saving-product-settings-step.component.html","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-settings-step/saving-product-settings-step.component.scss","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-settings-step/saving-product-settings-step.component.ts","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-terms-step/saving-product-terms-step.component.html","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-terms-step/saving-product-terms-step.component.scss","webpack:///./src/app/products/saving-products/saving-product-stepper/saving-product-terms-step/saving-product-terms-step.component.ts","webpack:///./src/app/products/saving-products/saving-product.resolver.ts","webpack:///./src/app/products/saving-products/saving-products-template.resolver.ts","webpack:///./src/app/products/saving-products/saving-products.component.html","webpack:///./src/app/products/saving-products/saving-products.component.scss","webpack:///./src/app/products/saving-products/saving-products.component.ts","webpack:///./src/app/products/saving-products/saving-products.resolver.ts","webpack:///./src/app/products/saving-products/view-saving-product/view-saving-product.component.html","webpack:///./src/app/products/saving-products/view-saving-product/view-saving-product.component.scss","webpack:///./src/app/products/saving-products/view-saving-product/view-saving-product.component.ts","webpack:///./src/app/products/share-products/create-share-product/create-share-product.component.html","webpack:///./src/app/products/share-products/create-share-product/create-share-product.component.scss","webpack:///./src/app/products/share-products/create-share-product/create-share-product.component.ts","webpack:///./src/app/products/share-products/edit-share-product/edit-share-product.component.html","webpack:///./src/app/products/share-products/edit-share-product/edit-share-product.component.scss","webpack:///./src/app/products/share-products/edit-share-product/edit-share-product.component.ts","webpack:///./src/app/products/share-products/edit-share-product/share-product-and-template.resolver.ts","webpack:///./src/app/products/share-products/share-product-resolver.ts","webpack:///./src/app/products/share-products/share-product-stepper/share-product-accounting-step/share-product-accounting-step.component.html","webpack:///./src/app/products/share-products/share-product-stepper/share-product-accounting-step/share-product-accounting-step.component.scss","webpack:///./src/app/products/share-products/share-product-stepper/share-product-accounting-step/share-product-accounting-step.component.ts","webpack:///./src/app/products/share-products/share-product-stepper/share-product-charges-step/share-product-charges-step.component.html","webpack:///./src/app/products/share-products/share-product-stepper/share-product-charges-step/share-product-charges-step.component.scss","webpack:///./src/app/products/share-products/share-product-stepper/share-product-charges-step/share-product-charges-step.component.ts","webpack:///./src/app/products/share-products/share-product-stepper/share-product-currency-step/share-product-currency-step.component.html","webpack:///./src/app/products/share-products/share-product-stepper/share-product-currency-step/share-product-currency-step.component.scss","webpack:///./src/app/products/share-products/share-product-stepper/share-product-currency-step/share-product-currency-step.component.ts","webpack:///./src/app/products/share-products/share-product-stepper/share-product-details-step/share-product-details-step.component.html","webpack:///./src/app/products/share-products/share-product-stepper/share-product-details-step/share-product-details-step.component.scss","webpack:///./src/app/products/share-products/share-product-stepper/share-product-details-step/share-product-details-step.component.ts","webpack:///./src/app/products/share-products/share-product-stepper/share-product-market-price-step/share-product-market-price-step.component.html","webpack:///./src/app/products/share-products/share-product-stepper/share-product-market-price-step/share-product-market-price-step.component.scss","webpack:///./src/app/products/share-products/share-product-stepper/share-product-market-price-step/share-product-market-price-step.component.ts","webpack:///./src/app/products/share-products/share-product-stepper/share-product-preview-step/share-product-preview-step.component.html","webpack:///./src/app/products/share-products/share-product-stepper/share-product-preview-step/share-product-preview-step.component.scss","webpack:///./src/app/products/share-products/share-product-stepper/share-product-preview-step/share-product-preview-step.component.ts","webpack:///./src/app/products/share-products/share-product-stepper/share-product-settings-step/share-product-settings-step.component.html","webpack:///./src/app/products/share-products/share-product-stepper/share-product-settings-step/share-product-settings-step.component.scss","webpack:///./src/app/products/share-products/share-product-stepper/share-product-settings-step/share-product-settings-step.component.ts","webpack:///./src/app/products/share-products/share-product-stepper/share-product-terms-step/share-product-terms-step.component.html","webpack:///./src/app/products/share-products/share-product-stepper/share-product-terms-step/share-product-terms-step.component.scss","webpack:///./src/app/products/share-products/share-product-stepper/share-product-terms-step/share-product-terms-step.component.ts","webpack:///./src/app/products/share-products/share-products-template.resolver.ts","webpack:///./src/app/products/share-products/share-products.component.html","webpack:///./src/app/products/share-products/share-products.component.scss","webpack:///./src/app/products/share-products/share-products.component.ts","webpack:///./src/app/products/share-products/share-products.resolver.ts","webpack:///./src/app/products/share-products/view-share-product/view-share-product.component.html","webpack:///./src/app/products/share-products/view-share-product/view-share-product.component.scss","webpack:///./src/app/products/share-products/view-share-product/view-share-product.component.ts","webpack:///./src/app/reports/accounting-reports/accounting-reports.component.html","webpack:///./src/app/reports/accounting-reports/accounting-reports.component.scss","webpack:///./src/app/reports/accounting-reports/accounting-reports.component.ts","webpack:///./src/app/reports/all-reports/all-reports.component.html","webpack:///./src/app/reports/all-reports/all-reports.component.scss","webpack:///./src/app/reports/all-reports/all-reports.component.ts","webpack:///./src/app/reports/clients-reports/clients-reports.component.html","webpack:///./src/app/reports/clients-reports/clients-reports.component.scss","webpack:///./src/app/reports/clients-reports/clients-reports.component.ts","webpack:///./src/app/reports/funds-reports/funds-reports.component.html","webpack:///./src/app/reports/funds-reports/funds-reports.component.scss","webpack:///./src/app/reports/funds-reports/funds-reports.component.ts","webpack:///./src/app/reports/loans-reports/loans-reports.component.html","webpack:///./src/app/reports/loans-reports/loans-reports.component.scss","webpack:///./src/app/reports/loans-reports/loans-reports.component.ts","webpack:///./src/app/reports/reports-routing.module.ts","webpack:///./src/app/reports/reports.component.html","webpack:///./src/app/reports/reports.component.scss","webpack:///./src/app/reports/reports.component.ts","webpack:///./src/app/reports/reports.module.ts","webpack:///./src/app/reports/reports.service.ts","webpack:///./src/app/reports/savings-reports/savings-reports.component.html","webpack:///./src/app/reports/savings-reports/savings-reports.component.scss","webpack:///./src/app/reports/savings-reports/savings-reports.component.ts","webpack:///./src/app/self-service/app-configuration/app-configuration.component.html","webpack:///./src/app/self-service/app-configuration/app-configuration.component.scss","webpack:///./src/app/self-service/app-configuration/app-configuration.component.ts","webpack:///./src/app/self-service/self-service-routing.module.ts","webpack:///./src/app/self-service/self-service.component.html","webpack:///./src/app/self-service/self-service.component.scss","webpack:///./src/app/self-service/self-service.component.ts","webpack:///./src/app/self-service/self-service.module.ts","webpack:///./src/app/self-service/task-management/task-management.component.html","webpack:///./src/app/self-service/task-management/task-management.component.scss","webpack:///./src/app/self-service/task-management/task-management.component.ts","webpack:///./src/app/self-service/users/create-user/create-user.component.html","webpack:///./src/app/self-service/users/create-user/create-user.component.scss","webpack:///./src/app/self-service/users/create-user/create-user.component.ts","webpack:///./src/app/self-service/users/edit-user/edit-user.component.html","webpack:///./src/app/self-service/users/edit-user/edit-user.component.scss","webpack:///./src/app/self-service/users/edit-user/edit-user.component.ts","webpack:///./src/app/self-service/users/user.service.ts","webpack:///./src/app/self-service/users/users.component.html","webpack:///./src/app/self-service/users/users.component.scss","webpack:///./src/app/self-service/users/users.component.ts","webpack:///./src/app/self-service/users/users.resolver.ts","webpack:///./src/app/self-service/users/view-user/view-user.component.html","webpack:///./src/app/self-service/users/view-user/view-user.component.scss","webpack:///./src/app/self-service/users/view-user/view-user.component.ts","webpack:///./src/app/self-service/users/view-user/view-user.resolver.ts","webpack:///./src/app/settings/settings-routing.module.ts","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/settings.component.scss","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/settings/settings.module.ts","webpack:///./src/app/shared/delete-dialog/delete-dialog.component.html","webpack:///./src/app/shared/delete-dialog/delete-dialog.component.scss","webpack:///./src/app/shared/delete-dialog/delete-dialog.component.ts","webpack:///./src/app/shared/file-upload/file-upload.component.html","webpack:///./src/app/shared/file-upload/file-upload.component.scss","webpack:///./src/app/shared/file-upload/file-upload.component.ts","webpack:///./src/app/shared/footer/footer.component.html","webpack:///./src/app/shared/footer/footer.component.scss","webpack:///./src/app/shared/footer/footer.component.ts","webpack:///./src/app/shared/form-dialog/form-dialog.component.html","webpack:///./src/app/shared/form-dialog/form-dialog.component.scss","webpack:///./src/app/shared/form-dialog/form-dialog.component.ts","webpack:///./src/app/shared/form-dialog/form-group.service.ts","webpack:///./src/app/shared/form-dialog/formfield/formfield.component.html","webpack:///./src/app/shared/form-dialog/formfield/formfield.component.scss","webpack:///./src/app/shared/form-dialog/formfield/formfield.component.ts","webpack:///./src/app/shared/form-dialog/formfield/model/checkbox-base.ts","webpack:///./src/app/shared/form-dialog/formfield/model/datepicker-base.ts","webpack:///./src/app/shared/form-dialog/formfield/model/formfield-base.ts","webpack:///./src/app/shared/form-dialog/formfield/model/input-base.ts","webpack:///./src/app/shared/form-dialog/formfield/model/select-base.ts","webpack:///./src/app/shared/icons.module.ts","webpack:///./src/app/shared/language-selector/language-selector.component.html","webpack:///./src/app/shared/language-selector/language-selector.component.scss","webpack:///./src/app/shared/language-selector/language-selector.component.ts","webpack:///./src/app/shared/material.module.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/theme-picker/theme-manager.service.ts","webpack:///./src/app/shared/theme-picker/theme-picker.component.html","webpack:///./src/app/shared/theme-picker/theme-picker.component.scss","webpack:///./src/app/shared/theme-picker/theme-picker.component.ts","webpack:///./src/app/shared/theme-picker/theme-storage.service.ts","webpack:///./src/app/system/account-number-preferences/account-number-preferences.component.html","webpack:///./src/app/system/account-number-preferences/account-number-preferences.component.scss","webpack:///./src/app/system/account-number-preferences/account-number-preferences.component.ts","webpack:///./src/app/system/account-number-preferences/account-number-preferences.resolver.ts","webpack:///./src/app/system/account-number-preferences/create-account-number-preference/account-number-preferences-template.resolver.ts","webpack:///./src/app/system/account-number-preferences/create-account-number-preference/create-account-number-preference.component.html","webpack:///./src/app/system/account-number-preferences/create-account-number-preference/create-account-number-preference.component.scss","webpack:///./src/app/system/account-number-preferences/create-account-number-preference/create-account-number-preference.component.ts","webpack:///./src/app/system/account-number-preferences/edit-account-number-preference/edit-account-number-preference.component.html","webpack:///./src/app/system/account-number-preferences/edit-account-number-preference/edit-account-number-preference.component.scss","webpack:///./src/app/system/account-number-preferences/edit-account-number-preference/edit-account-number-preference.component.ts","webpack:///./src/app/system/account-number-preferences/view-account-number-preference/account-number-preference.resolver.ts","webpack:///./src/app/system/account-number-preferences/view-account-number-preference/view-account-number-preference.component.html","webpack:///./src/app/system/account-number-preferences/view-account-number-preference/view-account-number-preference.component.scss","webpack:///./src/app/system/account-number-preferences/view-account-number-preference/view-account-number-preference.component.ts","webpack:///./src/app/system/codes/code.resolver.ts","webpack:///./src/app/system/codes/codes.component.html","webpack:///./src/app/system/codes/codes.component.scss","webpack:///./src/app/system/codes/codes.component.ts","webpack:///./src/app/system/codes/codes.resolver.ts","webpack:///./src/app/system/codes/create-code/create-code.component.html","webpack:///./src/app/system/codes/create-code/create-code.component.scss","webpack:///./src/app/system/codes/create-code/create-code.component.ts","webpack:///./src/app/system/codes/edit-code/edit-code.component.html","webpack:///./src/app/system/codes/edit-code/edit-code.component.scss","webpack:///./src/app/system/codes/edit-code/edit-code.component.ts","webpack:///./src/app/system/codes/view-code/code-values.resolver.ts","webpack:///./src/app/system/codes/view-code/view-code.component.html","webpack:///./src/app/system/codes/view-code/view-code.component.scss","webpack:///./src/app/system/codes/view-code/view-code.component.ts","webpack:///./src/app/system/external-services/amazon-s3/amazon-s3.component.html","webpack:///./src/app/system/external-services/amazon-s3/amazon-s3.component.scss","webpack:///./src/app/system/external-services/amazon-s3/amazon-s3.component.ts","webpack:///./src/app/system/external-services/amazon-s3/amazon-s3.resolver.ts","webpack:///./src/app/system/external-services/amazon-s3/edit-amazon-s3/edit-amazon-s3.component.html","webpack:///./src/app/system/external-services/amazon-s3/edit-amazon-s3/edit-amazon-s3.component.scss","webpack:///./src/app/system/external-services/amazon-s3/edit-amazon-s3/edit-amazon-s3.component.ts","webpack:///./src/app/system/external-services/email/edit-email/edit-email.component.html","webpack:///./src/app/system/external-services/email/edit-email/edit-email.component.scss","webpack:///./src/app/system/external-services/email/edit-email/edit-email.component.ts","webpack:///./src/app/system/external-services/email/email.component.html","webpack:///./src/app/system/external-services/email/email.component.scss","webpack:///./src/app/system/external-services/email/email.component.ts","webpack:///./src/app/system/external-services/email/email.resolver.ts","webpack:///./src/app/system/external-services/external-services.component.html","webpack:///./src/app/system/external-services/external-services.component.ts","webpack:///./src/app/system/external-services/notification/edit-notification/edit-notification.component.html","webpack:///./src/app/system/external-services/notification/edit-notification/edit-notification.component.scss","webpack:///./src/app/system/external-services/notification/edit-notification/edit-notification.component.ts","webpack:///./src/app/system/external-services/notification/notification.component.html","webpack:///./src/app/system/external-services/notification/notification.component.scss","webpack:///./src/app/system/external-services/notification/notification.component.ts","webpack:///./src/app/system/external-services/notification/notification.resolver.ts","webpack:///./src/app/system/external-services/sms/edit-sms/edit-sms.component.html","webpack:///./src/app/system/external-services/sms/edit-sms/edit-sms.component.scss","webpack:///./src/app/system/external-services/sms/edit-sms/edit-sms.component.ts","webpack:///./src/app/system/external-services/sms/sms.component.html","webpack:///./src/app/system/external-services/sms/sms.component.scss","webpack:///./src/app/system/external-services/sms/sms.component.ts","webpack:///./src/app/system/external-services/sms/sms.resolver.ts","webpack:///./src/app/system/global-configurations/edit-configuration/edit-configuration.component.html","webpack:///./src/app/system/global-configurations/edit-configuration/edit-configuration.component.scss","webpack:///./src/app/system/global-configurations/edit-configuration/edit-configuration.component.ts","webpack:///./src/app/system/global-configurations/global-configuration.resolver.ts","webpack:///./src/app/system/global-configurations/global-configurations.component.html","webpack:///./src/app/system/global-configurations/global-configurations.component.scss","webpack:///./src/app/system/global-configurations/global-configurations.component.ts","webpack:///./src/app/system/global-configurations/global-configurations.resolver.ts","webpack:///./src/app/system/manage-data-tables/manage-data-tables.component.html","webpack:///./src/app/system/manage-data-tables/manage-data-tables.component.scss","webpack:///./src/app/system/manage-data-tables/manage-data-tables.component.ts","webpack:///./src/app/system/manage-data-tables/manage-data-tables.resolver.ts","webpack:///./src/app/system/manage-hooks/manage-hooks.component.html","webpack:///./src/app/system/manage-hooks/manage-hooks.component.scss","webpack:///./src/app/system/manage-hooks/manage-hooks.component.ts","webpack:///./src/app/system/manage-hooks/manage-hooks.resolver.ts","webpack:///./src/app/system/manage-reports/create-report/create-report.component.html","webpack:///./src/app/system/manage-reports/create-report/create-report.component.scss","webpack:///./src/app/system/manage-reports/create-report/create-report.component.ts","webpack:///./src/app/system/manage-reports/edit-report/edit-report.component.html","webpack:///./src/app/system/manage-reports/edit-report/edit-report.component.scss","webpack:///./src/app/system/manage-reports/edit-report/edit-report.component.ts","webpack:///./src/app/system/manage-reports/manage-reports.component.html","webpack:///./src/app/system/manage-reports/manage-reports.component.scss","webpack:///./src/app/system/manage-reports/manage-reports.component.ts","webpack:///./src/app/system/manage-reports/report-parameter-dialog/report-parameter-dialog.component.html","webpack:///./src/app/system/manage-reports/report-parameter-dialog/report-parameter-dialog.component.scss","webpack:///./src/app/system/manage-reports/report-parameter-dialog/report-parameter-dialog.component.ts","webpack:///./src/app/system/manage-reports/report-template.resolver.ts","webpack:///./src/app/system/manage-reports/report.resolver.ts","webpack:///./src/app/system/manage-reports/reports.resolver.ts","webpack:///./src/app/system/manage-reports/view-report/view-report.component.html","webpack:///./src/app/system/manage-reports/view-report/view-report.component.scss","webpack:///./src/app/system/manage-reports/view-report/view-report.component.ts","webpack:///./src/app/system/manage-scheduler-jobs/manage-scheduler-jobs.component.html","webpack:///./src/app/system/manage-scheduler-jobs/manage-scheduler-jobs.component.scss","webpack:///./src/app/system/manage-scheduler-jobs/manage-scheduler-jobs.component.ts","webpack:///./src/app/system/manage-scheduler-jobs/manage-scheduler-jobs.resolver.ts","webpack:///./src/app/system/manage-surveys/manage-surveys.component.html","webpack:///./src/app/system/manage-surveys/manage-surveys.component.scss","webpack:///./src/app/system/manage-surveys/manage-surveys.component.ts","webpack:///./src/app/system/manage-surveys/manage-surveys.resolver.ts","webpack:///./src/app/system/roles-and-permissions/add-role/add-role.component.html","webpack:///./src/app/system/roles-and-permissions/add-role/add-role.component.scss","webpack:///./src/app/system/roles-and-permissions/add-role/add-role.component.ts","webpack:///./src/app/system/roles-and-permissions/roles-and-permissions.component.html","webpack:///./src/app/system/roles-and-permissions/roles-and-permissions.component.scss","webpack:///./src/app/system/roles-and-permissions/roles-and-permissions.component.ts","webpack:///./src/app/system/roles-and-permissions/roles-and-permissions.resolver.ts","webpack:///./src/app/system/system-routing.module.ts","webpack:///./src/app/system/system.component.html","webpack:///./src/app/system/system.component.scss","webpack:///./src/app/system/system.component.ts","webpack:///./src/app/system/system.module.ts","webpack:///./src/app/system/system.service.ts","webpack:///./src/app/templates/template.resolver.ts","webpack:///./src/app/templates/templates-routing.module.ts","webpack:///./src/app/templates/templates.component.html","webpack:///./src/app/templates/templates.component.scss","webpack:///./src/app/templates/templates.component.ts","webpack:///./src/app/templates/templates.module.ts","webpack:///./src/app/templates/templates.resolver.ts","webpack:///./src/app/templates/templates.service.ts","webpack:///./src/app/templates/view-template/view-template.component.html","webpack:///./src/app/templates/view-template/view-template.component.scss","webpack:///./src/app/templates/view-template/view-template.component.ts","webpack:///./src/app/users/create-user/create-user.component.html","webpack:///./src/app/users/create-user/create-user.component.scss","webpack:///./src/app/users/create-user/create-user.component.ts","webpack:///./src/app/users/user.resolver.ts","webpack:///./src/app/users/users-routing.module.ts","webpack:///./src/app/users/users-template.resolver.ts","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.scss","webpack:///./src/app/users/users.component.ts","webpack:///./src/app/users/users.module.ts","webpack:///./src/app/users/users.resolver.ts","webpack:///./src/app/users/users.service.ts","webpack:///./src/app/users/view-user/view-user.component.html","webpack:///./src/app/users/view-user/view-user.component.scss","webpack:///./src/app/users/view-user/view-user.component.ts","webpack:///./src/app/web-app.component.html","webpack:///./src/app/web-app.component.scss","webpack:///./src/app/web-app.component.ts","webpack:///./src/environments/.env.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","/** TODO: Separate routing into feature modules for cleaner accounting module. */\n\n/** Angular Imports */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/** Routing Imports */\nimport { Route } from '../core/route/route.service';\n\n/** Translation Imports */\nimport { extract } from '../core/i18n/i18n.service';\n\n/** Custom Components */\nimport { AccountingComponent } from './accounting.component';\nimport { FrequentPostingsComponent } from './frequent-postings/frequent-postings.component';\nimport { CreateJournalEntryComponent } from './create-journal-entry/create-journal-entry.component';\nimport { SearchJournalEntryComponent } from './search-journal-entry/search-journal-entry.component';\nimport { ViewTransactionComponent } from './view-transaction/view-transaction.component';\nimport { FinancialActivityMappingsComponent } from './financial-activity-mappings/financial-activity-mappings.component';\nimport { CreateFinancialActivityMappingComponent } from './financial-activity-mappings/create-financial-activity-mapping/create-financial-activity-mapping.component';\nimport { ViewFinancialActivityMappingComponent } from './financial-activity-mappings/view-financial-activity-mapping/view-financial-activity-mapping.component';\nimport { EditFinancialActivityMappingComponent } from './financial-activity-mappings/edit-financial-activity-mapping/edit-financial-activity-mapping.component';\nimport { MigrateOpeningBalancesComponent } from './migrate-opening-balances/migrate-opening-balances.component';\nimport { ChartOfAccountsComponent } from './chart-of-accounts/chart-of-accounts.component';\nimport { CreateGlAccountComponent } from './chart-of-accounts/create-gl-account/create-gl-account.component';\nimport { ViewGlAccountComponent } from './chart-of-accounts/view-gl-account/view-gl-account.component';\nimport { EditGlAccountComponent } from './chart-of-accounts/edit-gl-account/edit-gl-account.component';\nimport { ClosingEntriesComponent } from './closing-entries/closing-entries.component';\nimport { CreateClosureComponent } from './closing-entries/create-closure/create-closure.component';\nimport { ViewClosureComponent } from './closing-entries/view-closure/view-closure.component';\nimport { EditClosureComponent } from './closing-entries/edit-closure/edit-closure.component';\nimport { AccountingRulesComponent } from './accounting-rules/accounting-rules.component';\nimport { CreateRuleComponent } from './accounting-rules/create-rule/create-rule.component';\nimport { ViewRuleComponent } from './accounting-rules/view-rule/view-rule.component';\nimport { EditRuleComponent } from './accounting-rules/edit-rule/edit-rule.component';\nimport { PeriodicAccrualsComponent } from './periodic-accruals/periodic-accruals.component';\nimport { ProvisioningEntriesComponent } from './provisioning-entries/provisioning-entries.component';\nimport { CreateProvisioningEntryComponent } from './provisioning-entries/create-provisioning-entry/create-provisioning-entry.component';\nimport { ViewProvisioningEntryComponent } from './provisioning-entries/view-provisioning-entry/view-provisioning-entry.component';\nimport { ViewProvisioningJournalEntriesComponent } from './provisioning-entries/view-provisioning-journal-entries/view-provisioning-journal-entries.component';\n\n/** Custom Resolvers */\nimport { OfficesResolver } from './common-resolvers/offices.resolver';\nimport { AccountingRulesAssociationsResolver } from './common-resolvers/accounting-rules-associations.resolver';\nimport { CurrenciesResolver } from './common-resolvers/currencies.resolver';\nimport { PaymentTypesResolver } from './common-resolvers/payment-types.resolver';\nimport { GlAccountsResolver } from './common-resolvers/gl-accounts.resolver';\nimport { TransactionResolver } from './view-transaction/transaction.resolver';\nimport { FinancialActivityMappingsResolver } from './financial-activity-mappings/financial-activity-mappings.resolver';\nimport { FinancialActivityMappingsTemplateResolver } from './financial-activity-mappings/create-financial-activity-mapping/financial-activity-mappings-template.resolver';\nimport { FinancialActivityMappingResolver } from './financial-activity-mappings/view-financial-activity-mapping/financial-activity-mapping.resolver';\nimport { FinancialActivityMappingAndTemplateResolver } from './financial-activity-mappings/edit-financial-activity-mapping/financial-activity-mapping-and-template.resolver';\nimport { ChartOfAccountsResolver } from './chart-of-accounts/chart-of-accounts.resolver';\nimport { ChartOfAccountsTemplateResolver } from './chart-of-accounts/create-gl-account/chart-of-accounts-template.resolver';\nimport { GlAccountAndChartOfAccountsTemplateResolver } from './chart-of-accounts/gl-account-and-chart-of-accounts-template.resolver';\nimport { ClosingEntriesResolver } from './closing-entries/closing-entries.resolver';\nimport { ClosingEntryResolver } from './closing-entries/closing-entry.resolver';\nimport { AccountingRulesResolver } from './accounting-rules/accounting-rules.resolver';\nimport { AccountingRulesTemplateResolver } from './accounting-rules/accounting-rules-template.resolver';\nimport { AccountingRuleResolver } from './accounting-rules/accounting-rule.resolver';\nimport { ProvisioningEntriesResolver } from './provisioning-entries/provisioning-entries.resolver';\nimport { ProvisioningEntryResolver } from './provisioning-entries/view-provisioning-entry/provisioning-entry.resolver';\nimport { ProvisioningEntryEntriesResolver } from './provisioning-entries/view-provisioning-entry/provisioning-entry-entries.resolver';\nimport { LoanProductsResolver } from './common-resolvers/loan-products.resolver';\nimport { ProvisioningCategoriesResolver } from './common-resolvers/provisioning-categories.resolver';\nimport { ProvisioningJournalEntriesResolver } from './provisioning-entries/view-provisioning-journal-entries/provisioning-journal-entries.resolver';\n\n/** Accounting Routes */\nconst routes: Routes = [\n  Route.withShell([\n    {\n      path: 'accounting',\n      data: { title: extract('Accounting'), breadcrumb: 'Accounting' },\n      children: [\n        {\n          path: '',\n          component: AccountingComponent\n        },\n        {\n          path: 'journal-entries',\n          data: { title: extract('Search Journal Entry'), breadcrumb: 'Journal Entries' },\n          children: [\n            {\n              path: '',\n              component: SearchJournalEntryComponent,\n              resolve: {\n                offices: OfficesResolver,\n                glAccounts: GlAccountsResolver\n              },\n            },\n            {\n              path: 'frequent-postings',\n              component: FrequentPostingsComponent,\n              data: { title: extract('Frequent Postings'), breadcrumb: 'Frequent Postings' },\n              resolve: {\n                offices: OfficesResolver,\n                accountingRules: AccountingRulesAssociationsResolver,\n                currencies: CurrenciesResolver,\n                paymentTypes: PaymentTypesResolver\n              }\n            },\n            {\n              path: 'create',\n              component: CreateJournalEntryComponent,\n              data: { title: extract('Create Journal Entry'), breadcrumb: 'Create' },\n              resolve: {\n                offices: OfficesResolver,\n                currencies: CurrenciesResolver,\n                paymentTypes: PaymentTypesResolver,\n                glAccounts: GlAccountsResolver\n              }\n            },\n            {\n              path: 'transactions',\n              data: { title: extract('Transactions'), breadcrumb: 'Transactions', addBreadcrumbLink: false },\n              children: [\n                {\n                  path: 'view/:id',\n                  component: ViewTransactionComponent,\n                  data: { title: extract('View Transaction'), routeParamBreadcrumb: 'id' },\n                  resolve: {\n                    transaction: TransactionResolver\n                  }\n                }\n              ]\n            },\n          ]\n        },\n        {\n          path: 'financial-activity-mappings',\n          data: { title: extract('Financial Activity Mappings'), breadcrumb: 'Financial Activity Mappings' },\n          children: [\n            {\n              path: '',\n              component: FinancialActivityMappingsComponent,\n              resolve: {\n                financialActivityAccounts: FinancialActivityMappingsResolver\n              }\n            },\n            {\n              path: 'create',\n              component: CreateFinancialActivityMappingComponent,\n              data: { title: extract('Create Financial Activity Mapping'), breadcrumb: 'Create' },\n              resolve: {\n                financialActivityAccountsTemplate: FinancialActivityMappingsTemplateResolver\n              }\n            },\n            {\n              path: 'view/:id',\n              data: { title: extract('View Financial Activity Mapping'), routeParamBreadcrumb: 'id' },\n              children: [\n                {\n                  path: '',\n                  component: ViewFinancialActivityMappingComponent,\n                  resolve: {\n                    financialActivityAccount: FinancialActivityMappingResolver\n                  }\n                },\n                {\n                  path: 'edit',\n                  component: EditFinancialActivityMappingComponent,\n                  data: { title: extract('Edit Financial Activity Mapping'), breadcrumb: 'Edit', routeParamBreadcrumb: false },\n                  resolve: {\n                    financialActivityAccountAndTemplate: FinancialActivityMappingAndTemplateResolver\n                  }\n                }\n              ]\n            }\n          ]\n        },\n        {\n          path: 'migrate-opening-balances',\n          component: MigrateOpeningBalancesComponent,\n          data: { title:  extract('Migrate Opening Balances'), breadcrumb: 'Migrate Opening Balances' },\n          resolve: {\n            offices: OfficesResolver,\n            currencies: CurrenciesResolver\n          }\n        },\n        {\n          path: 'chart-of-accounts',\n          data: { title: extract('Chart of Accounts'), breadcrumb: 'Chart of Accounts' },\n          children: [\n            {\n              path: '',\n              component: ChartOfAccountsComponent,\n              resolve: {\n                chartOfAccounts: ChartOfAccountsResolver\n              }\n            },\n            {\n              path: 'gl-accounts',\n              children: [\n                {\n                  path: 'create',\n                  component: CreateGlAccountComponent,\n                  data: { title: extract('Create GL Account'), breadcrumb: 'Create GL Account' },\n                  resolve: {\n                    chartOfAccountsTemplate: ChartOfAccountsTemplateResolver\n                  }\n                },\n                {\n                  path: 'view/:id',\n                  data: { title: extract('View GL Account'), routeResolveBreadcrumb: ['glAccountAndChartOfAccountsTemplate', 'name'] },\n                  resolve: {\n                    glAccountAndChartOfAccountsTemplate: GlAccountAndChartOfAccountsTemplateResolver\n                  },\n                  runGuardsAndResolvers: 'always',\n                  children: [\n                    {\n                      path: '',\n                      component: ViewGlAccountComponent\n                    },\n                    {\n                      path: 'edit',\n                      component: EditGlAccountComponent,\n                      data: { title: extract('Edit GL Account'), breadcrumb: 'Edit', routeResolveBreadcrumb: false }\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          path: 'closing-entries',\n          data: { title: extract('Accounting Closures'), breadcrumb: 'Closing Entries' },\n          children: [\n            {\n              path: '',\n              component: ClosingEntriesComponent,\n              resolve: {\n                offices: OfficesResolver,\n                glAccountClosures: ClosingEntriesResolver\n              }\n            },\n            {\n              path: 'create',\n              component: CreateClosureComponent,\n              data: { title: extract('Create Accounting Closure'), breadcrumb: 'Create' },\n              resolve: {\n                offices: OfficesResolver\n              }\n            },\n            {\n              path: 'view/:id',\n              data: { title: extract('View Accounting Closure'), routeParamBreadcrumb: 'id' },\n              resolve: {\n                glAccountClosure: ClosingEntryResolver\n              },\n              runGuardsAndResolvers: 'always',\n              children: [\n                {\n                  path: '',\n                  component: ViewClosureComponent\n                },\n                {\n                  path: 'edit',\n                  component: EditClosureComponent,\n                  data: { title: extract('Edit Accounting Closure'), breadcrumb: 'Edit', routeParamBreadcrumb: false }\n                }\n              ]\n            }\n          ]\n        },\n        {\n          path: 'accounting-rules',\n          data: { title: extract('Accounting Rules'), breadcrumb: 'Rules' },\n          children: [\n            {\n              path: '',\n              component: AccountingRulesComponent,\n              resolve: {\n                accountingRules: AccountingRulesResolver\n              }\n            },\n            {\n              path: 'create',\n              component: CreateRuleComponent,\n              data: { title: extract('Create Accounting Rule'), breadcrumb: 'Create' },\n              resolve: {\n                accountingRulesTemplate: AccountingRulesTemplateResolver\n              }\n            },\n            {\n              path: 'view/:id',\n              data: { title: extract('View Accounting Rule'), routeResolveBreadcrumb: ['accountingRule', 'name'] },\n              resolve: {\n                accountingRule: AccountingRuleResolver\n              },\n              runGuardsAndResolvers: 'always',\n              children: [\n                {\n                  path: '',\n                  component: ViewRuleComponent\n                },\n                {\n                  path: 'edit',\n                  component: EditRuleComponent,\n                  data: { title: extract('Edit Accounting Rules'), breadcrumb: 'Edit', routeResolveBreadcrumb: false },\n                  resolve: {\n                    accountingRulesTemplate: AccountingRulesTemplateResolver\n                  }\n                }\n              ]\n            }\n          ]\n        },\n        {\n          path: 'periodic-accruals',\n          component: PeriodicAccrualsComponent,\n          data: { title: extract('Periodic Accrual Accounting'), breadcrumb: 'Execute Periodic Accrual Accounting' }\n        },\n        {\n          path: 'provisioning-entries',\n          data: { title: extract('Provisioning Entries'), breadcrumb: 'Provisioning Entries' },\n          children: [\n            {\n              path: '',\n              component: ProvisioningEntriesComponent,\n              resolve: {\n                provisioningEntries: ProvisioningEntriesResolver\n              }\n            },\n            {\n              path: 'create',\n              component: CreateProvisioningEntryComponent,\n              data: { title: extract('Create Provisioning Entry'), breadcrumb: 'Create' }\n            },\n            {\n              path: 'view/:id',\n              component: ViewProvisioningEntryComponent,\n              data: { title: extract('View Provisioning Entry'), routeParamBreadcrumb: 'id' },\n              resolve: {\n                provisioningEntry: ProvisioningEntryResolver,\n                provisioningEntryEntries: ProvisioningEntryEntriesResolver,\n                office: OfficesResolver,\n                loanProducts: LoanProductsResolver,\n                provisioningCategories: ProvisioningCategoriesResolver\n              }\n            },\n            {\n              path: 'journal-entries',\n              data: { breadcrumb: 'Journal Entries', addBreadcrumbLink: false },\n              children: [\n                {\n                  path: 'view/:id',\n                  component: ViewProvisioningJournalEntriesComponent,\n                  data: { title: extract('View Provisioning Journal Entry'), routeParamBreadcrumb: 'id' },\n                  resolve: {\n                    provisioningJournalEntries: ProvisioningJournalEntriesResolver\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ])\n];\n\n/**\n * Accounting Routing Module\n *\n * Configures the accounting routes.\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    OfficesResolver,\n    AccountingRulesAssociationsResolver,\n    CurrenciesResolver,\n    PaymentTypesResolver,\n    GlAccountsResolver,\n    TransactionResolver,\n    FinancialActivityMappingsResolver,\n    FinancialActivityMappingsTemplateResolver,\n    FinancialActivityMappingResolver,\n    FinancialActivityMappingAndTemplateResolver,\n    ChartOfAccountsResolver,\n    ChartOfAccountsTemplateResolver,\n    GlAccountAndChartOfAccountsTemplateResolver,\n    ClosingEntriesResolver,\n    ClosingEntryResolver,\n    AccountingRulesResolver,\n    AccountingRulesTemplateResolver,\n    AccountingRuleResolver,\n    ProvisioningEntriesResolver,\n    ProvisioningEntryResolver,\n    ProvisioningEntryEntriesResolver,\n    LoanProductsResolver,\n    ProvisioningCategoriesResolver,\n    ProvisioningJournalEntriesResolver\n  ]\n})\nexport class AccountingRoutingModule { }\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Accounting rule data resolver.\n */\n@Injectable()\nexport class AccountingRuleResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the accounting rule data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const id = route.paramMap.get('id');\n    return this.accountingService.getAccountingRule(id);\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Accounting rules template data resolver.\n */\n@Injectable()\nexport class AccountingRulesTemplateResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the accounting rules template data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.accountingService.getAccountingRulesTemplate();\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['create']\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Add Rule\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let accountingRule\\\"> {{ accountingRule.name }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"officeName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Office </th>\\n        <td mat-cell *matCellDef=\\\"let accountingRule\\\"> {{ accountingRule.officeName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"debitTags\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Debit Tags </th>\\n        <td mat-cell *matCellDef=\\\"let accountingRule\\\"> {{ accountingRule.debitTags }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"debitAccount\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Debit Account </th>\\n        <td mat-cell *matCellDef=\\\"let accountingRule\\\"> {{ accountingRule.debitAccounts ? accountingRule.debitAccounts[0].name : '' }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"creditTags\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Credit Tags </th>\\n        <td mat-cell *matCellDef=\\\"let accountingRule\\\"> {{ accountingRule.creditTags }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"creditAccount\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Credit Account </th>\\n        <td mat-cell *matCellDef=\\\"let accountingRule\\\"> {{ accountingRule.creditAccounts ? accountingRule.creditAccounts[0].name : '' }} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['view', row.id]\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvYWNjb3VudGluZy1ydWxlcy9hY2NvdW50aW5nLXJ1bGVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBO0VBRGI7SUFJSSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hY2NvdW50aW5nL2FjY291bnRpbmctcnVsZXMvYWNjb3VudGluZy1ydWxlcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG5cbiAgLnNlbGVjdC1yb3c6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/**\n * Accounting rules component.\n */\n@Component({\n  selector: 'mifosx-accounting-rules',\n  templateUrl: './accounting-rules.component.html',\n  styleUrls: ['./accounting-rules.component.scss']\n})\nexport class AccountingRulesComponent implements OnInit {\n\n  /** Accounting rule data. */\n  accountingRuleData: any;\n  /** Columns to be displayed in accounting rules table. */\n  displayedColumns: string[] = ['name', 'officeName', 'debitTags', 'debitAccount', 'creditTags', 'creditAccount'];\n  /** Data source for accounting rules table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for accounting rules table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for accounting rules table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the accounting rules data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { accountingRules: any }) => {\n      this.accountingRuleData = data.accountingRules;\n    });\n  }\n\n  /**\n   * Sets the accounting rules table.\n   */\n  ngOnInit() {\n    this.setAccountingRules();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for accounting rules table.\n   */\n  setAccountingRules() {\n    this.accountingRuleData.forEach((accountingRule: any) => {\n      accountingRule.debitTags = accountingRule.debitTags ? accountingRule.debitTags.map((debitTag: any) => debitTag.tag.name).join(', ') : '';\n      accountingRule.creditTags = accountingRule.creditTags ? accountingRule.creditTags.map((creditTag: any) => creditTag.tag.name).join(', ') : '';\n    });\n    this.dataSource = new MatTableDataSource(this.accountingRuleData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sortingDataAccessor = (accountingRule: any, property: any) => {\n      switch (property) {\n        case 'debitAccount': return accountingRule.debitAccounts[0].name;\n        case 'creditAccount': return accountingRule.creditAccounts[0].name;\n        default: return accountingRule[property];\n      }\n    };\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n   * Filters data in accounting rules table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Accounting rules data resolver.\n */\n@Injectable()\nexport class AccountingRulesResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the accounting rules data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.accountingService.getAccountingRules();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"accountingRuleForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Accounting Rule Name</mat-label>\\n            <input matInput required formControlName=\\\"name\\\">\\n            <mat-error *ngIf=\\\"accountingRuleForm.controls.name.hasError('required')\\\">\\n              Accounting Rule Name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Office</mat-label>\\n            <mat-select required formControlName=\\\"officeId\\\">\\n              <mat-option *ngFor=\\\"let office of officeData\\\" [value]=\\\"office.id\\\">\\n                {{ office.name }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"accountingRuleForm.controls.officeId.hasError('required')\\\">\\n              Office is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <div fxFlex=\\\"48%\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" class=\\\"rule-wrapper\\\">\\n            <mat-label fxFlex=\\\"50%\\\">Affected GL Entry (Debit) Rule Type *</mat-label>\\n            <mat-radio-group fxFlex=\\\"50%\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"5%\\\" formControlName=\\\"debitRuleType\\\">\\n              <mat-radio-button value=\\\"fixedAccount\\\">Fixed Account</mat-radio-button>\\n              <mat-radio-button value=\\\"listOfAccounts\\\">List of Accounts</mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\" *ngIf=\\\"accountingRuleForm.controls.debitRuleType.value === 'fixedAccount'\\\">\\n            <mat-label>Account to Debit</mat-label>\\n            <mat-select formControlName=\\\"accountToDebit\\\">\\n              <mat-option *ngFor=\\\"let glAccount of glAccountData\\\" [value]=\\\"glAccount.id\\\">\\n                {{ glAccount.name }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <div fxFlex=\\\"48%\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" *ngIf=\\\"accountingRuleForm.controls.debitRuleType.value === 'listOfAccounts'\\\">\\n            <mat-form-field fxFlex=\\\"50%\\\">\\n              <mat-label>Debit Tags</mat-label>\\n              <mat-select formControlName=\\\"debitTags\\\" multiple>\\n                <mat-option *ngFor=\\\"let debitTag of debitTagData\\\" [value]=\\\"debitTag.id\\\">\\n                  {{ debitTag.name }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n            <div fxFlex=\\\"50%\\\" ngClass.gt-md=\\\"entries-wrapper\\\">\\n              <mat-checkbox labelPosition=\\\"before\\\" formControlName=\\\"allowMultipleDebitEntries\\\" class=\\\"entries\\\">\\n                Multiple Debit Entries Allowed\\n              </mat-checkbox>\\n            </div>\\n          </div>\\n\\n          <div fxFlex=\\\"48%\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" class=\\\"rule-wrapper\\\">\\n            <mat-label fxFlex=\\\"50%\\\">Affected GL Entry (Credit) Rule Type *</mat-label>\\n            <mat-radio-group fxFlex=\\\"50%\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"5%\\\" formControlName=\\\"creditRuleType\\\">\\n              <mat-radio-button value=\\\"fixedAccount\\\">Fixed Account</mat-radio-button>\\n              <mat-radio-button value=\\\"listOfAccounts\\\">List of Accounts</mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\" *ngIf=\\\"accountingRuleForm.controls.creditRuleType.value === 'fixedAccount'\\\">\\n            <mat-label>Account to Credit</mat-label>\\n            <mat-select formControlName=\\\"accountToCredit\\\">\\n              <mat-option *ngFor=\\\"let glAccount of glAccountData\\\" [value]=\\\"glAccount.id\\\">\\n                {{ glAccount.name }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <div fxFlex=\\\"48%\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" *ngIf=\\\"accountingRuleForm.controls.creditRuleType.value === 'listOfAccounts'\\\">\\n            <mat-form-field fxFlex=\\\"50%\\\">\\n              <mat-label>Credit Tags</mat-label>\\n              <mat-select formControlName=\\\"creditTags\\\" multiple>\\n                <mat-option *ngFor=\\\"let creditTag of creditTagData\\\" [value]=\\\"creditTag.id\\\">\\n                  {{ creditTag.name }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n            <div fxFlex=\\\"50%\\\" ngClass.gt-md=\\\"entries-wrapper\\\">\\n              <mat-checkbox labelPosition=\\\"before\\\" formControlName=\\\"allowMultipleCreditEntries\\\" class=\\\"entries\\\">\\n                Multiple Credit Entries Allowed\\n              </mat-checkbox>\\n            </div>\\n          </div>\\n\\n          <mat-form-field fxFlex=\\\"98%\\\">\\n            <mat-label>Description</mat-label>\\n            <textarea matInput formControlName=\\\"description\\\"></textarea>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!accountingRuleForm.valid\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".rule-wrapper {\\n  margin: 17.5px 0 0 0; }\\n\\n.entries-wrapper {\\n  position: relative; }\\n\\n.entries-wrapper .entries {\\n    padding: 0 0 17.5px 0;\\n    position: absolute;\\n    bottom: 0;\\n    right: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvYWNjb3VudGluZy1ydWxlcy9jcmVhdGUtcnVsZS9jcmVhdGUtcnVsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG9CQUFvQixFQUFBOztBQUd0QjtFQUNFLGtCQUFrQixFQUFBOztBQURwQjtJQUlJLHFCQUFxQjtJQUNyQixrQkFBa0I7SUFDbEIsU0FBUztJQUNULFFBQVEsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FjY291bnRpbmcvYWNjb3VudGluZy1ydWxlcy9jcmVhdGUtcnVsZS9jcmVhdGUtcnVsZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ydWxlLXdyYXBwZXIge1xuICBtYXJnaW46IDE3LjVweCAwIDAgMDtcbn1cblxuLmVudHJpZXMtd3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAuZW50cmllcyB7XG4gICAgcGFkZGluZzogMCAwIDE3LjVweCAwO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDA7XG4gICAgcmlnaHQ6IDA7XG4gIH1cbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/** Custom Validators */\nimport { oneOfTheFieldsIsRequiredValidator } from '../one-of-the-fields-is-required.validator';\n\n/**\n * Create accounting rule component.\n */\n@Component({\n  selector: 'mifosx-create-rule',\n  templateUrl: './create-rule.component.html',\n  styleUrls: ['./create-rule.component.scss']\n})\nexport class CreateRuleComponent implements OnInit {\n\n  /** Accounting rule form. */\n  accountingRuleForm: FormGroup;\n  /** Office data. */\n  officeData: any;\n  /** GL Account data. */\n  glAccountData: any;\n  /** Debit tag data. */\n  debitTagData: any;\n  /** Credit tag data. */\n  creditTagData: any;\n\n  /**\n   * Retrieves the offices, gl accounts, debit tags and credit tags data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: { accountingRulesTemplate: any }) => {\n      this.officeData = data.accountingRulesTemplate.allowedOffices;\n      this.glAccountData = data.accountingRulesTemplate.allowedAccounts;\n      this.debitTagData = data.accountingRulesTemplate.allowedDebitTagOptions;\n      this.creditTagData = data.accountingRulesTemplate.allowedCreditTagOptions;\n    });\n  }\n\n  /**\n   * Creates and sets accounting rules form.\n   */\n  ngOnInit() {\n    this.createAccountingRuleForm();\n    this.setAccountingRulesForm();\n  }\n\n  /**\n   * Creates accounting rule form.\n   */\n  createAccountingRuleForm() {\n    this.accountingRuleForm = this.formBuilder.group({\n      'name': ['', Validators.required],\n      'officeId': ['', Validators.required],\n      'debitRuleType': ['fixedAccount'],\n      'accountToDebit': [''],\n      'debitTags': [''],\n      'allowMultipleDebitEntries': [''],\n      'creditRuleType': ['fixedAccount'],\n      'accountToCredit': [''],\n      'creditTags': [''],\n      'allowMultipleCreditEntries': [''],\n      'description': ['']\n    }, { validator: oneOfTheFieldsIsRequiredValidator });\n  }\n\n  /**\n   * Sets accounting rule form for selected accounting rule type.\n   */\n  setAccountingRulesForm() {\n    this.accountingRuleForm.get('debitRuleType').valueChanges.subscribe((debitRuleType: string) => {\n      if (debitRuleType === 'fixedAccount') {\n        this.accountingRuleForm.get('debitTags').reset();\n        this.accountingRuleForm.get('allowMultipleDebitEntries').reset();\n      } else {\n        this.accountingRuleForm.get('accountToDebit').reset();\n        this.accountingRuleForm.get('allowMultipleDebitEntries').setValue(false);\n      }\n    });\n    this.accountingRuleForm.get('creditRuleType').valueChanges.subscribe((creditRuleType: string) => {\n      if (creditRuleType === 'fixedAccount') {\n        this.accountingRuleForm.get('creditTags').reset();\n        this.accountingRuleForm.get('allowMultipleCreditEntries').reset();\n      } else {\n        this.accountingRuleForm.get('accountToCredit').reset();\n        this.accountingRuleForm.get('allowMultipleCreditEntries').setValue(false);\n      }\n    });\n  }\n\n  /**\n   * Submits the accounting rule form and creates accounting rule,\n   * if successful redirects to view created rule.\n   */\n  submit() {\n    const accountingRule = this.accountingRuleForm.value;\n    if (accountingRule.debitRuleType === 'fixedAccount') {\n      delete accountingRule.debitTags;\n      delete accountingRule.allowMultipleDebitEntries;\n    } else {\n      delete accountingRule.accountToDebit;\n    }\n    if (accountingRule.creditRuleType === 'fixedAccount') {\n      delete accountingRule.creditTags;\n      delete accountingRule.allowMultipleCreditEntries;\n    } else {\n      delete accountingRule.accountToCredit;\n    }\n    delete accountingRule.debitRuleType;\n    delete accountingRule.creditRuleType;\n    this.accountingService.createAccountingRule(accountingRule).subscribe((response: any) => {\n      this.router.navigate(['../view', response.resourceId], { relativeTo: this.route });\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"accountingRuleForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Accounting Rule Name</mat-label>\\n            <input matInput required formControlName=\\\"name\\\">\\n            <mat-error *ngIf=\\\"accountingRuleForm.controls.name.hasError('required')\\\">\\n              Accounting Rule Name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Office</mat-label>\\n            <mat-select required formControlName=\\\"officeId\\\">\\n              <mat-option *ngFor=\\\"let office of officeData\\\" [value]=\\\"office.id\\\">\\n                {{ office.name }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"accountingRuleForm.controls.officeId.hasError('required')\\\">\\n              Office is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <div fxFlex=\\\"48%\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" class=\\\"rule-wrapper\\\">\\n            <mat-label fxFlex=\\\"50%\\\">Affected GL Entry (Debit) Rule Type *</mat-label>\\n            <mat-radio-group fxFlex=\\\"50%\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"5%\\\" formControlName=\\\"debitRuleType\\\">\\n              <mat-radio-button value=\\\"fixedAccount\\\">Fixed Account</mat-radio-button>\\n              <mat-radio-button value=\\\"listOfAccounts\\\">List of Accounts</mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\" *ngIf=\\\"accountingRuleForm.controls.debitRuleType.value === 'fixedAccount'\\\">\\n            <mat-label>Account to Debit</mat-label>\\n            <mat-select formControlName=\\\"accountToDebit\\\">\\n              <mat-option *ngFor=\\\"let glAccount of glAccountData\\\" [value]=\\\"glAccount.id\\\">\\n                {{ glAccount.name }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <div fxFlex=\\\"48%\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" *ngIf=\\\"accountingRuleForm.controls.debitRuleType.value === 'listOfAccounts'\\\">\\n            <mat-form-field fxFlex=\\\"50%\\\">\\n              <mat-label>Debit Tags</mat-label>\\n              <mat-select formControlName=\\\"debitTags\\\" multiple>\\n                <mat-option *ngFor=\\\"let debitTag of debitTagData\\\" [value]=\\\"debitTag.id\\\">\\n                  {{ debitTag.name }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n            <div fxFlex=\\\"50%\\\" ngClass.gt-md=\\\"entries-wrapper\\\">\\n              <mat-checkbox labelPosition=\\\"before\\\" formControlName=\\\"allowMultipleDebitEntries\\\" class=\\\"entries\\\">\\n                Multiple Debit Entries Allowed\\n              </mat-checkbox>\\n            </div>\\n          </div>\\n\\n          <div fxFlex=\\\"48%\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" class=\\\"rule-wrapper\\\">\\n            <mat-label fxFlex=\\\"50%\\\">Affected GL Entry (Credit) Rule Type *</mat-label>\\n            <mat-radio-group fxFlex=\\\"50%\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"5%\\\" formControlName=\\\"creditRuleType\\\">\\n              <mat-radio-button value=\\\"fixedAccount\\\">Fixed Account</mat-radio-button>\\n              <mat-radio-button value=\\\"listOfAccounts\\\">List of Accounts</mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\" *ngIf=\\\"accountingRuleForm.controls.creditRuleType.value === 'fixedAccount'\\\">\\n            <mat-label>Account to Credit</mat-label>\\n            <mat-select formControlName=\\\"accountToCredit\\\">\\n              <mat-option *ngFor=\\\"let glAccount of glAccountData\\\" [value]=\\\"glAccount.id\\\">\\n                {{ glAccount.name }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <div fxFlex=\\\"48%\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" *ngIf=\\\"accountingRuleForm.controls.creditRuleType.value === 'listOfAccounts'\\\">\\n            <mat-form-field fxFlex=\\\"50%\\\">\\n              <mat-label>Credit Tags</mat-label>\\n              <mat-select formControlName=\\\"creditTags\\\" multiple>\\n                <mat-option *ngFor=\\\"let creditTag of creditTagData\\\" [value]=\\\"creditTag.id\\\">\\n                  {{ creditTag.name }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n            <div fxFlex=\\\"50%\\\" ngClass.gt-md=\\\"entries-wrapper\\\">\\n              <mat-checkbox labelPosition=\\\"before\\\" formControlName=\\\"allowMultipleCreditEntries\\\" class=\\\"entries\\\">\\n                Multiple Credit Entries Allowed\\n              </mat-checkbox>\\n            </div>\\n          </div>\\n\\n          <mat-form-field fxFlex=\\\"98%\\\">\\n            <mat-label>Description</mat-label>\\n            <textarea matInput formControlName=\\\"description\\\"></textarea>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"accountingRuleForm.pristine || !accountingRuleForm.valid\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\\n\"","module.exports = \".rule-wrapper {\\n  margin: 17.5px 0 0 0; }\\n\\n.entries-wrapper {\\n  position: relative; }\\n\\n.entries-wrapper .entries {\\n    padding: 0 0 17.5px 0;\\n    position: absolute;\\n    bottom: 0;\\n    right: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvYWNjb3VudGluZy1ydWxlcy9lZGl0LXJ1bGUvZWRpdC1ydWxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQW9CLEVBQUE7O0FBR3RCO0VBQ0Usa0JBQWtCLEVBQUE7O0FBRHBCO0lBSUkscUJBQXFCO0lBQ3JCLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsUUFBUSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvYWNjb3VudGluZy9hY2NvdW50aW5nLXJ1bGVzL2VkaXQtcnVsZS9lZGl0LXJ1bGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucnVsZS13cmFwcGVyIHtcbiAgbWFyZ2luOiAxNy41cHggMCAwIDA7XG59XG5cbi5lbnRyaWVzLXdyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgLmVudHJpZXMge1xuICAgIHBhZGRpbmc6IDAgMCAxNy41cHggMDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAwO1xuICAgIHJpZ2h0OiAwO1xuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/** Custom Validators */\nimport { oneOfTheFieldsIsRequiredValidator } from '../one-of-the-fields-is-required.validator';\n\n/**\n * Edit accounting rule component.\n */\n@Component({\n  selector: 'mifosx-edit-rule',\n  templateUrl: './edit-rule.component.html',\n  styleUrls: ['./edit-rule.component.scss']\n})\nexport class EditRuleComponent implements OnInit {\n\n  /** Accounting rule form. */\n  accountingRuleForm: FormGroup;\n  /** Accounting rule. */\n  accountingRule: any;\n  /** Office data. */\n  officeData: any;\n  /** GL Account data. */\n  glAccountData: any;\n  /** Debit tag data. */\n  debitTagData: any;\n  /** Credit tag data. */\n  creditTagData: any;\n\n  /**\n   * Retrieves the offices, gl accounts, debit tags, credit tags and accounting rule data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: {\n        accountingRulesTemplate: any,\n        accountingRule: any\n      }) => {\n        this.officeData = data.accountingRulesTemplate.allowedOffices;\n        this.glAccountData = data.accountingRulesTemplate.allowedAccounts;\n        this.debitTagData = data.accountingRulesTemplate.allowedDebitTagOptions;\n        this.creditTagData = data.accountingRulesTemplate.allowedCreditTagOptions;\n        this.accountingRule = data.accountingRule;\n      });\n  }\n\n  /**\n   * Creates and sets accounting rule form.\n   */\n  ngOnInit() {\n    this.createAccountingRuleForm();\n    this.setAccountingRulesForm();\n  }\n\n  /**\n   * Creates accounting rule form.\n   */\n  createAccountingRuleForm() {\n    this.accountingRuleForm = this.formBuilder.group({\n      'name': [this.accountingRule.name, Validators.required],\n      'officeId': [this.accountingRule.officeId, Validators.required],\n      'debitRuleType': [''],\n      'accountToDebit': [''],\n      'debitTags': [''],\n      'allowMultipleDebitEntries': [''],\n      'creditRuleType': [''],\n      'accountToCredit': [''],\n      'creditTags': [''],\n      'allowMultipleCreditEntries': [''],\n      'description': [this.accountingRule.description]\n    }, { validator: oneOfTheFieldsIsRequiredValidator });\n  }\n\n  /**\n   * Sets accounting rule form for selected accounting rule type.\n   */\n  setAccountingRulesForm() {\n    this.accountingRuleForm.get('debitRuleType').valueChanges.subscribe(debitRuleType => {\n      if (debitRuleType === 'fixedAccount') {\n        this.accountingRuleForm.get('debitTags').reset();\n        this.accountingRuleForm.get('allowMultipleDebitEntries').reset();\n      } else {\n        this.accountingRuleForm.get('accountToDebit').reset();\n        this.accountingRuleForm.get('allowMultipleDebitEntries').setValue(false);\n      }\n    });\n    this.accountingRuleForm.get('creditRuleType').valueChanges.subscribe(creditRuleType => {\n      if (creditRuleType === 'fixedAccount') {\n        this.accountingRuleForm.get('creditTags').reset();\n        this.accountingRuleForm.get('allowMultipleCreditEntries').reset();\n      } else {\n        this.accountingRuleForm.get('accountToCredit').reset();\n        this.accountingRuleForm.get('allowMultipleCreditEntries').setValue(false);\n      }\n    });\n\n    if (this.accountingRule.debitAccounts) {\n      this.accountingRuleForm.get('debitRuleType').setValue('fixedAccount');\n      this.accountingRuleForm.get('accountToDebit').setValue(this.accountingRule.debitAccounts[0].id);\n    } else {\n      this.accountingRuleForm.get('debitRuleType').setValue('listOfAccounts');\n      this.accountingRuleForm.get('debitTags').setValue(this.accountingRule.debitTags.map((debitTag: any) => debitTag.tag.id));\n      this.accountingRuleForm.get('allowMultipleDebitEntries').setValue(this.accountingRule.allowMultipleDebitEntries);\n    }\n\n    if (this.accountingRule.creditAccounts) {\n      this.accountingRuleForm.get('creditRuleType').setValue('fixedAccount');\n      this.accountingRuleForm.get('accountToCredit').setValue(this.accountingRule.creditAccounts[0].id);\n    } else {\n      this.accountingRuleForm.get('creditRuleType').setValue('listOfAccounts');\n      this.accountingRuleForm.get('creditTags').setValue(this.accountingRule.creditTags.map((creditTag: any) => creditTag.tag.id));\n      this.accountingRuleForm.get('allowMultipleCreditEntries').setValue(this.accountingRule.allowMultipleCreditEntries);\n    }\n  }\n\n  /**\n   * Submits the accounting rule form and updates accounting rule,\n   * if successful redirects to view updated rule.\n   */\n  submit() {\n    const accountingRule = this.accountingRuleForm.value;\n    if (accountingRule.debitRuleType === 'fixedAccount') {\n      delete accountingRule.debitTags;\n      delete accountingRule.allowMultipleDebitEntries;\n    } else {\n      delete accountingRule.accountToDebit;\n    }\n    if (accountingRule.creditRuleType === 'fixedAccount') {\n      delete accountingRule.creditTags;\n      delete accountingRule.allowMultipleCreditEntries;\n    } else {\n      delete accountingRule.accountToCredit;\n    }\n    delete accountingRule.debitRuleType;\n    delete accountingRule.creditRuleType;\n    this.accountingService.updateAccountingRule(this.accountingRule.id, accountingRule).subscribe((response: any) => {\n      this.router.navigate(['../../', response.resourceId], { relativeTo: this.route });\n    });\n  }\n\n}\n","/** Angular Imports */\nimport { FormGroup, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n/** Validates that one of the fields for debit or credit is filled for a given accounting rule type. */\nexport const oneOfTheFieldsIsRequiredValidator: ValidatorFn = (accountingRuleForm: FormGroup): ValidationErrors | null => {\n  const accountToDebit = accountingRuleForm.controls.accountToDebit.value;\n  const debitTags = accountingRuleForm.controls.debitTags.value;\n  const accountToCredit = accountingRuleForm.controls.accountToCredit.value;\n  const creditTags = accountingRuleForm.controls.creditTags.value;\n  return ((accountToDebit || debitTags) && (accountToCredit || creditTags)) ? null : { 'error': true };\n};\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" class=\\\"container m-b-20\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['edit']\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteAccountingRule()\\\">\\n    <fa-icon icon=\\\"trash\\\"></fa-icon>&nbsp;&nbsp;\\n    Delete\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n  <div fxFlex=\\\"48%\\\">\\n\\n    <mat-card>\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"row wrap\\\" class=\\\"content\\\">\\n\\n          <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n            Office\\n          </div>\\n\\n          <div fxFlex=\\\"50%\\\">\\n            {{ accountingRule.officeName }}\\n          </div>\\n\\n          <div fxFlex=\\\"50%\\\" class=\\\"header\\\" *ngIf=\\\"accountingRule.description\\\">\\n            Description\\n          </div>\\n\\n          <div fxFlex=\\\"50%\\\" *ngIf=\\\"accountingRule.description\\\">\\n            {{ accountingRule.description }}\\n          </div>\\n\\n          <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n            Multiple Debit Entries Allowed\\n          </div>\\n\\n          <div fxFlex=\\\"50%\\\">\\n            {{ accountingRule.allowMultipleDebitEntries }}\\n          </div>\\n\\n          <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n            Multiple Credit Entries Allowed\\n          </div>\\n\\n          <div fxFlex=\\\"50%\\\">\\n            {{ accountingRule.allowMultipleCreditEntries }}\\n          </div>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n    </mat-card>\\n\\n  </div>\\n\\n  <div fxFlex>\\n\\n    <mat-card>\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"row\\\" class=\\\"content\\\">\\n\\n          <div fxFlex=\\\"50%\\\" fxLayout=\\\"column\\\" *ngIf=\\\"accountingRule.debitTags\\\">\\n            <div class=\\\"header\\\">\\n              Debit Tags\\n            </div>\\n            <div *ngFor=\\\"let debitTag of accountingRule.debitTags\\\">\\n              {{ debitTag.tag.name }}\\n            </div>\\n          </div>\\n\\n          <div fxFlex=\\\"50%\\\" fxLayout=\\\"column\\\" *ngIf=\\\"accountingRule.debitAccounts\\\">\\n            <div class=\\\"header\\\">\\n              Debit Account Name\\n            </div>\\n            <div *ngFor=\\\"let debitAccount of accountingRule.debitAccounts\\\">\\n              {{ debitAccount.name + ' (' + debitAccount.glCode + ')' }}\\n            </div>\\n          </div>\\n\\n          <div fxFlex=\\\"50%\\\" fxLayout=\\\"column\\\" *ngIf=\\\"accountingRule.creditTags\\\">\\n            <div class=\\\"header\\\">\\n              Credit Tags\\n            </div>\\n            <div *ngFor=\\\"let creditTag of accountingRule.creditTags\\\">\\n              {{ creditTag.tag.name }}\\n            </div>\\n          </div>\\n\\n          <div fxFlex=\\\"50%\\\" fxLayout=\\\"column\\\" *ngIf=\\\"accountingRule.creditAccounts\\\">\\n            <div class=\\\"header\\\">\\n              Credit Account Name\\n            </div>\\n            <div *ngFor=\\\"let creditAccount of accountingRule.creditAccounts\\\">\\n              {{ creditAccount.name + ' (' + creditAccount.glCode + ')' }}\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n    </mat-card>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \".content div {\\n  margin: 1rem 0;\\n  word-wrap: break-word; }\\n  .content div.header {\\n    font-weight: 500; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvYWNjb3VudGluZy1ydWxlcy92aWV3LXJ1bGUvdmlldy1ydWxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksY0FBYztFQUNkLHFCQUFxQixFQUFBO0VBSHpCO0lBTU0sZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hY2NvdW50aW5nL2FjY291bnRpbmctcnVsZXMvdmlldy1ydWxlL3ZpZXctcnVsZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50IHtcbiAgZGl2IHtcbiAgICBtYXJnaW46IDFyZW0gMDtcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG5cbiAgICAmLmhlYWRlciB7XG4gICAgICBmb250LXdlaWdodDogNTAwO1xuICAgIH1cbiAgfVxufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/** Custom Components */\nimport { DeleteDialogComponent } from '../../../shared/delete-dialog/delete-dialog.component';\n\n/**\n * View accounting rule component.\n */\n@Component({\n  selector: 'mifosx-view-rule',\n  templateUrl: './view-rule.component.html',\n  styleUrls: ['./view-rule.component.scss']\n})\nexport class ViewRuleComponent implements OnInit {\n\n  /** Accounting rule. */\n  accountingRule: any;\n\n  /**\n   * Retrieves the accounting rule data from `resolve`.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   * @param {MatDialog} dialog Dialog reference.\n   */\n  constructor(private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router,\n              public dialog: MatDialog) {\n    this.route.data.subscribe((data: { accountingRule: any }) => {\n      this.accountingRule = data.accountingRule;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Deletes the accounting rule and redirects to accounting rules.\n   */\n  deleteAccountingRule() {\n    const deleteAccountingRuleDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `accounting rule ${this.accountingRule.id}` }\n    });\n    deleteAccountingRuleDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.accountingService.deleteAccountingRule(this.accountingRule.id)\n          .subscribe(() => {\n            this.router.navigate(['/accounting/accounting-rules']);\n          });\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <div fxFlex=\\\"50%\\\">\\n\\n        <mat-nav-list>\\n\\n          <mat-list-item [routerLink]=\\\"['journal-entries/frequent-postings']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"sync\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Frequent Postings</h4>\\n            <p matLine>These are predefined postings</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['journal-entries/create']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"plus\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Create Journal Entries</h4>\\n            <p matLine>Manual journal entry transactions recorded in a journal</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['journal-entries']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"search\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Search Journal Entries</h4>\\n            <p matLine>Advanced search option for journal entries</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['financial-activity-mappings']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"link\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Accounts Linked to Financial Activities</h4>\\n            <p matLine>List of Financial Activities and GL Account Mappings</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['migrate-opening-balances']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"hand-holding-usd\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Migrate Opening Balances (Office-wise)</h4>\\n            <p matLine>Set or update office-level opening balances for GL accounts</p>\\n          </mat-list-item>\\n\\n        </mat-nav-list>\\n\\n      </div>\\n\\n      <div fxFlex=\\\"50%\\\">\\n\\n        <mat-nav-list>\\n\\n          <mat-list-item [routerLink]=\\\"['chart-of-accounts']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"sitemap\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Chart of Accounts</h4>\\n            <p matLine>List of accounts used by the organization</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['closing-entries']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"archive\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Closing Entries</h4>\\n            <p matLine>Journal entries made at the end of accounting period</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['accounting-rules']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"list\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Accounting Rules</h4>\\n            <p matLine>List of all accounting rules</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['periodic-accruals']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"calendar\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Accruals</h4>\\n            <p matLine>Accrues income, expenses and liabilities as on the provided date</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['provisioning-entries']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"cogs\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Provisioning Entries</h4>\\n            <p matLine>Create provisioning entries</p>\\n          </mat-list-item>\\n\\n        </mat-nav-list>\\n\\n      </div>\\n\\n    </div>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnRpbmcvYWNjb3VudGluZy5jb21wb25lbnQuc2NzcyJ9 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\n\n/**\n * Accounting component.\n */\n@Component({\n  selector: 'mifosx-accounting',\n  templateUrl: './accounting.component.html',\n  styleUrls: ['./accounting.component.scss']\n})\nexport class AccountingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\n\n/** Custom Modules */\nimport { SharedModule } from '../shared/shared.module';\nimport { AccountingRoutingModule } from './accounting-routing.module';\n\n/** Custom Components */\nimport { AccountingComponent } from './accounting.component';\nimport { FrequentPostingsComponent } from './frequent-postings/frequent-postings.component';\nimport { CreateJournalEntryComponent } from './create-journal-entry/create-journal-entry.component';\nimport { SearchJournalEntryComponent } from './search-journal-entry/search-journal-entry.component';\nimport { ViewTransactionComponent } from './view-transaction/view-transaction.component';\nimport { RevertTransactionComponent } from './revert-transaction/revert-transaction.component';\nimport { ViewJournalEntryComponent } from './view-journal-entry/view-journal-entry.component';\nimport { FinancialActivityMappingsComponent } from './financial-activity-mappings/financial-activity-mappings.component';\nimport { CreateFinancialActivityMappingComponent } from './financial-activity-mappings/create-financial-activity-mapping/create-financial-activity-mapping.component';\nimport { ViewFinancialActivityMappingComponent } from './financial-activity-mappings/view-financial-activity-mapping/view-financial-activity-mapping.component';\nimport { EditFinancialActivityMappingComponent } from './financial-activity-mappings/edit-financial-activity-mapping/edit-financial-activity-mapping.component';\nimport { MigrateOpeningBalancesComponent } from './migrate-opening-balances/migrate-opening-balances.component';\nimport { ChartOfAccountsComponent } from './chart-of-accounts/chart-of-accounts.component';\nimport { CreateGlAccountComponent } from './chart-of-accounts/create-gl-account/create-gl-account.component';\nimport { ViewGlAccountComponent } from './chart-of-accounts/view-gl-account/view-gl-account.component';\nimport { EditGlAccountComponent } from './chart-of-accounts/edit-gl-account/edit-gl-account.component';\nimport { ClosingEntriesComponent } from './closing-entries/closing-entries.component';\nimport { CreateClosureComponent } from './closing-entries/create-closure/create-closure.component';\nimport { ViewClosureComponent } from './closing-entries/view-closure/view-closure.component';\nimport { EditClosureComponent } from './closing-entries/edit-closure/edit-closure.component';\nimport { AccountingRulesComponent } from './accounting-rules/accounting-rules.component';\nimport { CreateRuleComponent } from './accounting-rules/create-rule/create-rule.component';\nimport { ViewRuleComponent } from './accounting-rules/view-rule/view-rule.component';\nimport { EditRuleComponent } from './accounting-rules/edit-rule/edit-rule.component';\nimport { PeriodicAccrualsComponent } from './periodic-accruals/periodic-accruals.component';\nimport { ProvisioningEntriesComponent } from './provisioning-entries/provisioning-entries.component';\nimport { CreateProvisioningEntryComponent } from './provisioning-entries/create-provisioning-entry/create-provisioning-entry.component';\nimport { ViewProvisioningEntryComponent } from './provisioning-entries/view-provisioning-entry/view-provisioning-entry.component';\nimport { ViewProvisioningJournalEntriesComponent } from './provisioning-entries/view-provisioning-journal-entries/view-provisioning-journal-entries.component';\n\n/**\n * Accounting Module\n *\n * All components related to accounting functions should be declared here.\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    AccountingRoutingModule\n  ],\n  declarations: [\n    AccountingComponent,\n    FrequentPostingsComponent,\n    CreateJournalEntryComponent,\n    SearchJournalEntryComponent,\n    ViewTransactionComponent,\n    RevertTransactionComponent,\n    ViewJournalEntryComponent,\n    FinancialActivityMappingsComponent,\n    CreateFinancialActivityMappingComponent,\n    ViewFinancialActivityMappingComponent,\n    EditFinancialActivityMappingComponent,\n    MigrateOpeningBalancesComponent,\n    ChartOfAccountsComponent,\n    CreateGlAccountComponent,\n    ViewGlAccountComponent,\n    EditGlAccountComponent,\n    ClosingEntriesComponent,\n    CreateClosureComponent,\n    ViewClosureComponent,\n    EditClosureComponent,\n    AccountingRulesComponent,\n    CreateRuleComponent,\n    ViewRuleComponent,\n    EditRuleComponent,\n    PeriodicAccrualsComponent,\n    ProvisioningEntriesComponent,\n    CreateProvisioningEntryComponent,\n    ViewProvisioningEntryComponent,\n    ViewProvisioningJournalEntriesComponent\n  ],\n  entryComponents: [\n    RevertTransactionComponent,\n    ViewJournalEntryComponent\n  ]\n})\nexport class AccountingModule { }\n","/** TODO: Separate services for feature modules for cleaner accounting service. */\n\n/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/**\n * Accounting service.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountingService {\n\n  /**\n   * @param {HttpClient} http Http Client to send requests.\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * @returns {Observable<any>} Offices data ordered by id.\n   */\n  getOffices(): Observable<any> {\n    const httpParams = new HttpParams().set('orderBy', 'id');\n    return  this.http.get('/offices', { params: httpParams });\n  }\n\n  /**\n   * @param {boolean} useHttpParams True if http params should be used.\n   * @returns {Observable<any>} Accounting rules data.\n   */\n  getAccountingRules(useHttpParams: boolean = false): Observable<any> {\n    let httpParams = new HttpParams();\n    if (useHttpParams) {\n      httpParams = httpParams.set('associations', 'all');\n    }\n    return this.http.get('/accountingrules', { params: httpParams });\n  }\n\n  /**\n   * @returns {Observable<any>} Currencies data.\n   */\n  getCurrencies(): Observable<any> {\n    return this.http.get('/currencies');\n  }\n\n  /**\n   * @returns {Observable<any>} Payment types data.\n   */\n  getPaymentTypes(): Observable<any> {\n    return this.http.get('/paymenttypes');\n  }\n\n  /**\n   * @param {any} journalEntry Journal entry to be created.\n   * @returns {Observable<any>}\n   */\n  createJournalEntry(journalEntry: any): Observable<any> {\n    return this.http.post('/journalentries', journalEntry);\n  }\n\n  /**\n   * @returns {Observable<any>} GL Accounts.\n   */\n  getGlAccounts(): Observable<any> {\n    const httpParams = new HttpParams()\n      .set('manualEntriesAllowed', 'true')\n      .set('usage', '1')\n      .set('disabled', 'false');\n    return this.http.get(`/glaccounts`, { params: httpParams });\n  }\n\n  /**\n   * @param transactionId Transaction ID of journal entries.\n   * @returns {Observable<any>} Journal Entries.\n   */\n  getJournalEntry(transactionId: string): Observable<any> {\n    const httpParams = new HttpParams()\n      .set('transactionId', transactionId)\n      .set('transactionDetails', 'true');\n    return this.http.get(`/journalentries`, { params: httpParams });\n  }\n\n  /**\n   * @param {any} filterBy Properties by which entries should be filtered.\n   * @param {string} orderBy Property by which entries should be sorted.\n   * @param {string} sortOrder Sort order: ascending or descending.\n   * @param {number} offset Page offset.\n   * @param {number} limit Number of entries within the page.\n   * @returns {Observable<any>} Journal Entries.\n   */\n  getJournalEntries(filterBy: any, orderBy: string, sortOrder: string, offset: number, limit: number): Observable<any> {\n    let httpParams = new HttpParams()\n      .set('offset', offset.toString())\n      .set('limit', limit.toString())\n      .set('sortOrder', sortOrder)\n      .set('orderBy', orderBy);\n    // filterBy: officeId, glAccountId, manualEntriesOnly, fromDate, toDate, transactionId\n    filterBy.forEach(function (filter: any) {\n      if (filter.value) {\n        httpParams = httpParams.set(filter.type, filter.value);\n      }\n    });\n    return this.http.get('/journalentries', { params: httpParams });\n  }\n\n  /**\n   * @param {string} transactionId Transaction ID to be reverted.\n   * @param {string} comments Any comments.\n   * @returns {Observable<any>}\n   */\n  revertTransaction(transactionId: string, comments: string): Observable<any> {\n    const httpParams = new HttpParams().set('command', 'reverse');\n    let data = {};\n    if (comments) {\n      data = { comments: comments };\n    }\n    return this.http.post(`/journalentries/${transactionId}`, data, { params: httpParams });\n  }\n\n  /**\n   * @returns {Observable<any>} Financial activity accounts.\n   */\n  getFinancialActivityAccounts(): Observable<any> {\n    return this.http.get('/financialactivityaccounts');\n  }\n\n  /**\n   * @returns {Observable<any>} Financial activity accounts template.\n   */\n  getFinancialActivityAccountsTemplate(): Observable<any> {\n    return this.http.get('/financialactivityaccounts/template');\n  }\n\n  /**\n   * @param {any} financialActivityAccount Financial activity account to be created.\n   * @returns {Observable<any>}\n   */\n  createFinancialActivityAccount(financialActivityAccount: any): Observable<any> {\n    return this.http.post('/financialactivityaccounts', financialActivityAccount);\n  }\n\n  /**\n   * @param {string} financialActivityAccountId Financial activity account ID of financial activity account.\n   * @param {boolean} template True if template is required.\n   * @returns {Observable<any>} Financial activity account.\n   */\n  getFinancialActivityAccount(financialActivityAccountId: string, template: boolean = false): Observable<any> {\n    const httpParams = new HttpParams().set('template', template.toString());\n    return this.http.get(`/financialactivityaccounts/${financialActivityAccountId}`, { params: httpParams });\n  }\n\n  /**\n   * @param {string} financialActivityAccountId Financial activity account ID of financial activity account to be updated.\n   * @param {any} financialActivityAccount Financial activity account to be updated.\n   * @returns {Observable<any>}\n   */\n  updateFinancialActivityAccount(financialActivityAccountId: string, financialActivityAccount: any): Observable<any> {\n    return this.http.put(`/financialactivityaccounts/${financialActivityAccountId}`, financialActivityAccount);\n  }\n\n  /**\n   * @param {string} financialActivityAccountId Financial activity account ID of financial activity account to be deleted.\n   * @returns {Observable<any>}\n   */\n  deleteFinancialActivityAccount(financialActivityAccountId: string): Observable<any> {\n    return this.http.delete(`/financialactivityaccounts/${financialActivityAccountId}`);\n  }\n\n  /**\n   * @param {string} officeId Office ID to retrive opening balances accounts for.\n   * @returns {Observable<any>}\n   */\n  retrieveOpeningBalances(officeId: string): Observable<any> {\n    const httpParams = new HttpParams().set('officeId', officeId);\n    return this.http.get('/journalentries/openingbalance', { params: httpParams });\n  }\n\n  /**\n   * @param {any} openingBalances Opening balances for office accounts to be defined.\n   * @returns {Observable<any>}\n   */\n  defineOpeningBalances(openingBalances: any): Observable<any> {\n    const httpParams = new HttpParams().set('command', 'defineOpeningBalance');\n    return this.http.post(`/journalentries`, openingBalances, { params: httpParams });\n  }\n\n  /**\n   * @returns {Observable<any>} GL accounts.\n   */\n  getChartOfAccounts(): Observable<any> {\n    return this.http.get('/glaccounts');\n  }\n\n  /**\n   * @returns {Observable<any>} GL accounts template.\n   */\n  getChartOfAccountsTemplate(): Observable<any> {\n    return this.http.get('/glaccounts/template');\n  }\n\n  /**\n   * @param {any} glAccount GL account to be created.\n   * @returns {Observable<any>}\n   */\n  createGlAccount(glAccount: any): Observable<any> {\n    return this.http.post('/glaccounts', glAccount);\n  }\n\n  /**\n   * @param {string} glAccountId GL account ID of gl account.\n   * @param {boolean} template True if template is required.\n   * @returns {Observable<any>} GL account.\n   */\n  getGlAccount(glAccountId: string, template: boolean = false): Observable<any> {\n    const httpParams = new HttpParams().set('template', template.toString());\n    return this.http.get(`/glaccounts/${glAccountId}`, { params: httpParams });\n  }\n\n  /**\n   * @param {string} glAccountId GL account ID of gl account.\n   * @param {any} glAccount GL account to be updated.\n   * @returns {Observable<any>}\n   */\n  updateGlAccount(glAccountId: string, glAccount: any): Observable<any> {\n    return this.http.put(`/glaccounts/${glAccountId}`, glAccount);\n  }\n\n  /**\n   * @param glAccountId GL account ID of gl account to be deleted.\n   * @returns {Observable<any>}\n   */\n  deleteGlAccount(glAccountId: string): Observable<any> {\n    return this.http.delete(`/glaccounts/${glAccountId}`);\n  }\n\n  /**\n   * @returns {Observable<any>} GL account closures.\n   */\n  getAccountingClosures(): Observable<any> {\n    return this.http.get('/glclosures');\n  }\n\n  /**\n   * @param {any} accountingClosure GL closure to be created.\n   * @returns {Observable<any>}\n   */\n  createAccountingClosure(accountingClosure: any): Observable<any> {\n    return this.http.post('/glclosures', accountingClosure);\n  }\n\n  /**\n   * @param {string} accountingClosureId Accounting closure ID of gl closure.\n   * @returns {Observable<any>} Accounting closure.\n   */\n  getAccountingClosure(accountingClosureId: string): Observable<any> {\n    return this.http.get(`/glclosures/${accountingClosureId}`);\n  }\n\n  /**\n   * @param {string} accountingClosureId Accounting closure ID of gl closure to be updated.\n   * @param {any} accountingClosure Accounting closure to be updated.\n   * @returns {Observable<any>}\n   */\n  updateAccountingClosure(accountingClosureId: string, accountingClosure: any): Observable<any> {\n    return this.http.put(`/glclosures/${accountingClosureId}`, accountingClosure);\n  }\n\n  /**\n   * @param {string} accountingClosureId Accounting closure ID of gl closure to be deleted.\n   * @returns {Observable<any>}\n   */\n  deleteAccountingClosure(accountingClosureId: string): Observable<any> {\n    return this.http.delete(`/glclosures/${accountingClosureId}`);\n  }\n\n  /**\n   * @returns {Observable<any>} Accounting rules template.\n   */\n  getAccountingRulesTemplate(): Observable<any> {\n    return this.http.get('/accountingrules/template');\n  }\n\n  /**\n   * @param {any} accountingRule Accounting rule to be created.\n   * @returns {Observable<any>}\n   */\n  createAccountingRule(accountingRule: any): Observable<any> {\n    return this.http.post('/accountingrules', accountingRule);\n  }\n\n  /**\n   * @param {string} accountingRuleId Accounting rule ID of accounting rule.\n   * @returns {Observable<any>} Accounting rule.\n   */\n  getAccountingRule(accountingRuleId: string): Observable<any> {\n    return this.http.get(`/accountingrules/${accountingRuleId}`);\n  }\n\n  /**\n   * @param {string} accoutingRuleId Accounting rule ID of accounting rule to be updated.\n   * @param {any} accountingRule Accounting rule to be updated.\n   * @returns {Observable<any>}\n   */\n  updateAccountingRule(accoutingRuleId: string, accountingRule: any): Observable<any> {\n    return this.http.put(`/accountingrules/${accoutingRuleId}`, accountingRule);\n  }\n\n  /**\n   * @param {string} accountingRuleId Accounting rule ID of accounting rule to be deleted.\n   * @returns {Observable<any>}\n   */\n  deleteAccountingRule(accountingRuleId: string): Observable<any> {\n    return this.http.delete(`/accountingrules/${accountingRuleId}`);\n  }\n\n  /**\n   * @param {any} periodicAccruals Accruals to be executed.\n   * @returns {Observable<any>}\n   */\n  executePeriodicAccruals(periodicAccruals: any): Observable<any> {\n    return this.http.post('/runaccruals', periodicAccruals);\n  }\n\n  /**\n   * @returns {Observable<any>} Provisioning entries.\n   */\n  getProvisioningEntries(): Observable<any> {\n    return this.http.get('/provisioningentries');\n  }\n\n  /**\n   * @param {any} provisioningEntry Provisioning entry to be created.\n   * @returns {Observable<any>}\n   */\n  createProvisioningEntry(provisioningEntry: any): Observable<any> {\n    return this.http.post('/provisioningentries', provisioningEntry);\n  }\n\n  /**\n   * @param {string} provisioningEntryId Provisioning entry ID of provisioning entry.\n   * @returns {Observable<any>} Provisioning entry.\n   */\n  getProvisioningEntry(provisioningEntryId: string): Observable<any> {\n    return this.http.get(`/provisioningentries/${provisioningEntryId}`);\n  }\n\n  /**\n   * @returns {Observable<any>} Loan products data.\n   */\n  getLoanProducts(): Observable<any> {\n    return this.http.get('/loanproducts');\n  }\n\n  /**\n   * @returns {Observable<any>} Provisioning categories data.\n   */\n  getProvisioningCategories(): Observable<any> {\n    return this.http.get('/provisioningcategory');\n  }\n\n  /**\n   * @param {string} provisioningEntryId Provisioning entry ID of provisioning entry.\n   * @returns {Observable<any>} Provisioning entry entries.\n   */\n  getProvisioningEntryEntries(provisioningEntryId: string): Observable<any> {\n    const httpParams = new HttpParams().set('entryId', provisioningEntryId);\n    return this.http.get('/provisioningentries/entries', { params: httpParams });\n  }\n\n  /**\n   * @param {string} provisioningEntryId Provisioning entry ID of provisioning entry.\n   * @returns {Observable<any>} Provisioning journal entries.\n   */\n  getProvisioningJournalEntries(provisioningEntryId: string): Observable<any> {\n    const httpParams = new HttpParams().set('entryId', provisioningEntryId);\n    return this.http.get('/journalentries/provisioning', { params: httpParams });\n  }\n\n  /**\n   * @param {string} provisioningEntryId Provisioning entry ID for which journal entries need to be created.\n   * @returns {Observable<any>}\n   */\n  createProvisioningJournalEntries(provisioningEntryId: string): Observable<any> {\n    const httpParams = new HttpParams().set('command', 'createjournalentry');\n    return this.http.post(`/provisioningentries/${provisioningEntryId}`, {}, { params: httpParams });\n  }\n\n  /**\n   * @param {string} provisioningEntryId Provisioning entry ID for which provisioning entry needs to be recreated.\n   * @returns {Observable<any>}\n   */\n  recreateProvisioningEntries(provisioningEntryId: string): Observable<any> {\n    const httpParams = new HttpParams().set('command', 'recreateprovisioningentry');\n    return this.http.post(`/provisioningentries/${provisioningEntryId}`, {}, { params: httpParams });\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <mat-button-toggle-group [formControl]=\\\"viewGroup\\\">\\n    <mat-button-toggle value=\\\"listView\\\">\\n      <fa-icon icon=\\\"list\\\"></fa-icon>\\n    </mat-button-toggle>\\n    <mat-button-toggle value=\\\"treeView\\\">\\n      <fa-icon icon=\\\"sitemap\\\"></fa-icon>\\n    </mat-button-toggle>\\n  </mat-button-toggle-group>\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['gl-accounts/create']\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Add Account\\n  </button>\\n</div>\\n\\n\\n<!-- List View -->\\n\\n<div class=\\\"container\\\" [hidden]=\\\"viewGroup.value !== 'listView'\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"tableDataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Account </th>\\n        <td mat-cell *matCellDef=\\\"let glAccount\\\"> {{ glAccount.name }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"glCode\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> GL Code </th>\\n        <td mat-cell *matCellDef=\\\"let glAccount\\\"> {{ glAccount.glCode }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"glAccountType\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\\n        <td mat-cell *matCellDef=\\\"let glAccount\\\"> {{ glAccount.type.value }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"disabled\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Disabled </th>\\n        <td mat-cell *matCellDef=\\\"let glAccount\\\">\\n          <div [className]=\\\"glAccount.disabled === true ? 'disabled' : 'enabled'\\\">\\n            <fa-icon matTooltip=\\\"{{ glAccount.disabled === true ? 'Disabled' : 'Enabled' }}\\\" matTooltipPosition=\\\"right\\\" icon=\\\"circle\\\" size=\\\"lg\\\"></fa-icon>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"manualEntriesAllowed\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Manual Entries Allowed </th>\\n        <td mat-cell *matCellDef=\\\"let glAccount\\\">\\n          <fa-icon *ngIf=\\\"glAccount.manualEntriesAllowed\\\" class=\\\"manual-entries-allowed\\\" matTooltip=\\\"Allowed\\\" matTooltipPosition=\\\"right\\\" icon=\\\"check-circle\\\" size=\\\"lg\\\"></fa-icon>\\n          <fa-icon *ngIf=\\\"!glAccount.manualEntriesAllowed\\\" class=\\\"manual-entries-not-allowed\\\" matTooltip=\\\"Not Allowed\\\" matTooltipPosition=\\\"right\\\" icon=\\\"times-circle\\\" size=\\\"lg\\\"></fa-icon>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"usedAs\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Used as </th>\\n        <td mat-cell *matCellDef=\\\"let glAccount\\\"> {{ glAccount.usage.value }} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['gl-accounts/view', row.id]\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\\n\\n<!-- Tree View -->\\n\\n<div class=\\\"container\\\" [hidden]=\\\"viewGroup.value !== 'treeView'\\\">\\n\\n  <div class=\\\"m-b-20\\\"  fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n    <button mat-raised-button (click)=\\\"nestedTreeControl.expandAll()\\\">  <!-- Bug(angular-material): https://github.com/angular/material2/issues/12170 -->\\n      Expand All\\n    </button>\\n    <button mat-raised-button (click)=\\\"nestedTreeControl.collapseAll()\\\">\\n      Collapse All\\n    </button>\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"4%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <div fxFlex=\\\"48%\\\" *ngIf=\\\"glAccount\\\">\\n\\n      <mat-card>\\n\\n        <mat-card-content>\\n\\n          <div fxLayout=\\\"row wrap\\\" class=\\\"content\\\">\\n\\n            <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n              Account Name\\n            </div>\\n\\n            <div fxFlex=\\\"50%\\\">\\n              {{ glAccount.name }}\\n            </div>\\n\\n            <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n              GL Code\\n            </div>\\n\\n            <div fxFlex=\\\"50%\\\">\\n              {{ glAccount.glCode }}\\n            </div>\\n\\n            <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n              Account Type\\n            </div>\\n\\n            <div fxFlex=\\\"50%\\\">\\n              {{ glAccount.type }}\\n            </div>\\n\\n            <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n              Account Usage\\n            </div>\\n\\n            <div fxFlex=\\\"50%\\\">\\n              {{ glAccount.usage }}\\n            </div>\\n\\n            <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n              Manual Entries Allowed\\n            </div>\\n\\n            <div fxFlex=\\\"50%\\\">\\n              {{ glAccount.manualEntriesAllowed }}\\n            </div>\\n\\n            <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n              Description\\n            </div>\\n\\n            <div fxFlex=\\\"50%\\\">\\n              {{ glAccount.description }}\\n            </div>\\n\\n          </div>\\n\\n        </mat-card-content>\\n\\n      </mat-card>\\n\\n    </div>\\n\\n    <div class=\\\"mat-elevation-z8\\\" fxFlex>\\n\\n      <mat-tree [dataSource]=\\\"nestedTreeDataSource\\\" [treeControl]=\\\"nestedTreeControl\\\" class=\\\"gl-account-tree\\\">\\n\\n        <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodeToggle>\\n          <li class=\\\"mat-tree-node\\\">\\n            <button mat-icon-button disabled></button>\\n            <span (click)=\\\"viewGLAccountNode(node)\\\">\\n              <span *ngIf=\\\"node.glCode\\\">{{ '(' + node.glCode + ')' }}</span>&nbsp;&nbsp;\\n              {{ node.name }}\\n            </span>\\n          </li>\\n        </mat-tree-node>\\n\\n        <mat-nested-tree-node *matTreeNodeDef=\\\"let node; when: hasNestedChild\\\">\\n          <li>\\n            <div class=\\\"mat-tree-node\\\">\\n              <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\\\"'toggle ' + node.name\\\">\\n                <fa-icon class=\\\"mat-icon-rtl-mirror\\\" icon=\\\"{{ nestedTreeControl.isExpanded(node) ? 'chevron-down' : 'chevron-right' }}\\\"></fa-icon>\\n              </button>\\n              <span (click)=\\\"viewGLAccountNode(node)\\\">\\n                <span *ngIf=\\\"node.glCode\\\">{{ '(' + node.glCode + ')' }}</span>&nbsp;&nbsp;\\n                {{ node.name }}\\n              </span>\\n            </div>\\n            <ul [class.gl-account-tree-invisible]=\\\"!nestedTreeControl.isExpanded(node)\\\">\\n              <ng-container matTreeNodeOutlet></ng-container>\\n            </ul>\\n          </li>\\n        </mat-nested-tree-node>\\n\\n      </mat-tree>\\n\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n  .gl-account-tree ul,\\n.gl-account-tree li {\\n  margin-top: 0;\\n  margin-bottom: 0;\\n  list-style-type: none; }\\n  .gl-account-tree li span {\\n  cursor: pointer; }\\n  .gl-account-tree .gl-account-tree-invisible {\\n  display: none; }\\n  .content div {\\n  margin: 1rem 0;\\n  word-wrap: break-word; }\\n  .content div.header {\\n    font-weight: 500; }\\n  .enabled {\\n  color: #32cd32; }\\n  .disabled {\\n  color: #f44366; }\\n  .manual-entries-allowed {\\n  color: #32cd32; }\\n  .manual-entries-not-allowed {\\n  color: #f44366; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvY2hhcnQtb2YtYWNjb3VudHMvY2hhcnQtb2YtYWNjb3VudHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7RUFEYjtJQUlJLGVBQWUsRUFBQTtFQUluQjs7RUFHSSxhQUFhO0VBQ2IsZ0JBQWdCO0VBQ2hCLHFCQUFxQixFQUFBO0VBTHpCO0VBVU0sZUFBZSxFQUFBO0VBVnJCO0VBZUksYUFBYSxFQUFBO0VBSWpCO0VBRUksY0FBYztFQUNkLHFCQUFxQixFQUFBO0VBSHpCO0lBTU0sZ0JBQWdCLEVBQUE7RUFNdEI7RUFDRSxjQUFjLEVBQUE7RUFHaEI7RUFDRSxjQUFjLEVBQUE7RUFHaEI7RUFDRSxjQUFjLEVBQUE7RUFHaEI7RUFDRSxjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hY2NvdW50aW5nL2NoYXJ0LW9mLWFjY291bnRzL2NoYXJ0LW9mLWFjY291bnRzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcblxuICAuc2VsZWN0LXJvdzpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG59XG5cbi5nbC1hY2NvdW50LXRyZWUge1xuICB1bCxcbiAgbGkge1xuICAgIG1hcmdpbi10b3A6IDA7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIH1cblxuICBsaSB7XG4gICAgc3BhbiB7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgfVxuICB9XG5cbiAgLmdsLWFjY291bnQtdHJlZS1pbnZpc2libGUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxuLmNvbnRlbnQge1xuICBkaXYge1xuICAgIG1hcmdpbjogMXJlbSAwO1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcblxuICAgICYuaGVhZGVyIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgfVxuICB9XG59XG5cbi8vIFRPRE86IENPTkZJR1VSRSBUSEVTRSBDTEFTU0VTIEdMT0JBTExZXG4uZW5hYmxlZCB7XG4gIGNvbG9yOiAjMzJjZDMyO1xufVxuXG4uZGlzYWJsZWQge1xuICBjb2xvcjogI2Y0NDM2Njtcbn1cblxuLm1hbnVhbC1lbnRyaWVzLWFsbG93ZWQge1xuICBjb2xvcjogIzMyY2QzMjtcbn1cblxuLm1hbnVhbC1lbnRyaWVzLW5vdC1hbGxvd2VkIHtcbiAgY29sb3I6ICNmNDQzNjY7XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, ViewChild, OnInit, AfterViewInit } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource, MatTreeNestedDataSource } from '@angular/material';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/** Custom Models */\nimport { GLAccountNode } from './gl-account-node.model';\n\n/** Custom Services */\nimport { GlAccountTreeService } from './gl-account-tree.service';\n\n/**\n * Chart of accounts component.\n */\n@Component({\n  selector: 'mifosx-chart-of-accounts',\n  templateUrl: './chart-of-accounts.component.html',\n  styleUrls: ['./chart-of-accounts.component.scss']\n})\nexport class ChartOfAccountsComponent implements AfterViewInit, OnInit {\n\n  /** Button toggle group form control for type of view. (list/tree) */\n  viewGroup = new FormControl('listView');\n  /** GL Account data. */\n  glAccountData: any;\n  /** Columns to be displayed in chart of accounts table. */\n  displayedColumns: string[] = ['name', 'glCode', 'glAccountType', 'disabled', 'manualEntriesAllowed', 'usedAs'];\n  /** Data source for chart of accounts table. */\n  tableDataSource: MatTableDataSource<any>;\n  /** Nested tree control for chart of accounts tree. */\n  nestedTreeControl: NestedTreeControl<GLAccountNode>;\n  /** Nested tree data source for chart of accounts tree. */\n  nestedTreeDataSource: MatTreeNestedDataSource<GLAccountNode>;\n  /** Selected GL Account. */\n  glAccount: GLAccountNode;\n\n  /** Paginator for chart of accounts table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for chart of accounts table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the gl accounts data from `resolve` and initializes(generates) gl accounts tree.\n   * @param {GlAccountTreeService} glAccountTreeService GL Account tree service.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private glAccountTreeService: GlAccountTreeService,\n              private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { chartOfAccounts: any }) => {\n      this.glAccountData = data.chartOfAccounts;\n      glAccountTreeService.initialize(this.glAccountData);\n    });\n    this.nestedTreeControl = new NestedTreeControl<GLAccountNode>(this._getChildren);\n    this.nestedTreeDataSource = new MatTreeNestedDataSource<GLAccountNode>();\n  }\n\n  /**\n   * Initializes the data source for chart of accounts table and tree.\n   */\n  ngOnInit() {\n    this.tableDataSource = new MatTableDataSource(this.glAccountData);\n    this.glAccountTreeService.treeDataChange.subscribe((glAccountTreeData: GLAccountNode[]) => {\n      this.nestedTreeDataSource.data = glAccountTreeData;\n      this.nestedTreeControl.expand(this.nestedTreeDataSource.data[0]);\n    });\n  }\n\n  /**\n   * Initializes the paginator and sorter for chart of accounts table.\n   */\n  ngAfterViewInit() {\n    this.tableDataSource.paginator = this.paginator;\n    this.tableDataSource.sortingDataAccessor = (glAccount: any, property: any) => {\n      switch (property) {\n        case 'glAccountType': return glAccount.type.value;\n        case 'usedAs': return glAccount.usage.value;\n        default: return glAccount[property];\n      }\n    };\n    this.tableDataSource.sort = this.sort;\n  }\n\n  /**\n   * Filters data in chart of accounts table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.tableDataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * View selected gl account.\n   * @param {GLAccountNode} glAccount GL Account to be viewed.\n   */\n  viewGLAccountNode(glAccount: GLAccountNode) {\n    if (glAccount.glCode) {\n      this.glAccount = glAccount;\n    } else {\n      delete this.glAccount;\n    }\n  }\n\n  /**\n   * Checks if selected node in tree has children.\n   */\n  hasNestedChild = (_: number, node: GLAccountNode) => node.children.length;\n\n  /**\n   * Gets the children of selected node in tree.\n   */\n  private _getChildren = (node: GLAccountNode) => of(node.children);\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Chart of acocunts data resolver.\n */\n@Injectable()\nexport class ChartOfAccountsResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the chart of accounts data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.accountingService.getChartOfAccounts();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/**\n * Chart of accounts template data resolver.\n */\n@Injectable()\nexport class ChartOfAccountsTemplateResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the chart of accounts template data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.accountingService.getChartOfAccountsTemplate();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"glAccountForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Account Type</mat-label>\\n            <mat-select required formControlName=\\\"type\\\">\\n              <mat-option *ngFor=\\\"let accountType of accountTypeData\\\" [value]=\\\"accountType.id\\\">\\n                {{ accountType.value }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"glAccountForm.controls.type.hasError('required')\\\">\\n              Account Type is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Account Name</mat-label>\\n            <input matInput required formControlName=\\\"name\\\">\\n            <mat-error *ngIf=\\\"glAccountForm.controls.name.hasError('required')\\\">\\n              Account Name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Account Usage</mat-label>\\n            <mat-select required formControlName=\\\"usage\\\">\\n              <mat-option *ngFor=\\\"let accountUsage of accountUsageData\\\" [value]=\\\"accountUsage.id\\\">\\n                {{ accountUsage.value }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"glAccountForm.controls.usage.hasError('required')\\\">\\n              Account Usage is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>GL Code</mat-label>\\n            <input matInput required formControlName=\\\"glCode\\\">\\n            <mat-error *ngIf=\\\"glAccountForm.controls.glCode.hasError('required')\\\">\\n              GL Code is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Parent</mat-label>\\n            <mat-select formControlName=\\\"parentId\\\">\\n              <mat-option *ngFor=\\\"let parent of parentData\\\" [value]=\\\"parent.id\\\">\\n                {{ parent.name }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"28%\\\">\\n            <mat-label>Tag</mat-label>\\n            <mat-select formControlName=\\\"tagId\\\">\\n              <mat-option *ngFor=\\\"let tag of tagData\\\" [value]=\\\"tag.id\\\">\\n                {{ tag.name }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <div fxFlex=\\\"18%\\\" class=\\\"manual-entries-allowed-wrapper\\\">\\n            <mat-checkbox labelPosition=\\\"before\\\" required formControlName=\\\"manualEntriesAllowed\\\" class=\\\"manual-entries-allowed\\\">\\n              Manual Entries Allowed\\n            </mat-checkbox>\\n          </div>\\n\\n          <mat-form-field fxFlex=\\\"98%\\\">\\n            <mat-label>Description</mat-label>\\n            <textarea matInput formControlName=\\\"description\\\"></textarea>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"[cancelRoute]\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!glAccountForm.valid\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".manual-entries-allowed-wrapper {\\n  position: relative; }\\n  .manual-entries-allowed-wrapper .manual-entries-allowed {\\n    padding: 0 0 17.5px 0;\\n    position: absolute;\\n    bottom: 0;\\n    right: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvY2hhcnQtb2YtYWNjb3VudHMvY3JlYXRlLWdsLWFjY291bnQvY3JlYXRlLWdsLWFjY291bnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0IsRUFBQTtFQURwQjtJQUlJLHFCQUFxQjtJQUNyQixrQkFBa0I7SUFDbEIsU0FBUztJQUNULFFBQVEsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FjY291bnRpbmcvY2hhcnQtb2YtYWNjb3VudHMvY3JlYXRlLWdsLWFjY291bnQvY3JlYXRlLWdsLWFjY291bnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFudWFsLWVudHJpZXMtYWxsb3dlZC13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gIC5tYW51YWwtZW50cmllcy1hbGxvd2VkIHtcbiAgICBwYWRkaW5nOiAwIDAgMTcuNXB4IDA7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMDtcbiAgICByaWdodDogMDtcbiAgfVxufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/**\n * Create gl account component.\n */\n@Component({\n  selector: 'mifosx-create-gl-account',\n  templateUrl: './create-gl-account.component.html',\n  styleUrls: ['./create-gl-account.component.scss']\n})\nexport class CreateGlAccountComponent implements OnInit {\n\n  /** GL account form. */\n  glAccountForm: FormGroup;\n  /** Chart of accounts data. */\n  chartOfAccountsData: any;\n  /** Account type data. */\n  accountTypeData: any;\n  /** Account usage data. */\n  accountUsageData: any;\n  /** Parent data. */\n  parentData: any;\n  /** Tag data. */\n  tagData: any;\n  /** Account type id. (for creation of sub-ledger account) */\n  accountTypeId: number;\n  /** Parent id. (for creation of sub-ledger account) */\n  parentId: number;\n  /** Cancel route. (depending on creation of gl account or sub-ledger account) */\n  cancelRoute = '../../';\n\n  /**\n   * Retrieves the chart of accounts data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.queryParamMap.subscribe(params => {\n      this.accountTypeId = Number(params.get('accountType'));\n      this.parentId = Number(params.get('parent'));\n      if (this.parentId) {\n        this.cancelRoute = `../view/${this.parentId}`;\n      }\n    });\n\n    this.route.data.subscribe((data: { chartOfAccountsTemplate: any }) => {\n      this.chartOfAccountsData = data.chartOfAccountsTemplate;\n      this.accountTypeData = data.chartOfAccountsTemplate.accountTypeOptions;\n      this.accountUsageData = data.chartOfAccountsTemplate.usageOptions;\n    });\n  }\n\n  /**\n   * Creates and sets gl account form.\n   */\n  ngOnInit() {\n    this.createGlAccountForm();\n    this.setGLAccountForm();\n  }\n\n  /**\n   * Creates gl account form.\n   */\n  createGlAccountForm() {\n    this.glAccountForm = this.formBuilder.group({\n      'type': ['', Validators.required],\n      'name': ['', Validators.required],\n      'usage': ['', Validators.required],\n      'glCode': ['', Validators.required],\n      'parentId': [this.parentId || undefined],\n      'tagId': [''],\n      'manualEntriesAllowed': [true, Validators.required],\n      'description': ['']\n    });\n  }\n\n  /**\n   * Sets gl account form for selected account type.\n   */\n  setGLAccountForm() {\n    this.glAccountForm.get('type').valueChanges.subscribe(accountTypeId => {\n      switch (accountTypeId) {\n        case 1: this.parentData = this.chartOfAccountsData.assetHeaderAccountOptions;\n                this.tagData = this.chartOfAccountsData.allowedAssetsTagOptions;\n        break;\n        case 2: this.parentData = this.chartOfAccountsData.liabilityHeaderAccountOptions;\n                this.tagData = this.chartOfAccountsData.allowedLiabilitiesTagOptions;\n        break;\n        case 3: this.parentData = this.chartOfAccountsData.equityHeaderAccountOptions;\n                this.tagData = this.chartOfAccountsData.allowedEquityTagOptions;\n        break;\n        case 4: this.parentData = this.chartOfAccountsData.incomeHeaderAccountOptions;\n                this.tagData = this.chartOfAccountsData.allowedIncomeTagOptions;\n        break;\n        case 5: this.parentData = this.chartOfAccountsData.expenseHeaderAccountOptions;\n                this.tagData = this.chartOfAccountsData.allowedExpensesTagOptions;\n        break;\n      }\n    });\n\n    this.glAccountForm.get('type').setValue(this.accountTypeId);\n  }\n\n  /**\n   * Submits the gl account form and creates gl account,\n   * if successful redirects to view created account.\n   */\n  submit() {\n    this.accountingService.createGlAccount(this.glAccountForm.value).subscribe((response: any) => {\n      this.router.navigate(['../view', response.resourceId], { relativeTo: this.route });\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"glAccountForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Account Type</mat-label>\\n            <mat-select required formControlName=\\\"type\\\">\\n              <mat-option *ngFor=\\\"let accountType of accountTypeData\\\" [value]=\\\"accountType.id\\\">\\n                {{ accountType.value }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"glAccountForm.controls.type.hasError('required')\\\">\\n              Account Type is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Account Name</mat-label>\\n            <input matInput required formControlName=\\\"name\\\">\\n            <mat-error *ngIf=\\\"glAccountForm.controls.name.hasError('required')\\\">\\n              Account Name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Account Usage</mat-label>\\n            <mat-select required formControlName=\\\"usage\\\">\\n              <mat-option *ngFor=\\\"let accountUsage of accountUsageData\\\" [value]=\\\"accountUsage.id\\\">\\n                {{ accountUsage.value }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"glAccountForm.controls.usage.hasError('required')\\\">\\n              Account Usage is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>GL Code</mat-label>\\n            <input matInput required formControlName=\\\"glCode\\\">\\n            <mat-error *ngIf=\\\"glAccountForm.controls.glCode.hasError('required')\\\">\\n              GL Code is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Parent</mat-label>\\n            <mat-select formControlName=\\\"parentId\\\">\\n              <mat-option *ngFor=\\\"let parent of parentData\\\" [value]=\\\"parent.id\\\">\\n                {{ parent.name }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"28%\\\">\\n            <mat-label>Tag</mat-label>\\n            <mat-select formControlName=\\\"tagId\\\">\\n              <mat-option *ngFor=\\\"let tag of tagData\\\" [value]=\\\"tag.id\\\">\\n                {{ tag.name }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <div fxFlex=\\\"18%\\\" class=\\\"manual-entries-allowed-wrapper\\\">\\n            <mat-checkbox labelPosition=\\\"before\\\" required formControlName=\\\"manualEntriesAllowed\\\" class=\\\"manual-entries-allowed\\\">\\n              Manual Entries Allowed\\n            </mat-checkbox>\\n          </div>\\n\\n          <mat-form-field fxFlex=\\\"98%\\\">\\n            <mat-label>Description</mat-label>\\n            <textarea matInput formControlName=\\\"description\\\"></textarea>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"glAccountForm.pristine\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".manual-entries-allowed-wrapper {\\n  position: relative; }\\n  .manual-entries-allowed-wrapper .manual-entries-allowed {\\n    padding: 0 0 17.5px 0;\\n    position: absolute;\\n    bottom: 0;\\n    right: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvY2hhcnQtb2YtYWNjb3VudHMvZWRpdC1nbC1hY2NvdW50L2VkaXQtZ2wtYWNjb3VudC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQixFQUFBO0VBRHBCO0lBSUkscUJBQXFCO0lBQ3JCLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsUUFBUSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvYWNjb3VudGluZy9jaGFydC1vZi1hY2NvdW50cy9lZGl0LWdsLWFjY291bnQvZWRpdC1nbC1hY2NvdW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hbnVhbC1lbnRyaWVzLWFsbG93ZWQtd3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAubWFudWFsLWVudHJpZXMtYWxsb3dlZCB7XG4gICAgcGFkZGluZzogMCAwIDE3LjVweCAwO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDA7XG4gICAgcmlnaHQ6IDA7XG4gIH1cbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/**\n * Edit gl account component.\n */\n@Component({\n  selector: 'mifosx-edit-gl-account',\n  templateUrl: './edit-gl-account.component.html',\n  styleUrls: ['./edit-gl-account.component.scss']\n})\nexport class EditGlAccountComponent implements OnInit {\n\n  /** GL account form. */\n  glAccountForm: FormGroup;\n  /** GL account and chart of accounts data. */\n  glAccount: any;\n  /** Account type data. */\n  accountTypeData: any;\n  /** Account usage data. */\n  accountUsageData: any;\n  /** Parent data. */\n  parentData: any;\n  /** Tag data. */\n  tagData: any;\n\n  /**\n   * Retrieves the chart of accounts data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: { glAccountAndChartOfAccountsTemplate: any }) => {\n      this.glAccount = data.glAccountAndChartOfAccountsTemplate;\n    });\n  }\n\n  /**\n   * Creates and sets gl account form.\n   */\n  ngOnInit() {\n    this.createGlAccountForm();\n    this.setGLAccountForm();\n  }\n\n  /**\n   * Creates gl account form.\n   */\n  createGlAccountForm() {\n    this.glAccountForm = this.formBuilder.group({\n      'type': ['', Validators.required],\n      'name': [this.glAccount.name, Validators.required],\n      'usage': [this.glAccount.usage.id, Validators.required],\n      'glCode': [this.glAccount.glCode, Validators.required],\n      'parentId': [this.glAccount.parentId],\n      'tagId': [this.glAccount.tagId.id],\n      'manualEntriesAllowed': [this.glAccount.manualEntriesAllowed, Validators.required],\n      'description': [this.glAccount.description]\n    });\n  }\n\n  /**\n   * Sets gl account form for selected account type.\n   */\n  setGLAccountForm() {\n    this.accountTypeData = this.glAccount.accountTypeOptions;\n    this.accountUsageData = this.glAccount.usageOptions;\n    this.glAccountForm.get('type').valueChanges.subscribe(accountTypeId => {\n      switch (accountTypeId) {\n        case 1: this.parentData = this.glAccount.assetHeaderAccountOptions;\n                this.tagData = this.glAccount.allowedAssetsTagOptions;\n        break;\n        case 2: this.parentData = this.glAccount.liabilityHeaderAccountOptions;\n                this.tagData = this.glAccount.allowedLiabilitiesTagOptions;\n        break;\n        case 3: this.parentData = this.glAccount.equityHeaderAccountOptions;\n                this.tagData = this.glAccount.allowedEquityTagOptions;\n        break;\n        case 4: this.parentData = this.glAccount.incomeHeaderAccountOptions;\n                this.tagData = this.glAccount.allowedIncomeTagOptions;\n        break;\n        case 5: this.parentData = this.glAccount.expenseHeaderAccountOptions;\n                this.tagData = this.glAccount.allowedExpensesTagOptions;\n        break;\n      }\n    });\n\n    this.glAccountForm.get('type').setValue(this.glAccount.type.id);\n  }\n\n  /**\n   * Submits the gl account form and updates gl account,\n   * if successful redirects to view updated account.\n   */\n  submit() {\n    this.accountingService.updateGlAccount(this.glAccount.id, this.glAccountForm.value)\n      .subscribe((response: any) => {\n        this.router.navigate(['../../', response.resourceId], { relativeTo: this.route });\n      });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * GL Account and chart of accounts template data resolver.\n */\n@Injectable()\nexport class GlAccountAndChartOfAccountsTemplateResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the gl account and chart of accounts template data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const id = route.paramMap.get('id');\n\n    return this.accountingService.getGlAccount(id, true).pipe(\n      map((glAccountData: any) => {\n        let accountOptions = [];\n        switch (glAccountData.type.value) {\n          case 'ASSET': accountOptions = glAccountData.assetHeaderAccountOptions;\n          break;\n          case 'EQUITY': accountOptions = glAccountData.equityHeaderAccountOptions;\n          break;\n          case 'EXPENSE': accountOptions = glAccountData.expenseHeaderAccountOptions;\n          break;\n          case 'INCOME': accountOptions = glAccountData.incomeHeaderAccountOptions;\n          break;\n          case 'LIABILITY': accountOptions = glAccountData.liabilityHeaderAccountOptions;\n          break;\n        }\n        glAccountData.parent = accountOptions.find((accountOption: any) => {\n          return accountOption.id === glAccountData.parentId;\n        });\n        return glAccountData;\n      })\n    );\n  }\n\n}\n","/**\n * GL Account Node model.\n */\nexport class GLAccountNode {\n\n  /** GL Account Node children. */\n  children: GLAccountNode[];\n\n  name: string;\n  glCode: string;\n  type: string;\n  usage: string;\n  manualEntriesAllowed: boolean;\n  description: string;\n\n  constructor(name: string,\n              glCode: string = '',\n              type: string = '',\n              usage: string = '',\n              manualEntriesAllowed: boolean = false,\n              description: string = '') {\n    this.name = name;\n    this.glCode = glCode;\n    this.type = type;\n    this.usage = usage;\n    this.manualEntriesAllowed = manualEntriesAllowed;\n    this.description = description;\n    this.children = [];\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\n\n/** rxjs Imports */\nimport { BehaviorSubject } from 'rxjs';\n\n/** Custom Components */\nimport { GLAccountNode } from './gl-account-node.model';\n\n/**\n * GL Account tree service.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlAccountTreeService {\n\n  /** GL Account data. */\n  glAccountData: any;\n  /** Chart of accounts tree data behavior subject to represent chart of accounts tree nodes. */\n  treeDataChange = new BehaviorSubject<GLAccountNode[]>([]);\n\n  /**\n   * Gets the chart of accounts tree nodes.\n   */\n  get treeData(): GLAccountNode[] { return this.treeDataChange.value; }\n\n  constructor() {  }\n\n  /**\n   * Builds the chart of accounts tree and emits the value.\n   * @param {any} glAccountData Chart of accounts data.\n   */\n  initialize(glAccountData: any) {\n    const treeData = this.buildGLAccountTree(glAccountData);\n    this.treeDataChange.next(treeData);\n  }\n\n  /**\n   * Builds and returns the chart of accounts tree.\n   * @param {any} glAccountData Chart of accounts data.\n   * @returns {GLAccountNode[]} Chart of accounts tree nodes.\n   */\n  buildGLAccountTree(glAccountData: any): GLAccountNode[] {\n    const glAccountTree: GLAccountNode[] = [];\n\n    // Header nodes\n    glAccountTree.push(new GLAccountNode('GL ACCOUNTS'));\n    glAccountTree[0].children.push(new GLAccountNode('ASSET'));\n    glAccountTree[0].children.push(new GLAccountNode('EQUITY'));\n    glAccountTree[0].children.push(new GLAccountNode('EXPENSE'));\n    glAccountTree[0].children.push(new GLAccountNode('INCOME'));\n    glAccountTree[0].children.push(new GLAccountNode('LIABILITY'));\n\n    // Sort by parent id (so that child nodes can be added properly)\n    glAccountData.sort((glAccountOne: any, glAccountTwo: any) => {\n      if (!glAccountOne.parentId) {\n        glAccountOne.parentId = 0;\n      }\n      return glAccountOne.parentId - glAccountTwo.parentId;\n    });\n\n    const glAccounts: GLAccountNode[] = [];\n\n    // Add gl accounts to any array where index for each is denoted by its id\n    for (const glAccount of glAccountData) {\n      glAccounts[glAccount.id] =\n        new GLAccountNode(glAccount.name, glAccount.glCode, glAccount.type.value, glAccount.usage.value, glAccount.manualEntriesAllowed, glAccount.description);\n    }\n\n    // Construct gl account tree by adding all nodes belonging to headers (with parent id = 0) by their type,\n    // and rest as children to respective parent nodes.\n    for (const glAccount of glAccountData) {\n      if (glAccount.parentId === 0) {\n        if (glAccount.type.value === 'ASSET') {\n          glAccountTree[0].children[0].children.push(glAccounts[glAccount.id]);\n        } else if (glAccount.type.value === 'EQUITY') {\n          glAccountTree[0].children[1].children.push(glAccounts[glAccount.id]);\n        } else if (glAccount.type.value === 'EXPENSE') {\n          glAccountTree[0].children[2].children.push(glAccounts[glAccount.id]);\n        } else if (glAccount.type.value === 'INCOME') {\n          glAccountTree[0].children[3].children.push(glAccounts[glAccount.id]);\n        } else if (glAccount.type.value === 'LIABILITY') {\n          glAccountTree[0].children[4].children.push(glAccounts[glAccount.id]);\n        }\n      } else {\n        glAccounts[glAccount.parentId].children.push(glAccounts[glAccount.id]);\n      }\n    }\n\n    return glAccountTree;\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" class=\\\"container m-b-20\\\">\\n  <button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"glAccount.usage.value === 'HEADER'\\\" [routerLink]=\\\"['/accounting/chart-of-accounts/gl-accounts/create']\\\" [queryParams]=\\\"{ parent: glAccount.id, accountType: glAccount.type.id }\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Subledger Account\\n  </button>\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['edit']\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n  <button mat-raised-button color=\\\"warn\\\" *ngIf=\\\"!glAccount.disabled\\\" (click)=\\\"changeGlAccountState()\\\">\\n    <fa-icon icon=\\\"lock\\\"></fa-icon>&nbsp;&nbsp;\\n    Disable\\n  </button>\\n  <button mat-raised-button color=\\\"accent\\\" *ngIf=\\\"glAccount.disabled\\\" (click)=\\\"changeGlAccountState()\\\">\\n    <fa-icon icon=\\\"lock-open\\\"></fa-icon>&nbsp;&nbsp;\\n    Enable\\n  </button>\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteGlAccount()\\\">\\n    <fa-icon icon=\\\"trash\\\"></fa-icon>&nbsp;&nbsp;\\n    Delete\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-content>\\n\\n      <div fxLayout=\\\"row wrap\\\" class=\\\"content\\\">\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Account Type\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ glAccount.type?.value }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          GL Code\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ glAccount.glCode }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\" *ngIf=\\\"glAccount.parent\\\">\\n          Parent Account Name\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" *ngIf=\\\"glAccount.parent\\\">\\n          {{ glAccount.parent.name }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\" *ngIf=\\\"glAccount.tagId.id\\\">\\n          Tag\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" *ngIf=\\\"glAccount.tagId.id\\\">\\n          {{ glAccount.tagId.name }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Account Usage\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ glAccount.usage?.value }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Manual Entries Allowed\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ glAccount.manualEntriesAllowed }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\" *ngIf=\\\"glAccount.description\\\">\\n          Description\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" *ngIf=\\\"glAccount.description\\\">\\n          {{ glAccount.description }}\\n        </div>\\n\\n      </div>\\n\\n    </mat-card-content>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n  .container .content div {\\n    margin: 1rem 0;\\n    word-wrap: break-word; }\\n  .container .content div.header {\\n      font-weight: 500; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvY2hhcnQtb2YtYWNjb3VudHMvdmlldy1nbC1hY2NvdW50L3ZpZXctZ2wtYWNjb3VudC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQixFQUFBO0VBRGxCO0lBS00sY0FBYztJQUNkLHFCQUFxQixFQUFBO0VBTjNCO01BU1EsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hY2NvdW50aW5nL2NoYXJ0LW9mLWFjY291bnRzL3ZpZXctZ2wtYWNjb3VudC92aWV3LWdsLWFjY291bnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAzN3JlbTtcblxuICAuY29udGVudCB7XG4gICAgZGl2IHtcbiAgICAgIG1hcmdpbjogMXJlbSAwO1xuICAgICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuXG4gICAgICAmLmhlYWRlciB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\n\n/** Custom Components */\nimport { DeleteDialogComponent } from '../../../shared/delete-dialog/delete-dialog.component';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/**\n * View gl account component.\n */\n@Component({\n  selector: 'mifosx-view-gl-account',\n  templateUrl: './view-gl-account.component.html',\n  styleUrls: ['./view-gl-account.component.scss']\n})\nexport class ViewGlAccountComponent implements OnInit {\n\n  /** GL Account. */\n  glAccount: any;\n\n  /**\n   * Retrieves the gl account data from `resolve`.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   * @param {MatDialog} dialog Dialog reference.\n   */\n  constructor(private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router,\n              public dialog: MatDialog) {\n    this.route.data.subscribe((data: { glAccountAndChartOfAccountsTemplate: any }) => {\n      this.glAccount = data.glAccountAndChartOfAccountsTemplate;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Deletes the gl account and redirects to chart of accounts.\n   */\n  deleteGlAccount() {\n    const deleteGlAccountDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `gl account ${this.glAccount.id}` }\n    });\n    deleteGlAccountDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.accountingService.deleteGlAccount(this.glAccount.id)\n          .subscribe(() => {\n            this.router.navigate(['/accounting/chart-of-accounts']);\n          });\n      }\n    });\n  }\n\n  /**\n   * Changes state of gl account. (enabled/disabled)\n   */\n  changeGlAccountState() {\n    this.accountingService.updateGlAccount(this.glAccount.id, { disabled: !this.glAccount.disabled })\n      .subscribe((response: any) => {\n        this.glAccount.disabled = response.changes.disabled;\n      });\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['create']\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Closure\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\" fxLayout=\\\"row\\\">\\n  <mat-form-field fxFlex>\\n    <mat-label>Office Name</mat-label>\\n    <input matInput [formControl]=\\\"officeName\\\" [matAutocomplete]=\\\"officeNameAutocomplete\\\">\\n  </mat-form-field>\\n</div>\\n\\n<!-- Autocomplete data -->\\n<mat-autocomplete autoActiveFirstOption #officeNameAutocomplete=\\\"matAutocomplete\\\">\\n  <mat-option *ngFor=\\\"let office of filteredOfficeData | async\\\" [value]=\\\"office.name\\\">\\n    {{ office.name }}\\n  </mat-option>\\n</mat-autocomplete>\\n\\n<div class=\\\"container\\\">\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"officeName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Office </th>\\n        <td mat-cell *matCellDef=\\\"let glAccountClosure\\\"> {{ glAccountClosure.officeName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"closingDate\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Closure Date </th>\\n        <td mat-cell *matCellDef=\\\"let glAccountClosure\\\"> {{ glAccountClosure.closingDate }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"comments\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Comments </th>\\n        <td mat-cell *matCellDef=\\\"let glAccountClosure\\\"> {{ glAccountClosure.comments }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"createdByUsername\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Created By </th>\\n        <td mat-cell *matCellDef=\\\"let glAccountClosure\\\">{{ glAccountClosure.createdByUsername }}</td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['view', row.id]\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvY2xvc2luZy1lbnRyaWVzL2Nsb3NpbmctZW50cmllcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FjY291bnRpbmcvY2xvc2luZy1lbnRyaWVzL2Nsb3NpbmctZW50cmllcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { startWith, map } from 'rxjs/operators';\n\n/**\n * Closing entries component.\n */\n@Component({\n  selector: 'mifosx-closing-entries',\n  templateUrl: './closing-entries.component.html',\n  styleUrls: ['./closing-entries.component.scss']\n})\nexport class ClosingEntriesComponent implements OnInit {\n\n  /** Columns to be displayed in closing entries table. */\n  displayedColumns: string[] = ['officeName', 'closingDate', 'comments', 'createdByUsername'];\n  /** Data source for closing entries table. */\n  dataSource: MatTableDataSource<any>;\n  /** Office name filter form control. */\n  officeName = new FormControl();\n  /** Office data. */\n  officeData: any;\n  /** Filtered office data for autocomplete. */\n  filteredOfficeData: any;\n  /** GL Account closure data. */\n  glAccountClosureData: any;\n\n  /** Paginator for closing entries table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for closing entries table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the offices and gl account closures data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: {\n      offices: any,\n      glAccountClosures: any\n    }) => {\n      this.officeData = data.offices;\n      this.glAccountClosureData = data.glAccountClosures;\n    });\n  }\n\n  /**\n   * Sets the filter and closing entries table.\n   */\n  ngOnInit() {\n    this.applyFilter();\n    this.setFilteredOffices();\n    this.setAccountingClosures();\n  }\n\n  /**\n   * Filters data in closing entries table based on office name.\n   */\n  applyFilter() {\n    this.officeName.valueChanges.subscribe((filterValue: string) => {\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n    });\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for closing entries table.\n   */\n  setAccountingClosures() {\n    this.dataSource = new MatTableDataSource(this.glAccountClosureData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n   * Sets filtered offices for autocomplete.\n   */\n  setFilteredOffices() {\n    this.filteredOfficeData = this.officeName.valueChanges\n    .pipe(\n      startWith(''),\n      map((office: any) => typeof office === 'string' ? office : office.name),\n      map((officeName: string) => officeName ? this.filterOfficeAutocompleteData(officeName) : this.officeData)\n    );\n  }\n\n  /**\n   * Filters offices.\n   * @param {string} officeName Office name to filter office by.\n   * @returns {any} Filtered offices.\n   */\n  private filterOfficeAutocompleteData(officeName: string): any {\n    return this.officeData.filter((office: any) => office.name.toLowerCase().includes(officeName.toLowerCase()));\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Closing entries data resolver.\n */\n@Injectable()\nexport class ClosingEntriesResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the gl account closures data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.accountingService.getAccountingClosures();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Closing entry data resolver.\n */\n@Injectable()\nexport class ClosingEntryResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the gl account closure data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const glAccountClosureId = route.paramMap.get('id');\n    return this.accountingService.getAccountingClosure(glAccountClosureId);\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"accountingClosureForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field>\\n            <mat-label>Office</mat-label>\\n            <mat-select required formControlName=\\\"officeId\\\">\\n              <mat-option *ngFor=\\\"let office of officeData\\\" [value]=\\\"office.id\\\">\\n                {{ office.name }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"accountingClosureForm.controls.officeId.hasError('required')\\\">\\n              Office is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Closing Date</mat-label>\\n            <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"closingDatePicker\\\" required formControlName=\\\"closingDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"closingDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #closingDatePicker></mat-datepicker>\\n            <mat-error *ngIf=\\\"accountingClosureForm.controls.closingDate.hasError('required')\\\">\\n              Closing Date is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Comments</mat-label>\\n            <textarea matInput formControlName=\\\"comments\\\"></textarea>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!accountingClosureForm.valid\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvY2xvc2luZy1lbnRyaWVzL2NyZWF0ZS1jbG9zdXJlL2NyZWF0ZS1jbG9zdXJlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hY2NvdW50aW5nL2Nsb3NpbmctZW50cmllcy9jcmVhdGUtY2xvc3VyZS9jcmVhdGUtY2xvc3VyZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDM3cmVtO1xufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/**\n * Create closure component.\n */\n@Component({\n  selector: 'mifosx-create-closure',\n  templateUrl: './create-closure.component.html',\n  styleUrls: ['./create-closure.component.scss']\n})\nexport class CreateClosureComponent implements OnInit {\n\n  /** Minimum closing date allowed. */\n  minDate = new Date(2000, 0, 1);\n  /** Maximum closing date allowed. */\n  maxDate = new Date();\n  /** Accounting closure form. */\n  accountingClosureForm: FormGroup;\n  /** Office data. */\n  officeData: any;\n\n  /**\n   * Retrieves the offices data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: { offices: any }) => {\n      this.officeData = data.offices;\n    });\n  }\n\n  /**\n   * Creates the accounting closure form.\n   */\n  ngOnInit() {\n    this.createAccountingClosureForm();\n  }\n\n  /**\n   * Creates the accounting closure form.\n   */\n  createAccountingClosureForm() {\n    this.accountingClosureForm = this.formBuilder.group({\n      'officeId': ['', Validators.required],\n      'closingDate': ['', Validators.required],\n      'comments': ['']\n    });\n  }\n\n  /**\n   * Submits the accounting closure form and creates accounting closure,\n   * if successful redirects to view created closure.\n   */\n  submit() {\n    const accountingClosure = this.accountingClosureForm.value;\n    // TODO: Update once language and date settings are setup\n    accountingClosure.locale = 'en';\n    accountingClosure.dateFormat = 'yyyy-MM-dd';\n    if (accountingClosure.closingDate instanceof Date) {\n      let day = accountingClosure.closingDate.getDate();\n      let month = accountingClosure.closingDate.getMonth() + 1;\n      const year = accountingClosure.closingDate.getFullYear();\n      if (day < 10) {\n        day = `0${day}`;\n      }\n      if (month < 10) {\n        month = `0${month}`;\n      }\n      accountingClosure.closingDate = `${year}-${month}-${day}`;\n    }\n    this.accountingService.createAccountingClosure(accountingClosure).subscribe((response: any) => {\n      this.router.navigate(['../view', response.resourceId], { relativeTo: this.route });\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"accountingClosureForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field>\\n            <mat-label>Office</mat-label>\\n            <mat-select required formControlName=\\\"officeId\\\">\\n              <mat-option *ngFor=\\\"let office of officeData\\\" [value]=\\\"office.id\\\">\\n                {{ office.name }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Closing Date</mat-label>\\n            <input matInput [matDatepicker]=\\\"closingDatePicker\\\" required formControlName=\\\"closingDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"closingDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #closingDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Comments</mat-label>\\n            <textarea matInput formControlName=\\\"comments\\\"></textarea>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"accountingClosureForm.pristine\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvY2xvc2luZy1lbnRyaWVzL2VkaXQtY2xvc3VyZS9lZGl0LWNsb3N1cmUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FjY291bnRpbmcvY2xvc2luZy1lbnRyaWVzL2VkaXQtY2xvc3VyZS9lZGl0LWNsb3N1cmUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAzN3JlbTtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/**\n * Edit closure component.\n */\n@Component({\n  selector: 'mifosx-edit-closure',\n  templateUrl: './edit-closure.component.html',\n  styleUrls: ['./edit-closure.component.scss']\n})\nexport class EditClosureComponent implements OnInit {\n\n  /** Accounting closure form. */\n  accountingClosureForm: FormGroup;\n  /** GL Account closure. */\n  glAccountClosure: any;\n  /** Office data. */\n  officeData: any;\n\n  /**\n   * Retrieves the gl account closure data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: { glAccountClosure: any }) => {\n      this.glAccountClosure = data.glAccountClosure;\n    });\n  }\n\n  /**\n   * Creates and sets accounting closure form.\n   */\n  ngOnInit() {\n    this.createAccountingClosureForm();\n    this.setAccountingClosure();\n  }\n\n  /**\n   * Creates accounting closure form.\n   */\n  createAccountingClosureForm() {\n    this.accountingClosureForm = this.formBuilder.group({\n      'officeId': [{ value: '', disabled: true }, Validators.required],\n      'closingDate': [{ value: '', disabled: true }, Validators.required],\n      'comments': ['']\n    });\n  }\n\n  /**\n   * Sets accounting closure form.\n   */\n  setAccountingClosure() {\n    this.officeData = [{ id: this.glAccountClosure.officeId, name: this.glAccountClosure.officeName }];\n    this.accountingClosureForm.get('officeId').setValue(this.glAccountClosure.officeId);\n    this.accountingClosureForm.get('closingDate').setValue(new Date(this.glAccountClosure.closingDate));\n    this.accountingClosureForm.get('comments').setValue(this.glAccountClosure.comments);\n  }\n\n\n  /**\n   * Submits the accounting closure form and updates accounting closure,\n   * if successful redirects to view updated closure.\n   */\n  submit() {\n    this.accountingService.updateAccountingClosure(this.glAccountClosure.id,\n      { comments: this.accountingClosureForm.value.comments })\n      .subscribe((response: any) => {\n        this.router.navigate(['../../', response.resourceId], { relativeTo: this.route });\n      });\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" class=\\\"container m-b-20\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['edit']\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteAccountingClosure()\\\">\\n    <fa-icon icon=\\\"trash\\\"></fa-icon>&nbsp;&nbsp;\\n    Delete\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\" *ngIf=\\\"glAccountClosure\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-content>\\n\\n      <div fxLayout=\\\"row wrap\\\" class=\\\"content\\\">\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Office\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ glAccountClosure.officeName }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Closure Date\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ glAccountClosure.closingDate }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Closed By\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ glAccountClosure.createdByUsername }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Updated By\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ glAccountClosure.lastUpdatedByUsername }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Updated On\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ glAccountClosure.lastUpdatedDate }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Closure Creation Date\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ glAccountClosure.createdDate }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Comments\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ glAccountClosure.comments }}\\n        </div>\\n\\n      </div>\\n\\n    </mat-card-content>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n  .container .content div {\\n    margin: 1rem 0;\\n    word-wrap: break-word; }\\n  .container .content div.header {\\n      font-weight: 500; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvY2xvc2luZy1lbnRyaWVzL3ZpZXctY2xvc3VyZS92aWV3LWNsb3N1cmUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0IsRUFBQTtFQURsQjtJQUtNLGNBQWM7SUFDZCxxQkFBcUIsRUFBQTtFQU4zQjtNQVNRLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvYWNjb3VudGluZy9jbG9zaW5nLWVudHJpZXMvdmlldy1jbG9zdXJlL3ZpZXctY2xvc3VyZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDM3cmVtO1xuXG4gIC5jb250ZW50IHtcbiAgICBkaXYge1xuICAgICAgbWFyZ2luOiAxcmVtIDA7XG4gICAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG5cbiAgICAgICYuaGVhZGVyIHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/** Custom Components */\nimport { DeleteDialogComponent } from '../../../shared/delete-dialog/delete-dialog.component';\n\n/**\n * View closure component.\n */\n@Component({\n  selector: 'mifosx-view-closure',\n  templateUrl: './view-closure.component.html',\n  styleUrls: ['./view-closure.component.scss']\n})\nexport class ViewClosureComponent implements OnInit {\n\n  /** GL Account closure. */\n  glAccountClosure: any;\n\n  /**\n   * Retrieves the gl account closure data from `resolve`.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   * @param {MatDialog} dialog Dialog reference.\n   */\n  constructor(private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router,\n              public dialog: MatDialog) {\n    this.route.data.subscribe((data: { glAccountClosure: any }) => {\n      this.glAccountClosure = data.glAccountClosure;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Deletes the gl account closure and redirects to closing entries.\n   */\n  deleteAccountingClosure() {\n    const deleteAccountingClosureDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `accounting closure ${this.glAccountClosure.id}` }\n    });\n    deleteAccountingClosureDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.accountingService.deleteAccountingClosure(this.glAccountClosure.id)\n          .subscribe(() => {\n            this.router.navigate(['/accounting/closing-entries']);\n          });\n      }\n    });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Accounting rules associations data resolver.\n */\n@Injectable()\nexport class AccountingRulesAssociationsResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the accounting rules associations data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.accountingService.getAccountingRules(true);\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Currencies data resolver.\n */\n@Injectable()\nexport class CurrenciesResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the currencies data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.accountingService.getCurrencies();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * GL accounts data resolver.\n */\n@Injectable()\nexport class GlAccountsResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the gl accounts data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.accountingService.getGlAccounts();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Loan products data resolver.\n */\n@Injectable()\nexport class LoanProductsResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the loan products data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.accountingService.getLoanProducts();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Offices data resolver.\n */\n@Injectable()\nexport class OfficesResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the offices data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.accountingService.getOffices();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Payment types data resolver.\n */\n@Injectable()\nexport class PaymentTypesResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the payment types data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.accountingService.getPaymentTypes();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Provisioning categories data resolver.\n */\n@Injectable()\nexport class ProvisioningCategoriesResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the Provisioning categories data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.accountingService.getProvisioningCategories();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"journalEntryForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Office</mat-label>\\n            <mat-select required formControlName=\\\"officeId\\\">\\n              <mat-option *ngFor=\\\"let office of officeData\\\" [value]=\\\"office.id\\\">\\n                {{ office.name }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"journalEntryForm.controls.officeId.hasError('required')\\\">\\n              Office is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Currency</mat-label>\\n            <mat-select required formControlName=\\\"currencyCode\\\">\\n              <mat-option *ngFor=\\\"let currency of currencyData\\\" [value]=\\\"currency.code\\\">\\n                {{ currency.displayLabel }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"journalEntryForm.controls.currencyCode.hasError('required')\\\">\\n              Currency is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\" formArrayName=\\\"debits\\\"\\n            *ngFor=\\\"let debit of debits.controls; let i = index;\\\">\\n\\n            <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" [formGroupName]=\\\"i\\\">\\n\\n              <mat-form-field fxFlex=\\\"48%\\\">\\n                <mat-label>Affected GL Entry (Debit)</mat-label>\\n                <mat-select required formControlName=\\\"glAccountId\\\">\\n                  <mat-option *ngFor=\\\"let affectedGLEntryDebit of glAccountData\\\" [value]=\\\"affectedGLEntryDebit.id\\\">\\n                    {{ affectedGLEntryDebit.name + ' (' + affectedGLEntryDebit.glCode + ')' }}\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"debits.at(i).controls.glAccountId.hasError('required')\\\">\\n                  Affected GL Entry (Debit) is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n\\n              <mat-form-field fxFlex=\\\"43%\\\">\\n                <mat-label>Debit Amount</mat-label>\\n                <input type=\\\"number\\\" matInput required formControlName=\\\"amount\\\">\\n                <mat-error *ngIf=\\\"debits.at(i).controls.amount.hasError('required')\\\">\\n                  Debit Amount is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n\\n              <span fxFlex>\\n                <button *ngIf=\\\"i !== 0\\\" type=\\\"button\\\" mat-icon-button (click)=\\\"removeAffectedGLEntry(debits, i)\\\">\\n                  <fa-icon icon=\\\"minus-circle\\\" size=\\\"lg\\\"></fa-icon>\\n                </button>\\n                <button *ngIf=\\\"i === 0\\\" type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addAffectedGLEntry(debits)\\\">\\n                  <fa-icon icon=\\\"plus-circle\\\" size=\\\"lg\\\"></fa-icon>\\n                </button>\\n              </span>\\n\\n            </div>\\n\\n          </div>\\n\\n          <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\" formArrayName=\\\"credits\\\"\\n            *ngFor=\\\"let credit of credits.controls; let i = index;\\\">\\n\\n            <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" [formGroupName]=\\\"i\\\">\\n\\n              <mat-form-field fxFlex=\\\"48%\\\">\\n                <mat-label>Affected GL Entry (Credit)</mat-label>\\n                <mat-select required formControlName=\\\"glAccountId\\\">\\n                  <mat-option *ngFor=\\\"let affectedGLEntryCredit of glAccountData\\\" [value]=\\\"affectedGLEntryCredit.id\\\">\\n                    {{ affectedGLEntryCredit.name + ' (' + affectedGLEntryCredit.glCode + ')' }}\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"credits.at(i).controls.glAccountId.hasError('required')\\\">\\n                  Affected GL Entry (Credit) is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n\\n              <mat-form-field fxFlex=\\\"43%\\\">\\n                <mat-label>Credit Amount</mat-label>\\n                <input type=\\\"number\\\" matInput required formControlName=\\\"amount\\\">\\n                <mat-error *ngIf=\\\"credits.at(i).controls.amount.hasError('required')\\\">\\n                  Credit Amount is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n\\n              <span fxFlex>\\n                <button *ngIf=\\\"i !== 0\\\" type=\\\"button\\\" mat-icon-button (click)=\\\"removeAffectedGLEntry(credits, i)\\\">\\n                  <fa-icon icon=\\\"minus-circle\\\" size=\\\"lg\\\"></fa-icon>\\n                </button>\\n                <button *ngIf=\\\"i === 0\\\" type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addAffectedGLEntry(credits)\\\">\\n                  <fa-icon icon=\\\"plus-circle\\\" size=\\\"lg\\\"></fa-icon>\\n                </button>\\n              </span>\\n\\n            </div>\\n\\n          </div>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Reference Number</mat-label>\\n            <input matInput formControlName=\\\"referenceNumber\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Transaction Date</mat-label>\\n            <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"transactionDatePicker\\\" required formControlName=\\\"transactionDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"transactionDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #transactionDatePicker></mat-datepicker>\\n            <mat-error *ngIf=\\\"journalEntryForm.controls.transactionDate.hasError('required')\\\">\\n              Transaction Date is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Payment Type</mat-label>\\n            <mat-select formControlName=\\\"paymentTypeId\\\">\\n              <mat-option *ngFor=\\\"let paymentType of paymentTypeData\\\" [value]=\\\"paymentType.id\\\">\\n                {{ paymentType.name }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Account Number</mat-label>\\n            <input matInput formControlName=\\\"accountNumber\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Cheque Number</mat-label>\\n            <input matInput formControlName=\\\"checkNumber\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Routing Code</mat-label>\\n            <input matInput formControlName=\\\"routingCode\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Receipt Number</mat-label>\\n            <input matInput formControlName=\\\"receiptNumber\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Bank Number</mat-label>\\n            <input matInput formControlName=\\\"bankNumber\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"98%\\\">\\n            <mat-label>Comments</mat-label>\\n            <textarea matInput formControlName=\\\"comments\\\"></textarea>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!journalEntryForm.valid\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnRpbmcvY3JlYXRlLWpvdXJuYWwtZW50cnkvY3JlYXRlLWpvdXJuYWwtZW50cnkuY29tcG9uZW50LnNjc3MifQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Create Journal Entry component.\n */\n@Component({\n  selector: 'mifosx-create-journal-entry',\n  templateUrl: './create-journal-entry.component.html',\n  styleUrls: ['./create-journal-entry.component.scss']\n})\nexport class CreateJournalEntryComponent implements OnInit {\n\n  /** Minimum transaction date allowed. */\n  minDate = new Date(2000, 0, 1);\n  /** Maximum transaction date allowed. */\n  maxDate = new Date();\n  /** Journal entry form. */\n  journalEntryForm: FormGroup;\n  /** Office data. */\n  officeData: any;\n  /** Currency data. */\n  currencyData: any;\n  /** Payment type data. */\n  paymentTypeData: any;\n  /** Gl Account data. */\n  glAccountData: any;\n\n  /**\n   * Retrieves the offices, currencies, payment types and gl accounts data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: {\n        offices: any,\n        currencies: any,\n        paymentTypes: any,\n        glAccounts: any\n      }) => {\n        this.officeData = data.offices;\n        this.currencyData = data.currencies.selectedCurrencyOptions;\n        this.paymentTypeData = data.paymentTypes;\n        this.glAccountData = data.glAccounts;\n      });\n  }\n\n  /**\n   * Creates the journal entry form.\n   */\n  ngOnInit() {\n    this.createJournalEntryForm();\n  }\n\n  /**\n   * Creates the journal entry form.\n   */\n  createJournalEntryForm() {\n    this.journalEntryForm = this.formBuilder.group({\n      'officeId': ['', Validators.required],\n      'currencyCode': ['', Validators.required],\n      'debits': this.formBuilder.array([this.createAffectedGLEntryForm()]),\n      'credits': this.formBuilder.array([this.createAffectedGLEntryForm()]),\n      'referenceNumber': [''],\n      'transactionDate': ['', Validators.required],\n      'paymentTypeId': [''],\n      'accountNumber': [''],\n      'checkNumber': [''],\n      'routingCode': [''],\n      'receiptNumber': [''],\n      'bankNumber': [''],\n      'comments': ['']\n    });\n  }\n\n  /**\n   * Creates the affected gl entry form.\n   * @returns {FormGroup} Affected gl entry form.\n   */\n  createAffectedGLEntryForm(): FormGroup {\n    return this.formBuilder.group({\n      'glAccountId': ['', Validators.required],\n      'amount': ['', Validators.required]\n    });\n  }\n\n  /**\n   * Gets the affected gl entry (debits) form array.\n   * @returns {FormArray} Debits form array.\n   */\n  get debits(): FormArray {\n    return this.journalEntryForm.get('debits') as FormArray;\n  }\n\n  /**\n   * Gets the affected gl entry (credits) form array.\n   * @returns {FormArray} Credits form array.\n   */\n  get credits(): FormArray {\n    return this.journalEntryForm.get('credits') as FormArray;\n  }\n\n  /**\n   * Adds the affected gl entry form to given affected gl entry form array.\n   * @param {FormArray} affectedGLEntryFormArray Given affected gl entry form array (debit/credit).\n   */\n  addAffectedGLEntry(affectedGLEntryFormArray: FormArray) {\n    affectedGLEntryFormArray.push(this.createAffectedGLEntryForm());\n  }\n\n  /**\n   * Removes the affected gl entry form from given affected gl entry form array at given index.\n   * @param {FormArray} affectedGLEntryFormArray Given affected gl entry form array (debit/credit).\n   * @param {number} index Array index from where affected gl entry form needs to be removed.\n   */\n  removeAffectedGLEntry(affectedGLEntryFormArray: FormArray, index: number) {\n    affectedGLEntryFormArray.removeAt(index);\n  }\n\n  /**\n   * Submits the journal entries form and creates journal entry,\n   * if successful redirects to view created transaction.\n   */\n  submit() {\n    const journalEntry = this.journalEntryForm.value;\n    // TODO: Update once language and date settings are setup\n    journalEntry.locale = 'en';\n    journalEntry.dateFormat = 'yyyy-MM-dd';\n    if (journalEntry.transactionDate instanceof Date) {\n      let day = journalEntry.transactionDate.getDate();\n      let month = journalEntry.transactionDate.getMonth() + 1;\n      const year = journalEntry.transactionDate.getFullYear();\n      if (day < 10) {\n        day = `0${day}`;\n      }\n      if (month < 10) {\n        month = `0${month}`;\n      }\n      journalEntry.transactionDate = `${year}-${month}-${day}`;\n    }\n    this.accountingService.createJournalEntry(journalEntry).subscribe(response => {\n      this.router.navigate(['../transactions/view', response.transactionId], { relativeTo: this.route });\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"financialActivityMappingForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field>\\n            <mat-label>Financial Activity</mat-label>\\n            <mat-select required formControlName=\\\"financialActivityId\\\">\\n              <mat-option *ngFor=\\\"let financialActivity of financialActivityData\\\" [value]=\\\"financialActivity.id\\\">\\n                {{ financialActivity.name }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"financialActivityMappingForm.controls.financialActivityId.hasError('required')\\\">\\n              Financial Activity is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Account</mat-label>\\n            <mat-select required formControlName=\\\"glAccountId\\\">\\n              <mat-option *ngFor=\\\"let glAccount of glAccountData\\\" [value]=\\\"glAccount.id\\\">\\n                {{ glAccount.name + ' (' + glAccount.glCode + ')' }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"financialActivityMappingForm.controls.glAccountId.hasError('required')\\\">\\n              Account is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!financialActivityMappingForm.valid\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvZmluYW5jaWFsLWFjdGl2aXR5LW1hcHBpbmdzL2NyZWF0ZS1maW5hbmNpYWwtYWN0aXZpdHktbWFwcGluZy9jcmVhdGUtZmluYW5jaWFsLWFjdGl2aXR5LW1hcHBpbmcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FjY291bnRpbmcvZmluYW5jaWFsLWFjdGl2aXR5LW1hcHBpbmdzL2NyZWF0ZS1maW5hbmNpYWwtYWN0aXZpdHktbWFwcGluZy9jcmVhdGUtZmluYW5jaWFsLWFjdGl2aXR5LW1hcHBpbmcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAzN3JlbTtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/**\n * Create financial activity mapping component.\n */\n@Component({\n  selector: 'mifosx-create-financial-activity-mapping',\n  templateUrl: './create-financial-activity-mapping.component.html',\n  styleUrls: ['./create-financial-activity-mapping.component.scss']\n})\nexport class CreateFinancialActivityMappingComponent implements OnInit {\n\n  /** Financial activity mapping form. */\n  financialActivityMappingForm: FormGroup;\n  /** GL Account options. */\n  glAccountOptions: any;\n  /** GL Account data. */\n  glAccountData: any;\n  /** Financial activity data. */\n  financialActivityData: any;\n\n  /**\n   * Retrieves the gl account options and financial activity data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: { financialActivityAccountsTemplate: any }) => {\n      this.glAccountOptions = data.financialActivityAccountsTemplate.glAccountOptions;\n      this.financialActivityData = data.financialActivityAccountsTemplate.financialActivityOptions;\n    });\n  }\n\n  /**\n   * Creates the financial activity mapping form and sets the gl account data.\n   */\n  ngOnInit() {\n    this.createFinancialActivityMappingForm();\n    this.setGlAccountData();\n  }\n\n  /**\n   * Creates the financial activity mapping form.\n   */\n  createFinancialActivityMappingForm() {\n    this.financialActivityMappingForm = this.formBuilder.group({\n      'financialActivityId': ['', Validators.required],\n      'glAccountId': ['', Validators.required]\n    });\n  }\n\n  /**\n   * Sets the gl account data on the basis of selected financial activity.\n   */\n  setGlAccountData() {\n    this.financialActivityMappingForm.get('financialActivityId').valueChanges\n      .subscribe(financialActivityId => {\n        switch (financialActivityId) {\n          case 100:\n          case 101:\n          case 102:\n          case 103: this.glAccountData = this.glAccountOptions.assetAccountOptions;\n          break;\n          case 200:\n          case 201: this.glAccountData = this.glAccountOptions.liabilityAccountOptions;\n          break;\n          case 300: this.glAccountData = this.glAccountOptions.equityAccountOptions;\n          break;\n        }\n      });\n  }\n\n  /**\n   * Submits the financial activity mapping form and creates financial activity account,\n   * if successful redirects to view created account.\n   */\n  submit() {\n    this.accountingService.createFinancialActivityAccount(this.financialActivityMappingForm.value)\n      .subscribe((response: any) => {\n        this.router.navigate(['../view', response.resourceId], { relativeTo: this.route });\n    });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/**\n * Financial activity mappings template data resolver.\n */\n@Injectable()\nexport class FinancialActivityMappingsTemplateResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the financial activity mappings template data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.accountingService.getFinancialActivityAccountsTemplate();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"financialActivityMappingForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field>\\n            <mat-label>Financial Activity</mat-label>\\n            <mat-select required formControlName=\\\"financialActivityId\\\">\\n              <mat-option *ngFor=\\\"let financialActivity of financialActivityData\\\" [value]=\\\"financialActivity.id\\\">\\n                {{ financialActivity.name }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Account</mat-label>\\n            <mat-select required formControlName=\\\"glAccountId\\\">\\n              <mat-option *ngFor=\\\"let glAccount of glAccountData\\\" [value]=\\\"glAccount.id\\\">\\n                {{ glAccount.name + ' (' + glAccount.glCode + ')' }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"financialActivityMappingForm.pristine\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvZmluYW5jaWFsLWFjdGl2aXR5LW1hcHBpbmdzL2VkaXQtZmluYW5jaWFsLWFjdGl2aXR5LW1hcHBpbmcvZWRpdC1maW5hbmNpYWwtYWN0aXZpdHktbWFwcGluZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvYWNjb3VudGluZy9maW5hbmNpYWwtYWN0aXZpdHktbWFwcGluZ3MvZWRpdC1maW5hbmNpYWwtYWN0aXZpdHktbWFwcGluZy9lZGl0LWZpbmFuY2lhbC1hY3Rpdml0eS1tYXBwaW5nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMzdyZW07XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/**\n * Edit financial activity mapping component.\n */\n@Component({\n  selector: 'mifosx-edit-financial-activity-mapping',\n  templateUrl: './edit-financial-activity-mapping.component.html',\n  styleUrls: ['./edit-financial-activity-mapping.component.scss']\n})\nexport class EditFinancialActivityMappingComponent implements OnInit {\n\n  /** Financial activity mapping form. */\n  financialActivityMappingForm: FormGroup;\n  /** GL Account options. */\n  glAccountOptions: any;\n  /** GL Account data. */\n  glAccountData: any;\n  /** Financial activity data. */\n  financialActivityData: any;\n  /** Financial activity account ID. */\n  financialActivityAccountId: string;\n  /** Financial activity ID. */\n  financialActivityId: number;\n  /** GL Account ID. */\n  glAccountId: number;\n\n  /**\n   * Retrieves the gl account options, financial activity and financial activity account data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuider: FormBuilder,\n              private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: { financialActivityAccountAndTemplate: any }) => {\n      this.financialActivityAccountId = data.financialActivityAccountAndTemplate.id;\n      this.financialActivityId = data.financialActivityAccountAndTemplate.financialActivityData.id;\n      this.glAccountId = data.financialActivityAccountAndTemplate.glAccountData.id;\n      this.glAccountOptions = data.financialActivityAccountAndTemplate.glAccountOptions;\n      this.financialActivityData = data.financialActivityAccountAndTemplate.financialActivityOptions;\n    });\n  }\n\n  /**\n   * Creates and sets the financial activity mapping form and sets the gl account data.\n   */\n  ngOnInit() {\n    this.createFinancialActivityMappingForm();\n    this.setGLAccountData();\n    this.financialActivityMappingForm.get('financialActivityId').setValue(this.financialActivityId);\n    this.financialActivityMappingForm.get('glAccountId').setValue(this.glAccountId);\n  }\n\n  /**\n   * Creates the financial activity mapping form.\n   */\n  createFinancialActivityMappingForm() {\n    this.financialActivityMappingForm = this.formBuider.group({\n      'financialActivityId': ['', Validators.required],\n      'glAccountId': ['', Validators.required]\n    });\n  }\n\n  /**\n   * Sets the gl account data on the basis of selected financial activity.\n   */\n  setGLAccountData() {\n    this.financialActivityMappingForm.get('financialActivityId').valueChanges\n      .subscribe(financialActivityId => {\n        switch (financialActivityId) {\n          case 100:\n          case 101:\n          case 102:\n          case 103: this.glAccountData = this.glAccountOptions.assetAccountOptions;\n          break;\n          case 200:\n          case 201: this.glAccountData = this.glAccountOptions.liabilityAccountOptions;\n          break;\n          case 300: this.glAccountData = this.glAccountOptions.equityAccountOptions;\n          break;\n        }\n      });\n  }\n\n  /**\n   * Submits the financial activity mapping form and updates financial activity account,\n   * if successful redirects to view updated account.\n   */\n  submit() {\n    this.accountingService.updateFinancialActivityAccount(this.financialActivityAccountId, this.financialActivityMappingForm.value)\n      .subscribe((response: any) => {\n        this.router.navigate(['../../', response.resourceId], { relativeTo: this.route });\n    });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/**\n * Financial activity mapping and template data resolver.\n */\n@Injectable()\nexport class FinancialActivityMappingAndTemplateResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the financial activity mapping and template data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const financialActivityAccountId = route.paramMap.get('id');\n    return this.accountingService.getFinancialActivityAccount(financialActivityAccountId, true);\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" class=\\\"container m-b-20\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['create']\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;Define New Mapping\\n  </button>\\n</div>\\n\\n<div class=\\\"mat-elevation-z8 container\\\">\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <ng-container matColumnDef=\\\"financialActivity\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Financial Activity </th>\\n      <td mat-cell *matCellDef=\\\"let financialActivityAccount\\\"> {{ financialActivityAccount.financialActivityData.name }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"glAccountName\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Account Name </th>\\n      <td mat-cell *matCellDef=\\\"let financialActivityAccount\\\"> {{ financialActivityAccount.glAccountData.name }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"glAccountCode\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Account Code </th>\\n      <td mat-cell *matCellDef=\\\"let financialActivityAccount\\\"> {{ financialActivityAccount.glAccountData.glCode }} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['view', row.id]\\\" class=\\\"select-row\\\"></tr>\\n\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[10, 25]\\\" showFirstLastButtons></mat-paginator>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvZmluYW5jaWFsLWFjdGl2aXR5LW1hcHBpbmdzL2ZpbmFuY2lhbC1hY3Rpdml0eS1tYXBwaW5ncy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTtFQURiO0lBSUksZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvYWNjb3VudGluZy9maW5hbmNpYWwtYWN0aXZpdHktbWFwcGluZ3MvZmluYW5jaWFsLWFjdGl2aXR5LW1hcHBpbmdzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcblxuICAuc2VsZWN0LXJvdzpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/**\n * Financial activity mappings component.\n */\n@Component({\n  selector: 'mifosx-financial-activity-mappings',\n  templateUrl: './financial-activity-mappings.component.html',\n  styleUrls: ['./financial-activity-mappings.component.scss']\n})\nexport class FinancialActivityMappingsComponent implements OnInit {\n\n  /** Financial activity account data. */\n  financialActivityAccountData: any;\n  /** Columns to be displayed in financial activity mappings table. */\n  displayedColumns: string[] = ['financialActivity', 'glAccountName', 'glAccountCode'];\n  /** Data source for financial activity mappings table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for financial activity mappings table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for financial activity mappings table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the financial activity accounts data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { financialActivityAccounts: any }) => {\n      this.financialActivityAccountData = data.financialActivityAccounts;\n    });\n  }\n\n  /**\n   * Sets the financial activity mappings table.\n   */\n  ngOnInit() {\n    this.setFinancialActivityAccounts();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for financial activity mappings table.\n   */\n  setFinancialActivityAccounts() {\n    this.dataSource = new MatTableDataSource(this.financialActivityAccountData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sortingDataAccessor = (financialActivityAccount: any, property: any) => {\n      switch (property) {\n        case 'financialActivity': return financialActivityAccount.financialActivityData.name;\n        case 'glAccountName': return financialActivityAccount.glAccountData.name;\n        case 'glAccountCode': return financialActivityAccount.glAccountData.glCode;\n        default: return financialActivityAccount[property];\n      }\n    };\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Financial activity mappings data resolver.\n */\n@Injectable()\nexport class FinancialActivityMappingsResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the financial activity mappings data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.accountingService.getFinancialActivityAccounts();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/**\n * Financial activity mapping data resolver.\n */\n@Injectable()\nexport class FinancialActivityMappingResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the financial activity mapping data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const financialActivityAccountId = route.paramMap.get('id');\n    return this.accountingService.getFinancialActivityAccount(financialActivityAccountId, false);\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"2%\\\" class=\\\"container m-b-20\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['edit']\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteFinancialActivityAccount()\\\">\\n    <fa-icon icon=\\\"trash\\\"></fa-icon>&nbsp;&nbsp;\\n    Delete\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-content>\\n\\n      <div fxLayout=\\\"row wrap\\\" class=\\\"content\\\">\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Financial Activity\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ financialActivityAccount?.financialActivityData.name }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Account Name\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ financialActivityAccount?.glAccountData.name }}\\n        </div>\\n\\n      </div>\\n\\n    </mat-card-content>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n  .container .content div {\\n    margin: 1rem 0;\\n    word-wrap: break-word; }\\n  .container .content div.header {\\n      font-weight: 500; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvZmluYW5jaWFsLWFjdGl2aXR5LW1hcHBpbmdzL3ZpZXctZmluYW5jaWFsLWFjdGl2aXR5LW1hcHBpbmcvdmlldy1maW5hbmNpYWwtYWN0aXZpdHktbWFwcGluZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQixFQUFBO0VBRGxCO0lBS00sY0FBYztJQUNkLHFCQUFxQixFQUFBO0VBTjNCO01BU1EsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hY2NvdW50aW5nL2ZpbmFuY2lhbC1hY3Rpdml0eS1tYXBwaW5ncy92aWV3LWZpbmFuY2lhbC1hY3Rpdml0eS1tYXBwaW5nL3ZpZXctZmluYW5jaWFsLWFjdGl2aXR5LW1hcHBpbmcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAzN3JlbTtcblxuICAuY29udGVudCB7XG4gICAgZGl2IHtcbiAgICAgIG1hcmdpbjogMXJlbSAwO1xuICAgICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuXG4gICAgICAmLmhlYWRlciB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/** Custom Components */\nimport { DeleteDialogComponent } from '../../../shared/delete-dialog/delete-dialog.component';\n\n/**\n * View financial activity mapping component.\n */\n@Component({\n  selector: 'mifosx-view-financial-activity-mapping',\n  templateUrl: './view-financial-activity-mapping.component.html',\n  styleUrls: ['./view-financial-activity-mapping.component.scss']\n})\nexport class ViewFinancialActivityMappingComponent implements OnInit {\n\n  /** Financial activity account ID. */\n  financialActivityAccountId: any;\n  /** Financial activity account data. */\n  financialActivityAccount: any;\n\n  /**\n   * Retrieves the financial activity account data from `resolve`.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   * @param {MatDialog} dialog Dialog reference.\n   */\n  constructor(private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router,\n              public dialog: MatDialog) {\n    this.route.data.subscribe((data: { financialActivityAccount: any }) => {\n      this.financialActivityAccount = data.financialActivityAccount;\n      this.financialActivityAccountId = data.financialActivityAccount.id;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Deletes the financial activity account and redirects to financial activity mappings.\n   */\n  deleteFinancialActivityAccount() {\n    const deleteFinancialActivityAccountDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `financial activity mapping ${this.financialActivityAccountId}` }\n    });\n    deleteFinancialActivityAccountDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.accountingService.deleteFinancialActivityAccount(this.financialActivityAccountId)\n          .subscribe(() => {\n            this.router.navigate(['/accounting/financial-activity-mappings']);\n          });\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"frequentPostingsForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Office</mat-label>\\n            <mat-select required formControlName=\\\"officeId\\\">\\n              <mat-option *ngFor=\\\"let office of officeData\\\" [value]=\\\"office.id\\\">\\n                {{ office.name }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"frequentPostingsForm.controls.officeId.hasError('required')\\\">\\n              Office is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Accounting Rule</mat-label>\\n            <mat-select required formControlName=\\\"accountingRule\\\">\\n              <mat-option *ngFor=\\\"let accountingRule of accountingRuleData\\\" [value]=\\\"accountingRule\\\">\\n                {{ accountingRule.name }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"frequentPostingsForm.controls.accountingRule.hasError('required')\\\">\\n              Accounting Rule is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Currency</mat-label>\\n            <mat-select required formControlName=\\\"currencyCode\\\">\\n              <mat-option *ngFor=\\\"let currency of currencyData\\\" [value]=\\\"currency.code\\\">\\n                {{ currency.displayLabel }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"frequentPostingsForm.controls.currencyCode.hasError('required')\\\">\\n              Currency is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <span fxFlex=\\\"48%\\\" fxHide.lt-md></span>\\n\\n          <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\" formArrayName=\\\"debits\\\"\\n            *ngFor=\\\"let debit of debits.controls; let i = index;\\\">\\n\\n            <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" [formGroupName]=\\\"i\\\">\\n\\n              <mat-form-field fxFlex=\\\"48%\\\">\\n                <mat-label>Affected GL Entry (Debit)</mat-label>\\n                <mat-select required formControlName=\\\"glAccountId\\\">\\n                  <mat-option *ngFor=\\\"let affectedGLEntryDebit of debitAccountData\\\" [value]=\\\"affectedGLEntryDebit.id\\\">\\n                    {{ affectedGLEntryDebit.name }}\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"debits.at(i).controls.glAccountId.hasError('required')\\\">\\n                  Affected GL Entry (Debit) is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n\\n              <mat-form-field fxFlex=\\\"43%\\\">\\n                <mat-label>Debit Amount</mat-label>\\n                <input type=\\\"number\\\" matInput required formControlName=\\\"amount\\\">\\n                <mat-error *ngIf=\\\"debits.at(i).controls.amount.hasError('required')\\\">\\n                  Debit Amount is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n\\n              <span fxFlex>\\n                <button *ngIf=\\\"i !== 0\\\" type=\\\"button\\\" mat-icon-button (click)=\\\"removeAffectedGLEntry(debits, i)\\\">\\n                  <fa-icon icon=\\\"minus-circle\\\" size=\\\"lg\\\"></fa-icon>\\n                </button>\\n                <button *ngIf=\\\"i === 0 && allowMultipleDebitEntries\\\" type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addAffectedGLEntry(debits)\\\">\\n                  <fa-icon icon=\\\"plus-circle\\\" size=\\\"lg\\\"></fa-icon>\\n                </button>\\n              </span>\\n\\n            </div>\\n\\n          </div>\\n\\n          <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\" formArrayName=\\\"credits\\\"\\n            *ngFor=\\\"let credit of credits.controls; let i = index;\\\">\\n\\n            <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" [formGroupName]=\\\"i\\\">\\n\\n              <mat-form-field fxFlex=\\\"48%\\\">\\n                <mat-label>Affected GL Entry (Credit)</mat-label>\\n                <mat-select required formControlName=\\\"glAccountId\\\">\\n                  <mat-option *ngFor=\\\"let affectedGLEntryCredit of creditAccountData\\\" [value]=\\\"affectedGLEntryCredit.id\\\">\\n                    {{ affectedGLEntryCredit.name }}\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"credits.at(i).controls.glAccountId.hasError('required')\\\">\\n                  Affected GL Entry (Credit) is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n\\n              <mat-form-field fxFlex=\\\"43%\\\">\\n                <mat-label>Credit Amount</mat-label>\\n                <input type=\\\"number\\\" matInput required formControlName=\\\"amount\\\">\\n                <mat-error *ngIf=\\\"credits.at(i).controls.amount.hasError('required')\\\">\\n                  Credit Amount is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n\\n              <span fxFlex>\\n                <button *ngIf=\\\"i !== 0\\\" type=\\\"button\\\" mat-icon-button (click)=\\\"removeAffectedGLEntry(credits, i)\\\">\\n                  <fa-icon icon=\\\"minus-circle\\\" size=\\\"lg\\\"></fa-icon>\\n                </button>\\n                <button *ngIf=\\\"i === 0 && allowMultipleCreditEntries\\\" type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addAffectedGLEntry(credits)\\\">\\n                  <fa-icon icon=\\\"plus-circle\\\" size=\\\"lg\\\"></fa-icon>\\n                </button>\\n              </span>\\n\\n            </div>\\n\\n          </div>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Reference Number</mat-label>\\n            <input matInput formControlName=\\\"referenceNumber\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Transaction Date</mat-label>\\n            <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"transactionDatePicker\\\" required formControlName=\\\"transactionDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"transactionDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #transactionDatePicker></mat-datepicker>\\n            <mat-error *ngIf=\\\"frequentPostingsForm.controls.transactionDate.hasError('required')\\\">\\n              Transaction Date is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Payment Type</mat-label>\\n            <mat-select formControlName=\\\"paymentTypeId\\\">\\n              <mat-option *ngFor=\\\"let paymentType of paymentTypeData\\\" [value]=\\\"paymentType.id\\\">\\n                {{ paymentType.name }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Account Number</mat-label>\\n            <input matInput formControlName=\\\"accountNumber\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Cheque Number</mat-label>\\n            <input matInput formControlName=\\\"checkNumber\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Routing Code</mat-label>\\n            <input matInput formControlName=\\\"routingCode\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Receipt Number</mat-label>\\n            <input matInput formControlName=\\\"receiptNumber\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Bank Number</mat-label>\\n            <input matInput formControlName=\\\"bankNumber\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"98%\\\">\\n            <mat-label>Comments</mat-label>\\n            <textarea matInput formControlName=\\\"comments\\\"></textarea>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!frequentPostingsForm.valid\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnRpbmcvZnJlcXVlbnQtcG9zdGluZ3MvZnJlcXVlbnQtcG9zdGluZ3MuY29tcG9uZW50LnNjc3MifQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Frequent Postings component.\n */\n@Component({\n  selector: 'mifosx-frequent-postings',\n  templateUrl: './frequent-postings.component.html',\n  styleUrls: ['./frequent-postings.component.scss']\n})\nexport class FrequentPostingsComponent implements OnInit {\n\n  /** Minimum transaction date allowed. */\n  minDate = new Date(2000, 0, 1);\n  /** Maximum transaction date allowed. */\n  maxDate = new Date();\n  /** Frequent postings form. */\n  frequentPostingsForm: FormGroup;\n  /** Office data. */\n  officeData: any;\n  /** Accounting rule data. */\n  accountingRuleData: any;\n  /** Currency data. */\n  currencyData: any;\n  /** Payment type data. */\n  paymentTypeData: any;\n  /** Debit account data. */\n  debitAccountData: any;\n  /** Credit account data. */\n  creditAccountData: any;\n  /** True if multiple credit entries are allowed. */\n  allowMultipleCreditEntries: boolean;\n  /** True if multiple debit entries are allowed. */\n  allowMultipleDebitEntries: boolean;\n\n  /**\n   * Retrieves the offices, accounting rules, currencies and payment types data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: {\n        offices: any,\n        accountingRules: any,\n        currencies: any,\n        paymentTypes: any\n      }) => {\n        this.officeData = data.offices;\n        this.accountingRuleData = data.accountingRules;\n        this.currencyData = data.currencies.selectedCurrencyOptions;\n        this.paymentTypeData = data.paymentTypes;\n      });\n  }\n\n  /**\n   * Creates the frequent postings form and sets the affected gl entry form array.\n   */\n  ngOnInit() {\n    this.createFrequentPostingsForm();\n    this.setAffectedGLEntryForm();\n  }\n\n  /**\n   * Creates the frequent postings form.\n   */\n  createFrequentPostingsForm() {\n    this.frequentPostingsForm = this.formBuilder.group({\n      'officeId': ['', Validators.required],\n      'accountingRule': ['', Validators.required],\n      'currencyCode': ['', Validators.required],\n      'debits': this.formBuilder.array([]),\n      'credits': this.formBuilder.array([]),\n      'referenceNumber': [''],\n      'transactionDate': ['', Validators.required],\n      'paymentTypeId': [''],\n      'accountNumber': [''],\n      'checkNumber': [''],\n      'routingCode': [''],\n      'receiptNumber': [''],\n      'bankNumber': [''],\n      'comments': ['']\n    });\n  }\n\n  /**\n   * Sets the affected gl entry form array.\n   */\n  setAffectedGLEntryForm() {\n    this.frequentPostingsForm.get('accountingRule').valueChanges.subscribe(accountingRule => {\n      while (this.debits.length) {\n        this.debits.removeAt(0);\n      }\n      while (this.credits.length) {\n        this.credits.removeAt(0);\n      }\n      this.allowMultipleDebitEntries = accountingRule.allowMultipleDebitEntries;\n      this.allowMultipleCreditEntries = accountingRule.allowMultipleCreditEntries;\n      this.debitAccountData = accountingRule.debitAccounts;\n      this.creditAccountData = accountingRule.creditAccounts;\n      this.addAffectedGLEntry(this.debits);\n      this.addAffectedGLEntry(this.credits);\n    });\n  }\n\n  /**\n   * Creates the affected gl entry form.\n   * @returns {FormGroup} Affected gl entry form.\n   */\n  createAffectedGLEntryForm(): FormGroup {\n    return this.formBuilder.group({\n      'glAccountId': ['', Validators.required],\n      'amount': ['', Validators.required]\n    });\n  }\n\n  /**\n   * Gets the affected gl entry (debits) form array.\n   * @returns {FormArray} Debits form array.\n   */\n  get debits(): FormArray {\n    return this.frequentPostingsForm.get('debits') as FormArray;\n  }\n\n  /**\n   * Gets the affected gl entry (credits) form array.\n   * @returns {FormArray} Credits form array.\n   */\n  get credits(): FormArray {\n    return this.frequentPostingsForm.get('credits') as FormArray;\n  }\n\n  /**\n   * Adds the affected gl entry form to given affected gl entry form array.\n   * @param {FormArray} affectedGLEntryFormArray Given affected gl entry form array (debit/credit).\n   */\n  addAffectedGLEntry(affectedGLEntryFormArray: FormArray) {\n    affectedGLEntryFormArray.push(this.createAffectedGLEntryForm());\n  }\n\n  /**\n   * Removes the affected gl entry form from given affected gl entry form array at given index.\n   * @param {FormArray} affectedGLEntryFormArray Given affected gl entry form array (debit/credit).\n   * @param {number} index Array index from where affected gl entry form needs to be removed.\n   */\n  removeAffectedGLEntry(affectedGLEntryFormArray: FormArray, index: number) {\n    affectedGLEntryFormArray.removeAt(index);\n  }\n\n  /**\n   * Submits the frequent postings form and creates journal entry,\n   * if successful redirects to view created transaction.\n   */\n  submit() {\n    const journalEntry = this.frequentPostingsForm.value;\n    journalEntry.accountingRule = journalEntry.accountingRule.id;\n    // TODO: Update once language and date settings are setup\n    journalEntry.locale = 'en';\n    journalEntry.dateFormat = 'yyyy-MM-dd';\n    if (journalEntry.transactionDate instanceof Date) {\n      let day = journalEntry.transactionDate.getDate();\n      let month = journalEntry.transactionDate.getMonth() + 1;\n      const year = journalEntry.transactionDate.getFullYear();\n      if (day < 10) {\n        day = `0${day}`;\n      }\n      if (month < 10) {\n        month = `0${month}`;\n      }\n      journalEntry.transactionDate = `${year}-${month}-${day}`;\n    }\n    this.accountingService.createJournalEntry(journalEntry).subscribe(response => {\n      this.router.navigate(['../transactions/view', response.transactionId], { relativeTo: this.route });\n    });\n  }\n\n}\n","module.exports = \"<!-- TODO: Responsiveness/design enhancement and reduction in form loading time -->\\n<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"openingBalancesForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n          <mat-form-field fxFlex=\\\"88%\\\">\\n            <mat-label>Office</mat-label>\\n            <mat-select required formControlName=\\\"officeId\\\">\\n              <mat-option *ngFor=\\\"let office of officeData\\\" [value]=\\\"office.id\\\">\\n                {{ office.name }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"openingBalancesForm.controls.officeId.hasError('required')\\\">\\n              Office is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <button mat-button type=\\\"button\\\" color=\\\"primary\\\" fxFlex=\\\"4%\\\" (click)=\\\"retrieveOpeningBalances()\\\">Retrieve</button>\\n\\n        </div>\\n\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" *ngIf=\\\"openingBalancesData\\\">\\n\\n          <label fxFlex=\\\"98%\\\" class=\\\"content\\\"><span class=\\\"header\\\">Opening Balances Contra Account:</span>&nbsp;&nbsp;{{ openingBalancesData.contraAccount.name + ' (' + openingBalancesData.contraAccount.glCode + ')' }}</label>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Currency</mat-label>\\n            <mat-select required formControlName=\\\"currencyCode\\\">\\n              <mat-option *ngFor=\\\"let currency of currencyData\\\" [value]=\\\"currency.code\\\">\\n                {{ currency.displayLabel }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"openingBalancesForm.controls.currencyCode.hasError('required')\\\">\\n              Currency is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Opening Balances Date</mat-label>\\n            <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"openingBalancesDatePicker\\\" required formControlName=\\\"transactionDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"openingBalancesDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #openingBalancesDatePicker></mat-datepicker>\\n            <mat-error *ngIf=\\\"openingBalancesForm.controls.transactionDate.hasError('required')\\\">\\n              Opening Balances Date is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" class=\\\"content\\\" fxFlex=\\\"100%\\\">\\n\\n            <div class=\\\"header\\\" fxFlex=\\\"8%\\\">\\n              Type\\n            </div>\\n\\n            <div class=\\\"header\\\" fxFlex=\\\"18%\\\">\\n              GL Code\\n            </div>\\n\\n            <div class=\\\"header\\\" fxFlex=\\\"18%\\\">\\n              Account\\n            </div>\\n\\n            <div class=\\\"header\\\" fxFlex=\\\"23%\\\">\\n              Total Debit: {{ debitsSum }}\\n            </div>\\n\\n            <div class=\\\"header\\\" fxFlex=\\\"23%\\\">\\n              Total Credit: {{ creditsSum }}\\n            </div>\\n\\n          </div>\\n\\n          <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\" class=\\\"content\\\" formArrayName=\\\"glAccountEntries\\\"\\n            *ngFor=\\\"let credit of glAccountEntries.controls; let i = index;\\\">\\n\\n            <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" [formGroupName]=\\\"i\\\">\\n\\n              <div fxFlex=\\\"8%\\\">\\n                {{ (openingBalancesData.glAccounts[i].glAccountType.value !== openingBalancesData.glAccounts[i-1]?.glAccountType.value) ? openingBalancesData.glAccounts[i].glAccountType.value : '' }}\\n              </div>\\n\\n              <div fxFlex=\\\"18%\\\">\\n                {{ openingBalancesData.glAccounts[i].glAccountCode }}\\n              </div>\\n\\n              <div fxFlex=\\\"18%\\\">\\n                {{ openingBalancesData.glAccounts[i].glAccountName }}\\n              </div>\\n\\n              <div fxFlex=\\\"23%\\\">\\n                <mat-form-field>\\n                  <mat-label>Debit</mat-label>\\n                  <input matInput type=\\\"number\\\" formControlName=\\\"debit\\\">\\n                </mat-form-field>\\n              </div>\\n\\n              <div fxFlex=\\\"23%\\\">\\n                <mat-form-field>\\n                  <mat-label>Credit</mat-label>\\n                  <input matInput type=\\\"number\\\" formControlName=\\\"credit\\\">\\n                </mat-form-field>\\n              </div>\\n\\n            </div>\\n\\n          </div>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\" *ngIf=\\\"openingBalancesData\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!openingBalancesForm.valid\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".content div {\\n  margin: 1rem 0;\\n  word-wrap: break-word; }\\n  .content div.header {\\n    font-weight: 500; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvbWlncmF0ZS1vcGVuaW5nLWJhbGFuY2VzL21pZ3JhdGUtb3BlbmluZy1iYWxhbmNlcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLGNBQWM7RUFDZCxxQkFBcUIsRUFBQTtFQUh6QjtJQU1NLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvYWNjb3VudGluZy9taWdyYXRlLW9wZW5pbmctYmFsYW5jZXMvbWlncmF0ZS1vcGVuaW5nLWJhbGFuY2VzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnQge1xuICBkaXYge1xuICAgIG1hcmdpbjogMXJlbSAwO1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcblxuICAgICYuaGVhZGVyIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgfVxuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/** Custom Validators */\nimport { onlyOneOfTheFieldsIsRequiredValidator } from './only-one-of-the-fields-is-required.validator';\n\n/**\n * Migrate opening balances component.\n */\n@Component({\n  selector: 'mifosx-migrate-opening-balances',\n  templateUrl: './migrate-opening-balances.component.html',\n  styleUrls: ['./migrate-opening-balances.component.scss']\n})\nexport class MigrateOpeningBalancesComponent implements OnInit {\n\n  /** Minimum opening balances date allowed. */\n  minDate = new Date(2000, 0, 1);\n  /** Maximum opening balances date allowed. */\n  maxDate = new Date();\n  /** Opening balances form. */\n  openingBalancesForm: FormGroup;\n  /** Opening balances data. */\n  openingBalancesData: any;\n  /** Office data. */\n  officeData: any;\n  /** Currency data. */\n  currencyData: any;\n  /** Sum total of debits. */\n  debitsSum = 0;\n  /** Sum total of credits. */\n  creditsSum = 0;\n\n  /**\n   * Retrieves the offices and currencies from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: {\n        offices: any,\n        currencies: any\n      }) => {\n        this.officeData = data.offices;\n        this.currencyData = data.currencies.selectedCurrencyOptions;\n      });\n  }\n\n  /**\n   * Creates the opening balances form. (initially retrieves gl accounts on the basis of specified office)\n   */\n  ngOnInit() {\n    this.createOpeningBalancesForm();\n  }\n\n  /**\n   * Creates the opening balances form.\n   */\n  createOpeningBalancesForm() {\n    this.openingBalancesForm = this.formBuilder.group({\n      'officeId': ['', Validators.required],\n      'currencyCode': ['', Validators.required],\n      'transactionDate': ['', Validators.required],\n      'glAccountEntries': this.formBuilder.array([])\n    });\n  }\n\n  /**\n   * Creates the gl account entry form.\n   * @param glAccount GL Account for which form is returned.\n   * @returns {FormGroup} GL Account entry form.\n   */\n  createGLAccountEntryForm(glAccount: any): FormGroup {\n    return this.formBuilder.group({\n      'glAccountId': [glAccount.glAccountId],\n      'debit': [null],\n      'credit': [null]\n    }, { validator: onlyOneOfTheFieldsIsRequiredValidator });\n  }\n\n  /**\n   * Gets the gl account entries form array.\n   * @returns {FormArray} GL Account entries form array.\n   */\n  get glAccountEntries(): FormArray {\n    return this.openingBalancesForm.get('glAccountEntries') as FormArray;\n  }\n\n  /**\n   * Retrieves gl accounts on the basis of specified office.\n   */\n  retrieveOpeningBalances() {\n    this.accountingService.retrieveOpeningBalances(this.openingBalancesForm.value.officeId)\n      .subscribe((openingBalancesData: any) => {\n        const entry = this.openingBalancesForm.get('glAccountEntries') as FormArray;\n\n        openingBalancesData.glAccounts = openingBalancesData.assetAccountOpeningBalances\n          .concat(openingBalancesData.liabityAccountOpeningBalances,\n                  openingBalancesData.equityAccountOpeningBalances,\n                  openingBalancesData.incomeAccountOpeningBalances,\n                  openingBalancesData.expenseAccountOpeningBalances);\n\n        openingBalancesData.glAccounts.forEach((glAccount: any) => {\n            entry.push(this.createGLAccountEntryForm(glAccount));\n          });\n\n        this.openingBalancesData = openingBalancesData;\n\n        entry.valueChanges.subscribe(() => {\n          this.debitsSum = 0;\n          this.creditsSum = 0;\n          entry.controls.forEach(value => {\n            this.debitsSum += value.value.debit;\n            this.creditsSum += value.value.credit;\n          });\n        });\n      });\n  }\n\n  /**\n   * Submits the opening balances form and defines opening balances,\n   * if successful redirects to view created transaction.\n   */\n  submit() {\n    const openingBalances = this.openingBalancesForm.value;\n    // TODO: Update once language and date settings are setup\n    openingBalances.locale = 'en';\n    openingBalances.dateFormat = 'yyyy-MM-dd';\n    if (openingBalances.transactionDate instanceof Date) {\n      let day = openingBalances.transactionDate.getDate();\n      let month = openingBalances.transactionDate.getMonth() + 1;\n      const year = openingBalances.transactionDate.getFullYear();\n      if (day < 10) {\n        day = `0${day}`;\n      }\n      if (month < 10) {\n        month = `0${month}`;\n      }\n      openingBalances.transactionDate = `${year}-${month}-${day}`;\n    }\n    openingBalances.debits = [];\n    openingBalances.credits = [];\n    this.openingBalancesForm.value.glAccountEntries.forEach((entry: any) => {\n      if (entry.debit) {\n        openingBalances.debits.push({ glAccountId: entry.glAccountId, amount: entry.debit });\n      }\n      if (entry.credit) {\n        openingBalances.credits.push({ glAccountId: entry.glAccountId, amount: entry.credit });\n      }\n    });\n    delete openingBalances.glAccountEntries;\n    this.accountingService.defineOpeningBalances(openingBalances).subscribe((response: any) => {\n      this.router.navigate(['/accounting/journal-entries/transactions/view', response.transactionId]);\n    });\n  }\n\n}\n","/** Angular Imports */\nimport { FormGroup, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n/** Validates that atleast one of the fields debit or credit is filled (but not both) for a given gl account. */\nexport const onlyOneOfTheFieldsIsRequiredValidator: ValidatorFn = (glAccountEntriesForm: FormGroup): ValidationErrors | null => {\n  const debit = glAccountEntriesForm.controls.debit.value;\n  const credit = glAccountEntriesForm.controls.credit.value;\n  return ((debit || credit) && !(debit && credit)) ? null : { 'error': true };\n};\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"periodicAccrualsForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"row\\\">\\n\\n          <mat-form-field fxFlex>\\n            <mat-label>Accrue Till Date</mat-label>\\n            <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"tillDatePicker\\\" required formControlName=\\\"tillDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"tillDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #tillDatePicker></mat-datepicker>\\n            <mat-error *ngIf=\\\"periodicAccrualsForm.controls.tillDate.hasError('required')\\\">\\n              Accrue Date is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!periodicAccrualsForm.valid\\\">\\n          <fa-icon icon=\\\"play\\\"></fa-icon>&nbsp;&nbsp;\\n          Run Periodic Accruals\\n        </button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvcGVyaW9kaWMtYWNjcnVhbHMvcGVyaW9kaWMtYWNjcnVhbHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FjY291bnRpbmcvcGVyaW9kaWMtYWNjcnVhbHMvcGVyaW9kaWMtYWNjcnVhbHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAzN3JlbTtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Periodic accruals component.\n */\n@Component({\n  selector: 'mifosx-periodic-accruals',\n  templateUrl: './periodic-accruals.component.html',\n  styleUrls: ['./periodic-accruals.component.scss']\n})\nexport class PeriodicAccrualsComponent implements OnInit {\n\n  /** Minimum accrue date allowed. */\n  minDate = new Date(2000, 0, 1);\n  /** Maximum accrue date allowed. */\n  maxDate = new Date();\n  /** Periodic accruals form. */\n  periodicAccrualsForm: FormGroup;\n\n  /**\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router) { }\n\n  /**\n   * Creates periodic accruals form.\n   */\n  ngOnInit() {\n    this.createPeriodicAccrualsForm();\n  }\n\n  /**\n   * Creates periodic accruals form.\n   */\n  createPeriodicAccrualsForm() {\n    this.periodicAccrualsForm = this.formBuilder.group({\n      'tillDate': ['', Validators.required]\n    });\n  }\n\n  /**\n   * Submits the periodic accruals form and executes periodic accruals,\n   * if successful redirects to accounting.\n   */\n  submit() {\n    const periodicAccruals = this.periodicAccrualsForm.value;\n    // TODO: Update once language and date settings are setup\n    periodicAccruals.locale = 'en';\n    periodicAccruals.dateFormat = 'yyyy-MM-dd';\n    if (periodicAccruals.tillDate instanceof Date) {\n      let day = periodicAccruals.tillDate.getDate();\n      let month = periodicAccruals.tillDate.getMonth() + 1;\n      const year = periodicAccruals.tillDate.getFullYear();\n      if (day < 10) {\n        day = `0${day}`;\n      }\n      if (month < 10) {\n        month = `0${month}`;\n      }\n      periodicAccruals.tillDate = `${year}-${month}-${day}`;\n    }\n    this.accountingService.executePeriodicAccruals(periodicAccruals).subscribe(() => {\n      this.router.navigate(['../'], { relativeTo: this.route });\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"provisioningEntryForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field fxFlex>\\n            <mat-label>Date</mat-label>\\n            <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"datePicker\\\" required formControlName=\\\"date\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"datePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #datePicker></mat-datepicker>\\n            <mat-error *ngIf=\\\"provisioningEntryForm.controls.date.hasError('required')\\\">\\n              Date is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <div fxFlex>\\n            <mat-checkbox labelPosition=\\\"before\\\" formControlName=\\\"createjournalentries\\\">\\n              Create Journal Entries\\n            </mat-checkbox>\\n          </div>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!provisioningEntryForm.valid\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvcHJvdmlzaW9uaW5nLWVudHJpZXMvY3JlYXRlLXByb3Zpc2lvbmluZy1lbnRyeS9jcmVhdGUtcHJvdmlzaW9uaW5nLWVudHJ5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hY2NvdW50aW5nL3Byb3Zpc2lvbmluZy1lbnRyaWVzL2NyZWF0ZS1wcm92aXNpb25pbmctZW50cnkvY3JlYXRlLXByb3Zpc2lvbmluZy1lbnRyeS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDM3cmVtO1xufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/**\n * Create provisioning entry component.\n */\n@Component({\n  selector: 'mifosx-create-provisioning-entry',\n  templateUrl: './create-provisioning-entry.component.html',\n  styleUrls: ['./create-provisioning-entry.component.scss']\n})\nexport class CreateProvisioningEntryComponent implements OnInit {\n\n  /** Minimum provisioning date allowed. */\n  minDate = new Date(2000, 0, 1);\n  /** Maximum provisioning date allowed. */\n  maxDate = new Date();\n  /** Provisioning entry form. */\n  provisioningEntryForm: FormGroup;\n\n  /**\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router) { }\n\n  /**\n   * Creates the provisioning entry form.\n   */\n  ngOnInit() {\n    this.createProvisioningEntryForm();\n  }\n\n  /**\n   * Creates the provisioning entry form.\n   */\n  createProvisioningEntryForm() {\n    this.provisioningEntryForm = this.formBuilder.group({\n      'date': ['', Validators.required],\n      'createjournalentries': [false]\n    });\n  }\n\n  /**\n   * Submits the provisioning entry form and creates provisioning entry,\n   * if successful redirects to view created entry.\n   */\n  submit() {\n    const provisioningEntry = this.provisioningEntryForm.value;\n    // TODO: Update once language and date settings are setup\n    provisioningEntry.locale = 'en';\n    provisioningEntry.dateFormat = 'yyyy-MM-dd';\n    if (provisioningEntry.date instanceof Date) {\n      let day = provisioningEntry.date.getDate();\n      let month = provisioningEntry.date.getMonth() + 1;\n      const year = provisioningEntry.date.getFullYear();\n      if (day < 10) {\n        day = `0${day}`;\n      }\n      if (month < 10) {\n        month = `0${month}`;\n      }\n      provisioningEntry.date = `${year}-${month}-${day}`;\n    }\n    this.accountingService.createProvisioningEntry(provisioningEntry)\n      .subscribe((response: any) => {\n        this.router.navigate(['../view', response.resourceId], { relativeTo: this.route });\n      });\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['create']\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Provisioning Entry\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"createdUser\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Created By </th>\\n        <td mat-cell *matCellDef=\\\"let provisioningEntry\\\"> {{ provisioningEntry.createdUser }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"createdDate\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Created On </th>\\n        <td mat-cell *matCellDef=\\\"let provisioningEntry\\\"> {{ provisioningEntry.createdDate }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"journalEntry\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Journal Entry Created </th>\\n        <td mat-cell *matCellDef=\\\"let provisioningEntry\\\">\\n          <mat-checkbox [disabled]=\\\"true\\\" [checked]=\\\"provisioningEntry.journalEntry\\\"></mat-checkbox>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"viewReport\\\">\\n        <th mat-header-cell *matHeaderCellDef> View Report </th>\\n        <td mat-cell *matCellDef=\\\"let provisioningEntry\\\">\\n          <button mat-button color=\\\"primary\\\" [routerLink]=\\\"['view', provisioningEntry.id]\\\">\\n            <fa-icon icon=\\\"eye\\\"></fa-icon>&nbsp;&nbsp;View\\n          </button>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"recreateProvisioning\\\">\\n        <th mat-header-cell *matHeaderCellDef> Recreate Provisioning </th>\\n        <td mat-cell *matCellDef=\\\"let provisioningEntry\\\">\\n          <button mat-button (click)=\\\"recreateProvisioning($event, provisioningEntry.id)\\\" [disabled]=\\\"provisioningEntry.journalEntry\\\" color=\\\"primary\\\">\\n            <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;Recreate\\n          </button>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"viewJournalEntry\\\">\\n        <th mat-header-cell *matHeaderCellDef> View Journal Entry </th>\\n        <td mat-cell *matCellDef=\\\"let provisioningEntry\\\">\\n          <button mat-button (click)=\\\"viewJournalEntry($event, provisioningEntry.id)\\\" [disabled]=\\\"!provisioningEntry.journalEntry\\\" color=\\\"primary\\\">\\n            <fa-icon icon=\\\"eye\\\"></fa-icon>&nbsp;&nbsp;View\\n          </button>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvcHJvdmlzaW9uaW5nLWVudHJpZXMvcHJvdmlzaW9uaW5nLWVudHJpZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hY2NvdW50aW5nL3Byb3Zpc2lvbmluZy1lbnRyaWVzL3Byb3Zpc2lvbmluZy1lbnRyaWVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Provisioning entries component.\n */\n@Component({\n  selector: 'mifosx-provisioning-entries',\n  templateUrl: './provisioning-entries.component.html',\n  styleUrls: ['./provisioning-entries.component.scss']\n})\nexport class ProvisioningEntriesComponent implements OnInit {\n\n  /** Provisioning entry data. */\n  provisioningEntryData: any;\n  /** Columns to be displayed in provisioning entries table. */\n  displayedColumns: string[] = ['createdUser', 'createdDate', 'journalEntry', 'viewReport', 'recreateProvisioning', 'viewJournalEntry'];\n  /** Data source for provisioning entries table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for provisioning entries table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for provisioning entries table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the provisioning entries data from `resolve`.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: { provisioningEntries: any }) => {\n      this.provisioningEntryData = data.provisioningEntries.pageItems;\n    });\n  }\n\n  /**\n   * Sets the provisioning entries table.\n   */\n  ngOnInit() {\n    this.setProvisioningEntries();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for provisioning entries table.\n   */\n  setProvisioningEntries() {\n    this.dataSource = new MatTableDataSource(this.provisioningEntryData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n   * Filters data in provisioning entries table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Recreates provisioning entry.\n   * @param {Event} $event Event to stop propagation.\n   * @param {string} provisioningEntryId Provisioning entry id.\n   */\n  recreateProvisioning($event: Event, provisioningEntryId: string) {\n    this.accountingService.recreateProvisioningEntries(provisioningEntryId)\n      .subscribe((response: any) => {\n        this.router.navigate(['view', response.resourceId], { relativeTo: this.route });\n      });\n    $event.stopPropagation();\n  }\n\n  /**\n   * View journal entries for the provisioning entry.\n   * @param {Event} $event Event to stop propagation.\n   * @param {number} provisioningEntryId Provisioning entry id.\n   */\n  viewJournalEntry($event: Event, provisioningEntryId: number) {\n    this.router.navigate(['journal-entries/view', provisioningEntryId], { relativeTo: this.route });\n    $event.stopPropagation();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Provisioning entries data resolver.\n */\n@Injectable()\nexport class ProvisioningEntriesResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the provisioning entries data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.accountingService.getProvisioningEntries();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/**\n * Provisioning entry entries data resolver.\n */\n@Injectable()\nexport class ProvisioningEntryEntriesResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the provisioning entry entries data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const provisioningEntryId = route.paramMap.get('id');\n    return this.accountingService.getProvisioningEntryEntries(provisioningEntryId);\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/**\n * Provisioning entry data resolver.\n */\n@Injectable()\nexport class ProvisioningEntryResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the provisioning entry data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const provisioningEntryId = route.paramMap.get('id');\n    return this.accountingService.getProvisioningEntry(provisioningEntryId);\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"provisioningEntry\\\">\\n\\n  <div class=\\\"m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"createProvisioningJournalEntries()\\\" [disabled]=\\\"provisioningEntry.journalEntry\\\">\\n      <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n      Create Journal Entries\\n    </button>\\n  </div>\\n\\n  <mat-card>\\n\\n    <mat-card-content>\\n\\n      <div fxLayout=\\\"row wrap\\\" class=\\\"content\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <div fxFlex=\\\"16%\\\" class=\\\"header\\\">\\n          Created By\\n        </div>\\n\\n        <div fxFlex=\\\"16%\\\">\\n          {{ provisioningEntry.createdUser }}\\n        </div>\\n\\n        <div fxFlex=\\\"16%\\\" class=\\\"header\\\">\\n          Created On\\n        </div>\\n\\n        <div fxFlex=\\\"16%\\\">\\n          {{ provisioningEntry.createdDate }}\\n        </div>\\n\\n        <div fxFlex=\\\"18%\\\" class=\\\"header\\\">\\n          Amount to be Reserved\\n        </div>\\n\\n        <div fxFlex=\\\"18%\\\">\\n          {{ provisioningEntry.reservedAmount }}\\n        </div>\\n\\n      </div>\\n\\n    </mat-card-content>\\n\\n  </mat-card>\\n\\n</div>\\n\\n<!-- Search -->\\n<div class=\\\"container m-t-20\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n  <mat-form-field fxFlex=\\\"31%\\\">\\n    <mat-label>Office Name</mat-label>\\n    <input matInput [formControl]=\\\"officeName\\\" [matAutocomplete]=\\\"officeNameAutocomplete\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex=\\\"31%\\\">\\n    <mat-label>Loan Product</mat-label>\\n    <input matInput [formControl]=\\\"loanProduct\\\" [matAutocomplete]=\\\"loanProductAutocomplete\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex=\\\"31%\\\">\\n    <mat-label>Provisioning Category</mat-label>\\n    <input matInput [formControl]=\\\"provisioningCategory\\\" [matAutocomplete]=\\\"provisioningCategoryAutocomplete\\\">\\n  </mat-form-field>\\n\\n</div>\\n\\n<!-- Autocomplete data -->\\n<mat-autocomplete autoActiveFirstOption #officeNameAutocomplete=\\\"matAutocomplete\\\">\\n  <mat-option *ngFor=\\\"let office of filteredOfficeData | async\\\" [value]=\\\"office.name\\\">\\n    {{ office.name }}\\n  </mat-option>\\n</mat-autocomplete>\\n\\n<mat-autocomplete autoActiveFirstOption #loanProductAutocomplete=\\\"matAutocomplete\\\">\\n  <mat-option *ngFor=\\\"let loanProduct of filteredLoanProductData | async\\\" [value]=\\\"loanProduct.name\\\">\\n    {{ loanProduct.name }}\\n  </mat-option>\\n</mat-autocomplete>\\n\\n<mat-autocomplete autoActiveFirstOption #provisioningCategoryAutocomplete=\\\"matAutocomplete\\\">\\n  <mat-option *ngFor=\\\"let provisioningCategory of filteredProvisioningCategoryData | async\\\" [value]=\\\"provisioningCategory.categoryName\\\">\\n    {{ provisioningCategory.categoryName }}\\n  </mat-option>\\n</mat-autocomplete>\\n\\n<!--Table -->\\n\\n<div class=\\\"mat-elevation-z8 container\\\">\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <ng-container matColumnDef=\\\"officeName\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Office Name </th>\\n      <td mat-cell *matCellDef=\\\"let provisioningEntry\\\"> {{ provisioningEntry.officeName }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"productName\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Name </th>\\n      <td mat-cell *matCellDef=\\\"let provisioningEntry\\\"> {{ provisioningEntry.productName }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"currencyCode\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency Code </th>\\n      <td mat-cell *matCellDef=\\\"let provisioningEntry\\\"> {{ provisioningEntry.currencyCode }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"categoryName\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Category Name </th>\\n      <td mat-cell *matCellDef=\\\"let provisioningEntry\\\"> {{ provisioningEntry.categoryName }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"amountreserved\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Provisioning Amount </th>\\n      <td mat-cell *matCellDef=\\\"let provisioningEntry\\\"> {{ provisioningEntry.amountreserved }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"liabilityAccountName\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Liability Account (CR) </th>\\n      <td mat-cell *matCellDef=\\\"let provisioningEntry\\\"> {{ provisioningEntry.liabilityAccountName }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"expenseAccountName\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Expense Account (DR) </th>\\n      <td mat-cell *matCellDef=\\\"let provisioningEntry\\\"> {{ provisioningEntry.expenseAccountName }} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.content div {\\n  margin: 1rem 0;\\n  word-wrap: break-word; }\\n\\n.content div.header {\\n    font-weight: 500; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvcHJvdmlzaW9uaW5nLWVudHJpZXMvdmlldy1wcm92aXNpb25pbmctZW50cnkvdmlldy1wcm92aXNpb25pbmctZW50cnkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7O0FBR2I7RUFFSSxjQUFjO0VBQ2QscUJBQXFCLEVBQUE7O0FBSHpCO0lBTU0sZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hY2NvdW50aW5nL3Byb3Zpc2lvbmluZy1lbnRyaWVzL3ZpZXctcHJvdmlzaW9uaW5nLWVudHJ5L3ZpZXctcHJvdmlzaW9uaW5nLWVudHJ5LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNvbnRlbnQge1xuICBkaXYge1xuICAgIG1hcmdpbjogMXJlbSAwO1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcblxuICAgICYuaGVhZGVyIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgfVxuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl } from '@angular/forms';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\n\n/** rxjs Imports */\nimport { startWith, map, debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/**\n * View provisioning entry component.\n */\n@Component({\n  selector: 'mifosx-view-provisioning-entry',\n  templateUrl: './view-provisioning-entry.component.html',\n  styleUrls: ['./view-provisioning-entry.component.scss']\n})\nexport class ViewProvisioningEntryComponent implements OnInit, AfterViewInit {\n\n  /** Provisioning entry id. */\n  provisioningEntryId: string;\n  /** Provisioning entry. */\n  provisioningEntry: any;\n  /** Provisioning entry entries. */\n  provisioningEntryEntries: any;\n  /** Office name filter form control. */\n  officeName = new FormControl();\n  /** Office data. */\n  officeData: any;\n  /** Filtered office data for autocomplete. */\n  filteredOfficeData: any;\n  /** Loan product filter form control. */\n  loanProduct = new FormControl();\n  /** Loan product data. */\n  loanProductData: any;\n  /** Filtered loan product data for autocomplete. */\n  filteredLoanProductData: any;\n  /** Provisioning category filter form control. */\n  provisioningCategory = new FormControl();\n  /** Provisioning category data. */\n  provisioningCategoryData: any;\n  /** Filtered provisioning category data for autocomplete. */\n  filteredProvisioningCategoryData: any;\n  /** Columns to be displayed in provisioning entry entries table. */\n  displayedColumns: string[] = ['officeName', 'productName', 'currencyCode', 'categoryName', 'amountreserved', 'liabilityAccountName', 'expenseAccountName'];\n  /** Data source for provisioning entry entries table. */\n  dataSource: MatTableDataSource<any>;\n  /** Provisioning entry entries filter. */\n  filterValue: any = {\n    officeName: '',\n    productName: '',\n    categoryName: ''\n  };\n\n  /** Paginator for provisioning entry entries table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for provisioning entry entries table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the provisioning entry, provisioning entry entries, offices,\n   * loan products, provisioning categories data from `resolve`.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: {\n        provisioningEntry: any,\n        provisioningEntryEntries: any,\n        offices: any,\n        loanProducts: any,\n        provisiningCategories: any\n      }) => {\n        this.provisioningEntryId = data.provisioningEntry.id;\n        this.provisioningEntry = data.provisioningEntry;\n        this.provisioningEntryEntries = data.provisioningEntryEntries;\n        this.officeData = data.offices;\n        this.loanProductData = data.loanProducts;\n        this.provisioningCategoryData = data.provisiningCategories;\n      });\n  }\n\n  /**\n   * Sets filtered offices, loan products and provisioning categories for autocomplete\n   * and provisioning entry entries table.\n   */\n  ngOnInit() {\n    this.setProvisioningEntryEntries();\n    this.setFilteredOffices();\n    this.setFilteredLoanProducts();\n    this.setFilteredProvisioningCategories();\n  }\n\n  /**\n   * Subscribes to all search filters:\n   * Office Name, Loan Product, Provisioning categories.\n   */\n  ngAfterViewInit() {\n    this.officeName.valueChanges\n      .pipe(\n        map(value => value.toLowerCase()),\n        debounceTime(500),\n        distinctUntilChanged(),\n        tap((filterValue) => {\n          this.applyFilter(filterValue, 'officeName');\n        })\n      )\n      .subscribe();\n\n    this.loanProduct.valueChanges\n      .pipe(\n        map(value => value.toLowerCase()),\n        debounceTime(500),\n        distinctUntilChanged(),\n        tap((filterValue) => {\n          this.applyFilter(filterValue, 'productName');\n        })\n      )\n      .subscribe();\n\n    this.provisioningCategory.valueChanges\n      .pipe(\n        map(value => value.toLowerCase()),\n        debounceTime(500),\n        distinctUntilChanged(),\n        tap((filterValue) => {\n          this.applyFilter(filterValue, 'categoryName');\n        })\n      )\n      .subscribe();\n  }\n\n  /**\n   * Filter predicate for provisioning entry entries table data.\n   * @param {any} data Table data.\n   * @param {any} filterValue Values to filter data by.\n   */\n  filterPredicate(data: any, filterValue: any) {\n    return data.officeName.toLowerCase().indexOf(filterValue['officeName']) !== -1\n      && data.productName.toLowerCase().indexOf(filterValue['productName']) !== -1\n      && data.categoryName.toLowerCase().indexOf(filterValue['categoryName']) !== -1;\n  }\n\n  /**\n   * Initializes the data source, paginator, sorter and filter predicate for\n   * provisioning entry entries table.\n   */\n  setProvisioningEntryEntries() {\n    this.dataSource = new MatTableDataSource(this.provisioningEntryEntries.pageItems);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.dataSource.filterPredicate = this.filterPredicate;\n  }\n\n  /**\n   * Filters data in provisioning entry entries table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   * @param {string} property Property to filter data.\n   */\n  applyFilter(filterValue: string, property: string) {\n    this.filterValue[property] = filterValue;\n    this.dataSource.filter = this.filterValue;\n  }\n\n  /**\n   * Sets filtered offices for autocomplete.\n   */\n  setFilteredOffices() {\n    this.filteredOfficeData = this.officeName.valueChanges\n    .pipe(\n      startWith(''),\n      map((office: any) => typeof office === 'string' ? office : office.name),\n      map((officeName: string) => officeName ? this.filterOfficeAutocompleteData(officeName) : this.officeData)\n    );\n  }\n\n  /**\n   * Sets filtered loan products for autocomplete.\n   */\n  setFilteredLoanProducts() {\n    this.filteredLoanProductData = this.loanProduct.valueChanges\n    .pipe(\n      startWith(''),\n      map((loanProduct: any) => typeof loanProduct === 'string' ? loanProduct : loanProduct.name),\n      map((loanProductName: string) => loanProductName ? this.filterLoanProductAutocompleteData(loanProductName) : this.loanProductData)\n    );\n  }\n\n  /**\n   * Sets filtered provisioning categories for autocomplete.\n   */\n  setFilteredProvisioningCategories() {\n    this.filteredProvisioningCategoryData = this.provisioningCategory.valueChanges\n    .pipe(\n      startWith(''),\n      map((provisioningCategory: any) => typeof provisioningCategory === 'string' ? provisioningCategory : provisioningCategory.categoryName),\n      map((provisioningCategoryName: string) => provisioningCategoryName ? this.filterProvisioningCategoryAutocompleteData(provisioningCategoryName) : this.provisioningCategoryData)\n    );\n  }\n\n  /**\n   * Filters offices.\n   * @param {string} officeName Office name to filter office by.\n   * @returns {any} Filtered offices.\n   */\n  private filterOfficeAutocompleteData(officeName: string): any {\n    return this.officeData.filter((office: any) => office.name.toLowerCase().includes(officeName.toLowerCase()));\n  }\n\n  /**\n   * Filters loan products.\n   * @param {string} loanProductName Loan product name to filter loan products by.\n   * @returns {any} Filtered loan products.\n   */\n  private filterLoanProductAutocompleteData(loanProductName: string): any {\n    return this.loanProductData.filter((loanProduct: any) => loanProduct.name.toLowerCase().includes(loanProductName.toLocaleLowerCase()));\n  }\n\n  /**\n   * Filters provisioning categories.\n   * @param {string} provisioningCategoryName Provisioning category name to filter provisioning categories by.\n   * @returns {any} Filtered provisioning categories.\n   */\n  private filterProvisioningCategoryAutocompleteData(provisioningCategoryName: string): any {\n    return this.provisioningCategoryData.filter((provisioningCategory: any) => provisioningCategory.categoryName.toLowerCase().includes(provisioningCategoryName.toLocaleLowerCase()));\n  }\n\n  /**\n   * Creates provisioning journal entries\n   * and redirects to created entries.\n   */\n  createProvisioningJournalEntries() {\n    this.accountingService.createProvisioningJournalEntries(this.provisioningEntryId)\n      .subscribe((response: any) => {\n        this.router.navigate(['../../journal-entries/view', response.resourceId], { relativeTo: this.route });\n      });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../../accounting.service';\n\n/**\n * Provisioning journal entries data resolver.\n */\n@Injectable()\nexport class ProvisioningJournalEntriesResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the provisioning journal entries data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const id = route.paramMap.get('id');\n    return this.accountingService.getProvisioningJournalEntries(id);\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"id\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Entry ID </th>\\n        <td mat-cell *matCellDef=\\\"let provisioningJournalEntry\\\"> {{ provisioningJournalEntry.id }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"officeName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Office </th>\\n        <td mat-cell *matCellDef=\\\"let provisioningJournalEntry\\\"> {{ provisioningJournalEntry.officeName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"transactionDate\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Transaction Date </th>\\n        <td mat-cell *matCellDef=\\\"let provisioningJournalEntry\\\"> {{ provisioningJournalEntry.transactionDate }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"transactionId\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Transaction ID </th>\\n        <td mat-cell *matCellDef=\\\"let provisioningJournalEntry\\\"> {{ provisioningJournalEntry.transactionId }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"glAccountType\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\\n        <td mat-cell *matCellDef=\\\"let provisioningJournalEntry\\\"> {{ provisioningJournalEntry.glAccountType.value }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"createdByUserName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\\n        <td mat-cell *matCellDef=\\\"let provisioningJournalEntry\\\"> {{ provisioningJournalEntry.createdByUserName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"glAccountCode\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Account Code </th>\\n        <td mat-cell *matCellDef=\\\"let provisioningJournalEntry\\\"> {{ provisioningJournalEntry.glAccountCode }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"glAccountName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Account Name </th>\\n        <td mat-cell *matCellDef=\\\"let provisioningJournalEntry\\\"> {{ provisioningJournalEntry.glAccountName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"debit\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Debit </th>\\n        <td mat-cell *matCellDef=\\\"let provisioningJournalEntry\\\"><span *ngIf=\\\"provisioningJournalEntry.entryType.value === 'DEBIT'\\\"> {{ (provisioningJournalEntry.currency.displaySymbol || provisioningJournalEntry.currency.code) + ' ' + provisioningJournalEntry.amount }} </span></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"credit\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Credit </th>\\n        <td mat-cell *matCellDef=\\\"let provisioningJournalEntry\\\"><span *ngIf=\\\"provisioningJournalEntry.entryType.value === 'CREDIT'\\\"> {{ (provisioningJournalEntry.currency.displaySymbol || provisioningJournalEntry.currency.code) + ' ' + provisioningJournalEntry.amount }} </span></td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvcHJvdmlzaW9uaW5nLWVudHJpZXMvdmlldy1wcm92aXNpb25pbmctam91cm5hbC1lbnRyaWVzL3ZpZXctcHJvdmlzaW9uaW5nLWpvdXJuYWwtZW50cmllcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FjY291bnRpbmcvcHJvdmlzaW9uaW5nLWVudHJpZXMvdmlldy1wcm92aXNpb25pbmctam91cm5hbC1lbnRyaWVzL3ZpZXctcHJvdmlzaW9uaW5nLWpvdXJuYWwtZW50cmllcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\n\n/**\n * View provisioning journal entries component.\n */\n@Component({\n  selector: 'mifosx-view-provisioning-journal-entries',\n  templateUrl: './view-provisioning-journal-entries.component.html',\n  styleUrls: ['./view-provisioning-journal-entries.component.scss']\n})\nexport class ViewProvisioningJournalEntriesComponent implements OnInit {\n\n  /** Provisioning journal entry data. */\n  provisioningJournalEntryData: any;\n  /** Columns to be displayed in provisioning journal entries table. */\n  displayedColumns: string[] = ['id', 'officeName', 'transactionDate', 'transactionId', 'glAccountType', 'createdByUserName', 'glAccountCode', 'glAccountName', 'debit', 'credit'];\n  /** Data source for provisioning journal entries table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for provisioning journal entries table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for provisioning journal entries table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the provisioning journal entries data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { provisioningJournalEntry: any }) => {\n      this.provisioningJournalEntryData = data.provisioningJournalEntry.pageItems;\n    });\n  }\n\n  /**\n   * Sets the provisioning journal entries table.\n   */\n  ngOnInit() {\n    this.setProvisioningJournalEntry();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for provisioning journal entries table.\n   */\n  setProvisioningJournalEntry() {\n    this.dataSource = new MatTableDataSource(this.provisioningJournalEntryData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sortingDataAccessor = (transaction: any, property: any) => {\n      switch (property) {\n        case 'glAccountType': return transaction.glAccountType.value;\n        case 'debit': return transaction.amount;\n        case 'credit': return transaction.amount;\n        default: return transaction[property];\n      }\n    };\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n   * Filters data in provisioning journal entries table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"!data.reverted; else reverted\\\">\\n\\n  <h1 mat-dialog-title>Revert Transaction</h1>\\n  <div mat-dialog-content>\\n    <p>Are you sure you want to revert this transaction?</p>\\n    <mat-form-field fxFlexFill>\\n      <mat-label>Comments</mat-label>\\n      <textarea matInput [formControl]=\\\"comments\\\"></textarea>\\n    </mat-form-field>\\n  </div>\\n  <mat-dialog-actions align=\\\"end\\\">\\n    <button mat-button mat-dialog-close>No</button>\\n    <button mat-button [mat-dialog-close]=\\\"{ revert: true, comments: comments.value }\\\">Yes</button>\\n  </mat-dialog-actions>\\n\\n</div>\\n\\n<ng-template #reverted>\\n\\n    <h1 mat-dialog-title>Transaction Reverted</h1>\\n    <div mat-dialog-content>\\n      <h4>Success!</h4>\\n      <p>A new journal entry has been created to reverse this transaction:</p>\\n      <p>Transaction ID: {{ data.transactionId }}</p>\\n    </div>\\n    <mat-dialog-actions align=\\\"end\\\">\\n      <button mat-button mat-dialog-close>Close</button>\\n      <button mat-button [mat-dialog-close]=\\\"{ redirect: true }\\\">Redirect to New Transaction</button>\\n    </mat-dialog-actions>\\n\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnRpbmcvcmV2ZXJ0LXRyYW5zYWN0aW9uL3JldmVydC10cmFuc2FjdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\"","/** Angular Imports */\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormControl } from '@angular/forms';\n\n/**\n * Revert transaction dialog component.\n */\n@Component({\n  selector: 'mifosx-revert-transaction',\n  templateUrl: './revert-transaction.component.html',\n  styleUrls: ['./revert-transaction.component.scss']\n})\nexport class RevertTransactionComponent implements OnInit {\n\n  /** Comments input form control. */\n  comments = new FormControl('');\n\n  /**\n   * @param {MatDialogRef} dialogRef Component reference to dialog.\n   * @param {any} data Provides comments or reverted transaction ID.\n   */\n  constructor(public dialogRef: MatDialogRef<RevertTransactionComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n  }\n\n}\n","/** Angular Imports */\nimport { CollectionViewer, DataSource } from '@angular/cdk/collections';\n\n/** rxjs Imports */\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Journal entries custom data source to implement server side filtering, pagination and sorting.\n */\nexport class JournalEntriesDataSource implements DataSource<any> {\n\n  /** Journal entries behavior subject to represent loaded journal entries page. */\n  private journalEntriesSubject = new BehaviorSubject<any[]>([]);\n  /** Records subject to represent total number of filtered journal entry records. */\n  private recordsSubject = new BehaviorSubject<number>(0);\n  /** Records observable which can be subscribed to get the value of total number of filtered journal entry records. */\n  public records$ = this.recordsSubject.asObservable();\n\n  /**\n   * @param {AccountingService} accountingService Accounting Service\n   */\n  constructor(private accountingService: AccountingService) {  }\n\n  /**\n   * Gets journal entries on the basis of provided parameters and emits the value.\n   * @param {any} filterBy Properties by which entries should be filtered.\n   * @param {string} orderBy Property by which entries should be sorted.\n   * @param {string} sortOrder Sort order: ascending or descending.\n   * @param {number} pageIndex Page number.\n   * @param {number} limit Number of entries within the page.\n   */\n  getJournalEntries(filterBy: any, orderBy: string = '', sortOrder: string = '', pageIndex: number = 0, limit: number = 10) {\n    this.journalEntriesSubject.next([]);\n    orderBy = (orderBy === 'debit' || orderBy === 'credit') ? 'amount' : orderBy;\n    this.accountingService.getJournalEntries(filterBy, orderBy, sortOrder, pageIndex * limit, limit)\n      .subscribe((journalEntries: any) => {\n        this.recordsSubject.next(journalEntries.totalFilteredRecords);\n        this.journalEntriesSubject.next(journalEntries.pageItems);\n      });\n  }\n\n  /**\n   * @param {CollectionViewer} collectionViewer\n   */\n  connect(collectionViewer: CollectionViewer): Observable<any[]> {\n    return this.journalEntriesSubject.asObservable();\n  }\n\n  /**\n   * @param {CollectionViewer} collectionViewer\n   */\n  disconnect(collectionViewer: CollectionViewer): void {\n    this.journalEntriesSubject.complete();\n    this.recordsSubject.complete();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n  <mat-form-field fxFlex=\\\"31%\\\">\\n    <mat-label>Office Name</mat-label>\\n    <input matInput [formControl]=\\\"officeName\\\" [matAutocomplete]=\\\"officeNameAutocomplete\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex=\\\"31%\\\">\\n    <mat-label>GL Account Name or Code</mat-label>\\n    <input matInput [formControl]=\\\"glAccount\\\" [matAutocomplete]=\\\"glAccountAutocomplete\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex=\\\"31%\\\">\\n    <mat-label>Filter</mat-label>\\n    <mat-select [formControl]=\\\"entryTypeFilter\\\" (selectionChange)=\\\"applyFilter($event.value, 'manualEntriesOnly')\\\">\\n      <mat-option *ngFor=\\\"let filter of entryTypeFilterData\\\" [value]=\\\"filter.value\\\">\\n        {{ filter.option }}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex=\\\"31%\\\">\\n    <mat-label>Transaction Date From</mat-label>\\n    <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"transactionDateFromPicker\\\" [formControl]=\\\"transactionDateFrom\\\">\\n    <mat-datepicker-toggle matSuffix [for]=\\\"transactionDateFromPicker\\\"></mat-datepicker-toggle>\\n    <mat-datepicker #transactionDateFromPicker></mat-datepicker>\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex=\\\"31%\\\">\\n    <mat-label>Transaction Date To</mat-label>\\n    <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"transactionDateToPicker\\\" [formControl]=\\\"transactionDateTo\\\">\\n    <mat-datepicker-toggle matSuffix [for]=\\\"transactionDateToPicker\\\"></mat-datepicker-toggle>\\n    <mat-datepicker #transactionDateToPicker></mat-datepicker>\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex=\\\"31%\\\">\\n    <mat-label>Transaction ID</mat-label>\\n    <input matInput [formControl]=\\\"transactionId\\\">\\n  </mat-form-field>\\n\\n</div>\\n\\n\\n<!-- Autocomplete data -->\\n<mat-autocomplete autoActiveFirstOption #officeNameAutocomplete=\\\"matAutocomplete\\\" [displayWith]=\\\"displayOfficeName\\\">\\n  <mat-option *ngFor=\\\"let office of filteredOfficeData | async\\\" [value]=\\\"{ id: office.id, name: office.name }\\\">\\n    {{ office.name }}\\n  </mat-option>\\n</mat-autocomplete>\\n\\n<mat-autocomplete autoActiveFirstOption #glAccountAutocomplete=\\\"matAutocomplete\\\" [displayWith]=\\\"displayGLAccount\\\">\\n  <mat-option *ngFor=\\\"let glAccount of filteredGLAccountData | async\\\" [value]=\\\"{ id: glAccount.id, name: glAccount.name, glCode: glAccount.glCode }\\\">\\n    {{ glAccount.name + ' (' + glAccount.glCode + ')' }}\\n  </mat-option>\\n</mat-autocomplete>\\n\\n\\n<div class=\\\"mat-elevation-z8 container\\\">\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Entry ID </th>\\n      <td mat-cell *matCellDef=\\\"let journalEntry\\\"> {{ journalEntry.id }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"officeName\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Office </th>\\n      <td mat-cell *matCellDef=\\\"let journalEntry\\\"> {{ journalEntry.officeName }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"transactionId\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Transaction ID </th>\\n      <td mat-cell *matCellDef=\\\"let journalEntry\\\"> {{ journalEntry.transactionId }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"transactionDate\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Transaction Date </th>\\n      <td mat-cell *matCellDef=\\\"let journalEntry\\\"> {{ journalEntry.transactionDate }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"glAccountType\\\">\\n      <th mat-header-cell *matHeaderCellDef> Type </th>\\n      <td mat-cell *matCellDef=\\\"let journalEntry\\\"> {{ journalEntry.glAccountType.value }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"createdByUserName\\\">\\n      <th mat-header-cell *matHeaderCellDef> Created by </th>\\n      <td mat-cell *matCellDef=\\\"let journalEntry\\\"> {{ journalEntry.createdByUserName }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"glAccountCode\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Account Code </th>\\n      <td mat-cell *matCellDef=\\\"let journalEntry\\\"> {{ journalEntry.glAccountCode }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"glAccountName\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Account Name </th>\\n      <td mat-cell *matCellDef=\\\"let journalEntry\\\"> {{ journalEntry.glAccountName }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"debit\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Debit </th>\\n      <td mat-cell *matCellDef=\\\"let journalEntry\\\"><span *ngIf=\\\"journalEntry.entryType.value === 'DEBIT'\\\"> {{ (journalEntry.currency.displaySymbol || journalEntry.currency.code) + ' ' + journalEntry.amount }} </span></td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"credit\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Credit </th>\\n      <td mat-cell *matCellDef=\\\"let journalEntry\\\"><span *ngIf=\\\"journalEntry.entryType.value === 'CREDIT'\\\"> {{ (journalEntry.currency.displaySymbol || journalEntry.currency.code) + ' ' + journalEntry.amount }} </span></td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['transactions/view', row.transactionId]\\\" class=\\\"select-row\\\"></tr>\\n\\n  </table>\\n\\n  <mat-paginator [length]=\\\"dataSource?.records$ | async\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvc2VhcmNoLWpvdXJuYWwtZW50cnkvc2VhcmNoLWpvdXJuYWwtZW50cnkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7RUFEYjtJQUlJLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FjY291bnRpbmcvc2VhcmNoLWpvdXJuYWwtZW50cnkvc2VhcmNoLWpvdXJuYWwtZW50cnkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuXG4gIC5zZWxlY3Qtcm93OmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { merge } from 'rxjs';\nimport { tap, startWith, map, distinctUntilChanged, debounceTime} from 'rxjs/operators';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/** Custom Data Source */\nimport { JournalEntriesDataSource } from './journal-entry.datasource';\n\n/**\n * Search journal entry component.\n */\n@Component({\n  selector: 'mifosx-search-journal-entry',\n  templateUrl: './search-journal-entry.component.html',\n  styleUrls: ['./search-journal-entry.component.scss']\n})\nexport class SearchJournalEntryComponent implements OnInit, AfterViewInit {\n\n  /** Minimum transaction date allowed. */\n  minDate = new Date(2000, 0, 1);\n  /** Maximum transaction date allowed. */\n  maxDate = new Date();\n  /** Office name filter form control.  */\n  officeName = new FormControl();\n  /** Office data. */\n  officeData: any;\n  /** Filtered office data for autocomplete. */\n  filteredOfficeData: any;\n  /** Gl Account filter form control. */\n  glAccount = new FormControl();\n  /** Gl Account data. */\n  glAccountData: any;\n  /** Filtered gl account data. */\n  filteredGLAccountData: any;\n  /** Entry type filter form control. */\n  entryTypeFilter = new FormControl('');\n  /** Entry type filter data. */\n  entryTypeFilterData = [\n    {\n      option: 'All',\n      value: ''\n    },\n    {\n      option: 'Manual Entries',\n      value: true\n    },\n    {\n      option: 'System Entries',\n      value: false  // Bug: unable to implement from server side\n    }\n  ];\n  /** Transaction date from form control. */\n  transactionDateFrom = new FormControl(new Date(new Date().setMonth(new Date().getMonth() - 1)));\n  /** Transaction date to form control. */\n  transactionDateTo = new FormControl(new Date());\n  /** Transaction ID form control. */\n  transactionId = new FormControl();\n  /** Columns to be displayed in journal entries table. */\n  displayedColumns: string[] = ['id', 'officeName', 'transactionId', 'transactionDate', 'glAccountType', 'createdByUserName', 'glAccountCode', 'glAccountName', 'debit', 'credit'];\n  /** Data source for journal entries table. */\n  dataSource: JournalEntriesDataSource;\n  /** Journal entries filter. */\n  filterJournalEntriesBy = [\n    {\n      type: 'officeId',\n      value: ''\n    },\n    {\n      type: 'glAccountId',\n      value: ''\n    },\n    {\n      type: 'manualEntriesOnly',\n      value: ''\n    },\n    {\n      type: 'transactionId',\n      value: ''\n    },\n    {\n      type: 'fromDate',\n      value: this.getDate(new Date(new Date().setMonth(new Date().getMonth() - 1)))\n    },\n    {\n      type: 'toDate',\n      value: this.getDate(new Date())\n    },\n    {\n      type: 'dateFormat',\n      value: 'yyyy-MM-dd'\n    },\n    {\n      type: 'locale',\n      value: 'en'\n    }\n  ];\n\n  /** Paginator for journal entries table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for journal entries table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the offices and gl accounts data from `resolve`.\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private accountingService: AccountingService,\n              private route: ActivatedRoute) {\n    this.route.data.subscribe((data: {\n        offices: any,\n        glAccounts: any\n      }) => {\n        this.officeData = data.offices;\n        this.glAccountData = data.glAccounts;\n      });\n  }\n\n  /**\n   * Sets filtered offices and gl accounts for autocomplete and journal entries table.\n   */\n  ngOnInit() {\n    this.setFilteredOffices();\n    this.setFilteredGlAccounts();\n    this.getJournalEntries();\n  }\n\n  /**\n   * Subscribes to all search filters:\n   * Office Name, GL Account, Transaction ID, Transaction Date From, Transaction Date To,\n   * sort change and page change.\n   */\n  ngAfterViewInit() {\n    this.officeName.valueChanges\n      .pipe(\n        map(value => value.id ? value.id : ''),\n        debounceTime(500),\n        distinctUntilChanged(),\n        tap((filterValue) => {\n          this.applyFilter(filterValue, 'officeId');\n        })\n      )\n      .subscribe();\n\n    this.glAccount.valueChanges\n      .pipe(\n        map(value => value.id ? value.id : ''),\n        debounceTime(500),\n        distinctUntilChanged(),\n        tap((filterValue) => {\n          this.applyFilter(filterValue, 'glAccountId');\n        })\n      )\n      .subscribe();\n\n    this.transactionId.valueChanges\n      .pipe(\n        debounceTime(500),\n        distinctUntilChanged(),\n        tap((filterValue) => {\n          this.applyFilter(filterValue, 'transactionId');\n        })\n      )\n      .subscribe();\n\n    this.transactionDateFrom.valueChanges\n      .pipe(\n        debounceTime(500),\n        distinctUntilChanged(),\n        tap((filterValue) => {\n          this.applyFilter(this.getDate(filterValue), 'fromDate');\n        })\n      )\n      .subscribe();\n\n    this.transactionDateTo.valueChanges\n      .pipe(\n        debounceTime(500),\n        distinctUntilChanged(),\n        tap((filterValue) => {\n          this.applyFilter(this.getDate(filterValue), 'toDate');\n        })\n      )\n      .subscribe();\n\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        tap(() => this.loadJournalEntriesPage())\n      )\n      .subscribe();\n  }\n\n  /**\n   * Loads a page of journal entries.\n   */\n  loadJournalEntriesPage() {\n    if (!this.sort.direction) {\n      delete this.sort.active;\n    }\n    this.dataSource.getJournalEntries(this.filterJournalEntriesBy, this.sort.active, this.sort.direction, this.paginator.pageIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Filters data in journal entries table based on passed value and poperty.\n   * @param {string} filterValue Value to filter data.\n   * @param {string} property Property to filter data by.\n   */\n  applyFilter(filterValue: string, property: string) {\n    this.paginator.pageIndex = 0;\n    const findIndex = this.filterJournalEntriesBy.findIndex(filter => filter.type === property);\n    this.filterJournalEntriesBy[findIndex].value = filterValue;\n    this.loadJournalEntriesPage();\n  }\n\n  /**\n   * Displays office name in form control input.\n   * @param {any} office Office data.\n   * @returns {string} Office name if valid otherwise undefined.\n   */\n  displayOfficeName(office?: any): string | undefined {\n    return office ? office.name : undefined;\n  }\n\n  /**\n   * Displays gl account name in form control input.\n   * @param {any} glAccount Gl Account data.\n   * @returns {string} Gl Account name if valid otherwise undefined.\n   */\n  displayGLAccount(glAccount?: any): string | undefined {\n    return glAccount ? glAccount.name + ' (' + glAccount.glCode + ')' : undefined;\n  }\n\n  /**\n   * Sets filtered offices for autocomplete.\n   */\n  setFilteredOffices() {\n    this.filteredOfficeData = this.officeName.valueChanges\n      .pipe(\n        startWith(''),\n        map((office: any) => typeof office === 'string' ? office : office.name),\n        map((officeName: string) => officeName ? this.filterOfficeAutocompleteData(officeName) : this.officeData)\n      );\n  }\n\n  /**\n   * Sets filtered gl accounts for autocomplete.\n   */\n  setFilteredGlAccounts() {\n    this.filteredGLAccountData = this.glAccount.valueChanges\n      .pipe(\n        startWith(''),\n        map((glAccount: any) => typeof glAccount === 'string' ? glAccount : glAccount.name + ' (' + glAccount.glCode + ')'),\n        map((glAccount: string) => glAccount ? this.filterGLAccountAutocompleteData(glAccount) : this.glAccountData)\n      );\n  }\n\n  /**\n   * Filters offices.\n   * @param {string} officeName Office name to filter office by.\n   * @returns {any} Filtered offices.\n   */\n  private filterOfficeAutocompleteData(officeName: string): any {\n    return this.officeData.filter((office: any) => office.name.toLowerCase().includes(officeName.toLowerCase()));\n  }\n\n  /**\n   * Filters gl accounts.\n   * @param {string} glAccount Gl Account name to filter gl account by.\n   * @returns {any} Filtered gl accounts.\n   */\n  private filterGLAccountAutocompleteData(glAccount: string): any {\n    return this.glAccountData.filter((option: any) => (option.name + ' (' + option.glCode + ')').toLowerCase().includes(glAccount.toLowerCase()));\n  }\n\n  /**\n   * Initializes the data source for journal entries table and loads the first page.\n   */\n  getJournalEntries() {\n    this.dataSource = new JournalEntriesDataSource(this.accountingService);\n    this.dataSource.getJournalEntries(this.filterJournalEntriesBy, this.sort.active, this.sort.direction, this.paginator.pageIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Gets the date from the passed timestamp.\n   *\n   * TODO: Update once language and date settings are setup.\n   *\n   * @param {any} timestamp Timestam from which date is to be extracted.\n   */\n  private getDate(timestamp: any) {\n    let day = timestamp.getDate();\n    let month = timestamp.getMonth() + 1;\n    const year = timestamp.getFullYear();\n    if (day < 10) {\n      day = `0${day}`;\n    }\n    if (month < 10) {\n      month = `0${month}`;\n    }\n    return `${year}-${month}-${day}`;\n  }\n\n}\n","module.exports = \"<h1 mat-dialog-title>View Journal Entry</h1>\\n\\n<div mat-dialog-content>\\n\\n  <table>\\n\\n    <tr>\\n      <th>Office</th>\\n      <td>{{ data.journalEntry.officeName }}</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Entry ID</th>\\n      <td>{{ data.journalEntry.id }}</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Transaction ID</th>\\n      <td>{{ data.journalEntry.transactionId }}</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Transaction Date</th>\\n      <td>{{ data.journalEntry.transactionDate }}</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Type</th>\\n      <td>{{ data.journalEntry.glAccountType.value }}</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Account Code</th>\\n      <td>{{ data.journalEntry.glAccountId }}</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Account Name</th>\\n      <td>{{ data.journalEntry.glAccountName }}</td>\\n    </tr>\\n\\n    <tr>\\n      <th>\\n        <span *ngIf=\\\"data.journalEntry.entryType.value === 'CREDIT'\\\">Credit</span>\\n        <span *ngIf=\\\"data.journalEntry.entryType.value === 'DEBIT'\\\">Debit</span>\\n      </th>\\n      <td>\\n        {{ (data.journalEntry.currency.displaySymbol || data.journalEntry.currency.code) + ' ' + data.journalEntry.amount }}\\n      </td>\\n    </tr>\\n\\n    <tr *ngIf=\\\"data.journalEntry.referenceNumber\\\">\\n      <th>Reference Number</th>\\n      <td>{{ data.journalEntry.referenceNumber }}</td>\\n    </tr>\\n\\n    <tr *ngIf=\\\"data.journalEntry.comments\\\">\\n      <th>Comments</th>\\n      <td>{{ data.journalEntry.comments }}</td>\\n    </tr>\\n\\n    <tr *ngIf=\\\"data.journalEntry.transactionDetails.paymentDetails\\\">\\n      <th colspan=\\\"2\\\" class=\\\"header\\\">Payment Details</th>\\n    </tr>\\n\\n    <tr *ngIf=\\\"data.journalEntry.transactionDetails.paymentDetails?.paymentType\\\">\\n      <th>Payment Type</th>\\n      <td>{{ data.journalEntry.transactionDetails.paymentDetails.paymentType.name }}</td>\\n    </tr>\\n\\n    <tr *ngIf=\\\"data.journalEntry.transactionDetails.paymentDetails?.accountNumber\\\">\\n      <th>Account Number</th>\\n      <td>{{ data.journalEntry.transactionDetails.paymentDetails.accountNumber }}</td>\\n    </tr>\\n\\n    <tr *ngIf=\\\"data.journalEntry.transactionDetails.paymentDetails?.checkNumber\\\">\\n      <th>Cheque Number</th>\\n      <td>{{ data.journalEntry.transactionDetails.paymentDetails.checkNumber }}</td>\\n    </tr>\\n\\n    <tr *ngIf=\\\"data.journalEntry.transactionDetails.paymentDetails?.routingCode\\\">\\n      <th>Routing Code</th>\\n      <td>{{ data.journalEntry.transactionDetails.paymentDetails.routingCode }}</td>\\n    </tr>\\n\\n    <tr *ngIf=\\\"data.journalEntry.transactionDetails.paymentDetails?.receiptNumber\\\">\\n      <th>Receipt Number</th>\\n      <td>{{ data.journalEntry.transactionDetails.paymentDetails.receiptNumber }}</td>\\n    </tr>\\n\\n    <tr *ngIf=\\\"data.journalEntry.transactionDetails.paymentDetails?.bankNumber\\\">\\n      <th>Bank Number</th>\\n      <td>{{ data.journalEntry.transactionDetails.paymentDetails.bankNumber }}</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Created by</th>\\n      <td>{{ data.journalEntry.createdByUserName }}</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Created on</th>\\n      <td>{{ data.journalEntry.createdDate }}</td>\\n    </tr>\\n\\n  </table>\\n\\n</div>\\n\\n<mat-dialog-actions align=\\\"end\\\">\\n  <button mat-button mat-dialog-close>Close</button>\\n</mat-dialog-actions>\\n\"","module.exports = \"table th {\\n  text-align: left;\\n  font-weight: 500;\\n  padding: 0 0.4rem 0 0; }\\n  table th.header {\\n    text-align: center;\\n    padding: 0.4rem 0.4rem 0 0; }\\n  table td {\\n  padding: 0 0.4rem 0 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvdmlldy1qb3VybmFsLWVudHJ5L3ZpZXctam91cm5hbC1lbnRyeS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIscUJBQXFCLEVBQUE7RUFKekI7SUFPTSxrQkFBa0I7SUFDbEIsMEJBQTBCLEVBQUE7RUFSaEM7RUFhSSxxQkFBcUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FjY291bnRpbmcvdmlldy1qb3VybmFsLWVudHJ5L3ZpZXctam91cm5hbC1lbnRyeS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgdGgge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBwYWRkaW5nOiAwIDAuNHJlbSAwIDA7XG5cbiAgICAmLmhlYWRlciB7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBwYWRkaW5nOiAwLjRyZW0gMC40cmVtIDAgMDtcbiAgICB9XG4gIH1cblxuICB0ZCB7XG4gICAgcGFkZGluZzogMCAwLjRyZW0gMCAwO1xuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n/**\n * View journal entry dialog component.\n */\n@Component({\n  selector: 'mifosx-view-journal-entry',\n  templateUrl: './view-journal-entry.component.html',\n  styleUrls: ['./view-journal-entry.component.scss']\n})\nexport class ViewJournalEntryComponent implements OnInit {\n\n  /**\n   * @param {MatDialogRef} dialogRef Component reference to dialog.\n   * @param {any} data Provides journal entry.\n   */\n  constructor(public dialogRef: MatDialogRef<ViewJournalEntryComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/**\n * Transaction data resolver.\n */\n@Injectable()\nexport class TransactionResolver implements Resolve<Object> {\n\n  /**\n   * @param {AccountingService} accountingService Accounting service.\n   */\n  constructor(private accountingService: AccountingService) {}\n\n  /**\n   * Returns the transaction data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const transactionId = route.paramMap.get('id');\n    return this.accountingService.getJournalEntry(transactionId);\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" class=\\\"container m-b-20\\\" *ngIf=\\\"dataSource?.data[0].manualEntry\\\">\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"revertTransaction()\\\" [disabled]=\\\"dataSource?.data[0].reversed\\\">\\n    <span *ngIf=\\\"!dataSource.data[0].reversed\\\">\\n      <fa-icon icon=\\\"undo\\\"></fa-icon>&nbsp;&nbsp;\\n      Revert Transaction\\n    </span>\\n    <span *ngIf=\\\"dataSource.data[0].reversed\\\">Transaction Reverted</span>\\n  </button>\\n</div>\\n\\n<div class=\\\"container m-b-20\\\">\\n\\n    <mat-card class=\\\"mat-elevation-z8\\\" *ngIf=\\\"dataSource\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"row wrap\\\" class=\\\"content\\\">\\n\\n          <div fxFlex=\\\"25%\\\" fxFlex.lt-md=\\\"50%\\\" class=\\\"header\\\">\\n            Office\\n          </div>\\n\\n          <div fxFlex=\\\"25%\\\" fxFlex.lt-md=\\\"50%\\\">\\n            {{ dataSource.data[0].officeName }}\\n          </div>\\n\\n          <div fxFlex=\\\"25%\\\" fxFlex.lt-md=\\\"50%\\\" class=\\\"header\\\">\\n            Transaction Date\\n          </div>\\n\\n          <div fxFlex=\\\"25%\\\" fxFlex.lt-md=\\\"50%\\\">\\n            {{ dataSource.data[0].transactionDate }}\\n          </div>\\n\\n          <div fxFlex=\\\"25%\\\" fxFlex.lt-md=\\\"50%\\\" class=\\\"header\\\">\\n            Created By\\n          </div>\\n\\n          <div fxFlex=\\\"25%\\\" fxFlex.lt-md=\\\"50%\\\">\\n            {{ dataSource.data[0].createdByUserName }}\\n          </div>\\n\\n          <div fxFlex=\\\"25%\\\" fxFlex.lt-md=\\\"50%\\\" class=\\\"header\\\">\\n            Created On\\n          </div>\\n\\n          <div fxFlex=\\\"25%\\\" fxFlex.lt-md=\\\"50%\\\">\\n            {{ dataSource.data[0].createdDate }}\\n          </div>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n    </mat-card>\\n\\n</div>\\n\\n<div class=\\\"mat-elevation-z8 container\\\">\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Entry ID </th>\\n      <td mat-cell *matCellDef=\\\"let transaction\\\"> {{ transaction.id }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"glAccountType\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\\n      <td mat-cell *matCellDef=\\\"let transaction\\\"> {{ transaction.glAccountType.value }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"glAccountCode\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Account Code </th>\\n      <td mat-cell *matCellDef=\\\"let transaction\\\"> {{ transaction.glAccountCode }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"glAccountName\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Account Name </th>\\n      <td mat-cell *matCellDef=\\\"let transaction\\\"> {{ transaction.glAccountName }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"debit\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Debit </th>\\n      <td mat-cell *matCellDef=\\\"let transaction\\\"><span *ngIf=\\\"transaction.entryType.value === 'DEBIT'\\\"> {{ (transaction.currency.displaySymbol || transaction.currency.code) + ' ' + transaction.amount }} </span></td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"credit\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Credit </th>\\n      <td mat-cell *matCellDef=\\\"let transaction\\\"><span *ngIf=\\\"transaction.entryType.value === 'CREDIT'\\\"> {{ (transaction.currency.displaySymbol || transaction.currency.code) + ' ' + transaction.amount }} </span></td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"viewJournalEntry(row)\\\" class=\\\"select-row\\\"></tr>\\n\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10]\\\" showFirstLastButtons></mat-paginator>\\n\\n</div>\\n\"","module.exports = \".content div {\\n  line-height: 3rem; }\\n  .content div.header {\\n    font-weight: 500; }\\n  table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2FjY291bnRpbmcvdmlldy10cmFuc2FjdGlvbi92aWV3LXRyYW5zYWN0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksaUJBQWlCLEVBQUE7RUFGckI7SUFLTSxnQkFBZ0IsRUFBQTtFQUt0QjtFQUNFLFdBQVcsRUFBQTtFQURiO0lBSUksZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvYWNjb3VudGluZy92aWV3LXRyYW5zYWN0aW9uL3ZpZXctdHJhbnNhY3Rpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudCB7XG4gIGRpdiB7XG4gICAgbGluZS1oZWlnaHQ6IDNyZW07XG5cbiAgICAmLmhlYWRlciB7XG4gICAgICBmb250LXdlaWdodDogNTAwO1xuICAgIH1cbiAgfVxufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuXG4gIC5zZWxlY3Qtcm93OmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog, MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\n\n/** Custom Services */\nimport { AccountingService } from '../accounting.service';\n\n/** Custom Components */\nimport { RevertTransactionComponent } from '../revert-transaction/revert-transaction.component';\nimport { ViewJournalEntryComponent } from '../view-journal-entry/view-journal-entry.component';\n\n/**\n * View transaction component.\n */\n@Component({\n  selector: 'mifosx-view-transaction',\n  templateUrl: './view-transaction.component.html',\n  styleUrls: ['./view-transaction.component.scss']\n})\nexport class ViewTransactionComponent implements OnInit {\n\n  // TODO: Update once language and date settings are setup\n\n  /** Transaction data.  */\n  transaction: any;\n  /** Transaction ID. */\n  transactionId: string;\n  /** Columns to be displayed in transaction table. */\n  displayedColumns: string[] = ['id', 'glAccountType', 'glAccountCode', 'glAccountName', 'debit', 'credit'];\n  /** Data source for transaction table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for transaction table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for transaction table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * @param {AccountingService} accountingService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   * @param {MatDialog} dialog Dialog reference.\n   */\n  constructor(private accountingService: AccountingService,\n              private route: ActivatedRoute,\n              private router: Router,\n              public dialog: MatDialog) {  }\n\n  /**\n   * Retrieves the transaction data from `resolve` and sets the transaction table.\n   */\n  ngOnInit() {\n    this.route.data.subscribe((data: { transaction: any }) => {\n      this.transaction = data.transaction;\n      this.transactionId = data.transaction.pageItems[0].transactionId;\n      this.setTransaction();\n    });\n  }\n\n  /**\n   * Initializes the data source for transaction table with journal entries, paginator and sorter.\n   */\n  setTransaction() {\n    this.dataSource = new MatTableDataSource(this.transaction.pageItems);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sortingDataAccessor = (transaction: any, property: any) => {\n      switch (property) {\n        case 'glAccountType': return transaction.glAccountType.value;\n        case 'debit': return transaction.amount;\n        case 'credit': return transaction.amount;\n        default: return transaction[property];\n      }\n    };\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n   * View details of selected journal entry.\n   * @param {any} journalEntry Selected journal entry.\n   */\n  viewJournalEntry(journalEntry: any) {\n    this.dialog.open(ViewJournalEntryComponent, {\n      data: { journalEntry: journalEntry }\n    });\n  }\n\n  /**\n   * Reverts the given transaction and redirects to reverted transaction.\n   * @param {transactionId} transactionId Transaction ID of transaction to be reverted.\n   */\n  revertTransaction(transactionId?: string) {\n    const revertTransactionDialogRef = this.dialog.open(RevertTransactionComponent, {\n      data: { reverted: this.dataSource.data[0].reversed, transactionId: transactionId }\n    });\n    revertTransactionDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.revert) {\n        this.accountingService.revertTransaction(this.transactionId, response.comments).subscribe((reversedTransaction: any) => {\n          this.dataSource.data[0].reversed = true;\n          this.revertTransaction(reversedTransaction.transactionId);\n        });\n      } else if (response.redirect) {\n        this.router.navigate(['../', transactionId], { relativeTo: this.route });\n      }\n    });\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\n/**\n * Fallback to this route when no prior route is matched.\n */\nconst routes: Routes = [\n \n];\n\n/**\n * App Routing Module.\n *\n * Configures the fallback route.\n */\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class AppRoutingModule { }\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\n/** Tanslation Imports */\nimport { TranslateModule } from '@ngx-translate/core';\n\n/** Chart Imports */\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n/** Environment Configuration */\nimport { environment } from '../environments/environment.prod';\n\n/** Main Component */\nimport { WebAppComponent } from './web-app.component';\n\n/** Not Found Component */\nimport { NotFoundComponent } from './not-found/not-found.component';\n\n/** Custom Modules */\nimport { CoreModule } from './core/core.module';\nimport { HomeModule } from './home/home.module';\nimport { LoginModule } from './login/login.module';\nimport { SettingsModule } from './settings/settings.module';\nimport { NavigationModule } from './navigation/navigation.module';\nimport { ClientsModule } from './clients/clients.module';\nimport { GroupsModule } from './groups/groups.module';\nimport { CentersModule } from './centers/centers.module';\nimport { AccountingModule } from './accounting/accounting.module';\nimport { SelfServiceModule } from './self-service/self-service.module';\nimport { SystemModule } from './system/system.module';\nimport { ProductsModule } from './products/products.module';\nimport { OrganizationModule } from './organization/organization.module';\nimport { TemplatesModule } from './templates/templates.module';\nimport { UsersModule } from './users/users.module';\nimport { ReportsModule } from './reports/reports.module';\n\n\n\n/** Main Routing Module */\nimport { AppRoutingModule } from './app-routing.module';\n/**\n * App Module\n *\n * Core module and all feature modules should be imported here in proper order.\n */\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ServiceWorkerModule.register('./ngsw-worker.js', { enabled: environment.production }),\n    TranslateModule.forRoot(),\n    NgxChartsModule,\n    CoreModule,\n    HomeModule,\n    LoginModule,\n    SettingsModule,\n    NavigationModule,\n    ClientsModule,\n    GroupsModule,\n    CentersModule,\n    AccountingModule,\n    SelfServiceModule,\n    SystemModule,\n    ProductsModule,\n    OrganizationModule,\n    TemplatesModule,\n    UsersModule,\n    AppRoutingModule,\n    ReportsModule\n  ],\n  declarations: [WebAppComponent],\n  providers: [],\n  bootstrap: [WebAppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/** Routing Imports */\nimport { Route } from '../core/route/route.service';\n\n/** Translation Imports */\nimport { extract } from '../core/i18n/i18n.service';\n\nimport { CentersComponent } from './centers.component';\nimport { CentersViewComponent } from './centers-view/centers-view.component';\nimport { GeneralTabComponent } from './centers-view/general-tab/general-tab.component';\nimport { NotesTabComponent } from './centers-view/notes-tab/notes-tab.component';\nimport { EditCenterComponent } from './centers-view/edit-center/edit-center.component';\nimport { CreateOfficeComponent } from '../organization/offices/create-office/create-office.component';\nconst routes: Routes = [\n  Route.withShell([\n\n    {\n      path: 'centers',\n      data: { title: extract('Centers'),  breadcrumb: 'Centers', routeParamBreadcrumb: false },\n      children: [\n        {\n          path: '',\n          component: CentersComponent,\n        },\n        {\n          path: 'centerId',\n          component: CentersViewComponent,\n           data: { title: extract('Centers View'),  breadcrumb: 'Center Id',routeParamBreadcrumb: 'centerId' },\n            \n           children : [\n            {\n              path: 'general',\n              component: GeneralTabComponent,\n              data: { title: extract('General'), breadcrumb: 'General', routeParamBreadcrumb: false }\n            },\n            {\n              path: 'notes',\n              component: NotesTabComponent,\n              data: { title: extract('Notes'), breadcrumb: 'Notes', routeParamBreadcrumb: false }\n            }]\n          },\n          {\n            path: 'editcenter',\n            component: CreateOfficeComponent,\n            data: { title: extract('Edit Center'), breadcrumb: 'Edit Center', routeParamBreadcrumb: false }\n          }\n      ]\n    }\n  ])\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class CentersRoutingModule { }\n","module.exports = \"<mat-card class=\\\"center-card\\\">\\n  <mat-card-header fxLayout=\\\"column\\\" class=\\\"header\\\">\\n    <mat-card-title-group class=\\\"header-title-group\\\">\\n      <div class=\\\"mat-typography center-card-title\\\">\\n <mat-card-title>\\n  <h3>  Center Name : </h3>\\n  </mat-card-title>\\n  <mat-card-subtitle>\\n <p>Account :  <br>   \\n  Office :     </p>  \\n</mat-card-subtitle>\\n</div>\\n</mat-card-title-group>\\n  <mat-card-actions class=\\\"center-actions\\\">\\n    <button mat-raised-button [routerLink]=\\\"['../editcenter']\\\">Edit</button>\\n    <button mat-raised-button>+ Add Group</button>\\n    <button mat-raised-button>Manage Group</button>\\n    <button mat-raised-button>Center Saving Application</button>\\n    <button mat-raised-button [matMenuTriggerFor]=\\\"More\\\">More</button>\\n    <mat-menu #More=\\\"matMenu\\\">\\n      <button mat-menu-item>Assign Staff</button>\\n      <button mat-menu-item>Close</button>\\n      <button mat-menu-item>Attach Meeting</button>\\n      <button mat-menu-item>Self Assignment History</button>\\n    </mat-menu>\\n  </mat-card-actions>\\n</mat-card-header>\\n<mat-card-content>\\n  <nav mat-tab-nav-bar class=\\\"navigation-tabs\\\">\\n    <a mat-tab-link [routerLink]=\\\"['./general']\\\" >General</a>\\n    <a mat-tab-link [routerLink]=\\\"['./notes']\\\" >Notes</a>\\n  </nav>\\n  <router-outlet></router-outlet>\\n</mat-card-content>\\n</mat-card>\\n\"","module.exports = \".center-card {\\n  margin: 0 auto;\\n  max-width: 80rem;\\n  width: 90%;\\n  padding: 0; }\\n  .center-card .header {\\n    padding: 1%;\\n    background-color: #1074b9; }\\n  .center-card .header .header-title-group .center-card-title {\\n      color: white;\\n      width: 90%; }\\n  .center-card .header .header-title-group .center-card-title p {\\n        color: white; }\\n  .center-card .header .center-actions {\\n      align-self: flex-end;\\n      margin: 0 1%; }\\n  .center-card .navigation-tabs {\\n    overflow: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NlbnRlcnMvY2VudGVycy12aWV3L2NlbnRlcnMtdmlldy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLFVBQVUsRUFBQTtFQUpkO0lBTU0sV0FBVztJQUNYLHlCQUF5QixFQUFBO0VBUC9CO01BVVUsWUFBWTtNQUNaLFVBQVUsRUFBQTtFQVhwQjtRQWFZLFlBQVksRUFBQTtFQWJ4QjtNQW1CUSxvQkFBb0I7TUFDcEIsWUFBWSxFQUFBO0VBcEJwQjtJQXdCTSxjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jZW50ZXJzL2NlbnRlcnMtdmlldy9jZW50ZXJzLXZpZXcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2VudGVyLWNhcmQge1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIG1heC13aWR0aDogODByZW07XG4gICAgd2lkdGg6IDkwJTtcbiAgICBwYWRkaW5nOiAwO1xuICAgIC5oZWFkZXIge1xuICAgICAgcGFkZGluZzogMSU7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTA3NGI5O1xuICAgICAgLmhlYWRlci10aXRsZS1ncm91cCB7XG4gICAgICAgIC5jZW50ZXItY2FyZC10aXRsZSB7XG4gICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgICAgcCB7XG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gIFxuICAgICAgLmNlbnRlci1hY3Rpb25zIHtcbiAgICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG4gICAgICAgIG1hcmdpbjogMCAxJTtcbiAgICAgIH1cbiAgICB9XG4gICAgLm5hdmlnYXRpb24tdGFicyB7XG4gICAgICBvdmVyZmxvdzogYXV0bztcbiAgICB9XG4gIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'mifosx-centers-view',\n  templateUrl: './centers-view.component.html',\n  styleUrls: ['./centers-view.component.scss']\n})\nexport class CentersViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n     \\n\\n      \\n\\n          <mat-form-field>\\n            <mat-label >Name</mat-label>\\n            <input required matInput >\\n            \\n          </mat-form-field>\\n<br>\\n          <mat-form-field>\\n            <mat-label>Staff</mat-label>\\n            <mat-select  >\\n              <mat-option >\\n               Finos\\n              </mat-option>\\n            </mat-select>\\n           \\n          </mat-form-field>\\n<br>\\n          <mat-form-field>\\n            <mat-label>External ID</mat-label>\\n            <input matInput >\\n          </mat-form-field>\\n<br>\\n          <mat-form-field>\\n            <mat-label>Activation Date</mat-label>\\n            <input  required [matDatepicker]=\\\"openedOnDatePicker\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"openedOnDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #openedOnDatePicker></mat-datepicker>\\n           \\n          </mat-form-field>\\n\\n         \\n          \\n      \\n        \\n     \\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!officeForm.valid\\\">Submit</button>\\n      </mat-card-actions>\\n\\n\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n  .container .thanu {\\n    color: black; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NlbnRlcnMvY2VudGVycy12aWV3L2VkaXQtY2VudGVyL2VkaXQtY2VudGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQWdCLEVBQUE7RUFEcEI7SUFHUSxZQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jZW50ZXJzL2NlbnRlcnMtdmlldy9lZGl0LWNlbnRlci9lZGl0LWNlbnRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICAgIG1heC13aWR0aDogMzdyZW07XG4gICAgLnRoYW51e1xuICAgICAgICBjb2xvcjpibGFjaztcbiAgICB9XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'mifosx-edit-center',\n  templateUrl: './edit-center.component.html',\n  styleUrls: ['./edit-center.component.scss']\n})\nexport class EditCenterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"tab-container mat-typography\\\">\\n  <h3>Summary</h3>\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"32px\\\" class=\\\"performance-history-container\\\">\\n    <p>\\n     Active Clients: <br />\\n     Active Group Loans: <br />\\n     Active Client Loans: <br />\\n     Active Group Borrowers: <br />\\n    </p>\\n    <p>\\n      Active Client Borrowers:  <br />\\n      Active Overdue Group Loans: <br />\\n      Active Overdue Client Loans: <br />\\n    </p>\\n  </div>\\n</div>\\n\"","module.exports = \".tab-container {\\n  padding: 1%;\\n  margin: 1%; }\\n  .tab-container h3 {\\n    margin: 1% auto; }\\n  .tab-container .performance-history-container {\\n    border: 1px solid;\\n    padding: 1%; }\\n  .tab-container table {\\n    width: 100%; }\\n  .tab-container table .account-action-button {\\n      min-width: 26px;\\n      padding: 0 6px;\\n      margin: 4px;\\n      line-height: 25px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NlbnRlcnMvY2VudGVycy12aWV3L2dlbmVyYWwtdGFiL2dlbmVyYWwtdGFiLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVztFQUNYLFVBQVUsRUFBQTtFQUZkO0lBS00sZUFBYyxFQUFBO0VBTHBCO0lBUU0saUJBQWlCO0lBQ2pCLFdBQVcsRUFBQTtFQVRqQjtJQWFNLFdBQVcsRUFBQTtFQWJqQjtNQWVRLGVBQWU7TUFDZixjQUFjO01BQ2QsV0FBVztNQUNYLGlCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvY2VudGVycy9jZW50ZXJzLXZpZXcvZ2VuZXJhbC10YWIvZ2VuZXJhbC10YWIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGFiLWNvbnRhaW5lciB7XG4gICAgcGFkZGluZzogMSU7XG4gICAgbWFyZ2luOiAxJTtcbiAgXG4gICAgaDN7XG4gICAgICBtYXJnaW46MSUgYXV0bztcbiAgICB9XG4gICAgLnBlcmZvcm1hbmNlLWhpc3RvcnktY29udGFpbmVyIHtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkO1xuICAgICAgcGFkZGluZzogMSU7XG4gICAgfVxuICBcbiAgICB0YWJsZSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIC5hY2NvdW50LWFjdGlvbi1idXR0b257XG4gICAgICAgIG1pbi13aWR0aDogMjZweDtcbiAgICAgICAgcGFkZGluZzogMCA2cHg7XG4gICAgICAgIG1hcmdpbjogNHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMjVweDtcbiAgICAgIH1cbiAgICB9XG4gIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mifosx-general-tab',\n  templateUrl: './general-tab.component.html',\n  styleUrls: ['./general-tab.component.scss']\n})\nexport class GeneralTabComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"tab-container mat-typography\\\">\\n  <h3>Notes</h3>\\n  <div>\\n    <form #formRef=\\\"ngForm\\\" [formGroup]=\\\"noteForm\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start baseline\\\" fxLayoutGap=\\\"20px\\\"\\n      (ngSubmit)=\\\"submit()\\\">\\n      <mat-form-field  class=\\\"text\\\" fxFlex=\\\"calc(90%-20px)\\\">\\n        <textarea  matInput placeholder=\\\"Write a note ....\\\"></textarea>\\n      </mat-form-field>\\n      <button mat-raised-button fxFlex color=\\\"primary\\\" [disabled]=\\\"!noteForm.valid\\\">\\n        <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp; Add\\n      </button>\\n    </form>\\n  </div>\\n  <mat-list>\\n    <mat-list-item *ngFor=\\\"let clientNote of clientNotes; let i=index;\\\">\\n      <fa-icon icon=\\\"sticky-note\\\" matListIcon></fa-icon>\\n      <h3 matLine>{{clientNote.note}} </h3>\\n      <p matLine>\\n        <span>Created by: {{clientNote.createdByUsername}}</span><br />\\n        <span>Date: {{clientNote.createdOn | date}}</span>\\n      </p>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"flex-start\\\">\\n        <button mat-button color=\\\"primary\\\" (click)=\\\"editNote(clientNote.id,clientNote.note,i)\\\">\\n          <fa-icon icon=\\\"edit\\\"></fa-icon>\\n        </button>\\n        <button mat-button color=\\\"warn\\\" (click)=\\\"deleteNote(clientNote.id,i)\\\">\\n          <fa-icon icon=\\\"trash\\\"></fa-icon>\\n        </button>\\n      </div>\\n    </mat-list-item>\\n  </mat-list>\\n</div>\"","module.exports = \".tab-container {\\n  padding: 1%;\\n  margin: 1%; }\\n  .tab-container .text {\\n    padding: 1px;\\n    border-bottom: 2px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NlbnRlcnMvY2VudGVycy12aWV3L25vdGVzLXRhYi9ub3Rlcy10YWIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFXO0VBQ1gsVUFBVSxFQUFBO0VBRmQ7SUFJTSxZQUFXO0lBQ1gsa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jZW50ZXJzL2NlbnRlcnMtdmlldy9ub3Rlcy10YWIvbm90ZXMtdGFiLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhYi1jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDElO1xuICAgIG1hcmdpbjogMSU7XG4gIC50ZXh0e1xuICAgICAgcGFkZGluZzoxcHg7XG4gICAgICBib3JkZXItYm90dG9tOiAycHg7XG4gIH1cbiAgfVxuICBcbiAgIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'mifosx-notes-tab',\n  templateUrl: './notes-tab.component.html',\n  styleUrls: ['./notes-tab.component.scss']\n})\nexport class NotesTabComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-t-40 m-b-40\\\">\\n\\n  <mat-form-field class=\\\"filter\\\">\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header='name'> Name </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row?.name}} </td>\\n      </ng-container>\\n\\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"accountno\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header='accountno'> Account # </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row?.accountNo}} </td>\\n      </ng-container>\\n\\n      <!-- Account no Column -->\\n      <ng-container matColumnDef=\\\"externalid\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header='externalid'> ExternalID </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row?.externalId}} </td>\\n      </ng-container>\\n\\n      <!-- External ID Column -->\\n      <ng-container matColumnDef=\\\"status\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header='status'> Status </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> <div [className]=\\\"row.active === true ? 'active' : 'inactive'\\\">\\n            <i class=\\\"fa fa-home fa-2x\\\"> </i>\\n        </div> </td>\\n        \\n      </ng-container>\\n\\n\\n\\n      <!-- Status Column -->\\n      <ng-container matColumnDef=\\\"office\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header='office'> Office </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row?.officeName}} </td>\\n      </ng-container>\\n\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" routerLink=\\\"/centers/centerId/general\\\">\\n         \\n      </tr>\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\n  </div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd, th {\\n  width: 15%; }\\n\\n.filter {\\n  width: 50%; }\\n\\n.inactive {\\n  color: red; }\\n\\n.active {\\n  color: green; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NlbnRlcnMvY2VudGVycy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDRTtFQUNFLFdBQVcsRUFBQTs7QUFHYjtFQUNFLGVBQWU7RUFDZixXQUFXLEVBQUE7O0FBR2I7RUFDRSxVQUFVLEVBQUE7O0FBR1o7RUFDRSxVQUFVLEVBQUE7O0FBR1o7RUFDRSxVQUFVLEVBQUE7O0FBR1o7RUFDRSxZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jZW50ZXJzL2NlbnRlcnMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgdGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICAubWF0LWZvcm0tZmllbGQge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICBcbiAgdGQsIHRoIHtcbiAgICB3aWR0aDogMTUlO1xuICB9XG4gIFxuICAuZmlsdGVye1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cbiAgXG4gIC5pbmFjdGl2ZSB7XG4gICAgY29sb3I6IHJlZDtcbiAgfVxuICBcbiAgLmFjdGl2ZSB7XG4gICAgY29sb3I6IGdyZWVuO1xuICB9XG4gIFxuICAiXX0= */\"","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport { CentersService } from './centers.service';\nimport {DataSource} from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'mifosx-app-centers',\n  templateUrl: './centers.component.html',\n  styleUrls: ['./centers.component.scss'],\n\n})\nexport class CentersComponent implements OnInit {\n  private ELEMENT_DATA: any = undefined;\n  displayedColumns =  ['name', 'accountno', 'externalid', 'status', 'office'];\n  dataSource = new MatTableDataSource();\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private centerService: CentersService) { }\n\n  ngOnInit() {\n      this.centerService.getCenters()\n      .subscribe(\n        (res => {\n         console.log(res);\n        // console.log(res.active);\n         res.active = !!res.active;\n         this.dataSource = new MatTableDataSource(res);\n         this.dataSource.paginator = this.paginator;\n         this.dataSource.sort = this.sort;\n        })\n      );\n  }\n\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule } from '../core/core.module';\nimport { MatTableModule } from '@angular/material/table';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { CentersComponent } from './centers.component';\nimport { CentersRoutingModule } from './centers-routing.module';\nimport { CentersService } from './centers.service';\nimport { CentersViewComponent } from './centers-view/centers-view.component';\nimport { GeneralTabComponent } from './centers-view/general-tab/general-tab.component';\nimport { NotesTabComponent } from './centers-view/notes-tab/notes-tab.component';\nimport { EditCenterComponent } from './centers-view/edit-center/edit-center.component';\nimport { CreateOfficeComponent } from '../organization/offices/create-office/create-office.component';\n\n@NgModule({\n  imports: [\n    CoreModule,\n    CommonModule,\n    CentersRoutingModule,\n    FormsModule,\n    MatTableModule,\n    FlexLayoutModule\n\n  ],\n  declarations: [CentersComponent, CentersViewComponent, GeneralTabComponent, NotesTabComponent, EditCenterComponent],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class CentersModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n  })\n\n\nexport class CentersService {\n    constructor(private http: HttpClient) { }\n\n    getCenters(): Observable<any> {\n        return  this.http.get('/centers');\n    }\n\n}\n","import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/** Routing Imports */\nimport { Route } from '../core/route/route.service';\n\n/** Translation Imports */\nimport { extract } from '../core/i18n/i18n.service';\n\n/** Custom Components */\nimport { ClientsComponent } from './clients.component';\nimport { ClientsViewComponent } from './clients-view/clients-view.component';\nimport { GeneralTabComponent } from './clients-view/general-tab/general-tab.component';\nimport { FamilyMembersTabComponent } from './clients-view/family-members-tab/family-members-tab.component';\nimport { AddFamilyMemberComponent } from './clients-view/family-members-tab/add-family-member/add-family-member.component';\nimport { EditFamilyMemberComponent } from './clients-view/family-members-tab/edit-family-member/edit-family-member.component';\nimport { IdentitiesTabComponent } from './clients-view/identities-tab/identities-tab.component';\nimport { NotesTabComponent } from './clients-view/notes-tab/notes-tab.component';\nimport { DocumentsTabComponent } from './clients-view/documents-tab/documents-tab.component';\nimport { DatatableTabComponent } from './clients-view/datatable-tab/datatable-tab.component';\nimport { AddressTabComponent } from './clients-view/address-tab/address-tab.component';\n\n/** Custom Resolvers */\nimport { ClientViewResolver } from './common-resolvers/client-view.resolver';\nimport { ClientAccountsResolver } from './common-resolvers/client-accounts.resolver';\nimport { ClientAddressResolver } from './common-resolvers/client-address.resolver';\nimport { ClientChargesResolver } from './common-resolvers/client-charges.resolver';\nimport { ClientSummaryResolver } from './common-resolvers/client-summary.resolver';\nimport { ClientFamilyMembersResolver } from './common-resolvers/client-family-members.resolver';\nimport { ClientFamilyMemberResolver } from './common-resolvers/client-family-member.resolver';\nimport { ClientTemplateResolver } from './common-resolvers/client-template.resolver';\nimport { ClientIdentitiesResolver } from './common-resolvers/client-identities.resolver';\nimport { ClientNotesResolver } from './common-resolvers/client-notes.resolver';\nimport { ClientDocumentsResolver } from './common-resolvers/client-document.resolver';\nimport { ClientDatatablesResolver } from './common-resolvers/client-datatables.resolver';\nimport { ClientDatatableResolver } from './common-resolvers/client-datatable.resolver';\nimport { ClientIdentifierTemplateResolver } from './common-resolvers/client-identifier-template.resolver';\nimport { ClientAddressFieldConfigurationResolver } from './common-resolvers/client-address-fieldconfiguration.resolver';\nimport { ClientAddressTemplateResolver } from './common-resolvers/client-address-template.resolver';\n\nconst routes: Routes = [\n  Route.withShell([{\n    path: 'clients',\n    data: { title: extract('Clients'), breadcrumb: 'Clients', routeParamBreadcrumb: false },\n    children: [\n      {\n        path: '',\n        component: ClientsComponent,\n      },\n      {\n        path: ':clientId',\n        component: ClientsViewComponent,\n        data: { title: extract('Clients View'), routeParamBreadcrumb: 'clientId' },\n        resolve: {\n          clientViewData: ClientViewResolver,\n          clientTemplateData: ClientTemplateResolver,\n          clientDatatables: ClientDatatablesResolver\n        },\n        children: [\n          {\n            path: 'general',\n            component: GeneralTabComponent,\n            data: { title: extract('General'), breadcrumb: 'General', routeParamBreadcrumb: false },\n            resolve: {\n              clientAccountsData: ClientAccountsResolver,\n              clientChargesData: ClientChargesResolver,\n              clientSummary: ClientSummaryResolver\n            }\n          },\n          {\n            path: 'address',\n            component: AddressTabComponent,\n            data: { title: extract('Address'), breadcrumb: 'Address', routeParamBreadcrumb: false },\n            resolve: {\n              clientAddressFieldConfig: ClientAddressFieldConfigurationResolver,\n              clientAddressTemplateData: ClientAddressTemplateResolver,\n              clientAddressData: ClientAddressResolver\n            }\n          },\n          {\n            path: 'family-members',\n            data: { title: extract('Family Members'), breadcrumb: 'Family Members', routeParamBreadcrumb: false },\n            children: [\n              {\n                path: '',\n                component: FamilyMembersTabComponent,\n                resolve: {\n                  clientFamilyMembers: ClientFamilyMembersResolver\n                }\n              },\n              {\n                path: 'add',\n                component: AddFamilyMemberComponent,\n                data: { title: extract('Add'), breadcrumb: 'Add', routeParamBreadcrumb: false },\n                resolve: {\n                  clientTemplate: ClientTemplateResolver\n                }\n              },\n              {\n                path: ':familyMemberId',\n                children: [{\n                  path: 'edit',\n                  component: EditFamilyMemberComponent,\n                  data: { title: extract('Family Member View'), routeParamBreadcrumb: 'familyMemberId' },\n                  resolve: {\n                    clientTemplate: ClientTemplateResolver,\n                    editFamilyMember: ClientFamilyMemberResolver\n                  }\n                }]\n              }\n            ]\n          },\n          {\n            path: 'identities',\n            component: IdentitiesTabComponent,\n            data: { title: extract('Identities'), breadcrumb: 'Identities', routeParamBreadcrumb: false },\n            resolve: {\n              clientIdentities: ClientIdentitiesResolver,\n              clientIdentifierTemplate: ClientIdentifierTemplateResolver\n            }\n          },\n          {\n            path: 'documents',\n            component: DocumentsTabComponent,\n            data: { title: extract('Documents'), breadcrumb: 'Documents', routeParamBreadcrumb: false },\n            resolve: {\n              clientDocuments: ClientDocumentsResolver\n            }\n          },\n          {\n            path: 'notes',\n            component: NotesTabComponent,\n            data: { title: extract('Notes'), breadcrumb: 'Notes', routeParamBreadcrumb: false },\n            resolve: {\n              clientNotes: ClientNotesResolver\n            }\n          },\n          {\n            path: 'datatables',\n            children: [{\n              path: ':datatableName',\n              component: DatatableTabComponent,\n              data: { title: extract('Data Table View'), routeParamBreadcrumb: 'datatableName' },\n              resolve: {\n                clientDatatable: ClientDatatableResolver\n              }\n            }]\n          }\n        ]\n      }\n    ]\n  }\n  ])\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    ClientViewResolver,\n    ClientAccountsResolver,\n    ClientAddressResolver,\n    ClientChargesResolver,\n    ClientSummaryResolver,\n    ClientFamilyMembersResolver,\n    ClientFamilyMemberResolver,\n    ClientTemplateResolver,\n    ClientIdentitiesResolver,\n    ClientNotesResolver,\n    ClientDocumentsResolver,\n    ClientDatatablesResolver,\n    ClientDatatableResolver,\n    ClientIdentifierTemplateResolver,\n    ClientAddressFieldConfigurationResolver,\n    ClientAddressTemplateResolver\n  ]\n})\nexport class ClientsRoutingModule { }\n","module.exports = \"<div class=\\\"tab-container mat-typography\\\">\\n  <h3>Address</h3>\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"flex-end\\\">\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addAddress()\\\">\\n      <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;Add\\n    </button>\\n  </div>\\n  <mat-accordion>\\n    <mat-expansion-panel *ngFor=\\\"let address of clientAddressData;index as i\\\" class=\\\"address\\\">\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          {{address.addressType}}\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          {{address.relationship}}\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n      <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      <div class=\\\"address-actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"flex-end center\\\">\\n        <button mat-button color=\\\"primary\\\" (click)=\\\"editAddress(address,i)\\\">\\n          <fa-icon icon=\\\"edit\\\"></fa-icon>\\n        </button>\\n        <mat-slide-toggle [checked]=\\\"address.isActive\\\" (change)=\\\"toogleAddress(address)\\\"></mat-slide-toggle>\\n      </div>\\n      <p>\\n        <span *ngIf=\\\"isFieldEnabled('street')\\\">Street : {{address.street}}<br /></span>\\n        <span *ngIf=\\\"isFieldEnabled('addressLine1')\\\">Address Line 1 : {{address.addressLine1}}<br /></span>\\n        <span *ngIf=\\\"isFieldEnabled('addressLine2')\\\">Address Line 2 : {{address.addressLine2}}<br /></span>\\n        <span *ngIf=\\\"isFieldEnabled('addressLine3')\\\">Address Line 3 : {{address.addressLine3}}<br /></span>\\n        <span *ngIf=\\\"isFieldEnabled('townVillage')\\\">Town / Village : {{address.townVillage}}<br /></span>\\n        <span *ngIf=\\\"isFieldEnabled('city')\\\">City : {{address.city}}<br /></span>\\n        <span *ngIf=\\\"isFieldEnabled('stateProvinceId')\\\">State / Province :\\n          {{getSelectedValue('stateProvinceIdOptions',address.stateProvinceId)?.name}}<br /></span>\\n        <span *ngIf=\\\"isFieldEnabled('countryId')\\\">Country :\\n          {{getSelectedValue('countryIdOptions',address.countryId)?.name}}<br /></span>\\n        <span *ngIf=\\\"isFieldEnabled('postalCode')\\\">Postal Code : {{address.postalCode}}<br /></span>\\n        <span *ngIf=\\\"isFieldEnabled('isActive')\\\">Active Status : {{address.isActive}}<br /></span>\\n      </p>\\n    </mat-expansion-panel>\\n  </mat-accordion>\\n</div>\\n\"","module.exports = \".tab-container {\\n  padding: 1%;\\n  margin: 1%; }\\n  .tab-container .address .address-actions {\\n    margin-top: 1%; }\\n  .tab-container .address .address-actions button {\\n      margin-right: 1%; }\\n  .tab-container .address h3 {\\n    margin: 1% auto; }\\n  .tab-container .address p {\\n    line-height: 30px;\\n    margin-left: 2%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NsaWVudHMvY2xpZW50cy12aWV3L2FkZHJlc3MtdGFiL2FkZHJlc3MtdGFiLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVTtFQUNWLFVBQVUsRUFBQTtFQUZkO0lBTVEsY0FBYyxFQUFBO0VBTnRCO01BUVUsZ0JBQWdCLEVBQUE7RUFSMUI7SUFZUSxlQUFlLEVBQUE7RUFadkI7SUFnQlEsaUJBQWlCO0lBQ2pCLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NsaWVudHMvY2xpZW50cy12aWV3L2FkZHJlc3MtdGFiL2FkZHJlc3MtdGFiLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhYi1jb250YWluZXIge1xuICAgIHBhZGRpbmc6MSU7XG4gICAgbWFyZ2luOiAxJTtcbiAgXG4gICAgLmFkZHJlc3Mge1xuICAgICAgLmFkZHJlc3MtYWN0aW9uc3tcbiAgICAgICAgbWFyZ2luLXRvcDogMSU7XG4gICAgICAgIGJ1dHRvbntcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDElO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBoMyB7XG4gICAgICAgIG1hcmdpbjogMSUgYXV0bztcbiAgICAgIH1cbiAgXG4gICAgICBwIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAyJTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material';\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\nimport { SelectBase } from 'app/shared/form-dialog/formfield/model/select-base';\n\n/** Custom Components */\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\n\n/** Custom Services */\nimport { ClientsService } from '../../clients.service';\n\n@Component({\n  selector: 'mifosx-address-tab',\n  templateUrl: './address-tab.component.html',\n  styleUrls: ['./address-tab.component.scss']\n})\nexport class AddressTabComponent implements OnInit {\n\n  clientAddressData: any;\n  clientAddressFieldConfig: any;\n  clientAddressTemplate: any;\n  clientId: string;\n\n  constructor(private route: ActivatedRoute,\n    private clientService: ClientsService,\n    private dialog: MatDialog) {\n    this.route.data.subscribe((data: {\n      clientAddressData: any,\n      clientAddressFieldConfig: any,\n      clientAddressTemplateData: any\n    }) => {\n      this.clientAddressData = data.clientAddressData;\n      this.clientAddressFieldConfig = data.clientAddressFieldConfig;\n      this.clientAddressTemplate = data.clientAddressTemplateData;\n      this.clientId = this.route.parent.snapshot.paramMap.get('clientId');\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  addAddress() {\n\n    const data = {\n      title: 'Add Client Address',\n      formfields: this.getAddressFormFields('add')\n    };\n    const addAddressDialogRef = this.dialog.open(FormDialogComponent, { data });\n    addAddressDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        console.log(response.data);\n        this.clientService.createClientAddress(this.clientId, response.data.value.addressType, response.data.value).subscribe((res: any) => {\n          const addressData = response.data.value;\n          addressData.addressId = res.resourceId;\n          addressData.addressType = this.getSelectedValue('addressTypeIdOptions', addressData.addressType).name;\n          addressData.isActive = false;\n          this.clientAddressData.push(addressData);\n        });\n\n      }\n    });\n  }\n\n  editAddress(address: any, index: number) {\n    const data = {\n      title: 'Edit Client Address',\n      formfields: this.getAddressFormFields('edit', address),\n      layout: { addButtonText: 'Edit' }\n    };\n    const editAddressDialogRef = this.dialog.open(FormDialogComponent, { data });\n    editAddressDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        console.log(response.data.value);\n        const addressData = response.data.value;\n        addressData.addressId = address.addressId;\n        addressData.isActive = address.isActive;\n        this.clientService.editClientAddress(this.clientId, address.addressTypeId, addressData).subscribe((res: any) => {\n          addressData.addressTypeId = address.addressTypeId;\n          addressData.addressType = address.addressType;\n          this.clientAddressData[index] = addressData;\n        });\n      }\n    });\n  }\n\n  toogleAddress(address: any) {\n    const addressData = {\n      'addressId': address.addressId,\n      'isActive': address.isActive ? false : true\n    };\n    this.clientService.editClientAddress(this.clientId, address.addressTypeId, addressData).subscribe(() => {\n      address.isActive = address.isActive ? false : true;\n    });\n  }\n\n  isFieldEnabled(fieldName: any) {\n    return (this.clientAddressFieldConfig.find((fieldObj: any) => fieldObj.field === fieldName)).is_enabled;\n  }\n\n  getSelectedValue(fieldName: any, fieldId: any) {\n    return (this.clientAddressTemplate[fieldName].find((fieldObj: any) => fieldObj.id === fieldId));\n  }\n\n  getAddressFormFields(formType?: string, address?: any) {\n    let formfields: FormfieldBase[] = [];\n    if (formType === 'add') {\n      formfields.push(this.isFieldEnabled('addressType') ? new SelectBase({\n        controlName: 'addressType',\n        label: 'Address Type',\n        value: address ? address.addressType : '',\n        options: { label: 'name', value: 'id', data: this.clientAddressTemplate.addressTypeIdOptions },\n        order: 1\n      }) : null);\n    }\n    formfields.push(this.isFieldEnabled('street') ? new InputBase({\n      controlName: 'street',\n      label: 'Street',\n      value: address ? address.street : '',\n      type: 'text',\n      required: false,\n      order: 2\n    }) : null);\n    formfields.push(this.isFieldEnabled('addressLine1') ? new InputBase({\n      controlName: 'addressLine1',\n      label: 'Address Line 1',\n      value: address ? address.addressLine1 : '',\n      type: 'text',\n      order: 3\n    }) : null);\n    formfields.push(this.isFieldEnabled('addressLine2') ? new InputBase({\n      controlName: 'addressLine2',\n      label: 'Address Line 2',\n      value: address ? address.addressLine2 : '',\n      type: 'text',\n      order: 4\n    }) : null);\n    formfields.push(this.isFieldEnabled('addressLine3') ? new InputBase({\n      controlName: 'addressLine3',\n      label: 'Address Line 3',\n      value: address ? address.addressLine3 : '',\n      type: 'text',\n      order: 5\n    }) : null);\n    formfields.push(this.isFieldEnabled('townVillage') ? new InputBase({\n      controlName: 'townVillage',\n      label: 'Town / Village',\n      value: address ? address.townVillage : '',\n      type: 'text',\n      order: 6\n    }) : null);\n    formfields.push(this.isFieldEnabled('city') ? new InputBase({\n      controlName: 'city',\n      label: 'City',\n      value: address ? address.city : '',\n      type: 'text',\n      order: 7\n    }) : null);\n    formfields.push(this.isFieldEnabled('stateProvinceId') ? new SelectBase({\n      controlName: 'stateProvinceId',\n      label: 'State / Province',\n      value: address ? address.stateProvinceId : '',\n      options: { label: 'name', value: 'id', data: this.clientAddressTemplate.stateProvinceIdOptions },\n      order: 8\n    }) : null);\n    formfields.push(this.isFieldEnabled('countyDistrict') ? new InputBase({\n      controlName: 'countryDistrict',\n      label: 'Country District',\n      value: address ? address.countyDistrict : '',\n      type: 'text',\n      order: 11\n    }) : null);\n    formfields.push(this.isFieldEnabled('countryId') ? new SelectBase({\n      controlName: 'countryId',\n      label: 'Country',\n      value: address ? address.countryId : '',\n      options: { label: 'name', value: 'id', data: this.clientAddressTemplate.countryIdOptions },\n      order: 10\n    }) : null);\n    formfields.push(this.isFieldEnabled('postalCode') ? new InputBase({\n      controlName: 'postalCode',\n      label: 'Postal Code',\n      value: address ? address.postalCode : '',\n      type: 'text',\n      order: 11\n    }) : null);\n    formfields = formfields.filter(field => field !== null);\n    return formfields;\n  }\n\n}\n","module.exports = \"<mat-card class=\\\"client-card\\\">\\n  <mat-card-header fxLayout=\\\"column\\\" class=\\\"header\\\">\\n    <mat-card-title-group class=\\\"header-title-group\\\">\\n      <!-- change this -->\\n      <div class=\\\"profile-image-container\\\">\\n        <div>\\n          <img mat-card-md-image class=\\\"profile-image\\\"\\n            [src]=\\\"(clientImage)?clientImage:'assets/images/user_placeholder.png'\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"mat-typography client-card-title\\\">\\n        <mat-card-title>\\n          <h3>\\n            Client Name : {{clientViewData.displayName}}\\n          </h3>\\n        </mat-card-title>\\n        <mat-card-subtitle>\\n          <p>\\n            Client #:{{clientViewData.accountNo}} | External\\n            Id: {{clientViewData.externalId}} | Staff:{{clientViewData.staffName}}<br />\\n            Activation Date :\\n            {{(clientViewData.activationDate)?(clientViewData.activationDate|date) :'Not Activated'}}<br />\\n            Member Of : <span *ngFor=\\\"let group of clientViewData.groups\\\">\\n              <a>{{group.name}}</a>\\n              &nbsp;\\n            </span>\\n            <span *ngIf=\\\"!clientViewData.groups\\\">Unassigned</span>\\n            <br />\\n          </p>\\n        </mat-card-subtitle>\\n      </div>\\n    </mat-card-title-group>\\n    <mat-card-actions class=\\\"client-actions\\\">\\n      <button mat-raised-button>Edit</button>\\n      <button mat-raised-button>+ New Loan</button>\\n      <button mat-raised-button>+ New Savings</button>\\n      <button mat-raised-button>+ Deposit</button>\\n      <button mat-raised-button [matMenuTriggerFor]=\\\"More\\\">More</button>\\n      <mat-menu #More=\\\"matMenu\\\">\\n        <button mat-menu-item>Item 1</button>\\n        <button mat-menu-item>Item 2</button>\\n      </mat-menu>\\n    </mat-card-actions>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <nav mat-tab-nav-bar class=\\\"navigation-tabs\\\">\\n      <a mat-tab-link [routerLink]=\\\"['./general']\\\" routerLinkActive #general=\\\"routerLinkActive\\\"\\n        [active]=\\\"general.isActive\\\">\\n        General\\n      </a>\\n      <a mat-tab-link [routerLink]=\\\"['./address']\\\" routerLinkActive #address=\\\"routerLinkActive\\\"\\n        [active]=\\\"address.isActive\\\" *ngIf=\\\"clientTemplateData.isAddressEnabled\\\">\\n        Address\\n      </a>\\n      <a mat-tab-link [routerLink]=\\\"['./family-members']\\\" routerLinkActive #familyMembers=\\\"routerLinkActive\\\"\\n        [active]=\\\"familyMembers.isActive\\\">\\n        Family Members\\n      </a>\\n      <a mat-tab-link [routerLink]=\\\"['./identities']\\\" routerLinkActive #identities=\\\"routerLinkActive\\\"\\n        [active]=\\\"identities.isActive\\\">\\n        Identities\\n      </a>\\n      <a mat-tab-link [routerLink]=\\\"['./documents']\\\" routerLinkActive #documents=\\\"routerLinkActive\\\"\\n        [active]=\\\"documents.isActive\\\">\\n        Documents\\n      </a>\\n      <a mat-tab-link [routerLink]=\\\"['./notes']\\\" routerLinkActive #notes=\\\"routerLinkActive\\\" [active]=\\\"notes.isActive\\\">\\n        Notes\\n      </a>\\n      <a mat-tab-link *ngFor=\\\"let clientDatatable of clientDatatables\\\" [routerLink]=\\\"['./datatables',clientDatatable.registeredTableName]\\\"\\n        routerLinkActive #datatable=\\\"routerLinkActive\\\" [active]=\\\"datatable.isActive\\\">\\n        {{clientDatatable.registeredTableName}}\\n      </a>\\n    </nav>\\n    <router-outlet></router-outlet>\\n  </mat-card-content>\\n</mat-card>\"","module.exports = \".client-card {\\n  margin: 0 auto;\\n  max-width: 80rem;\\n  width: 90%;\\n  padding: 0; }\\n  .client-card .header {\\n    padding: 1%; }\\n  .client-card .header .header-title-group .client-card-title {\\n      color: white;\\n      width: 90%; }\\n  .client-card .header .header-title-group .client-card-title p {\\n        color: white; }\\n  .client-card .header .profile-image-container {\\n      margin: 1%; }\\n  .client-card .header .profile-image-container .profile-image {\\n        -o-object-fit: cover;\\n           object-fit: cover;\\n        border-radius: 20px; }\\n  .client-card .header .client-actions {\\n      align-self: flex-end;\\n      margin: 0 1%; }\\n  .client-card .navigation-tabs {\\n    overflow: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NsaWVudHMvY2xpZW50cy12aWV3L2NsaWVudHMtdmlldy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLFVBQVUsRUFBQTtFQUpaO0lBTUksV0FBVyxFQUFBO0VBTmY7TUFTUSxZQUFZO01BQ1osVUFBVSxFQUFBO0VBVmxCO1FBWVUsWUFBWSxFQUFBO0VBWnRCO01BaUJNLFVBQVUsRUFBQTtFQWpCaEI7UUFtQlEsb0JBQWlCO1dBQWpCLGlCQUFpQjtRQUNqQixtQkFBbUIsRUFBQTtFQXBCM0I7TUF3Qk0sb0JBQW9CO01BQ3BCLFlBQVksRUFBQTtFQXpCbEI7SUE2QkksY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY2xpZW50cy9jbGllbnRzLXZpZXcvY2xpZW50cy12aWV3LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNsaWVudC1jYXJkIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG1heC13aWR0aDogODByZW07XG4gIHdpZHRoOiA5MCU7XG4gIHBhZGRpbmc6IDA7XG4gIC5oZWFkZXIge1xuICAgIHBhZGRpbmc6IDElO1xuICAgIC5oZWFkZXItdGl0bGUtZ3JvdXAge1xuICAgICAgLmNsaWVudC1jYXJkLXRpdGxlIHtcbiAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICBwIHtcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgLnByb2ZpbGUtaW1hZ2UtY29udGFpbmVyIHtcbiAgICAgIG1hcmdpbjogMSU7XG4gICAgICAucHJvZmlsZS1pbWFnZSB7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgICAgfVxuICAgIH1cbiAgICAuY2xpZW50LWFjdGlvbnMge1xuICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG4gICAgICBtYXJnaW46IDAgMSU7XG4gICAgfVxuICB9XG4gIC5uYXZpZ2F0aW9uLXRhYnMge1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/** Custom Services */\nimport { ClientsService } from '../clients.service';\n@Component({\n  selector: 'mifosx-clients-view',\n  templateUrl: './clients-view.component.html',\n  styleUrls: ['./clients-view.component.scss']\n})\nexport class ClientsViewComponent implements OnInit {\n  clientViewData: any;\n  clientDatatables: any;\n  clientImage: any;\n  clientTemplateData: any;\n\n  constructor(private route: ActivatedRoute,\n    private clientsService: ClientsService,\n    private _sanitizer: DomSanitizer) {\n    this.route.data.subscribe((data: {\n      clientViewData: any,\n      clientTemplateData: any,\n      clientDatatables: any\n    }) => {\n      this.clientViewData = data.clientViewData;\n      this.clientDatatables = data.clientDatatables;\n      this.clientTemplateData = data.clientTemplateData;\n    });\n  }\n\n  ngOnInit() {\n    this.clientsService.getClientProfileImage(this.clientViewData.id).subscribe((base64Image: any) => {\n      this.clientImage = this._sanitizer.bypassSecurityTrustResourceUrl(base64Image);\n    });\n  }\n}\n","module.exports = \"<div>\\n  <mifosx-multi-row *ngIf=\\\"multiRowDatatableFlag\\\" [dataObject]=\\\"clientDatatable\\\"></mifosx-multi-row>\\n  <mifosx-single-row *ngIf=\\\"!multiRowDatatableFlag\\\" [dataObject]=\\\"clientDatatable\\\"></mifosx-single-row>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsaWVudHMvY2xpZW50cy12aWV3L2RhdGF0YWJsZS10YWIvZGF0YXRhYmxlLXRhYi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'mifosx-datatable-tab',\n  templateUrl: './datatable-tab.component.html',\n  styleUrls: ['./datatable-tab.component.scss']\n})\nexport class DatatableTabComponent implements OnInit {\n  clientDatatable: any;\n  multiRowDatatableFlag: boolean;\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { clientDatatable: any }) => {\n      this.clientDatatable = data.clientDatatable;\n      this.multiRowDatatableFlag = this.clientDatatable.columnHeaders[0].columnName === 'id' ? true : false;\n    });\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"tab-container mat-typography\\\">\\n  <h3>{{datatableName}}</h3>\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"flex-end\\\">\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"add()\\\">\\n      <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;Add\\n    </button>\\n    <button class=\\\"delete-button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"delete()\\\" *ngIf=\\\"showDeleteBotton\\\">\\n      <fa-icon icon=\\\"trash\\\"></fa-icon>&nbsp;&nbsp;Delete All\\n    </button>\\n  </div>\\n  <table #dataTable mat-table [hidden]=\\\"!datatableData[0]\\\" [dataSource]=\\\"datatableData\\\">\\n\\n    <ng-container *ngFor=\\\"let datatableColumn of datatableColumns;let i = index\\\" [matColumnDef]=\\\"datatableColumn\\\">\\n      <th mat-header-cell *matHeaderCellDef> {{datatableColumn}} </th>\\n      <td mat-cell *matCellDef=\\\"let data\\\"> {{data.row[i]}} </td>\\n    </ng-container>\\n    <tr mat-header-row *matHeaderRowDef=\\\"datatableColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: datatableColumns;\\\"></tr>\\n  </table>\\n</div>\"","module.exports = \".tab-container {\\n  padding: 1%;\\n  margin: 1%; }\\n  .tab-container table {\\n    width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NsaWVudHMvY2xpZW50cy12aWV3L2RhdGF0YWJsZS10YWIvbXVsdGktcm93L211bHRpLXJvdy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxVQUFVLEVBQUE7RUFGWjtJQUtJLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NsaWVudHMvY2xpZW50cy12aWV3L2RhdGF0YWJsZS10YWIvbXVsdGktcm93L211bHRpLXJvdy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWItY29udGFpbmVyIHtcbiAgcGFkZGluZzogMSU7XG4gIG1hcmdpbjogMSU7XG5cbiAgdGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG4iXX0= */\"","import { Component, OnInit, Input, OnChanges, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatTable } from '@angular/material/table';\nimport { MatDialog } from '@angular/material';\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\nimport { SelectBase } from 'app/shared/form-dialog/formfield/model/select-base';\nimport { CheckboxBase } from 'app/shared/form-dialog/formfield/model/checkbox-base';\nimport { DatePipe } from '@angular/common';\n\n/** Custom Components */\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\nimport { DeleteDialogComponent } from '../../../../shared/delete-dialog/delete-dialog.component';\n\n/** Custom Services */\nimport { ClientsService } from '../../../clients.service';\n\n@Component({\n  selector: 'mifosx-multi-row',\n  templateUrl: './multi-row.component.html',\n  styleUrls: ['./multi-row.component.scss']\n})\nexport class MultiRowComponent implements OnInit, OnChanges {\n  @ViewChild('dataTable') dataTableRef: MatTable<Element>;\n  @Input() dataObject: any;\n  datatableName: string;\n  datatableColumns: string[] = [];\n  datatableData: any;\n  clientId: string;\n  showDeleteBotton: boolean;\n\n  constructor(private route: ActivatedRoute,\n    private datePipe: DatePipe,\n    private clientsService: ClientsService,\n    private dialog: MatDialog) {\n    this.clientId = this.route.parent.parent.snapshot.paramMap.get('clientId');\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe((routeParams: any) => {\n      this.datatableName = routeParams.datatableName;\n    });\n  }\n  ngOnChanges() {\n    this.datatableColumns = this.dataObject.columnHeaders.map((columnHeader: any) => {\n      return columnHeader.columnName;\n    });\n    this.datatableData = this.dataObject.data;\n    this.showDeleteBotton = this.datatableData[0] ? true : false;\n  }\n\n  add() {\n    let dataTableEntryObject: any = {\n      locale: 'en'\n    };\n    const dateTransformColumns: string[] = [];\n    const columns = this.dataObject.columnHeaders.filter((column: any) => {\n      return ((column.columnName !== 'id') && (column.columnName !== 'client_id'));\n    });\n    const formfields: FormfieldBase[] = columns.map((column: any) => {\n      switch (column.columnDisplayType) {\n        case 'INTEGER':\n        case 'STRING':\n        case 'DECIMAL':\n        case 'TEXT': return new InputBase({\n          controlName: column.columnName,\n          label: column.columnName,\n          value: '',\n          type: (column.columnDisplayType === 'INTEGER' || column.columnDisplayType === 'DECIMAL') ? 'number' : 'text',\n          required: (column.isColumnNullable) ? false : true\n        });\n        case 'BOOLEAN': return new CheckboxBase({\n          controlName: column.columnName,\n          label: column.columnName,\n          value: '',\n          type: 'checkbox',\n          required: (column.isColumnNullable) ? false : true\n        });\n        case 'CODELOOKUP': return new SelectBase({\n          controlName: column.columnName,\n          label: column.columnName,\n          value: '',\n          options: { label: 'value', value: 'id', data: column.columnValues },\n          required: (column.isColumnNullable) ? false : true\n        });\n        case 'DATE': {\n          dateTransformColumns.push(column.columnName);\n          dataTableEntryObject.dateFormat = 'yyyy-MM-dd';\n          return new InputBase({\n            controlName: column.columnName,\n            label: column.columnName,\n            value: '',\n            type: 'date',\n            required: (column.isColumnNullable) ? false : true\n          });\n        }\n        case 'DATETIME': {\n          dateTransformColumns.push(column.columnName);\n          dataTableEntryObject.dateFormat = 'yyyy-MM-dd HH:mm';\n          return new InputBase({\n            controlName: column.columnName,\n            label: column.columnName,\n            value: '',\n            type: 'datetime-local',\n            required: (column.isColumnNullable) ? false : true\n          });\n        }\n      }\n    });\n    const data = {\n      title: 'Add ' + this.datatableName,\n      formfields: formfields\n    };\n    const addDialogRef = this.dialog.open(FormDialogComponent, { data });\n    addDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        // format Dates\n        dateTransformColumns.forEach((column) => {\n          response.data.value[column] = this.datePipe.transform(response.data.value[column], dataTableEntryObject.dateFormat);\n        });\n        dataTableEntryObject = { ...response.data.value, ...dataTableEntryObject };\n        this.clientsService.addClientDatatableEntry(this.clientId, this.datatableName, dataTableEntryObject).subscribe(() => {\n          this.clientsService.getClientDatatable(this.clientId, this.datatableName).subscribe((dataObject: any) => {\n            this.datatableData = dataObject.data;\n            this.dataTableRef.renderRows();\n          });\n        });\n      }\n    });\n  }\n\n  delete() {\n    const deleteDataTableDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `the contents of ${this.datatableName}` }\n    });\n    deleteDataTableDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.clientsService.deleteDatatableContent(this.clientId, this.datatableName)\n          .subscribe(() => {\n            this.clientsService.getClientDatatable(this.clientId, this.datatableName).subscribe((dataObject: any) => {\n              this.datatableData = dataObject.data;\n              this.showDeleteBotton = false;\n              this.dataTableRef.renderRows();\n            });\n          });\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"tab-container mat-typography\\\">\\n  <h3>{{datatableName}}</h3>\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"flex-end\\\">\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"add()\\\" *ngIf=\\\"!dataObject.data[0]\\\">\\n      <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;Add\\n    </button>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"edit()\\\" *ngIf=\\\"dataObject.data[0]\\\">\\n      <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;Edit\\n    </button>\\n    <button class=\\\"delete-button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"delete()\\\" *ngIf=\\\"dataObject.data[0]\\\">\\n      <fa-icon icon=\\\"trash\\\"></fa-icon>&nbsp;&nbsp;Delete All\\n    </button>\\n  </div>\\n  <mat-list role=\\\"list\\\" *ngIf=\\\"dataObject.data[0]\\\">\\n    <mat-list-item role=\\\"listitem\\\" *ngFor=\\\"let columnHeader of dataObject.columnHeaders;let i = index\\\">\\n      {{columnHeader.columnName}} : {{dataObject.data[0].row[i]}}\\n    </mat-list-item>\\n  </mat-list>\\n</div>\"","module.exports = \".tab-container {\\n  padding: 1%;\\n  margin: 1%; }\\n  .tab-container .delete-button {\\n    margin-left: 1%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NsaWVudHMvY2xpZW50cy12aWV3L2RhdGF0YWJsZS10YWIvc2luZ2xlLXJvdy9zaW5nbGUtcm93LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztFQUNYLFVBQVUsRUFBQTtFQUZaO0lBS0ksZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY2xpZW50cy9jbGllbnRzLXZpZXcvZGF0YXRhYmxlLXRhYi9zaW5nbGUtcm93L3NpbmdsZS1yb3cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGFiLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDElO1xuICBtYXJnaW46IDElO1xuXG4gIC5kZWxldGUtYnV0dG9uIHtcbiAgICBtYXJnaW4tbGVmdDogMSU7XG4gIH1cbn1cbiJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material';\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\nimport { SelectBase } from 'app/shared/form-dialog/formfield/model/select-base';\nimport { CheckboxBase } from 'app/shared/form-dialog/formfield/model/checkbox-base';\nimport { DatePipe } from '@angular/common';\n\n/** Custom Components */\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\nimport { DeleteDialogComponent } from '../../../../shared/delete-dialog/delete-dialog.component';\n\n/** Custom Services */\nimport { ClientsService } from '../../../clients.service';\n\n\n\n@Component({\n  selector: 'mifosx-single-row',\n  templateUrl: './single-row.component.html',\n  styleUrls: ['./single-row.component.scss']\n})\nexport class SingleRowComponent implements OnInit {\n\n  @Input() dataObject: any;\n  datatableName: string;\n  clientId: string;\n\n  constructor(private route: ActivatedRoute,\n    private datePipe: DatePipe,\n    private dialog: MatDialog,\n    private clientsService: ClientsService) {\n    this.clientId = this.route.parent.parent.snapshot.paramMap.get('clientId');\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe((routeParams: any) => {\n      this.datatableName = routeParams.datatableName;\n    });\n  }\n\n  add() {\n    let dataTableEntryObject: any = {\n      locale: 'en'\n    };\n    const dateTransformColumns: string[] = [];\n    const columns = this.dataObject.columnHeaders.filter((column: any) => {\n      return ((column.columnName !== 'id') && (column.columnName !== 'client_id'));\n    });\n    const formfields: FormfieldBase[] = this.getFormfields(columns, dateTransformColumns, dataTableEntryObject);\n    const data = {\n      title: 'Add ' + this.datatableName,\n      formfields: formfields\n    };\n    const addDialogRef = this.dialog.open(FormDialogComponent, { data });\n    addDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        // format Dates\n        dateTransformColumns.forEach((column) => {\n          response.data.value[column] = this.datePipe.transform(response.data.value[column], dataTableEntryObject.dateFormat);\n        });\n        dataTableEntryObject = { ...response.data.value, ...dataTableEntryObject };\n        this.clientsService.addClientDatatableEntry(this.clientId, this.datatableName, dataTableEntryObject).subscribe(() => {\n          this.clientsService.getClientDatatable(this.clientId, this.datatableName).subscribe((dataObject: any) => {\n            this.dataObject = dataObject;\n          });\n        });\n      }\n    });\n  }\n\n  edit() {\n    let dataTableEntryObject: any = {\n      locale: 'en'\n    };\n    const dateTransformColumns: string[] = [];\n    const columns = this.dataObject.columnHeaders.filter((column: any) => {\n      return ((column.columnName !== 'id') && (column.columnName !== 'client_id'));\n    });\n    let formfields: FormfieldBase[] = this.getFormfields(columns, dateTransformColumns, dataTableEntryObject);\n    formfields = formfields.map((formfield: FormfieldBase, index: number) => {\n      formfield.value = (this.dataObject.data[0].row[index + 1]) ? this.dataObject.data[0].row[index + 1] : '';\n      return formfield;\n    });\n    const data = {\n      title: 'Edit ' + this.datatableName,\n      formfields: formfields\n    };\n    const editDialogRef = this.dialog.open(FormDialogComponent, { data });\n    editDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        // format Dates\n        dateTransformColumns.forEach((column) => {\n          response.data.value[column] = this.datePipe.transform(response.data.value[column], dataTableEntryObject.dateFormat);\n        });\n        dataTableEntryObject = { ...response.data.value, ...dataTableEntryObject };\n        this.clientsService.editClientDatatableEntry(this.clientId, this.datatableName, dataTableEntryObject).subscribe(() => {\n          this.clientsService.getClientDatatable(this.clientId, this.datatableName).subscribe((dataObject: any) => {\n            this.dataObject = dataObject;\n          });\n        });\n      }\n    });\n  }\n\n  delete() {\n    const deleteDataTableDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `the contents of ${this.datatableName}` }\n    });\n    deleteDataTableDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.clientsService.deleteDatatableContent(this.clientId, this.datatableName)\n          .subscribe(() => {\n            this.clientsService.getClientDatatable(this.clientId, this.datatableName).subscribe((dataObject: any) => {\n              this.dataObject = dataObject;\n            });\n          });\n      }\n    });\n  }\n\n  getFormfields(columns: any, dateTransformColumns: string[], dataTableEntryObject: any) {\n    return columns.map((column: any) => {\n      switch (column.columnDisplayType) {\n        case 'INTEGER':\n        case 'STRING':\n        case 'DECIMAL':\n        case 'TEXT': return new InputBase({\n          controlName: column.columnName,\n          label: column.columnName,\n          value: '',\n          type: (column.columnDisplayType === 'INTEGER' || column.columnDisplayType === 'DECIMAL') ? 'number' : 'text',\n          required: (column.isColumnNullable) ? false : true\n        });\n        case 'BOOLEAN': return new CheckboxBase({\n          controlName: column.columnName,\n          label: column.columnName,\n          value: '',\n          type: 'checkbox',\n          required: (column.isColumnNullable) ? false : true\n        });\n        case 'CODELOOKUP': return new SelectBase({\n          controlName: column.columnName,\n          label: column.columnName,\n          value: '',\n          options: { label: 'value', value: 'id', data: column.columnValues },\n          required: (column.isColumnNullable) ? false : true\n        });\n        case 'DATE': {\n          dateTransformColumns.push(column.columnName);\n          dataTableEntryObject.dateFormat = 'yyyy-MM-dd';\n          return new InputBase({\n            controlName: column.columnName,\n            label: column.columnName,\n            value: '',\n            type: 'date',\n            required: (column.isColumnNullable) ? false : true\n          });\n        }\n        case 'DATETIME': {\n          dateTransformColumns.push(column.columnName);\n          dataTableEntryObject.dateFormat = 'yyyy-MM-dd HH:mm';\n          return new InputBase({\n            controlName: column.columnName,\n            label: column.columnName,\n            value: '',\n            type: 'datetime-local',\n            required: (column.isColumnNullable) ? false : true\n          });\n        }\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"tab-container mat-typography\\\">\\n\\n    <!-- Documents Table -->\\n\\n    <h3>Documents</h3>\\n\\n    <button mat-raised-button class=\\\"f-right\\\" color=\\\"primary\\\" (click)=\\\"uploadDocument()\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>\\n    &nbsp;&nbsp; Add\\n  </button>\\n\\n    <table mat-table #documentsTable [dataSource]=\\\"clientDocuments\\\">\\n\\n        <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef> Name </th>\\n            <td mat-cell *matCellDef=\\\"let document\\\">\\n                {{document.name}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"description\\\">\\n            <th mat-header-cell *matHeaderCellDef> Description </th>\\n            <td mat-cell *matCellDef=\\\"let document\\\"> {{document.description}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"fileName\\\">\\n            <th mat-header-cell *matHeaderCellDef> File Name </th>\\n            <td mat-cell *matCellDef=\\\"let document\\\"> {{document.fileName}}\\n            </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"actions\\\">\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\n            <td mat-cell *matCellDef=\\\"let document; let i = index\\\">\\n                <button class=\\\"document-action-button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"download(document.parentEntityId,document.id)\\\">\\n          <fa-icon icon=\\\"cloud-download-alt\\\"></fa-icon>\\n        </button>\\n                <button class=\\\"document-action-button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteDocument(document.parentEntityId,document.id,i)\\\">\\n          <fa-icon icon=\\\"times\\\"></fa-icon>\\n        </button>\\n            </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"documentsColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: documentsColumns;\\\"></tr>\\n    </table>\\n\\n</div>\"","module.exports = \".tab-container {\\n  padding: 1%;\\n  margin: 1%; }\\n  .tab-container h3 {\\n    margin: 1% auto; }\\n  .tab-container table {\\n    width: 100%; }\\n  .tab-container table .document-action-button {\\n      min-width: 26px;\\n      padding: 0 6px;\\n      margin: 4px;\\n      line-height: 25px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NsaWVudHMvY2xpZW50cy12aWV3L2RvY3VtZW50cy10YWIvZG9jdW1lbnRzLXRhYi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxVQUFVLEVBQUE7RUFGWjtJQUtJLGVBQWUsRUFBQTtFQUxuQjtJQVFJLFdBQVcsRUFBQTtFQVJmO01BVU0sZUFBZTtNQUNmLGNBQWM7TUFDZCxXQUFXO01BQ1gsaUJBQWlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jbGllbnRzL2NsaWVudHMtdmlldy9kb2N1bWVudHMtdGFiL2RvY3VtZW50cy10YWIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGFiLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDElO1xuICBtYXJnaW46IDElO1xuXG4gIGgzIHtcbiAgICBtYXJnaW46IDElIGF1dG87XG4gIH1cbiAgdGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIC5kb2N1bWVudC1hY3Rpb24tYnV0dG9uIHtcbiAgICAgIG1pbi13aWR0aDogMjZweDtcbiAgICAgIHBhZGRpbmc6IDAgNnB4O1xuICAgICAgbWFyZ2luOiA0cHg7XG4gICAgICBsaW5lLWhlaWdodDogMjVweDtcbiAgICB9XG4gIH1cbn1cbiJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatTable } from '@angular/material/table';\nimport { MatDialog } from '@angular/material';\n\n/** Custom Services */\nimport { ClientsService } from '../../clients.service';\n\n/** Custom Components */\nimport { UploadDocumentDialogComponent } from '../upload-document-dialog/upload-document-dialog.component';\nimport { DeleteDialogComponent } from '../../../shared/delete-dialog/delete-dialog.component';\n\n\n@Component({\n  selector: 'mifosx-documents-tab',\n  templateUrl: './documents-tab.component.html',\n  styleUrls: ['./documents-tab.component.scss']\n})\nexport class DocumentsTabComponent implements OnInit {\n  @ViewChild('documentsTable') documentsTable: MatTable<Element>;\n  documentsColumns: string[] = ['name', 'description', 'fileName', 'actions'];\n  clientDocuments: any;\n  clientId: string;\n\n\n  constructor(private route: ActivatedRoute,\n    private clientService: ClientsService,\n    public dialog: MatDialog) {\n    this.route.data.subscribe((data: { clientDocuments: any }) => {\n      this.clientDocuments = data.clientDocuments;\n      console.log(this.clientDocuments);\n\n    });\n    this.clientId = this.route.parent.snapshot.paramMap.get('clientId');\n  }\n\n  ngOnInit() {\n  }\n\n  download(parentEntityId: string, documentId: string) {\n    this.clientService.downloadClientDocument(parentEntityId, documentId).subscribe(res => {\n      const url = window.URL.createObjectURL(res);\n      window.open(url);\n    });\n  }\n\n  deleteDocument(parentEntityId: string, documentId: string, index: number) {\n    const deleteDocumentDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `document id:${documentId}` }\n    });\n    deleteDocumentDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.clientService.deleteClientDocument(parentEntityId, documentId).subscribe(res => {\n          this.clientDocuments.splice(index, 1);\n          this.documentsTable.renderRows();\n        });\n      }\n    });\n  }\n\n  uploadDocument() {\n    const uploadDocumentDialogRef = this.dialog.open(UploadDocumentDialogComponent, {\n      data: { documentIdentifier: false }\n    });\n    uploadDocumentDialogRef.afterClosed().subscribe((dialogResponse: any) => {\n      console.log(dialogResponse);\n      if (dialogResponse) {\n        const formData: FormData = new FormData;\n        formData.append('name', dialogResponse.fileName);\n        formData.append('file', dialogResponse.file);\n        formData.append('description', dialogResponse.description);\n        this.clientService.uploadClientDocument(this.clientId, formData).subscribe((res: any) => {\n          this.clientDocuments.push({\n            id: res.resourceId,\n            parentEntityType: 'clients',\n            parentEntityId: this.clientId,\n            name: dialogResponse.fileName,\n            description: dialogResponse.description,\n            fileName: dialogResponse.file.name\n          });\n          this.documentsTable.renderRows();\n          console.log('document Uploaded');\n        });\n      }\n    });\n  }\n\n}\n","module.exports = \"<h1 mat-dialog-title>Edit Note</h1>\\n<div>\\n  <form #formRef=\\\"ngForm\\\" [formGroup]=\\\"noteForm\\\">\\n    <mat-form-field>\\n      <textarea formControlName=\\\"note\\\" matInput placeholder=\\\"Write a note ....\\\"></textarea>\\n    </mat-form-field>\\n    <mat-dialog-actions align=\\\"end\\\">\\n      <button mat-raised-button mat-dialog-close>Cancel</button>\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"noteForm.pristine\\\"\\n        [mat-dialog-close]=\\\"{ editForm: noteForm }\\\">Confirm</button>\\n    </mat-dialog-actions>\\n  </form>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsaWVudHMvY2xpZW50cy12aWV3L2VkaXQtbm90ZXMtZGlhbG9nL2VkaXQtbm90ZXMtZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","/** Angular Imports */\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'mifosx-edit-notes-dialog',\n  templateUrl: './edit-notes-dialog.component.html',\n  styleUrls: ['./edit-notes-dialog.component.scss']\n})\nexport class EditNotesDialogComponent implements OnInit {\n  noteForm: FormGroup;\n\n  constructor(public dialogRef: MatDialogRef<EditNotesDialogComponent>,\n    private formBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    this.createNoteForm();\n  }\n\n  createNoteForm() {\n    this.noteForm = this.formBuilder.group({\n      'note': [this.data.noteContent, Validators.required]\n    });\n  }\n}\n","module.exports = \"<div class=\\\"add-family-member-container\\\">\\n\\n  <form [formGroup]=\\\"addFamilyMemberForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n    <div fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n      <mat-form-field fxFlex=\\\"calc(50% - 25px)\\\">\\n        <mat-label>First Name</mat-label>\\n        <input formControlName=\\\"firstName\\\" required matInput />\\n        <mat-error *ngIf=\\\"addFamilyMemberForm.controls.firstName.hasError('required')\\\">\\n          First Name is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"calc(50% - 25px)\\\">\\n        <mat-label>Middle Name</mat-label>\\n        <input formControlName=\\\"middleName\\\" matInput />\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"calc(50% - 25px)\\\">\\n        <mat-label>Last Name</mat-label>\\n        <input formControlName=\\\"lastName\\\" required matInput />\\n        <mat-error *ngIf=\\\"addFamilyMemberForm.controls.lastName.hasError('required')\\\">\\n          Last Name is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"calc(50% - 25px)\\\">\\n        <mat-label>Qualification</mat-label>\\n        <input formControlName=\\\"qualification\\\" matInput />\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"calc(50% - 25px)\\\">\\n        <mat-label>Age</mat-label>\\n        <input type=\\\"number\\\" formControlName=\\\"age\\\" required matInput />\\n        <mat-error *ngIf=\\\"addFamilyMemberForm.controls.age.hasError('required')\\\">\\n          Age is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-checkbox formControlName=\\\"isDependent\\\" labelPosition=\\\"before\\\" fxFlex=\\\"calc(50% - 25px)\\\">Is Dependent?\\n      </mat-checkbox>\\n\\n      <mat-form-field fxFlex=\\\"calc(50% - 25px)\\\">\\n        <mat-label>Relationship</mat-label>\\n        <mat-select formControlName=\\\"relationshipId\\\" required>\\n          <mat-option *ngFor=\\\"let relation of addFamilyMemberTemplate.relationshipIdOptions\\\" [value]=\\\"relation.id\\\">\\n            {{ relation.name  }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"addFamilyMemberForm.controls.relationshipId.hasError('required')\\\">\\n          Relationship is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"calc(50% - 25px)\\\">\\n        <mat-label>Gender</mat-label>\\n        <mat-select formControlName=\\\"genderId\\\" required>\\n          <mat-option *ngFor=\\\"let gender of addFamilyMemberTemplate.genderIdOptions\\\" [value]=\\\"gender.id\\\">\\n            {{ gender.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"addFamilyMemberForm.controls.genderId.hasError('required')\\\">\\n          Gender is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"calc(50% - 25px)\\\">\\n        <mat-label>Profession</mat-label>\\n        <mat-select formControlName=\\\"professionId\\\">\\n          <mat-option *ngFor=\\\"let profession of addFamilyMemberTemplate.professionIdOptions\\\" [value]=\\\"profession.id\\\">\\n            {{ profession.name }}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"calc(50% - 25px)\\\">\\n        <mat-label>Marital Status</mat-label>\\n        <mat-select formControlName=\\\"maritalStatusId\\\">\\n          <mat-option *ngFor=\\\"let maritalStatus of addFamilyMemberTemplate.maritalStatusIdOptions\\\"\\n            [value]=\\\"maritalStatus.id\\\">\\n            {{ maritalStatus.name }}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n\\n      <mat-form-field fxFlex>\\n        <mat-label>Date Of Birth</mat-label>\\n        <input formControlName=\\\"dateOfBirth\\\" matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"dueDatePicker\\\"\\n          required>\\n        <mat-datepicker-toggle matSuffix [for]=\\\"dueDatePicker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #dueDatePicker></mat-datepicker>\\n        <mat-error *ngIf=\\\"addFamilyMemberForm.controls.dateOfBirth.hasError('required')\\\">\\n          Date of birth\\n          is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n    </div>\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"32px\\\" fxLayoutAlign=\\\"center\\\">\\n      <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n      <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!addFamilyMemberForm.valid\\\">Submit</button>\\n    </div>\\n\\n  </form>\\n\\n</div>\"","module.exports = \".add-family-member-container {\\n  width: 70%;\\n  margin: 0 auto;\\n  padding: 5%; }\\n  @media screen and (min-width: 960px) {\\n    .add-family-member-container [fxFlex]:nth-child(odd) {\\n      margin-right: 25px; }\\n    .add-family-member-container [fxFlex]:last-child {\\n      margin-right: 0; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NsaWVudHMvY2xpZW50cy12aWV3L2ZhbWlseS1tZW1iZXJzLXRhYi9hZGQtZmFtaWx5LW1lbWJlci9hZGQtZmFtaWx5LW1lbWJlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQVU7RUFDVixjQUFjO0VBQ2QsV0FBVyxFQUFBO0VBQ1g7SUFKRjtNQU1NLGtCQUFrQixFQUFBO0lBTnhCO01BU00sZUFBZSxFQUFBLEVBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY2xpZW50cy9jbGllbnRzLXZpZXcvZmFtaWx5LW1lbWJlcnMtdGFiL2FkZC1mYW1pbHktbWVtYmVyL2FkZC1mYW1pbHktbWVtYmVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFkZC1mYW1pbHktbWVtYmVyLWNvbnRhaW5lciB7XG4gIHdpZHRoOiA3MCU7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiA1JTtcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDo5NjBweCkge1xuICAgIFtmeEZsZXhdOm50aC1jaGlsZChvZGQpIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMjVweDtcbiAgICB9XG4gICAgW2Z4RmxleF06bGFzdC1jaGlsZCB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgfVxuICB9XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\n\n/** Custom Services */\nimport { ClientsService } from '../../../clients.service';\n\n\n@Component({\n  selector: 'mifosx-add-family-member',\n  templateUrl: './add-family-member.component.html',\n  styleUrls: ['./add-family-member.component.scss']\n})\nexport class AddFamilyMemberComponent implements OnInit {\n  /** Minimum Due Date allowed. */\n  minDate = new Date(2000, 0, 1);\n  /** Maximum Due Date allowed. */\n  maxDate = new Date();\n  /** Add family member form. */\n  addFamilyMemberForm: FormGroup;\n  /** Add family member template. */\n  addFamilyMemberTemplate: any;\n  clientId: any;\n  constructor(private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private router: Router,\n    private route: ActivatedRoute,\n    private clientsService: ClientsService) {\n    this.route.data.subscribe((data: { clientTemplate: any }) => {\n      this.addFamilyMemberTemplate = data.clientTemplate.familyMemberOptions;\n    });\n    this.clientId = this.route.parent.parent.snapshot.params['clientId'];\n\n  }\n\n  ngOnInit() {\n    this.createAddFamilyMemberForm();\n\n  }\n\n\n  createAddFamilyMemberForm() {\n    this.addFamilyMemberForm = this.formBuilder.group({\n      'firstName': ['', Validators.required],\n      'middleName': [''],\n      'lastName': ['', Validators.required],\n      'qualification': [''],\n      'age': ['', Validators.required],\n      'isDependent': [''],\n      'relationshipId': ['', Validators.required],\n      'genderId': ['', Validators.required],\n      'professionId': [''],\n      'maritalStatusId': [''],\n      'dateOfBirth': ['', Validators.required]\n    });\n  }\n\n  submit() {\n    const prevDateOfBirth: Date = this.addFamilyMemberForm.value.dateOfBirth;\n    // TODO: Update once language and date settings are setup\n    const dateFormat = 'yyyy-MM-dd';\n    this.addFamilyMemberForm.patchValue({\n      dateOfBirth: this.datePipe.transform(prevDateOfBirth, dateFormat)\n    });\n    const familyMemberData = this.addFamilyMemberForm.value;\n    familyMemberData.locale = 'en';\n    familyMemberData.dateFormat = dateFormat;\n    this.clientsService.addFamilyMember(this.clientId, familyMemberData).subscribe(res => {\n      this.router.navigate(['../'], { relativeTo: this.route });\n    });\n\n  }\n\n}\n","module.exports = \"<div class=\\\"add-family-member-container\\\">\\n\\n  <form [formGroup]=\\\"editFamilyMemberForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n    <div fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n      <mat-form-field fxFlex=\\\"calc(50% - 25px)\\\">\\n        <mat-label>First Name</mat-label>\\n        <input formControlName=\\\"firstName\\\" required matInput />\\n        <mat-error *ngIf=\\\"editFamilyMemberForm.controls.firstName.hasError('required')\\\">\\n          First Name is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"calc(50% - 25px)\\\">\\n        <mat-label>Middle Name</mat-label>\\n        <input formControlName=\\\"middleName\\\" matInput />\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"calc(50% - 25px)\\\">\\n        <mat-label>Last Name</mat-label>\\n        <input formControlName=\\\"lastName\\\" required matInput />\\n        <mat-error *ngIf=\\\"editFamilyMemberForm.controls.lastName.hasError('required')\\\">\\n          Last Name is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"calc(50% - 25px)\\\">\\n        <mat-label>Qualification</mat-label>\\n        <input formControlName=\\\"qualification\\\" matInput />\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"calc(50% - 25px)\\\">\\n        <mat-label>Age</mat-label>\\n        <input type=\\\"number\\\" formControlName=\\\"age\\\" required matInput />\\n        <mat-error *ngIf=\\\"editFamilyMemberForm.controls.age.hasError('required')\\\">\\n          Age is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-checkbox formControlName=\\\"isDependent\\\" labelPosition=\\\"before\\\" fxFlex=\\\"calc(50% - 25px)\\\">Is Dependent?\\n      </mat-checkbox>\\n\\n      <mat-form-field fxFlex=\\\"calc(50% - 25px)\\\">\\n        <mat-label>Relationship</mat-label>\\n        <mat-select formControlName=\\\"relationshipId\\\" required>\\n          <mat-option *ngFor=\\\"let relation of addFamilyMemberTemplate.relationshipIdOptions\\\" [value]=\\\"relation.id\\\">\\n            {{ relation.name  }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"editFamilyMemberForm.controls.relationshipId.hasError('required')\\\">\\n          Relationship is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"calc(50% - 25px)\\\">\\n        <mat-label>Gender</mat-label>\\n        <mat-select formControlName=\\\"genderId\\\" required>\\n          <mat-option *ngFor=\\\"let gender of addFamilyMemberTemplate.genderIdOptions\\\" [value]=\\\"gender.id\\\">\\n            {{ gender.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"editFamilyMemberForm.controls.genderId.hasError('required')\\\">\\n          Gender is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"calc(50% - 25px)\\\">\\n        <mat-label>Profession</mat-label>\\n        <mat-select formControlName=\\\"professionId\\\">\\n          <mat-option *ngFor=\\\"let profession of addFamilyMemberTemplate.professionIdOptions\\\" [value]=\\\"profession.id\\\">\\n            {{ profession.name }}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"calc(50% - 25px)\\\">\\n        <mat-label>Marital Status</mat-label>\\n        <mat-select formControlName=\\\"maritalStatusId\\\">\\n          <mat-option *ngFor=\\\"let maritalStatus of addFamilyMemberTemplate.maritalStatusIdOptions\\\"\\n            [value]=\\\"maritalStatus.id\\\">\\n            {{ maritalStatus.name }}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n\\n      <mat-form-field fxFlex>\\n        <mat-label>Date Of Birth</mat-label>\\n        <input formControlName=\\\"dateOfBirth\\\" matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"dueDatePicker\\\"\\n          required>\\n        <mat-datepicker-toggle matSuffix [for]=\\\"dueDatePicker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #dueDatePicker></mat-datepicker>\\n        <mat-error *ngIf=\\\"editFamilyMemberForm.controls.dateOfBirth.hasError('required')\\\">\\n          Date of birth\\n          is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n    </div>\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"32px\\\" fxLayoutAlign=\\\"center\\\">\\n      <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../../']\\\">Cancel</button>\\n      <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"editFamilyMemberForm.pristine||!editFamilyMemberForm.valid\\\">Submit</button>\\n    </div>\\n\\n  </form>\\n\\n</div>\"","module.exports = \".add-family-member-container {\\n  width: 70%;\\n  margin: 0 auto;\\n  padding: 5%; }\\n  @media screen and (min-width: 960px) {\\n    .add-family-member-container [fxFlex]:nth-child(odd) {\\n      margin-right: 25px; }\\n    .add-family-member-container [fxFlex]:last-child {\\n      margin-right: 0; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NsaWVudHMvY2xpZW50cy12aWV3L2ZhbWlseS1tZW1iZXJzLXRhYi9lZGl0LWZhbWlseS1tZW1iZXIvZWRpdC1mYW1pbHktbWVtYmVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksVUFBVTtFQUNWLGNBQWM7RUFDZCxXQUFXLEVBQUE7RUFDWDtJQUpKO01BTVEsa0JBQWtCLEVBQUE7SUFOMUI7TUFTUSxlQUFlLEVBQUEsRUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jbGllbnRzL2NsaWVudHMtdmlldy9mYW1pbHktbWVtYmVycy10YWIvZWRpdC1mYW1pbHktbWVtYmVyL2VkaXQtZmFtaWx5LW1lbWJlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hZGQtZmFtaWx5LW1lbWJlci1jb250YWluZXIge1xuICAgIHdpZHRoOiA3MCU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgcGFkZGluZzogNSU7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDo5NjBweCkge1xuICAgICAgW2Z4RmxleF06bnRoLWNoaWxkKG9kZCkge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDI1cHg7XG4gICAgICB9XG4gICAgICBbZnhGbGV4XTpsYXN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAiXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\n\n/** Custom Services */\nimport { ClientsService } from '../../../clients.service';\n\n@Component({\n  selector: 'mifosx-edit-family-member',\n  templateUrl: './edit-family-member.component.html',\n  styleUrls: ['./edit-family-member.component.scss']\n})\nexport class EditFamilyMemberComponent implements OnInit {\n  /** Minimum Due Date allowed. */\n  minDate = new Date(2000, 0, 1);\n  /** Maximum Due Date allowed. */\n  maxDate = new Date();\n  /** Add family member form. */\n  editFamilyMemberForm: FormGroup;\n  /** Add family member template. */\n  addFamilyMemberTemplate: any;\n  familyMemberDetails: any;\n\n  constructor(private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private router: Router,\n    private route: ActivatedRoute,\n    private clientsService: ClientsService) {\n    this.route.data.subscribe((data: { clientTemplate: any, editFamilyMember: any }) => {\n      this.addFamilyMemberTemplate = data.clientTemplate.familyMemberOptions;\n      this.familyMemberDetails = data.editFamilyMember;\n    });\n  }\n\n  ngOnInit() {\n    this.createEditFamilyMemberForm(this.familyMemberDetails);\n\n  }\n\n  createEditFamilyMemberForm(familyMember: any) {\n    this.editFamilyMemberForm = this.formBuilder.group({\n      'firstName': [familyMember.firstName, Validators.required],\n      'middleName': [familyMember.middleName],\n      'lastName': [familyMember.lastName, Validators.required],\n      'qualification': [familyMember.qualification],\n      'age': [familyMember.age, Validators.required],\n      'isDependent': [familyMember.isDependent],\n      'relationshipId': [familyMember.relationshipId, Validators.required],\n      'genderId': [familyMember.genderId, Validators.required],\n      'professionId': [familyMember.professionId],\n      'maritalStatusId': [familyMember.maritalStatusId],\n      'dateOfBirth': [this.datePipe.transform(familyMember.dateOfBirth, 'yyyy-MM-dd'), Validators.required]\n    });\n  }\n\n  submit() {\n    const prevDateOfBirth: Date = this.editFamilyMemberForm.value.dateOfBirth;\n    // TODO: Update once language and date settings are setup\n    const dateFormat = 'yyyy-MM-dd';\n    this.editFamilyMemberForm.patchValue({\n      dateOfBirth: this.datePipe.transform(prevDateOfBirth, dateFormat)\n    });\n    const familyMemberData = this.editFamilyMemberForm.value;\n    familyMemberData.locale = 'en';\n    familyMemberData.dateFormat = dateFormat;\n    this.clientsService.editFamilyMember(this.familyMemberDetails.clientId, this.familyMemberDetails.id, familyMemberData).subscribe(res => {\n      this.router.navigate(['../../'], { relativeTo: this.route });\n    });\n\n  }\n}\n","module.exports = \"<div class=\\\"tab-container mat-typography\\\">\\n  <router-outlet>\\n    <h3>Family Members</h3>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"flex-end\\\">\\n      <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['./add']\\\">\\n        <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;Add\\n      </button>\\n    </div>\\n    <mat-accordion>\\n      <mat-expansion-panel *ngFor=\\\"let member of clientFamilyMembers;index as i\\\" class=\\\"family-member\\\">\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            {{member.firstName+' '+member.middleName+' '+member.lastName}}\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            {{member.relationship}}\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n        <div class=\\\"family-member-actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"flex-end\\\">\\n          <button mat-button color=\\\"primary\\\">\\n            <fa-icon icon=\\\"edit\\\" [routerLink]=\\\"[member.id,'edit']\\\"></fa-icon>\\n          </button>\\n          <button mat-button color=\\\"warn\\\" (click)=\\\"deleteFamilyMember(member.clientId,member.id,member.firstName,i)\\\">\\n            <fa-icon icon=\\\"trash\\\"></fa-icon>\\n          </button>\\n\\n        </div>\\n        <p>\\n          First Name : {{member.firstName}}<br />\\n          Middle Name : {{member.middleName}}<br />\\n          Last Name : {{member.lastName}}<br />\\n          Qualification : {{member.qualification}}<br />\\n          Mobile Number : {{member.mobileNumber}}<br />\\n          Age : {{member.age}}<br />\\n          Is Dependent : {{member.isDependent}}<br />\\n          Martial Status : {{member.maritalStatus}}<br />\\n          Gender : {{member.gender}}<br />\\n          Profession : {{member.profession}}<br />\\n          Date Of Birth : {{member.dateOfBirth|date}}<br />\\n        </p>\\n\\n      </mat-expansion-panel>\\n\\n    </mat-accordion>\\n  </router-outlet>\\n</div>\"","module.exports = \".tab-container {\\n  padding: 1%;\\n  margin: 1%; }\\n  .tab-container .family-member .family-member-actions {\\n    margin-top: 1%; }\\n  .tab-container .family-member .family-member-actions button {\\n      margin-right: 1%; }\\n  .tab-container .family-member h3 {\\n    margin: 1% auto; }\\n  .tab-container .family-member p {\\n    line-height: 30px;\\n    margin-left: 2%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NsaWVudHMvY2xpZW50cy12aWV3L2ZhbWlseS1tZW1iZXJzLXRhYi9mYW1pbHktbWVtYmVycy10YWIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFVO0VBQ1YsVUFBVSxFQUFBO0VBRlo7SUFNTSxjQUFjLEVBQUE7RUFOcEI7TUFRUSxnQkFBZ0IsRUFBQTtFQVJ4QjtJQVlNLGVBQWUsRUFBQTtFQVpyQjtJQWdCTSxpQkFBaUI7SUFDakIsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY2xpZW50cy9jbGllbnRzLXZpZXcvZmFtaWx5LW1lbWJlcnMtdGFiL2ZhbWlseS1tZW1iZXJzLXRhYi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWItY29udGFpbmVyIHtcbiAgcGFkZGluZzoxJTtcbiAgbWFyZ2luOiAxJTtcblxuICAuZmFtaWx5LW1lbWJlciB7XG4gICAgLmZhbWlseS1tZW1iZXItYWN0aW9uc3tcbiAgICAgIG1hcmdpbi10b3A6IDElO1xuICAgICAgYnV0dG9ue1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDElO1xuICAgICAgfVxuICAgIH1cbiAgICBoMyB7XG4gICAgICBtYXJnaW46IDElIGF1dG87XG4gICAgfVxuXG4gICAgcCB7XG4gICAgICBsaW5lLWhlaWdodDogMzBweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyJTtcbiAgICB9XG4gIH1cbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material';\n\n/** Custom Components */\nimport { DeleteDialogComponent } from '../../../shared/delete-dialog/delete-dialog.component';\n\n/** Custom Services */\nimport { ClientsService } from '../../clients.service';\n\n@Component({\n  selector: 'mifosx-family-members-tab',\n  templateUrl: './family-members-tab.component.html',\n  styleUrls: ['./family-members-tab.component.scss']\n})\nexport class FamilyMembersTabComponent implements OnInit {\n  clientFamilyMembers: any;\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private clientsService: ClientsService,\n    public dialog: MatDialog) {\n    this.route.data.subscribe((data: { clientFamilyMembers: any }) => {\n      this.clientFamilyMembers = data.clientFamilyMembers;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Deletes the family member and redirects to family members tab.\n   */\n  deleteFamilyMember(clientId: string, id: string, name: string, index: number) {\n    const deleteFamilyMemberDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `Family member id:${id} name : ${name} ${index}` }\n    });\n    deleteFamilyMemberDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.clientsService.deleteFamilyMember(clientId, id)\n          .subscribe(() => {\n            this.clientFamilyMembers.splice(index, 1);\n          });\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"tab-container mat-typography\\\">\\n  <h3>Performance History</h3>\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"32px\\\" class=\\\"performance-history-container\\\">\\n    <p>\\n      No. Of Loan Cycles :{{clientSummary?.loanCycle}} <br />\\n      No. of Active Loans :{{clientSummary?.activeLoans}} <br />\\n      Last Loan Amount :{{clientSummary?.lastLoanAmount}} <br />\\n    </p>\\n    <p>\\n      No. of Active Savings :{{clientSummary?.activeSavings}} <br />\\n      Total Savings :{{clientSummary?.totalSavings}} <br />\\n    </p>\\n  </div>\\n\\n  <!-- Upcoming Charges -->\\n\\n  <h3>Upcoming Charges</h3>\\n  <button mat-raised-button class=\\\"f-right\\\" color=\\\"primary\\\">Charges Overview</button>\\n  <table mat-table [dataSource]=\\\"upcomingCharges\\\">\\n\\n    <ng-container matColumnDef=\\\"Name\\\">\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> <i class=\\\"fa fa-stop\\\"\\n          [ngClass]=\\\"(!(element.isWaived || element.isPaid))|statusLookup\\\"></i>\\n        {{element.name}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Due as of\\\">\\n      <th mat-header-cell *matHeaderCellDef> Due as of </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dueDate|date}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Due\\\">\\n      <th mat-header-cell *matHeaderCellDef> Due </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.amount}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"Paid\\\">\\n      <th mat-header-cell *matHeaderCellDef>Paid </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.amountPaid}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Waived\\\">\\n      <th mat-header-cell *matHeaderCellDef> Waived </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.amountWaived}} </td>\\n    </ng-container>\\n\\n\\n    <ng-container matColumnDef=\\\"Outstanding\\\">\\n      <th mat-header-cell *matHeaderCellDef> Outstanding </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.amountOutstanding}} </td>\\n    </ng-container>\\n\\n\\n    <ng-container matColumnDef=\\\"Actions\\\">\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <button class=\\\"account-action-button\\\" mat-raised-button color=\\\"primary\\\">\\n          <i class=\\\"fa fa-dollar\\\"></i>\\n        </button>\\n        <button class=\\\"account-action-button\\\" mat-raised-button color=\\\"primary\\\">\\n          <i class=\\\"fa fa-flag\\\"></i>\\n        </button>\\n      </td>\\n\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"upcomingChargesColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: upcomingChargesColumns;\\\"></tr>\\n  </table>\\n\\n\\n  <!-- loans overview table -->\\n\\n  <h3>Loan Accounts</h3>\\n  <button mat-raised-button class=\\\"f-right\\\" color=\\\"primary\\\"\\n    (click)=\\\"toggleLoanAccountsOverview()\\\">{{showClosedLoanAccounts?'View Active Accounts':'View Closed Accounts'}}</button>\\n  <table *ngIf=\\\"!showClosedLoanAccounts\\\" mat-table [dataSource]=\\\"loanAccounts|accountsFilter:'loan'\\\">\\n\\n    <ng-container matColumnDef=\\\"Account No\\\">\\n      <th mat-header-cell *matHeaderCellDef> Account No. </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> <i class=\\\"fa fa-stop\\\"\\n          [ngClass]=\\\"element.inArrears?'status-active-overdue':(element.status.code|statusLookup)\\\"></i>\\n        {{element.accountNo}}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Loan Account\\\">\\n      <th mat-header-cell *matHeaderCellDef> Loan Account </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.productName}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Original Loan\\\">\\n      <th mat-header-cell *matHeaderCellDef> Original Loan </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastActiveTransactionDate | date}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"Loan Balance\\\">\\n      <th mat-header-cell *matHeaderCellDef>Loan Balance </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.loanBalance}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Amount Paid\\\">\\n      <th mat-header-cell *matHeaderCellDef> Amount Paid </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.accountBalance}} </td>\\n    </ng-container>\\n\\n\\n    <ng-container matColumnDef=\\\"Type\\\">\\n      <th mat-header-cell *matHeaderCellDef> Type </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <i class=\\\"fa fa-large\\\" [ngClass]=\\\"(element.loanType.value=== 'Individual')?'fa-user':'fa-group'\\\"></i>\\n      </td>\\n    </ng-container>\\n\\n\\n    <ng-container matColumnDef=\\\"Actions\\\">\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <button *ngIf=\\\"element.status.active\\\" class=\\\"account-action-button\\\" mat-raised-button color=\\\"primary\\\">\\n          <i class=\\\"fa fa-dollar\\\"></i>\\n        </button>\\n        <button *ngIf=\\\"element.status.pendingApproval\\\" class=\\\"account-action-button\\\" mat-raised-button color=\\\"primary\\\">\\n          <i class=\\\"fa fa-check\\\"></i>\\n        </button>\\n        <button *ngIf=\\\"!element.status.pendingApproval && !element.status.active && !element.status.overpaid\\\"\\n          class=\\\"account-action-button\\\" mat-raised-button color=\\\"primary\\\">\\n          <i class=\\\"fa fa-flag\\\"></i>\\n        </button>\\n        <button *ngIf=\\\"!element.status.pendingApproval && !element.status.active && element.status.overpaid\\\"\\n          class=\\\"account-action-button\\\" mat-raised-button color=\\\"primary\\\">\\n          <i class=\\\"fa fa-exchange\\\"></i>\\n        </button>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"openLoansColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: openLoansColumns;\\\"></tr>\\n  </table>\\n\\n  <!-- Closed Loan Accounts -->\\n  <table *ngIf=\\\"showClosedLoanAccounts\\\" mat-table [dataSource]=\\\"loanAccounts|accountsFilter:'loan':'closed'\\\">\\n\\n    <ng-container matColumnDef=\\\"Account No\\\">\\n      <th mat-header-cell *matHeaderCellDef> Account No. </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> <i class=\\\"fa fa-stop\\\"\\n          [ngClass]=\\\"element.inArrears?'status-active-overdue':(element.status.code|statusLookup)\\\"></i>\\n        {{element.accountNo}}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Loan Account\\\">\\n      <th mat-header-cell *matHeaderCellDef> Loan Account </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.productName}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Original Loan\\\">\\n      <th mat-header-cell *matHeaderCellDef> Original Loan </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastActiveTransactionDate | date}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"Loan Balance\\\">\\n      <th mat-header-cell *matHeaderCellDef>Loan Balance </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.loanBalance}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Amount Paid\\\">\\n      <th mat-header-cell *matHeaderCellDef> Amount Paid </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.accountBalance}} </td>\\n    </ng-container>\\n\\n\\n    <ng-container matColumnDef=\\\"Type\\\">\\n      <th mat-header-cell *matHeaderCellDef> Type </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <i class=\\\"fa fa-large\\\" [ngClass]=\\\"(element.loanType.value=== 'Individual')?'fa-user':'fa-group'\\\"></i>\\n      </td>\\n    </ng-container>\\n\\n\\n    <ng-container matColumnDef=\\\"Closed Date\\\">\\n      <th mat-header-cell *matHeaderCellDef> Closed Date </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{element.timeline.closedOnDate | date}}</td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"closedLoansColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: closedLoansColumns;\\\"></tr>\\n  </table>\\n\\n\\n  <!-- Saving overview Table -->\\n\\n  <h3>Saving Accounts</h3>\\n  <button mat-raised-button class=\\\"f-right\\\" color=\\\"primary\\\"\\n    (click)=\\\"toggleSavingAccountsOverview()\\\">{{showClosedSavingAccounts?'View Active Accounts':'View Closed Accounts'}}</button>\\n  <table *ngIf=\\\"!showClosedSavingAccounts\\\" mat-table [dataSource]=\\\"savingAccounts|accountsFilter:'saving'\\\">\\n\\n    <ng-container matColumnDef=\\\"Account No\\\">\\n      <th mat-header-cell *matHeaderCellDef> Account No. </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> <i class=\\\"fa fa-stop\\\" [ngClass]=\\\"element.status.code|statusLookup\\\"></i>\\n        {{element.accountNo}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Saving Account\\\">\\n      <th mat-header-cell *matHeaderCellDef> Saving Account </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.productName}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Last Active\\\">\\n      <th mat-header-cell *matHeaderCellDef> Last Active </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastActiveTransactionDate | date}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Balance\\\">\\n      <th mat-header-cell *matHeaderCellDef> Balance </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.accountBalance}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Actions\\\">\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <button *ngIf=\\\"element.status.active\\\" class=\\\"account-action-button\\\" mat-raised-button color=\\\"primary\\\">\\n          <i class=\\\"fa fa-arrow-up\\\"></i>\\n        </button>\\n        <button *ngIf=\\\"element.status.active\\\" class=\\\"account-action-button\\\" mat-raised-button color=\\\"primary\\\">\\n          <i class=\\\"fa fa-arrow-down\\\"></i>\\n        </button>\\n        <button *ngIf=\\\"element.status.submittedAndPendingApproval\\\" class=\\\"account-action-button\\\" mat-raised-button\\n          color=\\\"primary\\\">\\n          <i class=\\\"fa fa-check\\\"></i>\\n        </button>\\n        <button *ngIf=\\\"element.status.submittedAndPendingApproval\\\" class=\\\"account-action-button\\\" mat-raised-button\\n          color=\\\"primary\\\">\\n          <i class=\\\"fa fa-check\\\"></i>\\n        </button>\\n        <button *ngIf=\\\"!element.status.submittedAndPendingApproval && !element.status.active\\\"\\n          class=\\\"account-action-button\\\" mat-raised-button color=\\\"primary\\\">\\n          <i class=\\\"fa fa-undo\\\"></i>\\n        </button>\\n        <button *ngIf=\\\"!element.status.submittedAndPendingApproval && !element.status.active\\\"\\n          class=\\\"account-action-button\\\" mat-raised-button color=\\\"primary\\\">\\n          <i class=\\\"fa fa-check-circle\\\"></i>\\n        </button>\\n      </td>\\n\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"openSavingsColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: openSavingsColumns;\\\"></tr>\\n  </table>\\n\\n  <!-- Closed Saving Accounts -->\\n\\n  <table *ngIf=\\\"showClosedSavingAccounts\\\" mat-table [dataSource]=\\\"savingAccounts|accountsFilter:'saving':'closed'\\\">\\n\\n    <ng-container matColumnDef=\\\"Account No\\\">\\n      <th mat-header-cell *matHeaderCellDef> Account No. </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> <i class=\\\"fa fa-stop\\\" [ngClass]=\\\"element.status.code|statusLookup\\\"></i>\\n        {{element.accountNo}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Saving Account\\\">\\n      <th mat-header-cell *matHeaderCellDef> Saving Account </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.productName}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Closed Date\\\">\\n      <th mat-header-cell *matHeaderCellDef> Closed Date </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{element.timeline.closedOnDate | date}}</td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"closedSavingsColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: closedSavingsColumns;\\\"></tr>\\n  </table>\\n\\n  <!-- Shares overview Table -->\\n\\n  <h3>Shares Accounts</h3>\\n  <button mat-raised-button class=\\\"f-right\\\" color=\\\"primary\\\"\\n    (click)=\\\"toggleShareAccountsOverview()\\\">{{showClosedSavingAccounts?'View Active Accounts':'View Closed Accounts'}}</button>\\n  <table *ngIf=\\\"!showClosedShareAccounts\\\" mat-table [dataSource]=\\\"shareAccounts|accountsFilter:'share'\\\">\\n\\n    <ng-container matColumnDef=\\\"Account No\\\">\\n      <th mat-header-cell *matHeaderCellDef> Account No. </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> <i class=\\\"fa fa-stop\\\" [ngClass]=\\\"element.status.code|statusLookup\\\"></i>\\n        {{element.accountNo}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Share Account\\\">\\n      <th mat-header-cell *matHeaderCellDef> Share Account </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.productName}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Approved Shares\\\">\\n      <th mat-header-cell *matHeaderCellDef> Approved Shares </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.totalApprovedShares}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Pending For Approval Shares\\\">\\n      <th mat-header-cell *matHeaderCellDef> Pending For Approval Shares </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.totalPendingForApprovalShares}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Actions\\\">\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <button *ngIf=\\\"element.status.submittedAndPendingApproval\\\" class=\\\"account-action-button\\\" mat-raised-button\\n          color=\\\"primary\\\">\\n          <i class=\\\"fa fa-check\\\"></i>\\n        </button>\\n        <button *ngIf=\\\"!element.status.submittedAndPendingApproval && !element.status.active\\\"\\n          class=\\\"account-action-button\\\" mat-raised-button color=\\\"primary\\\">\\n          <i class=\\\"fa fa-undo\\\"></i>\\n        </button>\\n        <button *ngIf=\\\"!element.status.submittedAndPendingApproval && !element.status.active\\\"\\n          class=\\\"account-action-button\\\" mat-raised-button color=\\\"primary\\\">\\n          <i class=\\\"fa fa-check-circle\\\"></i>\\n        </button>\\n      </td>\\n\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"openSharesColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: openSharesColumns;\\\"></tr>\\n  </table>\\n  <!-- Closed Share Accounts -->\\n  <table *ngIf=\\\"showClosedShareAccounts\\\" mat-table [dataSource]=\\\"shareAccounts|accountsFilter:'share':'closed'\\\">\\n\\n    <ng-container matColumnDef=\\\"Account No\\\">\\n      <th mat-header-cell *matHeaderCellDef> Account No. </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> <i class=\\\"fa fa-stop\\\" [ngClass]=\\\"element.status.code|statusLookup\\\"></i>\\n        {{element.accountNo}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Share Account\\\">\\n      <th mat-header-cell *matHeaderCellDef> Share Account </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.productName}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Approved Shares\\\">\\n      <th mat-header-cell *matHeaderCellDef> Approved Shares </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.totalApprovedShares}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Pending For Approval Shares\\\">\\n      <th mat-header-cell *matHeaderCellDef> Pending For Approval Shares </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.totalPendingForApprovalShares}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Closed Date\\\">\\n      <th mat-header-cell *matHeaderCellDef> Closed Date </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{element.timeline.closedOnDate | date}}</td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"closedSharesColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: closedSharesColumns;\\\"></tr>\\n  </table>\\n\\n</div>\"","module.exports = \".tab-container {\\n  padding: 1%;\\n  margin: 1%; }\\n  .tab-container h3 {\\n    margin: 1% auto; }\\n  .tab-container .performance-history-container {\\n    border: 1px solid;\\n    padding: 1%; }\\n  .tab-container table {\\n    width: 100%; }\\n  .tab-container table .account-action-button {\\n      min-width: 26px;\\n      padding: 0 6px;\\n      margin: 4px;\\n      line-height: 25px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NsaWVudHMvY2xpZW50cy12aWV3L2dlbmVyYWwtdGFiL2dlbmVyYWwtdGFiLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztFQUNYLFVBQVUsRUFBQTtFQUZaO0lBS0ksZUFBYyxFQUFBO0VBTGxCO0lBUUksaUJBQWlCO0lBQ2pCLFdBQVcsRUFBQTtFQVRmO0lBYUksV0FBVyxFQUFBO0VBYmY7TUFlTSxlQUFlO01BQ2YsY0FBYztNQUNkLFdBQVc7TUFDWCxpQkFBaUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NsaWVudHMvY2xpZW50cy12aWV3L2dlbmVyYWwtdGFiL2dlbmVyYWwtdGFiLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhYi1jb250YWluZXIge1xuICBwYWRkaW5nOiAxJTtcbiAgbWFyZ2luOiAxJTtcblxuICBoM3tcbiAgICBtYXJnaW46MSUgYXV0bztcbiAgfVxuICAucGVyZm9ybWFuY2UtaGlzdG9yeS1jb250YWluZXIge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkO1xuICAgIHBhZGRpbmc6IDElO1xuICB9XG5cbiAgdGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIC5hY2NvdW50LWFjdGlvbi1idXR0b257XG4gICAgICBtaW4td2lkdGg6IDI2cHg7XG4gICAgICBwYWRkaW5nOiAwIDZweDtcbiAgICAgIG1hcmdpbjogNHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDI1cHg7XG4gICAgfVxuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\n\n\n\n@Component({\n  selector: 'mifosx-general-tab',\n  templateUrl: './general-tab.component.html',\n  styleUrls: ['./general-tab.component.scss']\n})\nexport class GeneralTabComponent implements OnInit {\n  openLoansColumns: string[] = ['Account No', 'Loan Account', 'Original Loan', 'Loan Balance', 'Amount Paid', 'Type', 'Actions'];\n  closedLoansColumns: string[] = ['Account No', 'Loan Account', 'Original Loan', 'Loan Balance', 'Amount Paid', 'Type', 'Closed Date'];\n  openSavingsColumns: string[] = ['Account No', 'Saving Account', 'Last Active', 'Balance', 'Actions'];\n  closedSavingsColumns: string[] = ['Account No', 'Saving Account', 'Closed Date'];\n  openSharesColumns: string[] = ['Account No', 'Share Account', 'Approved Shares', 'Pending For Approval Shares', 'Actions'];\n  closedSharesColumns: string[] = ['Account No', 'Share Account', 'Approved Shares', 'Pending For Approval Shares', 'Closed Date'];\n  upcomingChargesColumns: string[] = ['Name', 'Due as of', 'Due', 'Paid', 'Waived', 'Outstanding', 'Actions'];\n  clientAccountData: any;\n  loanAccounts: any;\n  savingAccounts: any;\n  shareAccounts: any;\n  upcomingCharges: any;\n  clientSummary: any;\n  showClosedLoanAccounts = false;\n  showClosedSavingAccounts = false;\n  showClosedShareAccounts = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private datePipe: DatePipe,\n  ) {\n    this.route.data.subscribe((data: { clientAccountsData: any, clientChargesData: any, clientSummary: any }) => {\n      this.clientAccountData = data.clientAccountsData;\n      this.savingAccounts = data.clientAccountsData.savingsAccounts;\n      this.loanAccounts = data.clientAccountsData.loanAccounts;\n      this.shareAccounts = data.clientAccountsData.shareAccounts;\n      this.upcomingCharges = data.clientChargesData.pageItems;\n      this.clientSummary = data.clientSummary[0];\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  toggleLoanAccountsOverview() {\n    this.showClosedLoanAccounts = !this.showClosedLoanAccounts;\n  }\n\n  toggleSavingAccountsOverview() {\n    this.showClosedSavingAccounts = !this.showClosedSavingAccounts;\n  }\n  toggleShareAccountsOverview() {\n    this.showClosedShareAccounts = !this.showClosedShareAccounts;\n  }\n\n}\n","module.exports = \"<div class=\\\"tab-container mat-typography\\\">\\n\\n    <!-- Identities Table -->\\n\\n    <h3>Identities</h3>\\n\\n    <button mat-raised-button class=\\\"f-right\\\" color=\\\"primary\\\" (click)=\\\"addIdentifier()\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp; Add\\n  </button>\\n\\n    <table mat-table #identifiersTable [dataSource]=\\\"clientIdentities\\\">\\n\\n        <ng-container matColumnDef=\\\"id\\\">\\n            <th mat-header-cell *matHeaderCellDef> Id </th>\\n            <td mat-cell *matCellDef=\\\"let identity\\\">\\n                {{identity.id}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"description\\\">\\n            <th mat-header-cell *matHeaderCellDef> Description </th>\\n            <td mat-cell *matCellDef=\\\"let identity\\\"> {{identity.description}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"type\\\">\\n            <th mat-header-cell *matHeaderCellDef> type </th>\\n            <td mat-cell *matCellDef=\\\"let identity\\\"> {{identity.documentType.name}}\\n            </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"documents\\\">\\n            <th mat-header-cell *matHeaderCellDef>Identity Documents </th>\\n            <td mat-cell *matCellDef=\\\"let identity\\\">\\n                <div *ngFor=\\\"let document of identity.documents\\\">\\n                    {{document.name}}\\n                    <fa-icon icon=\\\"cloud-download-alt\\\" (click)=\\\"download(document.parentEntityId,document.id)\\\"></fa-icon>\\n                </div>\\n            </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"status\\\">\\n            <th mat-header-cell *matHeaderCellDef> Status </th>\\n            <td mat-cell *matCellDef=\\\"let identity\\\">\\n                {{(identity.status==='clientIdentifierStatusType.active')?'active':'inactive'}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"actions\\\">\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\n            <td mat-cell *matCellDef=\\\"let identity; let i = index\\\">\\n                <button class=\\\"identity-action-button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"uploadDocument(i,identity.id)\\\">\\n          <fa-icon icon=\\\"cloud-upload-alt\\\"></fa-icon>\\n        </button>\\n        <button class=\\\"identity-action-button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteIdentifier(identity.clientId,identity.id,i)\\\">\\n          <fa-icon icon=\\\"times\\\"></fa-icon>\\n        </button>\\n            </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"identitiesColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: identitiesColumns;\\\"></tr>\\n    </table>\\n\\n</div>\"","module.exports = \".tab-container {\\n  padding: 1%;\\n  margin: 1%; }\\n  .tab-container h3 {\\n    margin: 1% auto; }\\n  .tab-container table {\\n    width: 100%; }\\n  .tab-container table .identity-action-button {\\n      min-width: 26px;\\n      padding: 0 6px;\\n      margin: 4px;\\n      line-height: 25px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NsaWVudHMvY2xpZW50cy12aWV3L2lkZW50aXRpZXMtdGFiL2lkZW50aXRpZXMtdGFiLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVztFQUNYLFVBQVUsRUFBQTtFQUZkO0lBS00sZUFBYyxFQUFBO0VBTHBCO0lBUU0sV0FBVyxFQUFBO0VBUmpCO01BVVEsZUFBZTtNQUNmLGNBQWM7TUFDZCxXQUFXO01BQ1gsaUJBQWlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jbGllbnRzL2NsaWVudHMtdmlldy9pZGVudGl0aWVzLXRhYi9pZGVudGl0aWVzLXRhYi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWItY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiAxJTtcbiAgICBtYXJnaW46IDElO1xuICBcbiAgICBoM3tcbiAgICAgIG1hcmdpbjoxJSBhdXRvO1xuICAgIH1cbiAgICB0YWJsZSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIC5pZGVudGl0eS1hY3Rpb24tYnV0dG9ue1xuICAgICAgICBtaW4td2lkdGg6IDI2cHg7XG4gICAgICAgIHBhZGRpbmc6IDAgNnB4O1xuICAgICAgICBtYXJnaW46IDRweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDI1cHg7XG4gICAgICB9XG4gICAgfVxuICB9XG4gICJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatTable } from '@angular/material/table';\nimport { MatDialog } from '@angular/material';\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\nimport { SelectBase } from 'app/shared/form-dialog/formfield/model/select-base';\n\n/** Custom Components */\nimport { UploadDocumentDialogComponent } from '../upload-document-dialog/upload-document-dialog.component';\nimport { DeleteDialogComponent } from '../../../shared/delete-dialog/delete-dialog.component';\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\n\n/** Custom Services */\nimport { ClientsService } from '../../clients.service';\n\n@Component({\n  selector: 'mifosx-identities-tab',\n  templateUrl: './identities-tab.component.html',\n  styleUrls: ['./identities-tab.component.scss']\n})\nexport class IdentitiesTabComponent implements OnInit {\n\n  @ViewChild('identifiersTable') identifiersTable: MatTable<Element>;\n  identitiesColumns: string[] = ['id', 'description', 'type', 'documents', 'status', 'actions'];\n  clientIdentities: any;\n  clientIdentifierTemplate: any;\n  clientId: string;\n\n  constructor(private route: ActivatedRoute,\n    public dialog: MatDialog,\n    private clientService: ClientsService) {\n    this.clientId = this.route.parent.snapshot.paramMap.get('clientId');\n    this.route.data.subscribe((data: { clientIdentities: any, clientIdentifierTemplate: any }) => {\n      this.clientIdentities = data.clientIdentities;\n      this.clientIdentifierTemplate = data.clientIdentifierTemplate;\n    });\n  }\n\n  ngOnInit() { }\n\n  download(parentEntityId: string, documentId: string) {\n    this.clientService.downloadClientIdentificationDocument(parentEntityId, documentId).subscribe(res => {\n      const url = window.URL.createObjectURL(res);\n      window.open(url);\n    });\n  }\n\n  addIdentifier() {\n    const formfields: FormfieldBase[] = [\n      new SelectBase({\n        controlName: 'documentTypeId',\n        label: 'Document Type',\n        value: '',\n        options: { label: 'name', value: 'id', data: this.clientIdentifierTemplate.allowedDocumentTypes },\n        required: true,\n        order: 1\n      }),\n      new SelectBase({\n        controlName: 'status',\n        label: 'Status',\n        value: '2',\n        options: { label: 'value', value: 'value', data: [{ value: 'Active' }, { value: 'Inactive' }] },\n        required: true,\n        order: 2\n      }),\n      new InputBase({\n        controlName: 'documentKey',\n        label: 'Unique Id',\n        value: '',\n        type: 'text',\n        required: true,\n        order: 3\n      }),\n      new InputBase({\n        controlName: 'description',\n        label: 'Description',\n        value: '',\n        type: 'text',\n        order: 4\n      })\n    ];\n    const data = {\n      title: 'Add Client Identifier',\n      formfields: formfields\n    };\n    const addIdentifierDialogRef = this.dialog.open(FormDialogComponent, { data });\n    addIdentifierDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        this.clientService.addClientIdentifier(this.clientId, response.data.value).subscribe((res: any) => {\n          this.clientIdentities.push({\n            id: res.resourceId,\n            description: response.data.value.description,\n            documentType: this.clientIdentifierTemplate.allowedDocumentTypes.filter((doc: any) => (doc.id === response.data.value.documentTypeId))[0],\n            documentKey: response.data.value.documentKey,\n            documents: [],\n            clientId: this.clientId,\n            status: (response.data.value.status === 'Active' ? 'clientIdentifierStatusType.active' : 'clientIdentifierStatusType.inactive')\n          });\n          this.identifiersTable.renderRows();\n        });\n      }\n    });\n  }\n\n  deleteIdentifier(clientId: string, identifierId: string, index: number) {\n    const deleteIdentifierDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `identifier id:${identifierId}` }\n    });\n    deleteIdentifierDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.clientService.deleteClientIdentifier(clientId, identifierId).subscribe(res => {\n          this.clientIdentities.splice(index, 1);\n          this.identifiersTable.renderRows();\n        });\n      }\n    });\n  }\n\n  uploadDocument(index: number, identifierId: string) {\n    const uploadDocumentDialogRef = this.dialog.open(UploadDocumentDialogComponent, {\n      data: { documentIdentifier: true }\n    });\n    uploadDocumentDialogRef.afterClosed().subscribe((dialogResponse: any) => {\n      if (dialogResponse) {\n        const formData: FormData = new FormData;\n        formData.append('name', dialogResponse.fileName);\n        formData.append('file', dialogResponse.file);\n        this.clientService.uploadClientIdentifierDocument(identifierId, formData).subscribe((res: any) => {\n          this.clientIdentities[index].documents.push({\n            id: res.resourceId,\n            parentEntityType: 'client_identifiers',\n            parentEntityId: identifierId,\n            name: dialogResponse.fileName,\n            fileName: dialogResponse.file.name\n          });\n          this.identifiersTable.renderRows();\n        });\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"tab-container mat-typography\\\">\\n  <h3>Notes</h3>\\n  <div>\\n    <form #formRef=\\\"ngForm\\\" [formGroup]=\\\"noteForm\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start baseline\\\" fxLayoutGap=\\\"20px\\\"\\n      (ngSubmit)=\\\"submit()\\\">\\n      <mat-form-field fxFlex=\\\"calc(90%-20px)\\\">\\n        <textarea formControlName=\\\"note\\\" matInput placeholder=\\\"Write a note ....\\\"></textarea>\\n      </mat-form-field>\\n      <button mat-raised-button fxFlex color=\\\"primary\\\" [disabled]=\\\"!noteForm.valid\\\">\\n        <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp; Add\\n      </button>\\n    </form>\\n  </div>\\n  <mat-list>\\n    <mat-list-item *ngFor=\\\"let clientNote of clientNotes; let i=index;\\\">\\n      <fa-icon icon=\\\"sticky-note\\\" matListIcon></fa-icon>\\n      <h3 matLine>{{clientNote.note}} </h3>\\n      <p matLine>\\n        <span>Created by: {{clientNote.createdByUsername}}</span><br />\\n        <span>Date: {{clientNote.createdOn | date}}</span>\\n      </p>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"flex-start\\\">\\n        <button mat-button color=\\\"primary\\\" (click)=\\\"editNote(clientNote.id,clientNote.note,i)\\\">\\n          <fa-icon icon=\\\"edit\\\"></fa-icon>\\n        </button>\\n        <button mat-button color=\\\"warn\\\" (click)=\\\"deleteNote(clientNote.id,i)\\\">\\n          <fa-icon icon=\\\"trash\\\"></fa-icon>\\n        </button>\\n      </div>\\n    </mat-list-item>\\n  </mat-list>\\n</div>\"","module.exports = \".tab-container {\\n  padding: 1%;\\n  margin: 1%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NsaWVudHMvY2xpZW50cy12aWV3L25vdGVzLXRhYi9ub3Rlcy10YWIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0VBQ1gsVUFBVSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY2xpZW50cy9jbGllbnRzLXZpZXcvbm90ZXMtdGFiL25vdGVzLXRhYi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWItY29udGFpbmVyIHtcbiAgcGFkZGluZzogMSU7XG4gIG1hcmdpbjogMSU7XG5cbn1cbiJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n/** Custom Components */\nimport { DeleteDialogComponent } from '../../../shared/delete-dialog/delete-dialog.component';\n\n/** Custom Services */\nimport { ClientsService } from '../../clients.service';\nimport { EditNotesDialogComponent } from '../edit-notes-dialog/edit-notes-dialog.component';\n\n@Component({\n  selector: 'mifosx-notes-tab',\n  templateUrl: './notes-tab.component.html',\n  styleUrls: ['./notes-tab.component.scss']\n})\nexport class NotesTabComponent implements OnInit {\n  clientId: string;\n  username: string;\n  clientNotes: any;\n  noteForm: FormGroup;\n  @ViewChild('formRef') formRef: any;\n\n\n  constructor(private route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private clientsService: ClientsService,\n    public dialog: MatDialog) {\n\n    this.username = JSON.parse(sessionStorage.getItem('mifosXCredentials')).username;\n    this.clientId = this.route.parent.snapshot.params['clientId'];\n    this.route.data.subscribe((data: { clientNotes: any }) => {\n      this.clientNotes = data.clientNotes;\n    });\n  }\n\n  ngOnInit() {\n    this.createNoteForm();\n  }\n\n  createNoteForm() {\n    this.noteForm = this.formBuilder.group({\n      'note': ['', Validators.required]\n    });\n  }\n\n  submit() {\n    this.clientsService.createClientNote(this.clientId, this.noteForm.value).subscribe((response: any) => {\n      this.clientNotes.push({\n        id: response.resourceId,\n        createdByUsername: this.username,\n        createdOn: new Date(),\n        note: this.noteForm.value.note\n      });\n      this.formRef.resetForm();\n    });\n  }\n\n  editNote(noteId: string, noteContent: string, index: number) {\n    const editNoteDialogRef = this.dialog.open(EditNotesDialogComponent, {\n      data: { noteContent: noteContent }\n    });\n    editNoteDialogRef.afterClosed().subscribe((response: { editForm: any }) => {\n      if (response.editForm) {\n        this.clientsService.editClientNote(this.clientId, noteId, response.editForm.value).subscribe(() => {\n          this.clientNotes[index].note = response.editForm.value.note;\n        });\n      }\n    });\n  }\n\n\n\n  deleteNote(noteId: string, index: number) {\n    const deleteNoteDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `Note id:${noteId}` }\n    });\n    deleteNoteDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.clientsService.deleteClientNote(this.clientId, noteId)\n          .subscribe(() => {\n            this.clientNotes.splice(index, 1);\n          });\n      }\n    });\n  }\n\n}\n","module.exports = \"<h1 mat-dialog-title>Upload Client Documents</h1>\\n<div>\\n    <form [formGroup]=\\\"uploadDocumentForm\\\" fxLayout=\\\"column\\\">\\n\\n        <mat-form-field fxFlex>\\n            <mat-label>File Name</mat-label>\\n            <input formControlName=\\\"fileName\\\" required matInput />\\n            <mat-error *ngIf=\\\"uploadDocumentForm.controls.fileName.hasError('required')\\\">\\n                File Name is <strong>required</strong>\\n            </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlex *ngIf=\\\"!documentIdentifier\\\">\\n            <mat-label>Description</mat-label>\\n            <input formControlName=\\\"description\\\" matInput />\\n        </mat-form-field>\\n\\n        <input type=\\\"file\\\" name=\\\"file\\\" (change)=\\\"onFileSelect($event)\\\" />\\n\\n        <mat-dialog-actions align=\\\"end\\\">\\n            <button mat-raised-button mat-dialog-close>Cancel</button>\\n            <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!uploadDocumentForm.valid\\\" [mat-dialog-close]=\\\"uploadDocumentForm.value\\\">Confirm</button>\\n        </mat-dialog-actions>\\n\\n    </form>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsaWVudHMvY2xpZW50cy12aWV3L3VwbG9hZC1kb2N1bWVudC1kaWFsb2cvdXBsb2FkLWRvY3VtZW50LWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'mifosx-upload-document-dialog',\n  templateUrl: './upload-document-dialog.component.html',\n  styleUrls: ['./upload-document-dialog.component.scss']\n})\nexport class UploadDocumentDialogComponent implements OnInit {\n  /** Upload Document form. */\n  uploadDocumentForm: FormGroup;\n  file: any;\n  uploadDocumentData: any = [];\n  documentIdentifier = false;\n  constructor(public dialogRef: MatDialogRef<UploadDocumentDialogComponent>,\n    private formBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.documentIdentifier = data.documentIdentifier;\n  }\n\n  ngOnInit() {\n    this.createUploadDocumentForm();\n  }\n\n  /**\n   * Creates the upload Document form.\n   */\n  createUploadDocumentForm() {\n    this.uploadDocumentForm = this.formBuilder.group({\n      'fileName': ['', Validators.required],\n      'description': [''],\n      'file': ['']\n    });\n  }\n  onFileSelect(event: any) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.uploadDocumentForm.get('file').setValue(file);\n    }\n  }\n}\n\n\n","module.exports = \"<mat-card class=\\\"container\\\">\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n    <div class=\\\"search-box\\\">\\n      <mat-form-field>\\n        <input matInput  placeholder=\\\"Search\\\">\\n      </mat-form-field>\\n      <mat-checkbox #showClosedAccounts labelPosition=\\\"after\\\">Show Closed Accounts\\n      </mat-checkbox>\\n    </div>\\n    <div class=\\\"action-button\\\" fxLayoutGap=\\\"25px\\\">\\n      <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['./import']\\\">\\n        <fa-icon icon=\\\"download\\\"></fa-icon>&nbsp;&nbsp;Import Client\\n      </button>\\n      <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['./add']\\\">\\n        <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;Create Client\\n      </button>\\n    </div>\\n  </div>\\n  <div>\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header='displayName'> Name </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.displayName}} </td>\\n      </ng-container>\\n\\n      <!-- Account no Column -->\\n      <ng-container matColumnDef=\\\"clientno\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header='accountNo'> Account # </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.accountNo}} </td>\\n      </ng-container>\\n\\n      <!-- External ID Column -->\\n      <ng-container matColumnDef=\\\"externalid\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header='externalId'> ExternalID </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.externalId}} </td>\\n      </ng-container>\\n\\n      <!-- Status Column -->\\n      <ng-container matColumnDef=\\\"status\\\">\\n        <th mat-header-cell *matHeaderCellDef> Status </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">\\n          <div [ngClass]=\\\"row.active|statusLookup\\\">\\n            <i class=\\\"fa fa-user fa-2x\\\"> </i>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <!-- Mobile Number Column-->\\n      <ng-container matColumnDef=\\\"mobileNo\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Mobile Number </th>\\n        <td mat-cell *matCellDef=\\\"let client\\\"> {{ client.mobileNo }} </td>\\n      </ng-container>\\n\\n      <!--Gender column-->\\n      <ng-container matColumnDef=\\\"gender\\\">\\n        <th mat-header-cell *matHeaderCellDef> Gender </th>\\n        <td mat-cell *matCellDef=\\\"let client\\\"> {{ client.gender.name }} </td>\\n      </ng-container>\\n\\n      <!-- Color Column -->\\n      <ng-container matColumnDef=\\\"office\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header='officeName'> OfficeName </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.officeName}} </td>\\n      </ng-container>\\n\\n\\n      <!-- ID Column -->\\n      <ng-container matColumnDef=\\\"staff\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header='staffName'> StaffName </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.staffName}} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id,'general']\\\">\\n      </tr>\\n    </table>\\n\\n    <mat-paginator [length]=\\\"dataSource?.records$ | async\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\"\\n      showFirstLastButtons></mat-paginator>\\n  </div>\\n\\n</mat-card>\"","module.exports = \".container .action-button {\\n  margin-left: auto; }\\n\\n.container .search-button {\\n  min-width: 30px;\\n  margin: 4px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NsaWVudHMvY2xpZW50cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUVJLGlCQUFpQixFQUFBOztBQUZyQjtFQUtJLGVBQWU7RUFDZixXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jbGllbnRzL2NsaWVudHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5jb250YWluZXIge1xuICAuYWN0aW9uLWJ1dHRvbntcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgfVxuICAuc2VhcmNoLWJ1dHRvbntcbiAgICBtaW4td2lkdGg6IDMwcHg7XG4gICAgbWFyZ2luOiA0cHg7XG4gICAgXG4gIH1cbn1cbiJdfQ== */\"","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource, MatCheckbox } from '@angular/material';\nimport { ClientsDataSource } from './clients.datasource';\n\n/** rxjs Imports */\nimport { merge } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n/** Custom Services */\nimport { ClientsService } from './clients.service';\n\n@Component({\n  selector: 'mifosx-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.scss'],\n})\nexport class ClientsComponent implements OnInit, AfterViewInit {\n  @ViewChild('showClosedAccounts') showClosedAccounts: MatCheckbox;\n\n\n  displayedColumns = ['name', 'clientno', 'externalid', 'status', 'mobileNo', 'gender', 'office', 'staff'];\n  dataSource: ClientsDataSource;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private clientsService: ClientsService) {\n\n  }\n\n  ngOnInit() {\n    this.getClients();\n  }\n  ngAfterViewInit() {\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n    merge(this.sort.sortChange, this.paginator.page, this.showClosedAccounts.change)\n      .pipe(\n        tap(() => this.loadClientsPage())\n      )\n      .subscribe();\n  }\n\n  /**\n   * Loads a page of journal entries.\n   */\n  loadClientsPage() {\n    if (!this.sort.direction) {\n      delete this.sort.active;\n    }\n    this.dataSource.getClients(this.sort.active, this.sort.direction, this.paginator.pageIndex, this.paginator.pageSize, !this.showClosedAccounts.checked);\n  }\n\n  /**\n   * Initializes the data source for clients table and loads the first page.\n   */\n  getClients() {\n    this.dataSource = new ClientsDataSource(this.clientsService);\n    this.dataSource.getClients(this.sort.active, this.sort.direction, this.paginator.pageIndex, this.paginator.pageSize, !this.showClosedAccounts.checked);\n  }\n}\n","/** Angular Imports */\nimport { CollectionViewer, DataSource } from '@angular/cdk/collections';\n\n/** rxjs Imports */\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n/** Custom Services */\nimport { ClientsService } from './clients.service';\n\n/**\n * Clients custom data source to implement server side filtering, pagination and sorting.\n */\nexport class ClientsDataSource implements DataSource<any> {\n\n  /** clients behavior subject to represent loaded journal clients page. */\n  private clientsSubject = new BehaviorSubject<any[]>([]);\n  /** Records subject to represent total number of filtered clients records. */\n  private recordsSubject = new BehaviorSubject<number>(0);\n  /** Records observable which can be subscribed to get the value of total number of filtered clients records. */\n  public records$ = this.recordsSubject.asObservable();\n\n  /**\n   * @param {ClientsService} clientsService Clients Service\n   */\n  constructor(private clientsService: ClientsService) { }\n\n  /**\n   * Gets clients on the basis of provided parameters and emits the value.\n   * @param {any} filterBy Properties by which clients should be filtered.\n   * @param {string} orderBy Property by which clients should be sorted.\n   * @param {string} sortOrder Sort order: ascending or descending.\n   * @param {number} pageIndex Page number.\n   * @param {number} limit Number of clients within the page.\n   */\n  getClients(orderBy: string = '', sortOrder: string = '', pageIndex: number = 0, limit: number = 10, clientActive: boolean = true) {\n    this.clientsSubject.next([]);\n    this.clientsService.getClients(orderBy, sortOrder, pageIndex * limit, limit)\n      .subscribe((clients: any) => {\n        clients.pageItems = (clientActive) ? (clients.pageItems.filter((client: any) => client.active)) : clients.pageItems;\n        this.recordsSubject.next(clients.totalFilteredRecords);\n        this.clientsSubject.next(clients.pageItems);\n      });\n  }\n\n  /**\n   * @param {CollectionViewer} collectionViewer\n   */\n  connect(collectionViewer: CollectionViewer): Observable<any[]> {\n    return this.clientsSubject.asObservable();\n  }\n\n  /**\n   * @param {CollectionViewer} collectionViewer\n   */\n  disconnect(collectionViewer: CollectionViewer): void {\n    this.clientsSubject.complete();\n    this.recordsSubject.complete();\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\n/** Custom Modules */\nimport { ClientsRoutingModule } from './clients-routing.module';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { PipesModule } from '../pipes/pipes.module';\n\n/** Custom Components */\nimport { ClientsComponent } from './clients.component';\nimport { ClientsViewComponent } from './clients-view/clients-view.component';\nimport { GeneralTabComponent } from './clients-view/general-tab/general-tab.component';\nimport { FamilyMembersTabComponent } from './clients-view/family-members-tab/family-members-tab.component';\nimport { AddFamilyMemberComponent } from './clients-view/family-members-tab/add-family-member/add-family-member.component';\nimport { EditFamilyMemberComponent } from './clients-view/family-members-tab/edit-family-member/edit-family-member.component';\nimport { IdentitiesTabComponent } from './clients-view/identities-tab/identities-tab.component';\nimport { UploadDocumentDialogComponent } from './clients-view/upload-document-dialog/upload-document-dialog.component';\nimport { NotesTabComponent } from './clients-view/notes-tab/notes-tab.component';\nimport { EditNotesDialogComponent } from './clients-view/edit-notes-dialog/edit-notes-dialog.component';\nimport { DocumentsTabComponent } from './clients-view/documents-tab/documents-tab.component';\nimport { DatatableTabComponent } from './clients-view/datatable-tab/datatable-tab.component';\nimport { MultiRowComponent } from './clients-view/datatable-tab/multi-row/multi-row.component';\nimport { SingleRowComponent } from './clients-view/datatable-tab/single-row/single-row.component';\nimport { AddressTabComponent } from './clients-view/address-tab/address-tab.component';\n\n\n/**\n * Clients Module\n *\n * All components related to Clients should be declared here.\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    ClientsRoutingModule,\n    PipesModule\n  ],\n  declarations: [\n    ClientsComponent,\n    ClientsViewComponent,\n    GeneralTabComponent,\n    FamilyMembersTabComponent,\n    AddFamilyMemberComponent,\n    EditFamilyMemberComponent,\n    IdentitiesTabComponent,\n    UploadDocumentDialogComponent,\n    NotesTabComponent,\n    EditNotesDialogComponent,\n    DocumentsTabComponent,\n    DatatableTabComponent,\n    MultiRowComponent,\n    SingleRowComponent,\n    AddressTabComponent\n  ],\n  entryComponents: [\n    UploadDocumentDialogComponent,\n    EditNotesDialogComponent\n  ],\n  providers: [DatePipe]\n\n})\nexport class ClientsModule { }\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n/**\n * Clients service.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientsService {\n  /**\n   * @param {HttpClient} http Http Client to send requests.\n   */\n  constructor(private http: HttpClient) { }\n\n  getClients(orderBy: string, sortOrder: string, offset: number, limit: number): Observable<any> {\n    const httpParams = new HttpParams()\n      .set('offset', offset.toString())\n      .set('limit', limit.toString())\n      .set('sortOrder', sortOrder)\n      .set('orderBy', orderBy);\n    return this.http.get('/clients');\n  }\n\n  getClientTemplate(): Observable<any> {\n    return this.http.get('/clients/template');\n  }\n\n  getClientData(clientId: string) {\n    return this.http.get(`/clients/${clientId}`);\n  }\n\n  getClientDatatables() {\n    const httpParams = new HttpParams().set('apptable', 'm_client');\n    return this.http.get(`/datatables`, { params: httpParams });\n  }\n\n  getClientDatatable(clientId: string, datatableName: string) {\n    const httpParams = new HttpParams().set('genericResultSet', 'true');\n    return this.http.get(`/datatables/${datatableName}/${clientId}`, { params: httpParams });\n  }\n\n  addClientDatatableEntry(clientId: string, datatableName: string, data: any) {\n    const httpParams = new HttpParams().set('genericResultSet', 'true');\n    return this.http.post(`/datatables/${datatableName}/${clientId}`, data, { params: httpParams });\n  }\n\n  editClientDatatableEntry(clientId: string, datatableName: string, data: any) {\n    const httpParams = new HttpParams().set('genericResultSet', 'true');\n    return this.http.put(`/datatables/${datatableName}/${clientId}`, data, { params: httpParams });\n  }\n\n  deleteDatatableContent(clientId: string, datatableName: string) {\n    const httpParams = new HttpParams().set('genericResultSet', 'true');\n    return this.http.delete(`/datatables/${datatableName}/${clientId}`, { params: httpParams });\n  }\n\n  getClientAccountData(clientId: string) {\n    return this.http.get(`/clients/${clientId}/accounts`);\n  }\n\n  getClientChargesData(clientId: string) {\n    const httpParams = new HttpParams().set('pendingPayment', 'true');\n    return this.http.get(`/clients/${clientId}/charges`, { params: httpParams });\n  }\n\n  getClientSummary(clientId: string) {\n    const httpParams = new HttpParams().set('R_clientId', clientId)\n      .set('genericResultSet', 'false');\n    return this.http.get(`/runreports/ClientSummary`, { params: httpParams });\n  }\n\n  getClientProfileImage(clientId: string) {\n    const httpParams = new HttpParams().set('maxHeight', '150');\n    return this.http.skipErrorHandler().get(`/clients/${clientId}/images`, { params: httpParams, responseType: 'text' });\n  }\n\n  getClientFamilyMembers(clientId: string) {\n    return this.http.get(`/clients/${clientId}/familymembers`);\n  }\n\n  getClientFamilyMember(clientId: string, familyMemberId: string) {\n    return this.http.get(`/clients/${clientId}/familymembers/${familyMemberId}`);\n  }\n\n  addFamilyMember(clientId: string, familyMemberData: any) {\n    return this.http.post(`/clients/${clientId}/familymembers`, familyMemberData);\n  }\n\n  editFamilyMember(clientId: string, familyMemberId: any, familyMemberData: any) {\n    return this.http.put(`/clients/${clientId}/familymembers/${familyMemberId}`, familyMemberData);\n  }\n\n  deleteFamilyMember(clientId: string, familyMemberId: string) {\n    return this.http.delete(`/clients/${clientId}/familymembers/${familyMemberId}`);\n  }\n\n  getClientIdentifiers(clientId: string) {\n    return this.http.get(`/clients/${clientId}/identifiers`);\n  }\n\n  getClientIdentifierTemplate(clientId: string) {\n    return this.http.get(`/clients/${clientId}/identifiers/template`);\n  }\n\n  addClientIdentifier(clientId: string, identifierData: any) {\n    return this.http.post(`/clients/${clientId}/identifiers`, identifierData);\n  }\n\n  deleteClientIdentifier(clientId: string, identifierId: string) {\n    return this.http.delete(`/clients/${clientId}/identifiers/${identifierId}`);\n  }\n\n  getClientIdentificationDocuments(documentId: string) {\n    return this.http.get(`/client_identifiers/${documentId}/documents`);\n  }\n\n  downloadClientIdentificationDocument(parentEntityId: string, documentId: string) {\n    return this.http.get(`/client_identifiers/${parentEntityId}/documents/${documentId}/attachment`, { responseType: 'blob' });\n  }\n\n  uploadClientIdentifierDocument(identifierId: string, documentData: any) {\n    return this.http.post(`/client_identifiers/${identifierId}/documents`, documentData);\n  }\n\n  getClientDocuments(clientId: string) {\n    return this.http.get(`/clients/${clientId}/documents`);\n  }\n\n  downloadClientDocument(parentEntityId: string, documentId: string) {\n    return this.http.get(`/clients/${parentEntityId}/documents/${documentId}/attachment`, { responseType: 'blob' });\n  }\n\n  uploadClientDocument(clientId: string, documentData: any) {\n    return this.http.post(`/clients/${clientId}/documents`, documentData);\n  }\n\n  deleteClientDocument(parentEntityId: string, documentId: string) {\n    return this.http.delete(`/clients/${parentEntityId}/documents/${documentId}`);\n  }\n\n  getClientNotes(clientId: string) {\n    return this.http.get(`/clients/${clientId}/notes`);\n  }\n\n  createClientNote(clientId: string, noteData: any) {\n    return this.http.post(`/clients/${clientId}/notes`, noteData);\n  }\n\n  editClientNote(clientId: string, noteId: string, noteData: any) {\n    return this.http.put(`/clients/${clientId}/notes/${noteId}`, noteData);\n  }\n\n  deleteClientNote(clientId: string, noteId: string) {\n    return this.http.delete(`/clients/${clientId}/notes/${noteId}`);\n  }\n\n  getAddressFieldConfiguration() {\n    return this.http.get(`/fieldconfiguration/ADDRESS`);\n  }\n\n  getClientAddressData(clientId: string) {\n    return this.http.get(`/client/${clientId}/addresses`);\n  }\n\n  getClientAddressTemplate() {\n    return this.http.get(`/client/addresses/template`);\n  }\n\n  createClientAddress(clientId: string, addressTypeId: string, addressData: any) {\n    return this.http.post(`/client/${clientId}/addresses?type=${addressTypeId}`, addressData);\n  }\n\n  editClientAddress(clientId: string, addressTypeId: string, addressData: any) {\n    return this.http.put(`/client/${clientId}/addresses?type=${addressTypeId}`, addressData);\n  }\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ClientsService } from '../clients.service';\n\n/**\n * Client Accounts data resolver.\n */\n@Injectable()\nexport class ClientAccountsResolver implements Resolve<Object> {\n\n    /**\n     * @param {ClientsService} ClientsService Clients service.\n     */\n    constructor(private clientsService: ClientsService) { }\n\n    /**\n     * Returns the Client Account data.\n     * @returns {Observable<any>}\n     */\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\n        const clientId = route.parent.paramMap.get('clientId');\n        return this.clientsService.getClientAccountData(clientId);\n    }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ClientsService } from '../clients.service';\n\n/**\n * Client Address Field Configuration resolver.\n */\n@Injectable()\nexport class ClientAddressFieldConfigurationResolver implements Resolve<Object> {\n\n    /**\n     * @param {ClientsService} ClientsService Clients service.\n     */\n    constructor(private clientsService: ClientsService) { }\n\n    /**\n     * Returns the Client Address Field Configuration.\n     * @returns {Observable<any>}\n     */\n    resolve(): Observable<any> {\n        return this.clientsService.getAddressFieldConfiguration();\n    }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ClientsService } from '../clients.service';\n\n/**\n * Client Address Field Configuration resolver.\n */\n@Injectable()\nexport class ClientAddressTemplateResolver implements Resolve<Object> {\n\n    /**\n     * @param {ClientsService} ClientsService Clients service.\n     */\n    constructor(private clientsService: ClientsService) { }\n\n    /**\n     * Returns the Client Address Field Configuration.\n     * @returns {Observable<any>}\n     */\n    resolve(): Observable<any> {\n        return this.clientsService.getClientAddressTemplate();\n    }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ClientsService } from '../clients.service';\n\n/**\n * Client Address data resolver.\n */\n@Injectable()\nexport class ClientAddressResolver implements Resolve<Object> {\n\n    /**\n     * @param {ClientsService} ClientsService Clients service.\n     */\n    constructor(private clientsService: ClientsService) { }\n\n    /**\n     * Returns the Client Address data.\n     * @returns {Observable<any>}\n     */\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\n        const clientId = route.parent.paramMap.get('clientId');\n        return this.clientsService.getClientAddressData(clientId);\n    }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ClientsService } from '../clients.service';\n\n/**\n * Client Charges data resolver.\n */\n@Injectable()\nexport class ClientChargesResolver implements Resolve<Object> {\n\n    /**\n     * @param {ClientsService} ClientsService Clients service.\n     */\n    constructor(private clientsService: ClientsService) { }\n\n    /**\n     * Returns the Client Charge data.\n     * @returns {Observable<any>}\n     */\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\n        const clientId = route.parent.paramMap.get('clientId');\n        return this.clientsService.getClientChargesData(clientId);\n    }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ClientsService } from '../clients.service';\n\n/**\n * Client datatable resolver.\n */\n@Injectable()\nexport class ClientDatatableResolver implements Resolve<Object> {\n\n    /**\n     * @param {ClientsService} ClientsService Clients service.\n     */\n    constructor(private clientsService: ClientsService) { }\n\n    /**\n     * Returns the Client datatables.\n     * @returns {Observable<any>}\n     */\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\n        const clientId = route.parent.parent.paramMap.get('clientId');\n        const datatableName = route.paramMap.get('datatableName');\n        return this.clientsService.getClientDatatable(clientId, datatableName);\n    }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ClientsService } from '../clients.service';\n\n/**\n * Client datatables resolver.\n */\n@Injectable()\nexport class ClientDatatablesResolver implements Resolve<Object> {\n\n    /**\n     * @param {ClientsService} ClientsService Clients service.\n     */\n    constructor(private clientsService: ClientsService) { }\n\n    /**\n     * Returns the Client datatables.\n     * @returns {Observable<any>}\n     */\n    resolve(): Observable<any> {\n        return this.clientsService.getClientDatatables();\n    }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ClientsService } from '../clients.service';\n\n/**\n * Client Documents resolver.\n */\n@Injectable()\nexport class ClientDocumentsResolver implements Resolve<Object> {\n\n    /**\n     * @param {ClientsService} ClientsService Clients service.\n     */\n    constructor(private clientsService: ClientsService) { }\n\n    /**\n     * Returns the Client's Documents data.\n     * @returns {Observable<any>}\n     */\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\n        const clientId = route.parent.paramMap.get('clientId');\n        return this.clientsService.getClientDocuments(clientId);\n    }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ClientsService } from '../clients.service';\n\n/**\n * Client Family Member resolver.\n */\n@Injectable()\nexport class ClientFamilyMemberResolver implements Resolve<Object> {\n\n    /**\n     * @param {ClientsService} ClientsService Clients service.\n     */\n    constructor(private clientsService: ClientsService) { }\n\n    /**\n     * Returns the Clients data.\n     * @returns {Observable<any>}\n     */\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\n        const clientId = route.parent.parent.parent.paramMap.get('clientId');\n        const familyMemberId = route.parent.paramMap.get('familyMemberId');\n        return this.clientsService.getClientFamilyMember(clientId, familyMemberId);\n    }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ClientsService } from '../clients.service';\n\n/**\n * Client Family Members resolver.\n */\n@Injectable()\nexport class ClientFamilyMembersResolver implements Resolve<Object> {\n\n    /**\n     * @param {ClientsService} ClientsService Clients service.\n     */\n    constructor(private clientsService: ClientsService) { }\n\n    /**\n     * Returns the Clients data.\n     * @returns {Observable<any>}\n     */\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\n        const clientId = route.parent.parent.paramMap.get('clientId');\n        return this.clientsService.getClientFamilyMembers(clientId);\n    }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n\n/** Custom Services */\nimport { ClientsService } from '../clients.service';\n\n/**\n * Client Identifier Template resolver.\n */\n@Injectable()\nexport class ClientIdentifierTemplateResolver implements Resolve<Object> {\n    /**\n     * @param {ClientsService} ClientsService Clients service.\n     */\n    constructor(private clientsService: ClientsService) { }\n    /**\n     * Returns the Client Identities data.\n     * @returns {Observable<any>}\n     */\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\n        const clientId = route.parent.paramMap.get('clientId');\n        return this.clientsService.getClientIdentifierTemplate(clientId);\n    }\n}\n\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable, forkJoin, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/** Custom Services */\nimport { ClientsService } from '../clients.service';\n\n/**\n * Client Identities resolver.\n */\n@Injectable()\nexport class ClientIdentitiesResolver implements Resolve<Object> {\n    /**\n     * @param {ClientsService} ClientsService Clients service.\n     */\n    constructor(private clientsService: ClientsService) { }\n    /**\n     * Returns the Client Identities data.\n     * @returns {Observable<any>}\n     */\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\n        const clientId = route.parent.paramMap.get('clientId');\n        let identitiesData: any;\n        return this.clientsService.getClientIdentifiers(clientId).pipe(map((identities: any) => {\n            identitiesData = identities;\n            const docObservable: Observable<any>[] = [];\n            identities.forEach((identity: any) => {\n                docObservable.push(this.clientsService.getClientIdentificationDocuments(identity.id));\n            });\n            forkJoin(docObservable).subscribe(documents => {\n                documents.forEach((document, index) => {\n                    identitiesData[index].documents = document;\n                });\n            });\n            return identitiesData;\n        }));\n    }\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ClientsService } from '../clients.service';\n\n/**\n * Client Notes resolver.\n */\n@Injectable()\nexport class ClientNotesResolver implements Resolve<Object> {\n\n    /**\n     * @param {ClientsService} ClientsService Clients service.\n     */\n    constructor(private clientsService: ClientsService) { }\n\n    /**\n     * Returns the Client's Notes.\n     * @returns {Observable<any>}\n     */\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\n        const clientId = route.parent.paramMap.get('clientId');\n        return this.clientsService.getClientNotes(clientId);\n    }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ClientsService } from '../clients.service';\n\n/**\n * Client Summary resolver.\n */\n@Injectable()\nexport class ClientSummaryResolver implements Resolve<Object> {\n\n    /**\n     * @param {ClientsService} ClientsService Clients service.\n     */\n    constructor(private clientsService: ClientsService) { }\n\n    /**\n     * Returns the Client Summary data.\n     * @returns {Observable<any>}\n     */\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\n        const clientId = route.parent.paramMap.get('clientId');\n        return this.clientsService.getClientSummary(clientId);\n    }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ClientsService } from '../clients.service';\n\n/**\n * Client Template resolver.\n */\n@Injectable()\nexport class ClientTemplateResolver implements Resolve<Object> {\n\n    /**\n     * @param {ClientsService} ClientsService Clients service.\n     */\n    constructor(private clientsService: ClientsService) { }\n\n    /**\n     * Returns the Client Template data.\n     * @returns {Observable<any>}\n     */\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\n        return this.clientsService.getClientTemplate();\n    }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ClientsService } from '../clients.service';\n\n/**\n * Clients data resolver.\n */\n@Injectable()\nexport class ClientViewResolver implements Resolve<Object> {\n\n    /**\n     * @param {ClientsService} ClientsService Clients service.\n     */\n    constructor(private clientsService: ClientsService) { }\n\n    /**\n     * Returns the Clients data.\n     * @returns {Observable<any>}\n     */\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\n        const clientId = route.paramMap.get('clientId');\n        return this.clientsService.getClientData(clientId);\n    }\n\n}\n","/** Angular Imports */\nimport { Injectable, EventEmitter } from '@angular/core';\n\n/** Custom Model */\nimport { Alert } from './alert.model';\n\n/**\n * Alert service.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  /** Alert event. */\n  public alertEvent: EventEmitter<Alert>;\n\n  /**\n   * Initializes alert event.\n   */\n  constructor() {\n    this.alertEvent = new EventEmitter();\n  }\n\n  /**\n   * Emits an alert event.\n   * @param {Alert} alertEvent Alert event.\n   */\n  alert(alertEvent: Alert) {\n    this.alertEvent.emit(alertEvent);\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\n\n/** Custom Services */\nimport { Logger } from '../logger/logger.service';\nimport { AuthenticationService } from './authentication.service';\n\n/** Initialize logger */\nconst log = new Logger('AuthenticationGuard');\n\n/**\n * Route access authorization.\n */\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n\n  /**\n   * @param {Router} router Router for navigation.\n   * @param {AuthenticationService} authenticationService Authentication Service.\n   */\n  constructor(private router: Router,\n              private authenticationService: AuthenticationService) { }\n\n  /**\n   * Ensures route access is authorized only when user is authenticated, otherwise redirects to login.\n   *\n   * @returns {boolean} True if user is authenticated.\n   */\n  canActivate(): boolean {\n    if (this.authenticationService.isAuthenticated()) {\n      return true;\n    }\n\n    log.debug('User not authenticated, redirecting to login...');\n    this.authenticationService.logout();\n    this.router.navigate(['/login'], { replaceUrl: true });\n    return false;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Environment Configuration */\nimport { environment } from '../../../environments/environment';\n\n/** Http request options headers. */\nconst httpOptions = {\n  headers: {\n    'Fineract-Platform-TenantId': environment.fineractPlatformTenantId\n  }\n};\n\n/** Authorization header. */\nconst authorizationHeader = 'Authorization';\n/** Two factor access token header. */\nconst twoFactorAccessTokenHeader = 'Fineract-Platform-TFA-Token';\n\n/**\n * Http Request interceptor to set the request headers.\n */\n@Injectable()\nexport class AuthenticationInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  /**\n   * Intercepts a Http request and sets the request headers.\n   */\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    request = request.clone({ setHeaders: httpOptions.headers });\n    return next.handle(request);\n  }\n\n  /**\n   * Sets the basic/oauth authorization header depending on the configuration.\n   * @param {string} authenticationKey Authentication key.\n   */\n  setAuthorizationToken(authenticationKey: string) {\n    if (environment.oauth.enabled) {\n      httpOptions.headers[authorizationHeader] = `Bearer ${authenticationKey}`;\n    } else {\n      httpOptions.headers[authorizationHeader] = `Basic ${authenticationKey}`;\n    }\n  }\n\n  /**\n   * Sets the two factor access token header.\n   * @param {string} twoFactorAccessToken Two factor access token.\n   */\n  setTwoFactorAccessToken(twoFactorAccessToken: string) {\n    httpOptions.headers[twoFactorAccessTokenHeader] = twoFactorAccessToken;\n  }\n\n  /**\n   * Removes the authorization header.\n   */\n  removeAuthorization() {\n    delete httpOptions.headers[authorizationHeader];\n  }\n\n  /**\n   * Removes the two factor access token header.\n   */\n  removeTwoFactorAuthorization() {\n    delete httpOptions.headers[twoFactorAccessTokenHeader];\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n/** rxjs Imports */\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/** Custom Services */\nimport { AlertService } from '../alert/alert.service';\n\n/** Custom Interceptors */\nimport { AuthenticationInterceptor } from './authentication.interceptor';\n\n/** Environment Configuration */\nimport { environment } from '../../../environments/environment';\n\n/** Custom Models */\nimport { LoginContext } from './login-context.model';\nimport { Credentials } from './credentials.model';\nimport { OAuth2Token } from './o-auth2-token.model';\n\n/**\n * Authentication workflow.\n */\n@Injectable()\nexport class AuthenticationService {\n\n  /** Denotes whether the user credentials should persist through sessions. */\n  private rememberMe: boolean;\n  /**\n   * Denotes the type of storage:\n   *\n   * Session Storage: User credentials should not persist through sessions.\n   *\n   * Local Storage: User credentials should persist through sessions.\n   */\n  private storage: any;\n  /** User credentials. */\n\n  private credentials: Credentials;\n  /** Key to store credentials in storage. */\n  private credentialsStorageKey = 'mifosXCredentials';\n  /** Key to store oauth token details in storage. */\n  private oAuthTokenDetailsStorageKey = 'mifosXOAuthTokenDetails';\n  /** Key to store two factor authentication token in storage. */\n  private twoFactorAuthenticationTokenStorageKey = 'mifosXTwoFactorAuthenticationToken';\n\n  /**\n   * Initializes the type of storage and authorization headers depending on whether\n   * credentials are presently in storage or not.\n   * @param {HttpClient} http Http Client to send requests.\n   * @param {AlertService} alertService Alert Service.\n   * @param {AuthenticationInterceptor} authenticationInterceptor Authentication Interceptor.\n   */\n  constructor(private http: HttpClient,\n              private alertService: AlertService,\n              private authenticationInterceptor: AuthenticationInterceptor) {\n    this.rememberMe = false;\n    this.storage = sessionStorage;\n    const savedCredentials = JSON.parse(\n      sessionStorage.getItem(this.credentialsStorageKey) || localStorage.getItem(this.credentialsStorageKey)\n    );\n    if (savedCredentials) {\n      if (savedCredentials.rememberMe) {\n        this.rememberMe = true;\n        this.storage = localStorage;\n      }\n      const twoFactorAccessToken = JSON.parse(this.storage.getItem(this.twoFactorAuthenticationTokenStorageKey));\n      if (environment.oauth.enabled) {\n        this.refreshOAuthAccessToken();\n      } else {\n        authenticationInterceptor.setAuthorizationToken(savedCredentials.base64EncodedAuthenticationKey);\n      }\n      if (twoFactorAccessToken) {\n        authenticationInterceptor.setTwoFactorAccessToken(twoFactorAccessToken.token);\n      }\n    }\n  }\n\n  /**\n   * Authenticates the user.\n   * @param {LoginContext} loginContext Login parameters.\n   * @returns {Observable<boolean>} True if authentication is successful.\n   */\n  login(loginContext: LoginContext) {\n    this.alertService.alert({ type: 'Authentication Start', message: 'Please wait...' });\n    this.rememberMe = loginContext.remember;\n    this.storage = this.rememberMe ? localStorage : sessionStorage;\n\n    let httpParams = new HttpParams();\n    httpParams = httpParams.set('username', loginContext.username);\n    httpParams = httpParams.set('password', loginContext.password);\n    if (environment.oauth.enabled) {\n      httpParams = httpParams.set('client_id', 'community-app');\n      httpParams = httpParams.set('grant_type', 'password');\n      httpParams = httpParams.set('client_secret', '123');\n      return this.http.disableApiPrefix().post(`${environment.oauth.serverUrl}/oauth/token`, {}, { params: httpParams })\n        .pipe(\n          map((tokenResponse: OAuth2Token) => {\n            this.getUserDetails(tokenResponse);\n            return of(true);\n          })\n        );\n    } else {\n      return this.http.post('/authentication', {}, { params: httpParams })\n        .pipe(\n          map((credentials: Credentials) => {\n            this.onLoginSuccess(credentials);\n            return of(true);\n          })\n        );\n    }\n  }\n\n  /**\n   * Retrieves the user details after oauth2 authentication.\n   *\n   * Sets the oauth2 token refresh time.\n   * @param {OAuth2Token} tokenResponse OAuth2 Token details.\n   */\n  private getUserDetails(tokenResponse: OAuth2Token) {\n    const httpParams = new HttpParams().set('access_token', tokenResponse.access_token);\n    this.refreshTokenOnExpiry(tokenResponse.expires_in);\n    this.http.get('/userdetails', { params: httpParams })\n      .subscribe((credentials: Credentials) => {\n        this.onLoginSuccess(credentials);\n        if (!credentials.shouldRenewPassword) {\n          this.storage.setItem(this.oAuthTokenDetailsStorageKey, JSON.stringify(tokenResponse));\n        }\n      });\n  }\n\n  /**\n   * Sets the oauth2 token to refresh on expiry.\n   * @param {number} expiresInTime OAuth2 token expiry time in seconds.\n   */\n  private refreshTokenOnExpiry(expiresInTime: number) {\n    setTimeout(() => this.refreshOAuthAccessToken(), expiresInTime * 1000);\n  }\n\n  /**\n   * Refreshes the oauth2 authorization token.\n   */\n  private refreshOAuthAccessToken() {\n    const oAuthRefreshToken = JSON.parse(this.storage.getItem(this.oAuthTokenDetailsStorageKey)).refresh_token;\n    this.authenticationInterceptor.removeAuthorization();\n    let httpParams = new HttpParams();\n    httpParams = httpParams.set('client_id', 'community-app');\n    httpParams = httpParams.set('grant_type', 'refresh_token');\n    httpParams = httpParams.set('client_secret', '123');\n    httpParams = httpParams.set('refresh_token', oAuthRefreshToken);\n    this.http.disableApiPrefix().post(`${environment.oauth.serverUrl}/oauth/token`, {}, { params: httpParams })\n      .subscribe((tokenResponse: OAuth2Token) => {\n        this.storage.setItem(this.oAuthTokenDetailsStorageKey, JSON.stringify(tokenResponse));\n        this.authenticationInterceptor.setAuthorizationToken(tokenResponse.access_token);\n        this.refreshTokenOnExpiry(tokenResponse.expires_in);\n        const credentials = JSON.parse(this.storage.getItem(this.credentialsStorageKey));\n        credentials.accessToken = tokenResponse.access_token;\n        this.storage.setItem(this.credentialsStorageKey, JSON.stringify(credentials));\n      });\n  }\n\n  /**\n   * Sets the authorization token followed by one of the following:\n   *\n   * Sends an alert if two factor authentication is required.\n   *\n   * Sends an alert if password has expired and requires a reset.\n   *\n   * Sends an alert on successful login.\n   * @param {Credentials} credentials Authenticated user credentials.\n   */\n  private onLoginSuccess(credentials: Credentials) {\n    if (environment.oauth.enabled) {\n      this.authenticationInterceptor.setAuthorizationToken(credentials.accessToken);\n    } else {\n      this.authenticationInterceptor.setAuthorizationToken(credentials.base64EncodedAuthenticationKey);\n    }\n    if (credentials.isTwoFactorAuthenticationRequired) {\n      this.credentials = credentials;\n      this.alertService.alert({ type: 'Two Factor Authentication Required', message: 'Two Factor Authentication Required' });\n    } else {\n      if (credentials.shouldRenewPassword) {\n        this.credentials = credentials;\n        this.alertService.alert({ type: 'Password Expired', message: 'Your password has expired, please reset your password!' });\n      } else {\n        this.setCredentials(credentials);\n        this.alertService.alert({ type: 'Authentication Success', message: `${credentials.username} successfully logged in!` });\n        delete this.credentials;\n      }\n    }\n  }\n\n  /**\n   * Logs out the authenticated user and clears the credentials from storage.\n   * @returns {Observable<boolean>} True if the user was logged out successfully.\n   */\n  logout(): Observable<boolean> {\n    const twoFactorToken = JSON.parse(this.storage.getItem(this.twoFactorAuthenticationTokenStorageKey));\n    if (twoFactorToken) {\n      this.http.post('/twofactor/invalidate', { token: twoFactorToken.token }).subscribe();\n      this.authenticationInterceptor.removeTwoFactorAuthorization();\n    }\n    this.authenticationInterceptor.removeAuthorization();\n    this.setCredentials();\n    return of(true);\n  }\n\n  /**\n   * Checks if the two factor access token for authenticated user is valid.\n   * @returns {boolean} True if the two factor access token is valid or two factor authentication is not required.\n   */\n  twoFactorAccessTokenIsValid(): boolean {\n    const twoFactorAccessToken = JSON.parse(this.storage.getItem(this.twoFactorAuthenticationTokenStorageKey));\n    if (twoFactorAccessToken) {\n      return ((new Date()).getTime() < twoFactorAccessToken.validTo);\n    }\n    return true;\n  }\n\n  /**\n   * Checks if the user is authenticated.\n   * @returns {boolean} True if the user is authenticated.\n   */\n  isAuthenticated(): boolean {\n    return !!(JSON.parse(\n        sessionStorage.getItem(this.credentialsStorageKey) || localStorage.getItem(this.credentialsStorageKey)\n      ) && this.twoFactorAccessTokenIsValid());\n  }\n\n  /**\n   * Gets the user credentials.\n   * @returns {Credentials} The user credentials if the user is authenticated otherwise null.\n   */\n  getCredentials(): Credentials | null {\n    return JSON.parse(this.storage.getItem(this.credentialsStorageKey));\n  }\n\n  /**\n   * Sets the user credentials.\n   *\n   * The credentials may be persisted across sessions by setting the `rememberMe` parameter to true.\n   * Otherwise, the credentials are only persisted for the current session.\n   *\n   * @param {Credentials} credentials Authenticated user credentials.\n   */\n  private setCredentials(credentials?: Credentials) {\n    if (credentials) {\n      credentials.rememberMe = this.rememberMe;\n      this.storage.setItem(this.credentialsStorageKey, JSON.stringify(credentials));\n    } else {\n      this.storage.removeItem(this.credentialsStorageKey);\n      this.storage.removeItem(this.oAuthTokenDetailsStorageKey);\n      this.storage.removeItem(this.twoFactorAuthenticationTokenStorageKey);\n    }\n  }\n\n  /**\n   * Following functions are for two factor authentication and require\n   * first level authorization headers to be setup for the requests.\n   */\n\n  /**\n   * Gets the two factor authentication delivery methods available for the user.\n   */\n  getDeliveryMethods() {\n    return this.http.get('/twofactor');\n  }\n\n  /**\n   * Requests OTP to be sent via the given delivery method.\n   * @param {any} deliveryMethod Delivery method for the OTP.\n   */\n  requestOTP(deliveryMethod: any) {\n    let httpParams = new HttpParams();\n    httpParams = httpParams.set('deliveryMethod', deliveryMethod.name);\n    httpParams = httpParams.set('extendedToken', this.rememberMe.toString());\n    return this.http.post(`/twofactor`, {}, { params: httpParams });\n  }\n\n  /**\n   * Validates the OTP and authenticates the user on success.\n   * @param {string} otp\n   */\n  validateOTP(otp: string) {\n    const httpParams = new HttpParams().set('token', otp);\n    return this.http.post(`/twofactor/validate`, {}, { params: httpParams })\n      .pipe(\n        map(response => {\n          this.onOTPValidateSuccess(response);\n        })\n      );\n  }\n\n  /**\n   * Sets the two factor authorization token followed by one of the following:\n   *\n   * Sends an alert if password has expired and requires a reset.\n   *\n   * Sends an alert on successful login.\n   * @param {any} response Two factor authentication token details.\n   */\n  private onOTPValidateSuccess(response: any) {\n    this.authenticationInterceptor.setTwoFactorAccessToken(response.token);\n    if (this.credentials.shouldRenewPassword) {\n      this.alertService.alert({ type: 'Password Expired', message: 'Your password has expired, please reset your password!' });\n    } else {\n      this.setCredentials(this.credentials);\n      this.alertService.alert({ type: 'Authentication Success', message: `${this.credentials.username} successfully logged in!` });\n      delete this.credentials;\n      this.storage.setItem(this.twoFactorAuthenticationTokenStorageKey, JSON.stringify(response));\n    }\n  }\n\n  /**\n   * Resets the user's password and authenticates the user.\n   * @param {any} passwordDetails New password.\n   */\n  resetPassword(passwordDetails: any) {\n    return this.http.put(`/users/${this.credentials.userId}`, passwordDetails).\n    pipe(\n      map(() => {\n        this.alertService.alert({ type: 'Password Reset Success', message: `Your password was sucessfully reset!` });\n        this.authenticationInterceptor.removeAuthorization();\n        this.authenticationInterceptor.removeTwoFactorAuthorization();\n        const loginContext: LoginContext = {\n          username: this.credentials.username,\n          password: passwordDetails.password,\n          remember: this.rememberMe\n        };\n        this.login(loginContext).subscribe();\n      })\n    );\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\n\n/** Translation Imports */\nimport { TranslateModule } from '@ngx-translate/core';\n\n/** Custom Services */\nimport { AuthenticationService } from './authentication/authentication.service';\nimport { HttpService } from './http/http.service';\nimport { HttpCacheService } from './http/http-cache.service';\nimport { ProgressBarService } from './progress-bar/progress-bar.service';\nimport { I18nService } from './i18n/i18n.service';\n\n/** Custom Guards */\nimport { AuthenticationGuard } from './authentication/authentication.guard';\n\n/** Custom Interceptors */\nimport { ProgressInterceptor } from './progress-bar/progress.interceptor';\nimport { ApiPrefixInterceptor } from './http/api-prefix.interceptor';\nimport { ErrorHandlerInterceptor } from './http/error-handler.interceptor';\nimport { CacheInterceptor } from './http/cache.interceptor';\nimport { AuthenticationInterceptor } from './authentication/authentication.interceptor';\n\n/** Custom Strategies */\nimport { RouteReusableStrategy } from './route/route-reusable-strategy';\n\n/** Custom Modules */\nimport { SharedModule } from '../shared/shared.module';\n\n/** Custom Components */\nimport { ShellComponent } from './shell/shell.component';\nimport { SidenavComponent } from './shell/sidenav/sidenav.component';\nimport { ToolbarComponent } from './shell/toolbar/toolbar.component';\nimport { BreadcrumbComponent } from './shell/breadcrumb/breadcrumb.component';\nimport { ContentComponent } from './shell/content/content.component';\n\n/**\n * Core Module\n *\n * Main app shell components and singleton services should be here.\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    HttpClientModule,\n    TranslateModule,\n    RouterModule\n  ],\n  declarations: [\n    ShellComponent,\n    SidenavComponent,\n    ToolbarComponent,\n    BreadcrumbComponent,\n    ContentComponent\n  ],\n  exports: [\n    SharedModule // TO BE REMOVED: Once all components have replaced the core module import by shared module.\n  ],\n  providers: [\n    AuthenticationService,\n    AuthenticationGuard,\n    AuthenticationInterceptor,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthenticationInterceptor,\n      multi: true\n    },\n    I18nService,\n    HttpCacheService,\n    ApiPrefixInterceptor,\n    ErrorHandlerInterceptor,\n    CacheInterceptor,\n    {\n      provide: HttpClient,\n      useClass: HttpService\n    },\n    ProgressBarService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ProgressInterceptor,\n      multi: true\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy\n    }\n  ]\n})\nexport class CoreModule {\n\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    // Import guard\n    if (parentModule) {\n      throw new Error(`${parentModule} has already been loaded. Import Core module in the AppModule only.`);\n    }\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Environment Configuration */\nimport { environment } from 'environments/environment';\n\n/**\n * Http request interceptor to prefix a request with `environment.serverUrl`.\n */\n@Injectable()\nexport class ApiPrefixInterceptor implements HttpInterceptor {\n\n  /**\n   * Intercepts a Http request and prefixes it with `environment.serverUrl`.\n   */\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    request = request.clone({ url: environment.serverUrl + request.url });\n    return next.handle(request);\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\n\n/** rxjs Imports */\nimport { Observable, Subscriber } from 'rxjs';\n\n/** Custom Services */\nimport { HttpCacheService } from './http-cache.service';\n\n/**\n * Caches HTTP requests.\n * Use ExtendedHttpClient fluent API to configure caching for each request.\n */\n@Injectable()\nexport class CacheInterceptor implements HttpInterceptor {\n\n  private forceUpdate = false;\n\n  constructor(private httpCacheService: HttpCacheService) { }\n\n  /**\n   * Configures interceptor options\n   * @param {{update: boolean}} options If update option is enabled, forces request to be made and updates cache entry.\n   * @return {CacheInterceptor} The configured instance.\n   */\n  configure(options?: { update?: boolean } | null): CacheInterceptor {\n    const instance = new CacheInterceptor(this.httpCacheService);\n    if (options && options.update) {\n      instance.forceUpdate = true;\n    }\n    return instance;\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (request.method !== 'GET') {\n      return next.handle(request);\n    }\n\n    return new Observable((subscriber: Subscriber<HttpEvent<any>>) => {\n      const cachedData = this.forceUpdate ? null : this.httpCacheService.getCacheData(request.urlWithParams);\n      if (cachedData !== null) {\n        // Create new response to avoid side-effects\n        subscriber.next(new HttpResponse(cachedData as Object));\n        subscriber.complete();\n      } else {\n        next.handle(request)\n          .subscribe(\n            event => {\n              if (event instanceof HttpResponse) {\n                this.httpCacheService.setCacheData(request.urlWithParams, event);\n              }\n              subscriber.next(event);\n            },\n            error => subscriber.error(error),\n            () => subscriber.complete()\n          );\n      }\n    });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n/** Environment Configuration */\nimport { environment } from 'environments/environment';\n\n/** Custom Services */\nimport { Logger } from '../logger/logger.service';\nimport { AlertService } from '../alert/alert.service';\n\n/** Initialize Logger */\nconst log = new Logger('ErrorHandlerInterceptor');\n\n/**\n * Http Request interceptor to add a default error handler to requests.\n */\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n\n  /**\n   * @param {AlertService} alertService Alert Service.\n   */\n  constructor(private alertService: AlertService) {  }\n\n  /**\n   * Intercepts a Http request and adds a default error handler.\n   */\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(error => this.handleError(error)));\n  }\n\n  /**\n   * Error handler.\n   */\n  private handleError(response: HttpErrorResponse): Observable<HttpEvent<any>> {\n    const status = response.status;\n    let errorMessage = (response.error.developerMessage || response.message);\n    if (response.error.errors) {\n      if (response.error.errors[0]) {\n        errorMessage = response.error.errors[0].defaultUserMessage || response.error.errors[0].developerMessage;\n      }\n    }\n\n    if (!environment.production) {\n      log.error(`Request Error: ${errorMessage}`);\n    }\n\n    if (status === 401 || (environment.oauth.enabled && status === 400)) {\n      this.alertService.alert({ type: 'Authentication Error', message: 'Invalid User Details. Please try again!' });\n    } else if (status === 403 && errorMessage === 'The provided one time token is invalid') {\n      this.alertService.alert({ type: 'Invalid Token', message: 'Invalid Token. Please try again!' });\n    } else if (status === 400) {\n      this.alertService.alert({ type: 'Bad Request', message: 'Invalid parameters were passed in the request!' });\n    } else if (status === 403) {\n      this.alertService.alert({ type: 'Unauthorized Request', message: errorMessage || 'You are not authorized for this request!' });\n    } else if (status === 404) {\n      this.alertService.alert({ type: 'Resource does not exist', message: errorMessage || 'Resource does not exist!' });\n    }  else if (status === 500) {\n      this.alertService.alert({ type: 'Internal Server Error', message: 'Internal Server Error. Please try again later.' });\n    } else {\n      this.alertService.alert({ type: 'Unknown Error', message: 'Unknown Error. Please try again later.' });\n    }\n\n    throw response;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\n\n/** Other Imports */\nimport { each } from 'lodash';\n\n/** Custom Services */\nimport { Logger } from '../logger/logger.service';\n\n/** Initialize Logger */\nconst log = new Logger('HttpCacheService');\n\n/** Http Cache Entry Model */\nexport interface HttpCacheEntry {\n  lastUpdated: Date;\n  data: HttpResponse<any>;\n}\n\n/**\n * Provides a cache facility for HTTP requests with configurable persistence policy.\n */\n@Injectable()\nexport class HttpCacheService {\n\n  /** Key to cache Http Requests in storage. */\n  private cachePersistenceStorageKey = 'mifosXHttpCache';\n\n  private cachedData: { [key: string]: HttpCacheEntry; } = {};\n  private storage: Storage | null = null;\n\n  constructor() {\n    this.loadCacheData();\n  }\n\n  /**\n   * Sets the cache data for the specified request.\n   * @param {!string} url The request URL.\n   * @param {ResponseOptions} data The received data.\n   * @param {Date=} lastUpdated The cache last update, current date is used if not specified.\n   */\n  setCacheData(url: string, data: HttpResponse<any>, lastUpdated?: Date) {\n    this.cachedData[url] = {\n      lastUpdated: lastUpdated || new Date(),\n      data: data\n    };\n    log.debug(`Cache set for key: \"${url}\"`);\n    this.saveCacheData();\n  }\n\n  /**\n   * Gets the cached data for the specified request.\n   * @param {!string} url The request URL.\n   * @return {?ResponseOptions} The cached data or null if no cached data exists for this request.\n   */\n  getCacheData(url: string): HttpResponse<any> | null {\n    const cacheEntry = this.cachedData[url];\n\n    if (cacheEntry) {\n      log.debug(`Cache hit for key: \"${url}\"`);\n      return cacheEntry.data;\n    }\n\n    return null;\n  }\n\n  /**\n   * Gets the cached entry for the specified request.\n   * @param {!string} url The request URL.\n   * @return {?HttpCacheEntry} The cache entry or null if no cache entry exists for this request.\n   */\n  getHttpCacheEntry(url: string): HttpCacheEntry | null {\n    return this.cachedData[url] || null;\n  }\n\n  /**\n   * Clears the cached entry (if exists) for the specified request.\n   * @param {!string} url The request URL.\n   */\n  clearCache(url: string): void {\n    delete this.cachedData[url];\n    log.debug(`Cache cleared for key: \"${url}\"`);\n    this.saveCacheData();\n  }\n\n  /**\n   * Cleans cache entries older than the specified date.\n   * @param {date=} expirationDate The cache expiration date. If no date is specified, all cache is cleared.\n   */\n  cleanCache(expirationDate?: Date) {\n    if (expirationDate) {\n      each(this.cachedData, (value: HttpCacheEntry, key: string) => {\n        if (expirationDate >= value.lastUpdated) {\n          delete this.cachedData[key];\n        }\n      });\n    } else {\n      this.cachedData = {};\n    }\n    this.saveCacheData();\n  }\n\n  /**\n   * Sets the cache persistence policy.\n   * Note that changing the cache persistence will also clear the cache from its previous storage.\n   * @param {'local'|'session'=} persistence How the cache should be persisted, it can be either local or session\n   *   storage, or if no value is provided it will be only in-memory (default).\n   */\n  setPersistence(persistence?: 'local' | 'session') {\n    this.cleanCache();\n    this.storage = persistence === 'local' || persistence === 'session' ? window[persistence + 'Storage'] : null;\n    this.loadCacheData();\n  }\n\n  private saveCacheData() {\n    if (this.storage) {\n      this.storage[this.cachePersistenceStorageKey] = JSON.stringify(this.cachedData);\n    }\n  }\n\n  private loadCacheData() {\n    const data = this.storage ? this.storage[this.cachePersistenceStorageKey] : null;\n    this.cachedData = data ? JSON.parse(data) : {};\n  }\n\n}\n","/** Angular Imports */\nimport { Inject, Injectable, InjectionToken, Injector, Optional } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Interceptors */\nimport { ErrorHandlerInterceptor } from './error-handler.interceptor';\nimport { CacheInterceptor } from './cache.interceptor';\nimport { ApiPrefixInterceptor } from './api-prefix.interceptor';\n\n/**\n * HttpClient is declared in a re-exported module, so we have to extend the original module to make it work properly.\n * (see https://github.com/Microsoft/TypeScript/issues/13897)\n */\ndeclare module '@angular/common/http/src/client' {\n\n  /**\n   * Augment HttpClient with the added configuration methods from HttpService, to allow in-place replacement of\n   * HttpClient with HttpService using dependency injection.\n   */\n  export interface HttpClient {\n\n    /**\n     * Enables caching for this request.\n     * @param {boolean} forceUpdate Forces request to be made and updates cache entry.\n     * @returns {HttpClient} The new instance.\n     */\n    cache(forceUpdate?: boolean): HttpClient;\n\n    /**\n     * Skips default error handler for this request.\n     * @returns {HttpClient} The new instance.\n     */\n    skipErrorHandler(): HttpClient;\n\n    /**\n     * Do not use API prefix for this request.\n     * @returns {HttpClient} The new instance.\n     */\n    disableApiPrefix(): HttpClient;\n\n  }\n\n}\n\n/**\n *  From @angular/common/http/src/interceptor: allows to chain interceptors\n */\nclass HttpInterceptorHandler implements HttpHandler {\n\n  constructor(private next: HttpHandler, private interceptor: HttpInterceptor) { }\n\n  handle(request: HttpRequest<any>): Observable<HttpEvent<any>> {\n    return this.interceptor.intercept(request, this.next);\n  }\n\n}\n\n/**\n * Allows to override default dynamic interceptors that can be disabled with the HttpService extension.\n * Except for very specific needs, you should better configure these interceptors directly in the constructor below\n * for better readability.\n *\n * For static interceptors that should always be enabled (like ApiPrefixInterceptor), use the standard\n * HTTP_INTERCEPTORS token.\n */\nexport const HTTP_DYNAMIC_INTERCEPTORS = new InjectionToken<HttpInterceptor>('HTTP_DYNAMIC_INTERCEPTORS');\n\n/**\n * Extends HttpClient with per request configuration using dynamic interceptors.\n */\n@Injectable()\nexport class HttpService extends HttpClient {\n\n  constructor(private httpHandler: HttpHandler,\n              private injector: Injector,\n              @Optional() @Inject(HTTP_DYNAMIC_INTERCEPTORS) private interceptors: HttpInterceptor[] = []) {\n    super(httpHandler);\n\n    if (!this.interceptors) {\n      // Configure default interceptors that can be disabled here\n      this.interceptors = [\n        this.injector.get(ApiPrefixInterceptor),\n        this.injector.get(ErrorHandlerInterceptor)\n      ];\n    }\n  }\n\n  cache(forceUpdate?: boolean): HttpClient {\n    const cacheInterceptor = this.injector.get(CacheInterceptor).configure({ update: forceUpdate });\n    return this.addInterceptor(cacheInterceptor);\n  }\n\n  skipErrorHandler(): HttpClient {\n    return this.removeInterceptor(ErrorHandlerInterceptor);\n  }\n\n  disableApiPrefix(): HttpClient {\n    return this.removeInterceptor(ApiPrefixInterceptor);\n  }\n\n  /**\n   *  Override the original method to wire interceptors when triggering the request.\n   */\n  request(method?: any, url?: any, options?: any): any {\n    const handler = this.interceptors.reduceRight(\n      (next, interceptor) => new HttpInterceptorHandler(next, interceptor),\n      this.httpHandler\n    );\n    return new HttpClient(handler).request(method, url, options);\n  }\n\n  private removeInterceptor(interceptorType: Function): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.filter(i => !(i instanceof interceptorType))\n    );\n  }\n\n  private addInterceptor(interceptor: HttpInterceptor): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.concat([interceptor])\n    );\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\n\n/** Translation Imports */\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\n\n/** Custom Services */\nimport { Logger } from '../logger/logger.service';\n\n/** Other Imports */\nimport { includes } from 'lodash';\nimport * as enUS from '../../../translations/en-US.json';\nimport * as frFR from '../../../translations/fr-FR.json';\n\n/** Initialize Logger */\nconst log = new Logger('I18nService');\n\n/**\n * Pass-through function to mark a string for translation extraction.\n * Running `npm translations:extract` will include the given string by using this.\n * @param {string} s The string to extract for translation.\n * @return {string} The same string.\n */\nexport function extract(s: string) {\n  return s;\n}\n\n@Injectable()\nexport class I18nService {\n\n  /** Key to store current language of application in local storage. */\n  private languageStorageKey = 'mifosXLanguage';\n\n  defaultLanguage: string;\n  supportedLanguages: string[];\n\n  constructor(private translateService: TranslateService) {\n    // Embed languages to avoid extra HTTP requests\n    translateService.setTranslation('en-US', enUS);\n    translateService.setTranslation('fr-FR', frFR);\n  }\n\n  /**\n   * Initializes i18n for the application.\n   * Loads language from local storage if present, or sets default language.\n   * @param {!string} defaultLanguage The default language to use.\n   * @param {Array.<String>} supportedLanguages The list of supported languages.\n   */\n  init(defaultLanguage: string, supportedLanguages: string[]) {\n    this.defaultLanguage = defaultLanguage;\n    this.supportedLanguages = supportedLanguages;\n    this.language = '';\n\n    this.translateService.onLangChange\n      .subscribe((event: LangChangeEvent) => { localStorage.setItem(this.languageStorageKey, event.lang); });\n  }\n\n  /**\n   * Sets the current language.\n   * Note: The current language is saved to the local storage.\n   * If no parameter is specified, the language is loaded from local storage (if present).\n   * @param {string} language The IETF language code to set.\n   */\n  set language(language: string) {\n    language = language || localStorage.getItem(this.languageStorageKey) || this.translateService.getBrowserCultureLang();\n    let isSupportedLanguage = includes(this.supportedLanguages, language);\n\n    // If no exact match is found, search without the region\n    if (language && !isSupportedLanguage) {\n      language = language.split('-')[0];\n      language = this.supportedLanguages.find(supportedLanguage => supportedLanguage.startsWith(language)) || '';\n      isSupportedLanguage = Boolean(language);\n    }\n\n    // Fallback if language is not supported\n    if (!isSupportedLanguage) {\n      language = this.defaultLanguage;\n    }\n\n    log.debug(`Language set to ${language}`);\n    this.translateService.use(language);\n  }\n\n  /**\n   * Gets the current language.\n   * @return {string} The current language code.\n   */\n  get language(): string {\n    return this.translateService.currentLang;\n  }\n\n}\n","/**\n * Simple logger system with the possibility of registering custom outputs.\n *\n * 4 different log levels are provided, with corresponding methods:\n * - debug   : for debug information\n * - info    : for informative status of the application (success, ...)\n * - warning : for non-critical errors that do not prevent normal application behavior\n * - error   : for critical errors that prevent normal application behavior\n *\n * Example usage:\n * ```\n * import { Logger } from 'app/core/logger/logger.service';\n *\n * const log = new Logger('myFile');\n * ...\n * log.debug('something happened');\n * ```\n *\n * To disable debug and info logs in production, add this snippet to your root component:\n * ```\n * export class AppComponent implements OnInit {\n *   ngOnInit() {\n *     if (environment.production) {\n *       Logger.enableProductionMode();\n *     }\n *     ...\n *   }\n * }\n *\n * If you want to process logs through other outputs than console, you can add LogOutput functions to Logger.outputs.\n */\n\n/**\n * The possible log levels.\n * LogLevel.Off is never emitted and only used with Logger.level property to disable logs.\n */\nexport enum LogLevel {\n  Off = 0,\n  Error,\n  Warning,\n  Info,\n  Debug\n}\n\n/**\n * Log output handler function.\n */\nexport type LogOutput = (source: string, level: LogLevel, ...objects: any[]) => void;\n\nexport class Logger {\n\n  /**\n   * Current logging level.\n   * Set it to LogLevel.Off to disable logs completely.\n   */\n  static level = LogLevel.Debug;\n\n  /**\n   * Additional log outputs.\n   */\n  static outputs: LogOutput[] = [];\n\n  /**\n   * Enables production mode.\n   * Sets logging level to LogLevel.Warning.\n   */\n  static enableProductionMode() {\n    Logger.level = LogLevel.Warning;\n  }\n\n  constructor(private source?: string) { }\n\n  /**\n   * Logs messages or objects  with the debug level.\n   * Works the same as console.log().\n   */\n  debug(...objects: any[]) {\n    this.log(console.log, LogLevel.Debug, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the info level.\n   * Works the same as console.log().\n   */\n  info(...objects: any[]) {\n    this.log(console.info, LogLevel.Info, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the warning level.\n   * Works the same as console.log().\n   */\n  warn(...objects: any[]) {\n    this.log(console.warn, LogLevel.Warning, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the error level.\n   * Works the same as console.log().\n   */\n  error(...objects: any[]) {\n    this.log(console.error, LogLevel.Error, objects);\n  }\n\n  private log(func: Function, level: LogLevel, objects: any[]) {\n    if (level <= Logger.level) {\n      const log = this.source ? ['[' + this.source + ']'].concat(objects) : objects;\n      func.apply(console, log);\n      Logger.outputs.forEach((output) => output.apply(output, [this.source, level].concat(objects)));\n    }\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable, EventEmitter } from '@angular/core';\n\n/**\n * Progress bar service.\n */\n@Injectable()\nexport class ProgressBarService {\n\n  /** Progress bar update event. */\n  public updateProgressBar: EventEmitter<any>;\n  /** Denotes the number of requests currently running. */\n  private requestsRunning = 0;\n\n  /**\n   * Initializes progress bar update event.\n   */\n  constructor() {\n    this.updateProgressBar = new EventEmitter();\n  }\n\n  /**\n   * Returns the number of Http requests currently running.\n   * @returns {number} Number of Http requests currently running.\n   */\n  public getRequestsRunning(): number {\n    return this.requestsRunning;\n  }\n\n  /**\n   * Increments the number of Http requests currently running\n   * and emits a progress bar update event `indeterminate` when the first request is run.\n   */\n  public increase() {\n    this.requestsRunning++;\n    if (this.requestsRunning === 1) {\n      this.updateProgressBar.emit('indeterminate');\n    }\n  }\n\n  /**\n   * Decrements the number of Http requests currently running\n   * and emits a progress bar update event `none` when no request is running.\n   */\n  public decrease() {\n    if (this.requestsRunning > 0) {\n      this.requestsRunning--;\n      if (this.requestsRunning === 0) {\n        this.updateProgressBar.emit('none');\n      }\n    }\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\n\n/** Custom Services */\nimport { ProgressBarService } from './progress-bar.service';\n\n/**\n * Http Request interceptor to start/stop loading the progress bar.\n */\n@Injectable()\nexport class ProgressInterceptor implements HttpInterceptor {\n\n  /**\n   * @param {ProgressBarService} progressBarService Progress Bar Service.\n   */\n  constructor(private progressBarService: ProgressBarService) { }\n\n  /**\n   * Intercepts a Http request to start loading the progress bar for a pending request\n   * and stop when a response or error is received.\n   */\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.progressBarService.increase();\n    return next.handle(request)\n      .pipe(\n        tap(event => {\n          if (event instanceof HttpResponse) {\n            this.progressBarService.decrease();\n          }\n        })\n      )\n      .pipe(\n        catchError(error => {\n          this.progressBarService.decrease();\n          throw error;\n        })\n      );\n  }\n\n}\n","/** Angular Imports */\nimport { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from '@angular/router';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null): void { }\n\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  public shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    return (future.routeConfig === curr.routeConfig) || future.data.reuse;\n  }\n\n}\n","/** Angular Imports */\nimport { Route as ngRoute, Routes } from '@angular/router';\n\n/** Custom Components */\nimport { ShellComponent } from '../shell/shell.component';\n\n/** Custom Guards */\nimport { AuthenticationGuard } from '../authentication/authentication.guard';\n\n/**\n * Provides helper methods to create routes.\n */\nexport class Route {\n\n  /**\n   * Creates routes using the shell component and authentication.\n   * @param routes The routes to add.\n   * @return {Route} The new route using shell as the base.\n   */\n  static withShell(routes: Routes): ngRoute {\n    return {\n      path: '',\n      component: ShellComponent,\n      children: routes,\n      canActivate: [AuthenticationGuard],\n      // Reuse ShellComponent instance when navigating between child views\n      data: { reuse: true }\n    };\n  }\n\n}\n","module.exports = \"<nav class=\\\"breadcrumb-wrapper\\\">\\n  <ul class=\\\"breadcrumb\\\">\\n    <span class=\\\"breadcrumb-title\\\">{{ breadcrumbs[breadcrumbs.length-1].label }}</span>\\n    <span *ngIf=\\\"breadcrumbs.length-1 !== 0\\\" class=\\\"separator\\\">\\n      <li *ngFor=\\\"let breadcrumb of breadcrumbs; let last = last\\\" class=\\\"breadcrumb-label\\\">\\n        <span *ngIf=\\\"!last\\\" class=\\\"breadcrumb-link\\\">\\n          <a *ngIf=\\\"breadcrumb.url\\\" [routerLink]=\\\"breadcrumb.url\\\">{{ breadcrumb.label }}</a>\\n          <span *ngIf=\\\"!breadcrumb.url\\\">{{ breadcrumb.label }}</span>\\n        </span>\\n        <span *ngIf=\\\"last\\\">{{ breadcrumb.label }}</span>\\n      </li>\\n    </span>\\n  </ul>\\n</nav>\\n\"","module.exports = \".breadcrumb-wrapper {\\n  margin: 0 auto;\\n  max-width: 74rem;\\n  width: 90%;\\n  word-wrap: break-word; }\\n  .breadcrumb-wrapper .breadcrumb {\\n    list-style: none;\\n    padding: 0;\\n    margin: 1.5rem 0;\\n    line-height: 40px; }\\n  .breadcrumb-wrapper .breadcrumb .breadcrumb-title {\\n      font-size: 1.25rem;\\n      font-weight: 400; }\\n  .breadcrumb-wrapper .breadcrumb .separator::before {\\n      content: \\\"\\\";\\n      border: 1.5px solid #000;\\n      margin: 0 0.6rem;\\n      font-size: 1.25rem;\\n      font-weight: 400; }\\n  .breadcrumb-wrapper .breadcrumb .breadcrumb-label {\\n      display: inline;\\n      font-size: 1rem; }\\n  .breadcrumb-wrapper .breadcrumb .breadcrumb-label .breadcrumb-link a {\\n        text-decoration: none;\\n        color: #0275d8; }\\n  .breadcrumb-wrapper .breadcrumb .breadcrumb-label .breadcrumb-link a:hover {\\n          text-decoration: underline; }\\n  .breadcrumb-wrapper .breadcrumb .breadcrumb-label .breadcrumb-link::after {\\n        content: \\\"/\\\";\\n        margin: 0 0.4rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NvcmUvc2hlbGwvYnJlYWRjcnVtYi9icmVhZGNydW1iLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtFQUNoQixVQUFVO0VBQ1YscUJBQXFCLEVBQUE7RUFKdkI7SUFPSSxnQkFBZ0I7SUFDaEIsVUFBVTtJQUNWLGdCQUFnQjtJQUNoQixpQkFBaUIsRUFBQTtFQVZyQjtNQWFNLGtCQUFrQjtNQUNsQixnQkFBZ0IsRUFBQTtFQWR0QjtNQWtCTSxXQUFXO01BQ1gsd0JBQXdCO01BQ3hCLGdCQUFnQjtNQUNoQixrQkFBa0I7TUFDbEIsZ0JBQWdCLEVBQUE7RUF0QnRCO01BMEJNLGVBQWU7TUFDZixlQUFlLEVBQUE7RUEzQnJCO1FBK0JVLHFCQUFxQjtRQUNyQixjQUFjLEVBQUE7RUFoQ3hCO1VBbUNZLDBCQUEwQixFQUFBO0VBbkN0QztRQXdDVSxZQUFZO1FBQ1osZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb3JlL3NoZWxsL2JyZWFkY3J1bWIvYnJlYWRjcnVtYi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5icmVhZGNydW1iLXdyYXBwZXIge1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWF4LXdpZHRoOiA3NHJlbTtcbiAgd2lkdGg6IDkwJTtcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xuXG4gIC5icmVhZGNydW1iIHtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbWFyZ2luOiAxLjVyZW0gMDtcbiAgICBsaW5lLWhlaWdodDogNDBweDtcblxuICAgIC5icmVhZGNydW1iLXRpdGxlIHtcbiAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgfVxuXG4gICAgLnNlcGFyYXRvcjo6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBib3JkZXI6IDEuNXB4IHNvbGlkICMwMDA7XG4gICAgICBtYXJnaW46IDAgMC42cmVtO1xuICAgICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB9XG5cbiAgICAuYnJlYWRjcnVtYi1sYWJlbCB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgICBmb250LXNpemU6IDFyZW07XG5cbiAgICAgIC5icmVhZGNydW1iLWxpbmsge1xuICAgICAgICBhIHtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgY29sb3I6ICMwMjc1ZDg7XG5cbiAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICY6OmFmdGVyIHtcbiAgICAgICAgICBjb250ZW50OiBcIi9cIjtcbiAgICAgICAgICBtYXJnaW46IDAgMC40cmVtO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\n\n/** rxjs Imports */\nimport { filter } from 'rxjs/operators';\n\n/** Custom Model */\nimport { Breadcrumb } from './breadcrumb.model';\n\n/**\n * Route data property to generate breadcrumb using a static string.\n *\n * Example- breadcrumb: 'Home'\n */\nconst routeDataBreadcrumb = 'breadcrumb';\n/**\n * Route data property to generate breadcrumb using given route parameter name.\n *\n * Example- routeParamBreadcrumb: 'id'\n */\nconst routeParamBreadcrumb = 'routeParamBreadcrumb';\n/**\n * Route data property to generate breadcrumb using resolved data property name.\n *\n * Use array to specify name for a nested object property.\n *\n * Example- routeResolveBreadcrumb: ['user', 'username']\n */\nconst routeResolveBreadcrumb = 'routeResolveBreadcrumb';\n/**\n * Route data property to specify whether generated breadcrumb should have a link.\n *\n * True by default. Specify false if a link is not required.\n *\n * Example- addBreadcrumbLink: false\n */\nconst routeAddBreadcrumbLink = 'addBreadcrumbLink';\n\n/**\n * Generate breadcrumbs dynamically via route configuration.\n */\n@Component({\n  selector: 'mifosx-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent implements OnInit {\n\n  /** Array of breadcrumbs. */\n  breadcrumbs: Breadcrumb[];\n\n  /**\n   * Generates the breadcrumbs.\n   * @param {ActivatedRoute} activatedRoute Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router) {\n    this.generateBreadcrumbs();\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Generates the array of breadcrumbs for the visited route.\n   */\n  generateBreadcrumbs() {\n    const onNavigationEnd = this.router.events.pipe(filter(event => event instanceof NavigationEnd));\n\n    onNavigationEnd.subscribe(() => {\n      this.breadcrumbs = [];\n      let currentRoute = this.activatedRoute.root;\n      let currentUrl = '';\n\n      while (currentRoute.children.length > 0) {\n        const childrenRoutes = currentRoute.children;\n        let breadcrumbLabel: any;\n        let url: any;\n\n        childrenRoutes.forEach(route => {\n          currentRoute = route;\n          breadcrumbLabel = false;\n\n          if (route.outlet !== 'primary') {\n            return;\n          }\n\n          const routeURL = route.snapshot.url.map(segment => segment.path).join('/');\n          currentUrl += `/${routeURL}`;\n\n          if (currentUrl === '/') {\n            breadcrumbLabel = 'Home';\n          }\n\n          const hasData = (route.routeConfig && route.routeConfig.data);\n\n          if (hasData) {\n            if (route.snapshot.data.hasOwnProperty(routeResolveBreadcrumb) && route.snapshot.data[routeResolveBreadcrumb]) {\n              breadcrumbLabel = route.snapshot.data;\n              route.snapshot.data[routeResolveBreadcrumb].forEach((property: any) => {\n                breadcrumbLabel = breadcrumbLabel[property];\n              });\n            } else if (route.snapshot.data.hasOwnProperty(routeParamBreadcrumb) && route.snapshot.paramMap.get(route.snapshot.data[routeParamBreadcrumb])) {\n              breadcrumbLabel = route.snapshot.paramMap.get(route.snapshot.data[routeParamBreadcrumb]);\n            } else if (route.snapshot.data.hasOwnProperty(routeDataBreadcrumb)) {\n              breadcrumbLabel = route.snapshot.data[routeDataBreadcrumb];\n            }\n\n            if (route.snapshot.data.hasOwnProperty(routeAddBreadcrumbLink)) {\n              url = route.snapshot.data[routeAddBreadcrumbLink];\n            } else {\n              url = currentUrl;\n            }\n          }\n\n          const breadcrumb: Breadcrumb = {\n            label: breadcrumbLabel,\n            url: url\n          };\n\n          if (breadcrumbLabel) {\n            this.breadcrumbs.push(breadcrumb);\n          }\n        });\n      }\n    });\n  }\n\n}\n","module.exports = \"<!-- Display the content for the visited route. -->\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvc2hlbGwvY29udGVudC9jb250ZW50LmNvbXBvbmVudC5zY3NzIn0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\n\n/**\n * Content component.\n */\n@Component({\n  selector: 'mifosx-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.scss']\n})\nexport class ContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<!-- Application Shell -->\\n<mat-sidenav-container id=\\\"mifosx-shell-container\\\" autosize>\\n\\n  <!-- Sidenav -->\\n  <mat-sidenav\\n    #sidenav\\n    class=\\\"sidebar-panel\\\"\\n    [ngClass]=\\\"{\\n      'sidebar-full': !sidenavCollapsed,\\n      'sidebar-compact': sidenavCollapsed\\n    }\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\n\\n    <mifosx-sidenav [sidenavCollapsed]=\\\"sidenavCollapsed\\\"></mifosx-sidenav>\\n\\n  </mat-sidenav>\\n\\n  <!-- Content -->\\n  <mat-sidenav-content>\\n\\n    <!-- Toolbar -->\\n    <mifosx-toolbar [sidenav]=\\\"sidenav\\\" (collapse)=\\\"toggleCollapse($event)\\\"></mifosx-toolbar>\\n    <!-- Progress Bar -->\\n    <mat-progress-bar [mode]=\\\"progressBarMode\\\"></mat-progress-bar>\\n\\n    <!-- Breadcrumb -->\\n    <mifosx-breadcrumb></mifosx-breadcrumb>\\n    <!-- Content -->\\n    <mifosx-content></mifosx-content>\\n    <!-- Footer -->\\n    <mifosx-footer></mifosx-footer>\\n\\n  </mat-sidenav-content>\\n\\n</mat-sidenav-container>\\n\"","module.exports = \"#mifosx-shell-container {\\n  max-width: 100%;\\n  height: 100vh; }\\n  #mifosx-shell-container .sidebar-panel {\\n    min-height: 100vh;\\n    overflow: auto;\\n    box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12); }\\n  #mifosx-shell-container .sidebar-full {\\n    width: 15rem; }\\n  #mifosx-shell-container .sidebar-compact {\\n    width: 4rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NvcmUvc2hlbGwvc2hlbGwuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2YsYUFBYSxFQUFBO0VBRmY7SUFLSSxpQkFBaUI7SUFDakIsY0FBYztJQUNkLCtHQUErRyxFQUFBO0VBUG5IO0lBV0ksWUFBWSxFQUFBO0VBWGhCO0lBZUksV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29yZS9zaGVsbC9zaGVsbC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNtaWZvc3gtc2hlbGwtY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuXG4gIC5zaWRlYmFyLXBhbmVsIHtcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICBib3gtc2hhZG93OiAwIDNweCAxcHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgMXB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xMik7XG4gIH1cblxuICAuc2lkZWJhci1mdWxsIHtcbiAgICB3aWR0aDogMTVyZW07XG4gIH1cblxuICAuc2lkZWJhci1jb21wYWN0IHtcbiAgICB3aWR0aDogNHJlbTtcbiAgfVxufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\n/** rxjs Imports */\nimport { Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/** Custom Services */\nimport { ProgressBarService } from '../progress-bar/progress-bar.service';\n\n/**\n * Shell component.\n */\n@Component({\n  selector: 'mifosx-shell',\n  templateUrl: './shell.component.html',\n  styleUrls: ['./shell.component.scss']\n})\nexport class ShellComponent implements OnInit, OnDestroy {\n\n  /** Subscription to breakpoint observer for handset. */\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n  /** Sets the initial state of sidenav as collapsed. Not collapsed if false. */\n  sidenavCollapsed = true;\n  /** Progress bar mode. */\n  progressBarMode: string;\n  /** Subscription to progress bar. */\n  progressBar$: Subscription;\n\n  /**\n   * @param {BreakpointObserver} breakpointObserver Breakpoint Observer to detect screen size.\n   * @param {ProgressBarService} progressBarService Progress Bar Service.\n   * @param {ChangeDetectorRef} cdr Change Detector Ref.\n   */\n  constructor(private breakpointObserver: BreakpointObserver,\n              private progressBarService: ProgressBarService,\n              private cdr: ChangeDetectorRef) { }\n\n  /**\n   * Subscribes to progress bar to update its mode.\n   */\n  ngOnInit() {\n    this.progressBar$ = this.progressBarService.updateProgressBar.subscribe((mode: string) => {\n      this.progressBarMode = mode;\n      this.cdr.detectChanges();\n    });\n  }\n\n  /**\n   * Toggles the current collapsed state of sidenav according to the emitted event.\n   * @param {boolean} event denotes state of sidenav\n   */\n  toggleCollapse($event: boolean) {\n    this.sidenavCollapsed = $event;\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * Unsubscribes from progress bar.\n   */\n  ngOnDestroy() {\n    this.progressBar$.unsubscribe();\n  }\n\n}\n","module.exports = \"<div\\n  [ngClass]=\\\"{\\n  'sidebar-full': !sidenavCollapsed,\\n  'sidebar-compact': sidenavCollapsed\\n  }\\\">\\n\\n  <div class=\\\"navigation-panel\\\" fxLayout=\\\"column\\\">\\n\\n    <!-- TODO: Allow customization by organization -->\\n    <div class=\\\"app-brand\\\">\\n      <img src=\\\"assets/images/FinOS.svg\\\" alt=\\\"app-logo\\\" class=\\\"app-logo\\\">\\n      <!-- <span class=\\\"app-logo-text text-muted\\\">Mifos</span> -->\\n    </div>\\n\\n    <div class=\\\"app-user\\\">\\n      <div class=\\\"app-user-photo\\\">\\n        <!-- TODO: Decision to be taken on providing this feature -->\\n        <img src=\\\"assets/images/user_placeholder.png\\\" alt=\\\"app-user-photo\\\">\\n      </div>\\n      <span class=\\\"app-user-name mb-05\\\">\\n        {{ username }}\\n      </span>\\n      <div class=\\\"app-user-controls\\\">\\n        <button class=\\\"text-muted xs-button\\\" mat-icon-button matTooltip=\\\"Settings\\\" [routerLink]=\\\"['/settings']\\\">\\n          <fa-icon icon=\\\"cog\\\"></fa-icon>\\n        </button>\\n        <button class=\\\"text-muted xs-button\\\" mat-icon-button matTooltip=\\\"Sign Out\\\" (click)=\\\"logout()\\\">\\n          <fa-icon icon=\\\"sign-out-alt\\\"></fa-icon>\\n        </button>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"app-sidenav\\\">\\n\\n      <!-- TODO: Generate frequently accessed routes dynamically -->\\n      <div class=\\\"mt-1 mb-1 nav-item-sep\\\">\\n        <mat-divider></mat-divider>\\n        <span class=\\\"text-muted icon-menu-title\\\">Frequently Accessed</span>\\n      </div>\\n      <div class=\\\"icon-menu\\\">\\n        <div class=\\\"icon-menu-item\\\">\\n          <button mat-raised-button matTooltip=\\\"Home\\\" [routerLink]=\\\"['/home']\\\">\\n            <fa-icon icon=\\\"home\\\" size=\\\"lg\\\"></fa-icon>\\n          </button>\\n        </div>\\n        <div class=\\\"icon-menu-item\\\">\\n          <button mat-raised-button matTooltip=\\\"Dashboard\\\" [routerLink]=\\\"['/dashboard']\\\">\\n            <fa-icon icon=\\\"tachometer-alt\\\" size=\\\"lg\\\"></fa-icon>\\n          </button>\\n        </div>\\n        <div class=\\\"icon-menu-item\\\">\\n          <button mat-raised-button matTooltip=\\\"Navigation\\\" [routerLink]=\\\"['/navigation']\\\">\\n            <fa-icon icon=\\\"location-arrow\\\" size=\\\"lg\\\"></fa-icon>\\n          </button>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"nav-item-sep\\\">\\n        <mat-divider></mat-divider>\\n        <span class=\\\"text-muted\\\">Main Items</span>\\n      </div>\\n\\n      <mat-nav-list>\\n        <mat-list-item [routerLink]=\\\"['/dashboard']\\\">\\n          <mat-icon matListIcon>\\n            <fa-icon icon=\\\"tachometer-alt\\\" size=\\\"sm\\\"></fa-icon>\\n          </mat-icon>\\n          <a matLine>Dashboard</a>\\n        </mat-list-item>\\n        <mat-list-item [routerLink]=\\\"['/navigation']\\\">\\n          <mat-icon matListIcon>\\n            <fa-icon icon=\\\"location-arrow\\\" size=\\\"sm\\\"></fa-icon>\\n          </mat-icon>\\n          <a matLine>Navigation</a>\\n        </mat-list-item>\\n        <mat-list-item [routerLink]=\\\"['/accounting/frequent-postings']\\\">\\n          <mat-icon matListIcon>\\n            <fa-icon icon=\\\"sync\\\" size=\\\"sm\\\"></fa-icon>\\n          </mat-icon>\\n          <a matLine>Frequent Postings</a>\\n        </mat-list-item>\\n        <mat-list-item [routerLink]=\\\"['/accounting/journal-entries/create']\\\">\\n          <mat-icon matListIcon>\\n            <fa-icon icon=\\\"plus\\\" size=\\\"sm\\\"></fa-icon>\\n          </mat-icon>\\n          <a matLine>Create Journal Entry</a>\\n        </mat-list-item>\\n        <mat-list-item [routerLink]=\\\"['/accounting/chart-of-accounts']\\\">\\n          <mat-icon matListIcon>\\n            <fa-icon icon=\\\"sitemap\\\" size=\\\"sm\\\"></fa-icon>\\n          </mat-icon>\\n          <a matLine>Chart of Accounts</a>\\n        </mat-list-item>\\n      </mat-nav-list>\\n\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \".sidebar-full .navigation-panel,\\n.sidebar-compact .navigation-panel {\\n  width: 100%;\\n  height: 100%;\\n  padding-top: 20%; }\\n\\n.sidebar-full img,\\n.sidebar-compact img {\\n  max-width: 100%; }\\n\\n.sidebar-full .app-brand,\\n.sidebar-compact .app-brand {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  text-align: center;\\n  max-width: 15rem;\\n  z-index: 9999;\\n  color: #444; }\\n\\n.sidebar-full .app-brand .app-logo,\\n  .sidebar-compact .app-brand .app-logo {\\n    width: auto;\\n    height: 42px;\\n    margin-right: 8px; }\\n\\n.sidebar-full .app-brand .app-logo-text,\\n  .sidebar-compact .app-brand .app-logo-text {\\n    width: auto;\\n    height: auto;\\n    font-size: 2rem;\\n    font-weight: normal; }\\n\\n.sidebar-full .app-user,\\n.sidebar-compact .app-user {\\n  text-align: center;\\n  width: 100%;\\n  padding: 1rem 0 0.4rem; }\\n\\n.sidebar-full .app-user .app-user-photo,\\n  .sidebar-compact .app-user .app-user-photo {\\n    width: 72px;\\n    margin: 0 auto 8px;\\n    height: 72px;\\n    border: 1px solid rgba(120, 130, 140, 0.13);\\n    padding: 4px;\\n    border-radius: 50%; }\\n\\n.sidebar-full .app-user img,\\n  .sidebar-compact .app-user img {\\n    width: 100%;\\n    height: 100%;\\n    border-radius: 50%; }\\n\\n.sidebar-full .app-user .app-user-name,\\n  .sidebar-compact .app-user .app-user-name {\\n    display: block;\\n    font-size: 0.875rem;\\n    font-weight: 300;\\n    color: rgba(0, 0, 0, 0.96);\\n    margin-left: -2px; }\\n\\n.sidebar-full .app-user .app-user-controls .mat-icon-button .xs-button,\\n  .sidebar-compact .app-user .app-user-controls .mat-icon-button .xs-button {\\n    height: 20px;\\n    width: 20px;\\n    line-height: 20px;\\n    margin: 5px; }\\n\\n.sidebar-full .app-user .app-user-controls .text-muted,\\n  .sidebar-compact .app-user .app-user-controls .text-muted {\\n    color: rgba(0, 0, 0, 0.54); }\\n\\n.sidebar-full .nav-item-sep span,\\n.sidebar-compact .nav-item-sep span {\\n  padding: 16px 0 0 16px;\\n  display: block;\\n  font-size: 12px; }\\n\\n.sidebar-full .app-sidenav .icon-menu,\\n.sidebar-compact .app-sidenav .icon-menu {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-evenly; }\\n\\n.sidebar-full .app-sidenav .icon-menu .mat-divider,\\n  .sidebar-compact .app-sidenav .icon-menu .mat-divider {\\n    margin: 0 -24px; }\\n\\n.sidebar-full .app-sidenav .icon-menu .icon-menu-title,\\n  .sidebar-compact .app-sidenav .icon-menu .icon-menu-title {\\n    padding-left: 0;\\n    margin-left: -8px; }\\n\\n.sidebar-full .app-sidenav .icon-menu .icon-menu-item,\\n  .sidebar-compact .app-sidenav .icon-menu .icon-menu-item {\\n    display: inline-block; }\\n\\n.sidebar-full .app-sidenav .icon-menu .icon-menu-item button,\\n    .sidebar-compact .app-sidenav .icon-menu .icon-menu-item button {\\n      min-width: auto;\\n      margin: 4px; }\\n\\n.sidebar-full .app-sidenav .nav-item-sep,\\n.sidebar-compact .app-sidenav .nav-item-sep {\\n  padding: 0;\\n  margin: 1rem 0; }\\n\\n.sidebar-full .app-sidenav .mat-nav-list,\\n.sidebar-compact .app-sidenav .mat-nav-list {\\n  margin: 0;\\n  padding: 0;\\n  list-style: none; }\\n\\n.sidebar-full .app-sidenav .mat-nav-list .mat-list-item .mat-list-icon,\\n  .sidebar-compact .app-sidenav .mat-nav-list .mat-list-item .mat-list-icon {\\n    height: 30px;\\n    font-size: 22px; }\\n\\n.sidebar-compact .app-brand .app-logo {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n  width: 80%; }\\n\\n.sidebar-compact .app-brand .app-logo-text {\\n  display: none; }\\n\\n.sidebar-compact .app-user {\\n  display: none; }\\n\\n.sidebar-compact .app-sidenav .nav-item-sep span {\\n  display: none; }\\n\\n.sidebar-compact .app-sidenav .icon-menu {\\n  padding: 8px 0 0;\\n  width: 4rem; }\\n\\n.sidebar-compact .app-sidenav .icon-menu .nav-item-sep {\\n    display: none; }\\n\\n.sidebar-compact .app-sidenav .icon-menu span {\\n    display: none; }\\n\\n.sidebar-full .navigation-panel {\\n  padding-top: 5%; }\\n\\n.sidebar-full .app-sidenav .icon-menu {\\n  flex-direction: row; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NvcmUvc2hlbGwvc2lkZW5hdi9zaWRlbmF2LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUdJLFdBQVc7RUFDWCxZQUFZO0VBQ1osZ0JBQWdCLEVBQUE7O0FBTHBCOztFQVNJLGVBQWUsRUFBQTs7QUFUbkI7O0VBYUksYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2IsV0FBVyxFQUFBOztBQW5CZjs7SUFzQk0sV0FBVztJQUNYLFlBQVk7SUFDWixpQkFBaUIsRUFBQTs7QUF4QnZCOztJQTRCTSxXQUFXO0lBQ1gsWUFBWTtJQUNaLGVBQWU7SUFDZixtQkFBbUIsRUFBQTs7QUEvQnpCOztFQW9DSSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLHNCQUFzQixFQUFBOztBQXRDMUI7O0lBeUNNLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLDJDQUEwQztJQUMxQyxZQUFZO0lBQ1osa0JBQWtCLEVBQUE7O0FBOUN4Qjs7SUFrRE0sV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0IsRUFBQTs7QUFwRHhCOztJQXdETSxjQUFjO0lBQ2QsbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQiwwQkFBMEI7SUFDMUIsaUJBQWlCLEVBQUE7O0FBNUR2Qjs7SUFrRVUsWUFBWTtJQUNaLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsV0FBVyxFQUFBOztBQXJFckI7O0lBMEVRLDBCQUEwQixFQUFBOztBQTFFbEM7O0VBaUZNLHNCQUFzQjtFQUN0QixjQUFjO0VBQ2QsZUFBZSxFQUFBOztBQW5GckI7O0VBeUZNLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsNkJBQTZCLEVBQUE7O0FBM0ZuQzs7SUE4RlEsZUFBZSxFQUFBOztBQTlGdkI7O0lBa0dRLGVBQWU7SUFDZixpQkFBaUIsRUFBQTs7QUFuR3pCOztJQXVHUSxxQkFBcUIsRUFBQTs7QUF2RzdCOztNQTBHVSxlQUFlO01BQ2YsV0FBVyxFQUFBOztBQTNHckI7O0VBaUhNLFVBQVU7RUFDVixjQUFjLEVBQUE7O0FBbEhwQjs7RUFzSE0sU0FBUztFQUNULFVBQVU7RUFDVixnQkFBZ0IsRUFBQTs7QUF4SHRCOztJQTRIVSxZQUFZO0lBQ1osZUFBZSxFQUFBOztBQU96QjtFQUdNLGNBQWM7RUFDaEIsaUJBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixVQUFTLEVBQUE7O0FBTmI7RUFVTSxhQUFhLEVBQUE7O0FBVm5CO0VBZUksYUFBYSxFQUFBOztBQWZqQjtFQXFCUSxhQUFhLEVBQUE7O0FBckJyQjtFQTBCTSxnQkFBZ0I7RUFDaEIsV0FBVyxFQUFBOztBQTNCakI7SUE4QlEsYUFBYSxFQUFBOztBQTlCckI7SUFrQ1EsYUFBYSxFQUFBOztBQUtyQjtFQUVJLGVBQWUsRUFBQTs7QUFGbkI7RUFNTSxtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvcmUvc2hlbGwvc2lkZW5hdi9zaWRlbmF2LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGViYXItZnVsbCxcbi5zaWRlYmFyLWNvbXBhY3Qge1xuICAubmF2aWdhdGlvbi1wYW5lbCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBhZGRpbmctdG9wOiAyMCU7XG4gIH1cblxuICBpbWcge1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5hcHAtYnJhbmQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWF4LXdpZHRoOiAxNXJlbTtcbiAgICB6LWluZGV4OiA5OTk5O1xuICAgIGNvbG9yOiAjNDQ0O1xuXG4gICAgLmFwcC1sb2dvIHtcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgaGVpZ2h0OiA0MnB4O1xuICAgICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gICAgfVxuXG4gICAgLmFwcC1sb2dvLXRleHQge1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIH1cbiAgfVxuXG4gIC5hcHAtdXNlciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDFyZW0gMCAwLjRyZW07XG5cbiAgICAuYXBwLXVzZXItcGhvdG8ge1xuICAgICAgd2lkdGg6IDcycHg7XG4gICAgICBtYXJnaW46IDAgYXV0byA4cHg7XG4gICAgICBoZWlnaHQ6IDcycHg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCBoc2xhKDIxMCwgOCUsIDUxJSwgMC4xMyk7XG4gICAgICBwYWRkaW5nOiA0cHg7XG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgfVxuXG4gICAgaW1nIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIH1cblxuICAgIC5hcHAtdXNlci1uYW1lIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjk2KTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAtMnB4O1xuICAgIH1cblxuICAgIC5hcHAtdXNlci1jb250cm9scyB7XG4gICAgICAubWF0LWljb24tYnV0dG9uIHtcbiAgICAgICAgLnhzLWJ1dHRvbiB7XG4gICAgICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgICAgICAgIG1hcmdpbjogNXB4O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC50ZXh0LW11dGVkIHtcbiAgICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLm5hdi1pdGVtLXNlcCB7XG4gICAgc3BhbiB7XG4gICAgICBwYWRkaW5nOiAxNnB4IDAgMCAxNnB4O1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgfVxuICB9XG5cbiAgLmFwcC1zaWRlbmF2IHtcbiAgICAuaWNvbi1tZW51IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XG5cbiAgICAgIC5tYXQtZGl2aWRlciB7XG4gICAgICAgIG1hcmdpbjogMCAtMjRweDtcbiAgICAgIH1cblxuICAgICAgLmljb24tbWVudS10aXRsZSB7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IC04cHg7XG4gICAgICB9XG5cbiAgICAgIC5pY29uLW1lbnUtaXRlbSB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcblxuICAgICAgICBidXR0b24ge1xuICAgICAgICAgIG1pbi13aWR0aDogYXV0bztcbiAgICAgICAgICBtYXJnaW46IDRweDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC5uYXYtaXRlbS1zZXAge1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIG1hcmdpbjogMXJlbSAwO1xuICAgIH1cblxuICAgIC5tYXQtbmF2LWxpc3Qge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG5cbiAgICAgIC5tYXQtbGlzdC1pdGVtIHtcbiAgICAgICAgLm1hdC1saXN0LWljb24ge1xuICAgICAgICAgIGhlaWdodDogMzBweDtcbiAgICAgICAgICBmb250LXNpemU6IDIycHg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLnNpZGViYXItY29tcGFjdCB7XG4gIC5hcHAtYnJhbmQge1xuICAgIC5hcHAtbG9nbyB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tbGVmdDphdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICB3aWR0aDo4MCU7XG4gICAgfVxuXG4gICAgLmFwcC1sb2dvLXRleHQge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cblxuICAuYXBwLXVzZXIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAuYXBwLXNpZGVuYXYge1xuICAgIC5uYXYtaXRlbS1zZXAge1xuICAgICAgc3BhbiB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmljb24tbWVudSB7XG4gICAgICBwYWRkaW5nOiA4cHggMCAwO1xuICAgICAgd2lkdGg6IDRyZW07XG5cbiAgICAgIC5uYXYtaXRlbS1zZXAge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgfVxuXG4gICAgICBzcGFuIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbi5zaWRlYmFyLWZ1bGwge1xuICAubmF2aWdhdGlvbi1wYW5lbCB7XG4gICAgcGFkZGluZy10b3A6IDUlO1xuICB9XG4gIC5hcHAtc2lkZW5hdiB7XG4gICAgLmljb24tbWVudSB7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIH1cbiAgfVxufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/** Custom Services */\nimport { AuthenticationService } from '../../authentication/authentication.service';\n\n/**\n * Sidenav component.\n */\n@Component({\n  selector: 'mifosx-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n\n  /** True if sidenav is in collapsed state. */\n  @Input() sidenavCollapsed: boolean;\n  /** Username of authenticated user. */\n  username: string;\n\n  /**\n   * @param {Router} router Router for navigation.\n   * @param {AuthenticationService} authenticationService Authentication Service.\n   */\n  constructor(private router: Router,\n              private authenticationService: AuthenticationService) { }\n\n  /**\n   * Sets the username of the authenticated user.\n   */\n  ngOnInit() {\n    const credentials = this.authenticationService.getCredentials();\n    this.username = credentials.username;\n  }\n\n  /**\n   * Logs out the authenticated user and redirects to login page.\n   */\n  logout() {\n    this.authenticationService.logout()\n      .subscribe(() => this.router.navigate(['/login'], { replaceUrl: true }));\n  }\n\n}\n","module.exports = \"<mat-toolbar fxLayout=\\\"row\\\" color=\\\"primary\\\" id=\\\"mifosx-toolbar\\\">\\n\\n  <button mat-icon-button *ngIf=\\\"!sidenavCollapsed\\\" (click)=\\\"toggleSidenav()\\\" matTooltip=\\\"Toggle Hide/Open\\\">\\n    <fa-icon icon=\\\"bars\\\" size=\\\"lg\\\"></fa-icon>\\n  </button>\\n\\n  <button mat-icon-button *ngIf=\\\"sidenav.opened\\\" (click)=\\\"toggleSidenavCollapse()\\\" matTooltip=\\\"Toggle Collapse\\\" fxHide.lt-md=\\\"true\\\">\\n    <fa-icon *ngIf=\\\"!sidenavCollapsed\\\" icon=\\\"chevron-left\\\"></fa-icon>\\n    <fa-icon *ngIf=\\\"sidenavCollapsed\\\" icon=\\\"chevron-right\\\"></fa-icon>\\n  </button>\\n\\n  <nav mat-tab-nav-bar backgroundColor=\\\"primary\\\" class=\\\"ml-1\\\">\\n\\n    <a mat-tab-link class=\\\"tab-link\\\" [matMenuTriggerFor]=\\\"institutionMenu\\\" #institutionMenuTrigger=\\\"matMenuTrigger\\\">\\n      <fa-icon class=\\\"mr-05\\\" icon=\\\"university\\\" size=\\\"lg\\\"></fa-icon>\\n      Institution\\n    </a>\\n\\n    <span fxHide.lt-lg=\\\"true\\\">\\n\\n      <a mat-tab-link class=\\\"tab-link\\\" [routerLink]=\\\"['/accounting']\\\">\\n        <fa-icon class=\\\"mr-05\\\" icon=\\\"money-bill-alt\\\" size=\\\"lg\\\"></fa-icon>\\n        Accounting\\n      </a>\\n      <a mat-tab-link class=\\\"tab-link\\\" [matMenuTriggerFor]=\\\"reportsMenu\\\" #reportsMenuTrigger=\\\"matMenuTrigger\\\" >\\n        <fa-icon class=\\\"mr-05\\\" icon=\\\"chart-bar\\\" size=\\\"lg\\\"></fa-icon>\\n        Reports\\n      </a>\\n      <a mat-tab-link class=\\\"tab-link\\\" [matMenuTriggerFor]=\\\"adminMenu\\\" #adminMenuTrigger=\\\"matMenuTrigger\\\">\\n        <fa-icon class=\\\"mr-05\\\" icon=\\\"shield-alt\\\" size=\\\"lg\\\"></fa-icon>\\n        Admin\\n      </a>\\n      <a mat-tab-link class=\\\"tab-link\\\" [matMenuTriggerFor]=\\\"selfServiceMenu\\\" #selfServiceMenuTrigger=\\\"matMenuTrigger\\\">\\n        <fa-icon class=\\\"mr-05\\\" icon=\\\"users\\\" size=\\\"lg\\\"></fa-icon>\\n        Self Service\\n      </a>\\n\\n    </span>\\n\\n  </nav>\\n\\n  <span fxFlex=\\\"auto\\\"></span>\\n\\n  <!--\\n    TODO: Search\\n    Separate into its own component in shared module for reuse.\\n    Implement functionality.\\n  -->\\n  <div *ngIf=\\\"searchVisible\\\" class=\\\"search-bar\\\" fxFlex=\\\"auto\\\" fxHide.lt-sm=\\\"true\\\" [@fadeInOut]>\\n    <mat-form-field class=\\\"search\\\">\\n      <mat-label>Search</mat-label>\\n      <input matInput type=\\\"text\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <button mat-icon-button class=\\\"ml-1\\\" (click)=\\\"toggleSearchVisibility()\\\" fxHide.lt-sm=\\\"true\\\">\\n    <fa-icon icon=\\\"search\\\" size=\\\"lg\\\"></fa-icon>\\n  </button>\\n  &nbsp;&nbsp;\\n\\n <!-- <mifosx-language-selector class=\\\"ml-1 language\\\" fxHide.lt-md></mifosx-language-selector> -->\\n\\n  <mifosx-theme-picker fxHide.lt-md></mifosx-theme-picker>\\n\\n  <!--\\n    TODO: Notifications\\n    Separate into its own component in shared module for reuse.\\n    Implement functionality.\\n  -->\\n  <button mat-icon-button class=\\\"ml-1\\\" matTooltip=\\\"Notifications\\\">\\n    <fa-icon icon=\\\"bell\\\" size=\\\"lg\\\"></fa-icon>\\n  </button>\\n\\n  <button mat-icon-button class=\\\"ml-1 img-button\\\" [matMenuTriggerFor]=\\\"applicationMenu\\\">\\n    <img src=\\\"assets/images/user_placeholder.png\\\">\\n  </button>\\n\\n</mat-toolbar>\\n\\n<mat-menu #institutionMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n  <button mat-menu-item routerLink=\\\"/clients\\\">Clients</button>\\n  <button mat-menu-item routerLink=\\\"/groups\\\">Groups</button>\\n  <button mat-menu-item routerLink=\\\"/centers\\\">Centers</button>\\n  <span fxHide.lg>\\n    <button mat-menu-item [routerLink]=\\\"['/accounting']\\\">Accounting</button>\\n    <button mat-menu-item [matMenuTriggerFor]=\\\"reportsMenu\\\">Reports</button>\\n    <button mat-menu-item [matMenuTriggerFor]=\\\"adminMenu\\\">Admin</button>\\n    <button mat-menu-item [matMenuTriggerFor]=\\\"selfServiceMenu\\\">Self Service</button>\\n  </span>\\n</mat-menu>\\n\\n<!-- Toolbar Menus -->\\n<mat-menu #reportsMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n  <button mat-menu-item routerLink = '/all-reports'>All</button>\\n  <button mat-menu-item routerLink = '/clients-reports'>Clients</button>\\n  <button mat-menu-item routerLink = '/loans-reports'>Loans</button>\\n  <button mat-menu-item routerLink = '/savings-reports'>Savings</button>\\n  <button mat-menu-item routerLink = '/funds-reports'>Funds</button>\\n  <button mat-menu-item routerLink = '/accounting-reports'>Accounting</button>\\n  <button mat-menu-item>XBRL</button>\\n</mat-menu>\\n\\n<mat-menu #adminMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n  <button mat-menu-item [routerLink]=\\\"['/users']\\\">Users</button>\\n  <button mat-menu-item [routerLink]=\\\"['/organization']\\\">Organization</button>\\n  <button mat-menu-item [routerLink]=\\\"['/system']\\\">System</button>\\n  <button mat-menu-item [routerLink]=\\\"['/products']\\\">Products</button>\\n  <button mat-menu-item [routerLink]=\\\"['/templates']\\\">Templates</button>\\n</mat-menu>\\n\\n<mat-menu #selfServiceMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n  <button mat-menu-item [routerLink]=\\\"['/self-service/users']\\\">User Management</button>\\n  <button mat-menu-item [routerLink]=\\\"['/self-service/app-configuration']\\\">App Configuration</button>\\n  <button mat-menu-item [routerLink]=\\\"['/self-service/task-management']\\\">Task Management</button>\\n</mat-menu>\\n\\n<!-- Application User Help Menu -->\\n<mat-menu #applicationMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n  <button mat-menu-item [routerLink]=\\\"['/settings']\\\">\\n    <mat-icon>\\n      <fa-icon icon=\\\"cog\\\" size=\\\"sm\\\"></fa-icon>\\n    </mat-icon>\\n    <span>Settings</span>\\n  </button>\\n  <button mat-menu-item (click)=\\\"logout()\\\">\\n    <mat-icon>\\n        <fa-icon icon=\\\"sign-out-alt\\\" size=\\\"sm\\\"></fa-icon>\\n    </mat-icon>\\n    <span>Sign Out</span>\\n  </button>\\n</mat-menu>\\n\"","module.exports = \"#mifosx-toolbar {\\n  position: relative;\\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12); }\\n  #mifosx-toolbar .tab-link {\\n    min-width: auto;\\n    padding: 0 1rem; }\\n  #mifosx-toolbar .search-bar .search {\\n    max-width: 400px;\\n    width: 100%;\\n    font-size: 1rem; }\\n  #mifosx-toolbar .language {\\n    min-width: 80px;\\n    width: 80px;\\n    font-size: 0.875rem;\\n    margin-top: 0.375rem; }\\n  #mifosx-toolbar .img-button img {\\n    width: 32px;\\n    height: 32px;\\n    border-radius: 50%; }\\n  #mifosx-toolbar .ml-1 {\\n    margin-left: 1rem; }\\n  #mifosx-toolbar .mr-1 {\\n    margin-right: 1rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2NvcmUvc2hlbGwvdG9vbGJhci90b29sYmFyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLCtHQUErRyxFQUFBO0VBRmpIO0lBS0ksZUFBZTtJQUNmLGVBQWUsRUFBQTtFQU5uQjtJQVdNLGdCQUFnQjtJQUNoQixXQUFXO0lBQ1gsZUFBZSxFQUFBO0VBYnJCO0lBa0JJLGVBQWU7SUFDZixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLG9CQUFvQixFQUFBO0VBckJ4QjtJQTBCTSxXQUFXO0lBQ1gsWUFBWTtJQUNaLGtCQUFrQixFQUFBO0VBNUJ4QjtJQWlDSSxpQkFBaUIsRUFBQTtFQWpDckI7SUFxQ0ksa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb3JlL3NoZWxsL3Rvb2xiYXIvdG9vbGJhci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNtaWZvc3gtdG9vbGJhciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm94LXNoYWRvdzogMCAzcHggMXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwIDJweCAycHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDFweCA1cHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xuXG4gIC50YWItbGluayB7XG4gICAgbWluLXdpZHRoOiBhdXRvO1xuICAgIHBhZGRpbmc6IDAgMXJlbTtcbiAgfVxuXG4gIC5zZWFyY2gtYmFyIHtcbiAgICAuc2VhcmNoIHtcbiAgICAgIG1heC13aWR0aDogNDAwcHg7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICB9XG4gIH1cblxuICAubGFuZ3VhZ2Uge1xuICAgIG1pbi13aWR0aDogODBweDtcbiAgICB3aWR0aDogODBweDtcbiAgICBmb250LXNpemU6IDAuODc1cmVtO1xuICAgIG1hcmdpbi10b3A6IDAuMzc1cmVtO1xuICB9XG5cbiAgLmltZy1idXR0b24ge1xuICAgIGltZyB7XG4gICAgICB3aWR0aDogMzJweDtcbiAgICAgIGhlaWdodDogMzJweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICB9XG4gIH1cblxuICAubWwtMSB7XG4gICAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gIH1cblxuICAubXItMSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { style, animate, transition, trigger } from '@angular/animations';\nimport { Router } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/** Custom Services */\nimport { AuthenticationService } from '../../authentication/authentication.service';\n\n/**\n * Toolbar component.\n */\n@Component({\n  selector: 'mifosx-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate(500, style({ opacity: 1 }))\n      ]),\n      transition(':leave', [\n        animate(500, style({ opacity: 0 }))\n      ])\n    ])\n  ]\n})\nexport class ToolbarComponent implements OnInit {\n\n  /** Subscription to breakpoint observer for handset. */\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  /** Sets the initial visibility of search input as hidden. Visible if true. */\n  searchVisible = false;\n  /** Sets the initial state of sidenav as collapsed. Not collapsed if false. */\n  sidenavCollapsed = true;\n\n  /** Instance of sidenav. */\n  @Input() sidenav: MatSidenav;\n  /** Sidenav collapse event. */\n  @Output() collapse = new EventEmitter<boolean>();\n\n  /**\n   * @param {BreakpointObserver} breakpointObserver Breakpoint observer to detect screen size.\n   * @param {Router} router Router for navigation.\n   * @param {AuthenticationService} authenticationService Authentication service.\n   */\n  constructor(private breakpointObserver: BreakpointObserver,\n              private router: Router,\n              private authenticationService: AuthenticationService) { }\n\n  /**\n   * Subscribes to breakpoint for handset.\n   */\n  ngOnInit() {\n    this.isHandset$.subscribe(isHandset => {\n      if (isHandset && this.sidenavCollapsed) {\n        this.toggleSidenavCollapse(false);\n      }\n    });\n  }\n\n  /**\n   * Toggles the current state of sidenav.\n   */\n  toggleSidenav() {\n    this.sidenav.toggle();\n  }\n\n  /**\n   * Toggles the current collapsed state of sidenav.\n   */\n  toggleSidenavCollapse(sidenavCollapsed?: boolean) {\n    this.sidenavCollapsed = sidenavCollapsed || !this.sidenavCollapsed;\n    this.collapse.emit(this.sidenavCollapsed);\n  }\n\n  /**\n   * Toggles the visibility of search input with fadeInOut animation.\n   */\n  toggleSearchVisibility() {\n    this.searchVisible = !this.searchVisible;\n  }\n\n  /**\n   * Logs out the authenticated user and redirects to login page.\n   */\n  logout() {\n    this.authenticationService.logout()\n      .subscribe(() => this.router.navigate(['/login'], { replaceUrl: true }));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/** Routing Imports */\nimport { Route } from '../core/route/route.service';\n\n/** Translation Imports */\nimport { extract } from '../core/i18n/i18n.service';\n\nimport { GroupsComponent } from './groups.component';\nimport { GroupsViewComponent } from './groups-view/groups-view.component';\nimport { GeneralTabComponent } from './groups-view/general-tab/general-tab.component';\nimport { CommitteeTabComponent } from './groups-view/committee-tab/committee-tab.component';\nimport { NotesTabComponent } from './groups-view/notes-tab/notes-tab.component';\nimport { EditGroupComponent } from './groups-view/edit-group/edit-group.component';\nconst routes: Routes = [\n  Route.withShell([\n\n    {\n      path: 'groups',\n      data: { title: extract('Groups'), breadcrumb: 'Groups' },\n      children: [\n        {\n          path: '',\n          component: GroupsComponent,\n        },\n        {\n          path: 'groupId',\n          component: GroupsViewComponent,\n           data: { title: extract('Groups View'),  breadcrumb: 'Group Id',routeParamBreadcrumb: 'groupId' },\n            \n           children : [\n            {\n              path: 'general',\n              component: GeneralTabComponent,\n              data: { title: extract('General'), breadcrumb: 'General', routeParamBreadcrumb: false }\n            },\n           \n            {\n              path: 'notes',\n              component: NotesTabComponent,\n              data: { title: extract('Notes'), breadcrumb: 'Notes', routeParamBreadcrumb: false }\n            },\n            {\n              path: 'committee',\n              component: CommitteeTabComponent,\n              data: { title: extract('Commitee'), breadcrumb: 'Comittee', routeParamBreadcrumb: false }\n            }]\n          },\n          {\n            path: 'editgroup',\n            component: EditGroupComponent,\n          }]\n          \n    }\n  ])\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class GroupsRoutingModule { }\n","module.exports = \"<div class=\\\"opacity\\\">\\n  <br><textarea id=\\\"Write on:\\\" class=\\\"opacity\\\">\\n    Write a note\\n  </textarea></div>\\n  <button mat-raised-button> Submit </button>\"","module.exports = \".opacity {\\n  opacity: 0.8;\\n  width: 60%;\\n  height: 150%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2dyb3Vwcy9ncm91cHMtdmlldy9jb21taXR0ZWUtdGFiL2NvbW1pdHRlZS10YWIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFZO0VBQ1osVUFBVTtFQUNWLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL2dyb3Vwcy9ncm91cHMtdmlldy9jb21taXR0ZWUtdGFiL2NvbW1pdHRlZS10YWIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIub3BhY2l0eXtcbiAgICBvcGFjaXR5OiAwLjg7XG4gICAgd2lkdGg6IDYwJTtcbiAgICBoZWlnaHQ6IDE1MCU7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mifosx-committee-tab',\n  templateUrl: './committee-tab.component.html',\n  styleUrls: ['./committee-tab.component.scss']\n})\nexport class CommitteeTabComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  edit-group works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dyb3Vwcy9ncm91cHMtdmlldy9lZGl0LWdyb3VwL2VkaXQtZ3JvdXAuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mifosx-edit-group',\n  templateUrl: './edit-group.component.html',\n  styleUrls: ['./edit-group.component.scss']\n})\nexport class EditGroupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"tab-container mat-typography client-card\\\">\\n    <br><h3> Clients</h3>\\n<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"32px\\\" class=\\\"general-history-container\\\">\\n    <div class=\\\"general-actions general-card\\\">\\n    <button mat-raised-button>Transfer Clients </button> &nbsp;\\n    <button mat-raised-button>Manage Members </button> &nbsp;\\n    <button mat-raised-button> Add</button>&nbsp;\\n    <div class=\\\"general-perform-history-cont\\\">\\n        <p>Account No &nbsp;&nbsp;&nbsp;&nbsp;\\n            Name &nbsp;&nbsp;&nbsp;&nbsp; \\n             Actions \\n        </p><hr>\\n        <p>\\n            <button mat-raised-button class=\\\"general-button\\\">+ JLG Loan Application</button>\\n        </p><hr>\\n        <p>\\n            <button mat-raised-button class=\\\"general-button\\\">+ JLG Loan Application</button>\\n        </p><hr>       \\n        </div><br>\\n        <p> <b>Savings Account Overview</b>\\n            <button mat-raised-button class=\\\"general-button1\\\">View Closed Accounts</button>\\n        <br></p>\\n        <div class=\\\"general-perform-history-cont\\\">\\n        <p>Account # &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n            Products &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n            Balance  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n            Actions\\n        </p>\\n        \\n    </div>\\n        \\n        </div>\\n\\n</div>\\n</div>\\n\"","module.exports = \".general-history-container {\\n  border: 1px solid;\\n  padding: 1%; }\\n\\n.general-actions {\\n  align-self: flex-end;\\n  margin: 0 3%; }\\n\\n.general-card {\\n  margin: 0 auto;\\n  max-width: 100rem;\\n  width: 90%;\\n  padding: 0; }\\n\\n.general-perform-history-cont {\\n  margin-top: 2%;\\n  border: 1px solid;\\n  padding: 2%; }\\n\\n.general-button {\\n  margin-left: 35%;\\n  align-self: flex-end;\\n  border: 15%; }\\n\\n.general-button1 {\\n  margin-left: 19%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2dyb3Vwcy9ncm91cHMtdmlldy9nZW5lcmFsLXRhYi9nZW5lcmFsLXRhYi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLGlCQUFpQjtFQUNqQixXQUFXLEVBQUE7O0FBRWY7RUFFSSxvQkFBbUI7RUFDdkIsWUFBWSxFQUFBOztBQUVaO0VBQ0ksY0FBYztFQUNkLGlCQUFpQjtFQUNqQixVQUFVO0VBQ1YsVUFBVSxFQUFBOztBQUVkO0VBQ0ksY0FBYztFQUNkLGlCQUFpQjtFQUNqQixXQUFVLEVBQUE7O0FBRWQ7RUFDSSxnQkFBZ0I7RUFDaEIsb0JBQW9CO0VBQ3BCLFdBQVcsRUFBQTs7QUFFZjtFQUNJLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvZ3JvdXBzL2dyb3Vwcy12aWV3L2dlbmVyYWwtdGFiL2dlbmVyYWwtdGFiLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmdlbmVyYWwtaGlzdG9yeS1jb250YWluZXJcbntcbiAgICBib3JkZXI6IDFweCBzb2xpZDtcbiAgICBwYWRkaW5nOiAxJTtcbn1cbi5nZW5lcmFsLWFjdGlvbnNcbntcbiAgICBhbGlnbi1zZWxmOmZsZXgtZW5kO1xubWFyZ2luOiAwIDMlO1xufVxuLmdlbmVyYWwtY2FyZHtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBtYXgtd2lkdGg6IDEwMHJlbTtcbiAgICB3aWR0aDogOTAlO1xuICAgIHBhZGRpbmc6IDA7XG59XG4uZ2VuZXJhbC1wZXJmb3JtLWhpc3RvcnktY29udHtcbiAgICBtYXJnaW4tdG9wOiAyJTtcbiAgICBib3JkZXI6IDFweCBzb2xpZDtcbiAgICBwYWRkaW5nOjIlO1xufVxuLmdlbmVyYWwtYnV0dG9ue1xuICAgIG1hcmdpbi1sZWZ0OiAzNSU7XG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG4gICAgYm9yZGVyOiAxNSU7XG59XG4uZ2VuZXJhbC1idXR0b24xe1xuICAgIG1hcmdpbi1sZWZ0OiAxOSU7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mifosx-general-tab',\n  templateUrl: './general-tab.component.html',\n  styleUrls: ['./general-tab.component.scss']\n})\nexport class GeneralTabComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<mat-card class=\\\"container\\\">\\n  <div class=\\\"group-card\\\" style=\\\"background-color: blue;\\\">\\n    <mat-card-header fxLayout=\\\"column\\\" class=\\\"header\\\">\\n    <mat-card-title-group class=\\\"header-title-group\\\">\\n      <div class=\\\"group-image-container\\\">\\n        <div>\\n      \\n      <img mat-card-md-image class=\\\"group-profile-image\\\"\\n      [src]=\\\"(clientImage)?clientImage:'assets/images/user_placeholder.png'\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"mat-typography client-card-title\\\">\\n        <mat-card-title>\\n          <h3>\\n            <b>Client Name :</b>\\n          </h3>\\n        </mat-card-title>\\n        <mat-card-subtitle>\\n          <p>\\n            1234 <br>\\n            6.4.50<br>\\n            <!--<a>{{group.name}}</a>-->\\n          \\n          </p>\\n        </mat-card-subtitle>\\n        </div>\\n    </mat-card-title-group>\\n  <mat-card-actions class=\\\"group-actions\\\">\\n  <button mat-raised-button routerLink=\\\"../editgroup\\\">Edit</button>\\n  <button mat-raised-button>Group Saving Application</button>\\n  <button mat-raised-button>Group Loan Application</button>\\n  <button mat-raised-button>Bulk JLG Loan Application</button> \\n  <button mat-raised-button [matMenuTriggerFor]=\\\"More\\\">More Info</button>\\n  <mat-menu #More=\\\"matMenu\\\">\\n    <button mat-menu-item>Attendance</button>\\n    <button mat-menu-item>Unassign Staff</button>\\n    <button mat-menu-item>Close</button>\\n  </mat-menu>\\n  </mat-card-actions>\\n  </mat-card-header>\\n  </div>\\n  <mat-card-content>\\n    <nav mat-tab-nav-bar class=\\\"navigation-tabs\\\">\\n      <a mat-tab-link [routerLink]=\\\"['./general']\\\" routerLinkActive #general=\\\"routerLinkActive\\\"\\n      [active]=\\\"general.isActive\\\">\\n      General</a>\\n      <a mat-tab-link [routerLink]=\\\"['./notes']\\\" routerLinkActive #notes=\\\"routerLinkActive\\\"\\n      [active]=\\\"notes.isActive\\\">\\n    Notes\\n    </a>\\n    <a mat-tab-link [routerLink]=\\\"['./committee']\\\" routerLinkActive #committee=\\\"routerLinkActive\\\"\\n  [active]=\\\"committee.isActive\\\">\\nCommittee\\n</a>    \\n  </nav>\\n      <router-outlet></router-outlet>\\n  </mat-card-content>\\n  </mat-card>\\n  \"","module.exports = \".group-card {\\n  margin: 0 auto;\\n  max-width: 100rem;\\n  width: 90%;\\n  padding: 0; }\\n  .group-card .header {\\n    padding: 1%; }\\n  .group-card .header .header-title-group .client-card-title {\\n      color: white;\\n      width: 90%; }\\n  .group-card .header .header-title-group .client-card-title p {\\n        color: white; }\\n  .group-card .header .group-image-container {\\n      margin: 1%; }\\n  .group-card .header .group-image-container .group-profile-image {\\n        -o-object-fit: cover;\\n           object-fit: cover;\\n        border-radius: 50px;\\n        margin-right: -50%; }\\n  .group-card .header .group-actions {\\n      align-self: flex-end;\\n      margin: 0 1%; }\\n  .group-card .navigations-tabs {\\n    overflow: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2dyb3Vwcy9ncm91cHMtdmlldy9ncm91cHMtdmlldy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsVUFBVTtFQUNWLFVBQVUsRUFBQTtFQUpkO0lBTVEsV0FBVyxFQUFBO0VBTm5CO01BU2dCLFlBQVk7TUFDWixVQUFVLEVBQUE7RUFWMUI7UUFZb0IsWUFBWSxFQUFBO0VBWmhDO01BaUJZLFVBQVMsRUFBQTtFQWpCckI7UUFtQmdCLG9CQUFpQjtXQUFqQixpQkFBaUI7UUFDakIsbUJBQW1CO1FBQ25CLGtCQUFrQixFQUFBO0VBckJsQztNQXlCWSxvQkFBbUI7TUFDdkIsWUFBWSxFQUFBO0VBMUJwQjtJQStCUSxjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9ncm91cHMvZ3JvdXBzLXZpZXcvZ3JvdXBzLXZpZXcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5ncm91cC1jYXJke1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIG1heC13aWR0aDogMTAwcmVtO1xuICAgIHdpZHRoOiA5MCU7XG4gICAgcGFkZGluZzogMDtcbiAgICAuaGVhZGVye1xuICAgICAgICBwYWRkaW5nOiAxJTtcbiAgICAgICAgLmhlYWRlci10aXRsZS1ncm91cHtcbiAgICAgICAgICAgIC5jbGllbnQtY2FyZC10aXRsZXtcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDkwJTtcbiAgICAgICAgICAgICAgICBwe1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC5ncm91cC1pbWFnZS1jb250YWluZXJ7XG4gICAgICAgICAgICBtYXJnaW46MSU7XG4gICAgICAgICAgICAuZ3JvdXAtcHJvZmlsZS1pbWFnZXtcbiAgICAgICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogLTUwJTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAuZ3JvdXAtYWN0aW9uc3tcbiAgICAgICAgICAgIGFsaWduLXNlbGY6ZmxleC1lbmQ7XG4gICAgICAgIG1hcmdpbjogMCAxJTtcbiAgICAgICAgICAgIFxuICAgICAgICB9XG4gICAgfVxuICAgIC5uYXZpZ2F0aW9ucy10YWJze1xuICAgICAgICBvdmVyZmxvdzogYXV0bztcbiAgICB9XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mifosx-groups-view',\n  templateUrl: './groups-view.component.html',\n  styleUrls: ['./groups-view.component.scss']\n})\nexport class GroupsViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"tab-container mat-typography\\\">\\n  <h3>Notes</h3>\\n  <div>\\n    <form #formRef=\\\"ngForm\\\" [formGroup]=\\\"noteForm\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start baseline\\\" fxLayoutGap=\\\"20px\\\"\\n      (ngSubmit)=\\\"submit()\\\">\\n      <mat-form-field fxFlex=\\\"calc(90%-20px)\\\">\\n        <textarea formControlName=\\\"note\\\" matInput placeholder=\\\"Write a note ....\\\"></textarea>\\n      </mat-form-field>\\n      <button mat-raised-button fxFlex color=\\\"primary\\\" [disabled]=\\\"!noteForm.valid\\\">\\n        <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp; Add\\n      </button>\\n    </form>\\n  </div>\\n  <mat-list>\\n    <mat-list-item *ngFor=\\\"let clientNote of clientNotes; let i=index;\\\">\\n      <fa-icon icon=\\\"sticky-note\\\" matListIcon></fa-icon>\\n      <h3 matLine>{{clientNote.note}} </h3>\\n      <p matLine>\\n        <span>Created by: {{clientNote.createdByUsername}}</span><br />\\n        <span>Date: {{clientNote.createdOn | date}}</span>\\n      </p>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"flex-start\\\">\\n        <button mat-button color=\\\"primary\\\" (click)=\\\"editNote(clientNote.id,clientNote.note,i)\\\">\\n          <fa-icon icon=\\\"edit\\\"></fa-icon>\\n        </button>\\n        <button mat-button color=\\\"warn\\\" (click)=\\\"deleteNote(clientNote.id,i)\\\">\\n          <fa-icon icon=\\\"trash\\\"></fa-icon>\\n        </button>\\n      </div>\\n    </mat-list-item>\\n  </mat-list>\\n</div>\"","module.exports = \".tab-container {\\n  padding: 1%;\\n  margin: 1%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2dyb3Vwcy9ncm91cHMtdmlldy9ub3Rlcy10YWIvbm90ZXMtdGFiLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVztFQUNYLFVBQVUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2dyb3Vwcy9ncm91cHMtdmlldy9ub3Rlcy10YWIvbm90ZXMtdGFiLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhYi1jb250YWluZXJ7XG4gICAgcGFkZGluZzogMSU7XG4gICAgbWFyZ2luOiAxJTtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mifosx-notes-tab',\n  templateUrl: './notes-tab.component.html',\n  styleUrls: ['./notes-tab.component.scss']\n})\nexport class NotesTabComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-t-40 m-b-40\\\">\\n\\n    <mat-form-field class=\\\"filter\\\">\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n    </mat-form-field>\\n  \\n    <div class=\\\"mat-elevation-z8\\\">\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n  \\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"name\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header='name'> Name </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row?.name}} </td>\\n        </ng-container>\\n  \\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"accountno\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header='accountno'> Account # </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row?.accountNo}} </td>\\n        </ng-container>\\n  \\n        <!-- Account no Column -->\\n        <ng-container matColumnDef=\\\"externalid\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header='externalid'> ExternalID </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row?.externalId}} </td>\\n        </ng-container>\\n  \\n        <!-- External ID Column -->\\n        <ng-container matColumnDef=\\\"status\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header='status'> Status </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> <div [className]=\\\"row.active === true ? 'active' : 'inactive'\\\">\\n              <i class=\\\"fa fa-users fa-2x\\\"> </i>\\n          </div> </td>\\n          \\n        </ng-container>\\n  \\n        <!-- Status Column -->\\n        <ng-container matColumnDef=\\\"office\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header='office'> Office </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row?.officeName}} </td>\\n        </ng-container>\\n  \\n  \\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" routerLink=\\\"/groups/groupId/general\\\">\\n           \\n        </tr>\\n      </table>\\n  \\n      <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\n    </div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd, th {\\n  width: 15%; }\\n\\n.filter {\\n  width: 50%; }\\n\\n.inactive {\\n  color: red; }\\n\\n.active {\\n  color: green; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2dyb3Vwcy9ncm91cHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0U7RUFDRSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxlQUFlO0VBQ2YsV0FBVyxFQUFBOztBQUdiO0VBQ0UsVUFBVSxFQUFBOztBQUdaO0VBQ0UsVUFBVSxFQUFBOztBQUdaO0VBQ0UsVUFBVSxFQUFBOztBQUdaO0VBQ0UsWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZ3JvdXBzL2dyb3Vwcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuICB0YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgXG4gIC5tYXQtZm9ybS1maWVsZCB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICB0ZCwgdGgge1xuICAgIHdpZHRoOiAxNSU7XG4gIH1cbiAgXG4gIC5maWx0ZXJ7XG4gICAgd2lkdGg6IDUwJTtcbiAgfVxuICBcbiAgLmluYWN0aXZlIHtcbiAgICBjb2xvcjogcmVkO1xuICB9XG4gIFxuICAuYWN0aXZlIHtcbiAgICBjb2xvcjogZ3JlZW47XG4gIH1cbiAgXG4gICJdfQ== */\"","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport { GroupsService } from './groups.service';\nimport {DataSource} from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'mifosx-app-groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.scss']\n})\nexport class GroupsComponent implements OnInit {\n\n  private ELEMENT_DATA: any = undefined;\n  displayedColumns =  ['name', 'accountno', 'externalid', 'status', 'office'];\n  dataSource = new MatTableDataSource();\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(private groupService: GroupsService) { }\n\n  ngOnInit() {\n      this.groupService.getGroups()\n      .subscribe(\n        (res => {\n         console.log(res);\n        // console.log(res.active);\n         res.active = !!res.active;\n         this.dataSource = new MatTableDataSource(res);\n         this.dataSource.paginator = this.paginator;\n         this.dataSource.sort = this.sort;\n        })\n      );\n  }\n\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n","import { NgModule,  CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '../core/core.module';\nimport { MatTableModule } from '@angular/material/table';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { GroupsComponent } from './groups.component';\nimport { GroupsRoutingModule } from './groups-routing.module';\nimport { GroupsService } from './groups.service';\nimport { GroupsViewComponent } from './groups-view/groups-view.component';\nimport { GeneralTabComponent } from './groups-view/general-tab/general-tab.component';\nimport { CommitteeTabComponent } from './groups-view/committee-tab/committee-tab.component';\nimport { NotesTabComponent } from './groups-view/notes-tab/notes-tab.component';\nimport { EditGroupComponent } from './groups-view/edit-group/edit-group.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    GroupsRoutingModule,\n    CoreModule,\n    MatTableModule,\n    FlexLayoutModule\n  ],\n  declarations: [GroupsComponent,\n    GroupsViewComponent,\n    GeneralTabComponent,\n    CommitteeTabComponent,\n    NotesTabComponent,\n    EditGroupComponent],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class GroupsModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n  })\n\n\nexport class GroupsService {\n    constructor(private http: HttpClient) { }\n\n    getGroups(): Observable<any> {\n        return  this.http.get('/groups');\n    }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <p>\\n    TODO: dashboard component.\\n  </p>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyJ9 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\n\n/**\n * Dashboard component.\n */\n@Component({\n  selector: 'mifosx-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() {  }\n\n  ngOnInit() {\n  }\n\n}\n\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/** Routing Imports */\nimport { Route } from '../core/route/route.service';\n\n/** Translation Imports */\nimport { extract } from '../core/i18n/i18n.service';\n\n/** Custom Components */\nimport { HomeComponent } from './home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n/** Home and Dashboard Routes */\nconst routes: Routes = [\n  Route.withShell([\n    {\n      path: '',\n      redirectTo: '/home',\n      pathMatch: 'full'\n    },\n    {\n      path: 'home',\n      component: HomeComponent,\n      data: { title: extract('Home') }\n    },\n    {\n      path: 'dashboard',\n      component: DashboardComponent,\n      data: { title: extract('Dashboard'), breadcrumb: 'Dashboard' }\n    }\n  ])\n];\n\n/**\n * Home Routing Module\n *\n * Configures the home and dashboard routes.\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class HomeRoutingModule { }\n","module.exports = \"<div fxLayput=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" class=\\\"container m-b-20\\\">\\n\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/dashboard']\\\">\\n    <fa-icon icon=\\\"tachometer-alt\\\"></fa-icon>&nbsp;&nbsp;\\n    Dashboard\\n  </button>\\n\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-header>\\n      <mat-card-title class=\\\"title\\\">\\n        Welcome, {{ username }}!\\n      </mat-card-title>\\n    </mat-card-header>\\n\\n    <img mat-card-image src=\\\"assets/images/FinOS.svg\\\" style=\\\"display: block;\\n    margin-left:auto;\\n    margin-right: auto;\\n    width:50%;\\\" alt=\\\"Finos\\\"> \\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n  .container .title {\\n    font-size: 1.25rem;\\n    font-weight: 500; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQixFQUFBO0VBRGxCO0lBSUksa0JBQWtCO0lBQ2xCLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMzdyZW07XG5cbiAgLnRpdGxlIHtcbiAgICBmb250LXNpemU6IDEuMjVyZW07XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgfVxufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\n\n/** Custom Services */\nimport { AuthenticationService } from '../core/authentication/authentication.service';\n\n/**\n * Home component.\n */\n@Component({\n  selector: 'mifosx-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  /** Username of authenticated user. */\n  username: string;\n\n  /**\n   * @param {AuthenticationService} authenticationService Authentication Service.\n   */\n  constructor(private authenticationService: AuthenticationService) { }\n\n  /**\n   * Sets the username of the authenticated user.\n   */\n  ngOnInit() {\n    const credentials = this.authenticationService.getCredentials();\n    this.username = credentials.username;\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\n\n/** Custom Modules */\nimport { SharedModule } from '../shared/shared.module';\nimport { HomeRoutingModule } from './home-routing.module';\n\n/** Custom Components */\nimport { HomeComponent } from './home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n/**\n * Home Component\n *\n * Home and dashboard components should be declared here.\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    HomeRoutingModule\n  ],\n  declarations: [\n    HomeComponent,\n    DashboardComponent\n  ]\n})\nexport class HomeModule { }\n","module.exports = \"<form fxLayout=\\\"column\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\" id=\\\"login-form\\\">\\n  <mat-form-field fxFlexAlign=\\\"center\\\" class=\\\"login-input\\\">\\n    <span matPrefix>\\n      <fa-icon icon=\\\"user-circle\\\" size=\\\"lg\\\"></fa-icon>&nbsp;&nbsp;\\n    </span>\\n    <mat-label>Username</mat-label>\\n    <input matInput type=\\\"text\\\" autocomplete=\\\"off\\\" formControlName=\\\"username\\\">\\n    <mat-error *ngIf=\\\"loginForm.controls.username.hasError('required')\\\">\\n      Username is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlexAlign=\\\"center\\\" class=\\\"login-input\\\">\\n    <span matPrefix>\\n      <fa-icon icon=\\\"lock\\\" size=\\\"lg\\\"></fa-icon>&nbsp;&nbsp;\\n    </span>\\n    <mat-label>Password</mat-label>\\n    <input matInput type=\\\"{{ passwordInputType }}\\\" formControlName=\\\"password\\\">\\n    <button mat-button *ngIf=\\\"loginForm.controls.password.value && !loading\\\" matSuffix mat-icon-button\\n      (mousedown)=\\\"passwordInputType = 'text'\\\" (mouseup)=\\\"passwordInputType = 'password'\\\">\\n      <fa-icon *ngIf=\\\"passwordInputType === 'password'\\\" icon=\\\"eye\\\"></fa-icon>\\n      <fa-icon *ngIf=\\\"passwordInputType === 'text'\\\" icon=\\\"eye-slash\\\"></fa-icon>\\n    </button>\\n    <mat-error *ngIf=\\\"loginForm.controls.password.hasError('required')\\\">\\n      Password is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-checkbox fxFlexAlign=\\\"center\\\" formControlName=\\\"remember\\\" class=\\\"m-t-10\\\">Remember me</mat-checkbox>\\n\\n  <button mat-raised-button color=\\\"primary\\\" fxFlexAlign=\\\"center\\\" class=\\\"login-button\\\" >\\n    Login\\n    <mat-spinner [diameter]=\\\"20\\\" *ngIf=\\\"loading\\\"></mat-spinner>\\n  </button>\\n\\n <!-- <button type=\\\"button\\\" mat-button fxFlexAlign=\\\"center\\\" class=\\\"login-button\\\" (click)=\\\"forgotPassword()\\\" [disabled]=\\\"loading\\\">\\n    Forgot Password?\\n  </button> -->\\n\\n</form>\\n\"","module.exports = \"#login-form .login-input {\\n  width: 14rem;\\n  margin-bottom: 0.6rem; }\\n\\n#login-form .login-button {\\n  width: 14rem;\\n  margin-top: 1rem;\\n  transition: 3s; }\\n\\n#login-form mat-spinner {\\n  float: right;\\n  margin: 0.5rem 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2xvZ2luL2xvZ2luLWZvcm0vbG9naW4tZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLFlBQVk7RUFDWixxQkFBcUIsRUFBQTs7QUFIekI7RUFPSSxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLGNBQWMsRUFBQTs7QUFUbEI7RUFhSSxZQUFZO0VBQ1osZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi1mb3JtL2xvZ2luLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjbG9naW4tZm9ybSB7XG4gIC5sb2dpbi1pbnB1dCB7XG4gICAgd2lkdGg6IDE0cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDAuNnJlbTtcbiAgfVxuXG4gIC5sb2dpbi1idXR0b24ge1xuICAgIHdpZHRoOiAxNHJlbTtcbiAgICBtYXJnaW4tdG9wOiAxcmVtO1xuICAgIHRyYW5zaXRpb246IDNzO1xuICB9XG5cbiAgbWF0LXNwaW5uZXIge1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBtYXJnaW46IDAuNXJlbSAwO1xuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n/** rxjs Imports */\nimport { finalize } from 'rxjs/operators';\n\n/** Custom Services */\nimport { AuthenticationService } from '../../core/authentication/authentication.service';\n\n/**\n * Login form component.\n */\n@Component({\n  selector: 'mifosx-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss']\n})\nexport class LoginFormComponent implements OnInit {\n\n  /** Login form group. */\n  loginForm: FormGroup;\n  /** Password input field type. */\n  passwordInputType: string;\n  /** True if loading. */\n  loading = false;\n\n  /**\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {AuthenticationService} authenticationService Authentication Service.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private authenticationService: AuthenticationService) {  }\n\n  /**\n   * Creates login form.\n   *\n   * Initializes password input field type.\n   */\n  ngOnInit() {\n    this.createLoginForm();\n    this.passwordInputType = 'password';\n  }\n\n  /**\n   * Authenticates the user if the credentials are valid.\n   */\n  login() {\n    this.loading = true;\n    this.loginForm.disable();\n    this.authenticationService.login(this.loginForm.value)\n      .pipe(finalize(() => {\n        this.loginForm.reset();\n        this.loginForm.markAsPristine();\n        // Angular Material Bug: Validation errors won't get removed on reset.\n        this.loginForm.enable();\n        this.loading = false;\n      })).subscribe();\n  }\n\n  /**\n   * TODO: Decision to be taken on providing this feature.\n   */\n  forgotPassword() {\n    console.log('Forgot Password feature currently unavailable.');\n  }\n\n  /**\n   * Creates login form.\n   */\n  private createLoginForm() {\n    this.loginForm = this.formBuilder.group({\n      'username': ['', Validators.required],\n      'password': ['', Validators.required],\n      'remember': false\n    });\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/** Transalation Imports */\nimport { extract } from '../core/i18n/i18n.service';\n\n/** Custom Components */\nimport { LoginComponent } from './login.component';\n\n/** Login Routes */\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent,\n    data: { title: extract('Login') }\n  }\n];\n\n/**\n * Login Routing Module\n *\n * Configures the login routes.\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class LoginRoutingModule { }\n","module.exports = \"<!-- The viewport is divided into two parts having max-width 70% and 30% -->\\n<div fxLayout=\\\"row\\\">\\n  \\n\\n  <!--\\n    Content in 70%: (TODO: Allow customization by organization)\\n      Cover Image\\n      Organization/Application Name\\n      Organization/Application Description\\n\\n    This content will be hidden for smaller screens.\\n  -->\\n\\n  <div fxFlex=\\\"70%\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxHide.lt-md class=\\\"cover\\\">\\n    <div class=\\\"cover-content\\\">\\n    <!--  <h1 class=\\\"mat-display-1 cover-title\\\">Mifos</h1>\\n      <p class=\\\"mat-headline cover-description\\\">\\n        Mifos X is designed by the <a href=\\\"http://www.openmf.org\\\" target=\\\"_blank\\\" class=\\\"cover-link\\\">Mifos Initiative</a>. A <a href=\\\"http://mifos.org/resources/community/\\\" target=\\\"_blank\\\" class=\\\"cover-link\\\">global community</a> that aims to speed the elimination of poverty by enabling Organizations to more effectively and efficiently deliver responsible financial services to the world’s poor and unbanked.\\n        Sounds interesting? <a href=\\\"http://mifos.org/take-action/volunteer/\\\" target=\\\"_blank\\\" class=\\\"cover-link\\\">Get involved!</a>\\n      </p> -->\\n    </div>\\n  </div> \\n\\n  <!--\\n    Content in 30%: (TODO: Allow customization of Name, Logo and Contact Information by organization)\\n      Language Selector\\n      Organization/Application Name with Logo\\n      Form\\n      Contact Information/Resources\\n      Footer\\n  -->\\n  \\n  <div fxLayout=\\\"column\\\" fxFlex.gt-md=\\\"1 0 30%\\\" class=\\\"login-container\\\">\\n    <br> <br> <br> <br> <br> \\n    <P></P>\\n\\n    <!-- Language Selector to the extreme right -->\\n   <!-- <div fxLayout=\\\"row-reverse\\\" fxFlex=\\\"1 0 auto\\\">\\n      <mifosx-language-selector class=\\\"p-r-10 p-t-10\\\"></mifosx-language-selector>\\n    </div> -->\\n\\n    <!-- Logo with Organization Name -->\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"1 0 auto\\\">\\n      <img src=\\\"assets/images/finos-large-logo.png\\\" alt=\\\"Mifos X Logo\\\" class=\\\"img-container\\\">\\n    </div> \\n\\n    <!--\\n      Type of Form:\\n        Login\\n        Reset Password\\n        Two Factor Authentication\\n        Forgot Password (TODO: Decision to be taken on providing this feature.)\\n    -->\\n    <div fxLayout=\\\"row\\\" fxFlex=\\\"3 0 auto\\\" fxLayoutAlign=\\\"center start\\\">\\n      <mifosx-login-form *ngIf=\\\"!resetPassword && !twoFactorAuthenticationRequired\\\"></mifosx-login-form>\\n      <mifosx-reset-password *ngIf=\\\"resetPassword\\\"></mifosx-reset-password>\\n      <mifosx-two-factor-authentication *ngIf=\\\"twoFactorAuthenticationRequired\\\"></mifosx-two-factor-authentication>\\n    </div>\\n\\n    <!-- Contact Information/Resources (hidden on smaller screens) -->\\n   <!-- <mat-list fxHide.lt-lg fxLayout=\\\"row\\\" fxFlexAlign=\\\"center\\\" fxFlex=\\\"3 0 auto\\\" class=\\\"information-list\\\">\\n      <mat-list-item><button mat-button [matMenuTriggerFor]=\\\"resourcesMenu\\\">Resources</button></mat-list-item>\\n      <mat-list-item><button mat-button [matMenuTriggerFor]=\\\"communityMenu\\\">Community</button></mat-list-item>\\n      <mat-list-item><button mat-button [matMenuTriggerFor]=\\\"contributeMenu\\\">Contribute</button></mat-list-item>\\n    </mat-list> -->\\n\\n    <!-- Footer -->\\n    <mifosx-footer></mifosx-footer>\\n\\n  </div>\\n\\n</div>\\n\\n<!-- Contact Information/Resources Menus -->\\n<!-- <mat-menu #resourcesMenu=\\\"matMenu\\\">\\n  <a href=\\\"https://mifosforge.jira.com/wiki/spaces/docs/pages/52035622/User+Manual\\\" target=\\\"_blank\\\" mat-menu-item>User Manual</a>\\n  <a href=\\\"https://cwiki.apache.org/confluence/display/FINERACT/Apache+Fineract+1.0+Functional+Specifications\\\" target=\\\"_blank\\\" mat-menu-item>Functional Specifications</a>\\n  <a href=\\\"https://cwiki.apache.org/confluence/display/FINERACT/Contributor%27s+Zone\\\" target=\\\"_blank\\\" mat-menu-item>Developer Zone</a>\\n</mat-menu>\\n\\n<mat-menu #communityMenu=\\\"matMenu\\\">\\n  <a href=\\\"https://groups.google.com/forum/#!forum/mifosusers\\\" target=\\\"_blank\\\" mat-menu-item>User Group</a>\\n  <a href=\\\"https://groups.google.com/forum/#!forum/mifosdeveloper\\\" target=\\\"_blank\\\" mat-menu-item>Developer Group</a>\\n  <a href=\\\"http://mifos.org/resources/community/communications/#mifos-irc\\\" target=\\\"_blank\\\" mat-menu-item>IRC</a>\\n</mat-menu>\\n\\n<mat-menu #contributeMenu=\\\"matMenu\\\">\\n  <a href=\\\"https://mifosforge.jira.com/wiki/spaces/MDZ/pages/92012624/Key+Design+Principles\\\" target=\\\"_blank\\\" mat-menu-item>Key Design Principles</a>\\n  <a href=\\\"https://sourceforge.net/projects/mifos/\\\" target=\\\"_blank\\\" mat-menu-item>Working with Code</a>\\n  <a href=\\\"http://mifos.org/donate/\\\" target=\\\"_blank\\\" mat-menu-item>Donate</a>\\n</mat-menu> -->\\n\"","module.exports = \".cover {\\n  background: url('new.jpg');\\n  background-size: cover;\\n  position: relative;\\n  z-index: 0;\\n  max-width: 70vw;\\n  background-repeat: no-repeat;\\n  background-size: 790px 540px;\\n  background-position: 50% 50%; }\\n  .cover::after {\\n    content: \\\"\\\";\\n    opacity: 0.1;\\n    background: linear-gradient(#000, #000);\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n    display: block;\\n    z-index: 1;\\n    position: absolute; }\\n  .cover .cover-content {\\n    max-width: 80%;\\n    margin: 100px;\\n    color: #fff;\\n    text-align: justify;\\n    z-index: 2; }\\n  .cover .cover-content .cover-title {\\n      border-bottom: 2px solid #fff;\\n      margin: 0 0 20px;\\n      padding-bottom: 10px; }\\n  .cover .cover-content .cover-description .cover-link {\\n      color: #fff; }\\n  .cover .cover-content .cover-description .cover-link:hover {\\n        color: #d3d3d3; }\\n  .login-container {\\n  box-shadow: 1px 1px 50px #000;\\n  height: 100vh;\\n  overflow: auto; }\\n  .login-container .img-container {\\n    max-width: 18rem;\\n    display: block;\\n    margin-left: auto;\\n    margin-right: auto;\\n    width: 50%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsMEJBQThDO0VBQzlDLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLGVBQWU7RUFDZiw0QkFBNEI7RUFDNUIsNEJBQTRCO0VBQzVCLDRCQUEyQixFQUFBO0VBUjdCO0lBV0ksV0FBVztJQUNYLFlBQVk7SUFDWix1Q0FBdUM7SUFDdkMsV0FBVztJQUNYLFlBQVk7SUFDWixNQUFNO0lBQ04sT0FBTztJQUNQLGNBQWM7SUFDZCxVQUFVO0lBQ1Ysa0JBQWtCLEVBQUE7RUFwQnRCO0lBeUJJLGNBQWM7SUFDZCxhQUFhO0lBQ2IsV0FBVztJQUNYLG1CQUFtQjtJQUNuQixVQUFVLEVBQUE7RUE3QmQ7TUFnQ00sNkJBQTZCO01BQzdCLGdCQUFnQjtNQUNoQixvQkFBb0IsRUFBQTtFQWxDMUI7TUF3Q1EsV0FBVyxFQUFBO0VBeENuQjtRQTJDVSxjQUFjLEVBQUE7RUFPeEI7RUFDRSw2QkFBNkI7RUFDN0IsYUFBYTtFQUNiLGNBQWMsRUFBQTtFQUhoQjtJQU1JLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsaUJBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixVQUFTLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb3ZlciB7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uLy4uL2Fzc2V0cy9pbWFnZXMvbmV3LmpwZ1wiKTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAwO1xuICBtYXgtd2lkdGg6IDcwdnc7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogNzkwcHggNTQwcHg7XG4gIGJhY2tncm91bmQtcG9zaXRpb246NTAlIDUwJTtcblxuICAmOjphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBvcGFjaXR5OiAwLjE7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCMwMDAsICMwMDApO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB6LWluZGV4OiAxO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgfVxuXG4gIC5jb3Zlci1jb250ZW50IHtcbiAgICAvL2Rpc3BsYXk6IGJsb2NrO1xuICAgIG1heC13aWR0aDogODAlO1xuICAgIG1hcmdpbjogMTAwcHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgdGV4dC1hbGlnbjoganVzdGlmeTtcbiAgICB6LWluZGV4OiAyO1xuXG4gICAgLmNvdmVyLXRpdGxlIHtcbiAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZmZmO1xuICAgICAgbWFyZ2luOiAwIDAgMjBweDtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgIH1cblxuICAgIC5jb3Zlci1kZXNjcmlwdGlvbiB7XG4gICAgICAuY292ZXItbGluayB7XG4gICAgICAgLy8gdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIGNvbG9yOiAjZDNkM2QzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi5sb2dpbi1jb250YWluZXIge1xuICBib3gtc2hhZG93OiAxcHggMXB4IDUwcHggIzAwMDtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgb3ZlcmZsb3c6IGF1dG87XG5cbiAgLmltZy1jb250YWluZXIge1xuICAgIG1heC13aWR0aDogMThyZW07XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLWxlZnQ6YXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgd2lkdGg6NTAlO1xuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/** rxjs Imports */\nimport { Subscription } from 'rxjs';\n\n/** Custom Models */\nimport { Alert } from '../core/alert/alert.model';\n\n/** Custom Services */\nimport { AlertService } from '../core/alert/alert.service';\n\n/**\n * Login component.\n */\n@Component({\n  selector: 'mifosx-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n  /** True if password requires a reset. */\n  resetPassword = false;\n  /** True if user requires two factor authentication. */\n  twoFactorAuthenticationRequired = false;\n  /** Subscription to alerts. */\n  alert$: Subscription;\n\n  /**\n   * @param {AlertService} alertService Alert Service.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private alertService: AlertService,\n              private router: Router) { }\n\n  /**\n   * Subscribes to alert event of alert service.\n   */\n  ngOnInit() {\n    this.alert$ = this.alertService.alertEvent.subscribe((alertEvent: Alert) => {\n      const alertType = alertEvent.type;\n      if (alertType === 'Password Expired') {\n        this.twoFactorAuthenticationRequired = false;\n        this.resetPassword = true;\n      } else if (alertType === 'Two Factor Authentication Required') {\n        this.resetPassword = false;\n        this.twoFactorAuthenticationRequired = true;\n      } else if (alertType === 'Authentication Success') {\n        this.resetPassword = false;\n        this.twoFactorAuthenticationRequired = false;\n        this.router.navigate(['/'], { replaceUrl: true });\n      }\n    });\n  }\n\n  /**\n   * Unsubscribes from alerts.\n   */\n  ngOnDestroy() {\n    this.alert$.unsubscribe();\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\n\n/** Custom Modules */\nimport { SharedModule } from '../shared/shared.module';\nimport { LoginRoutingModule } from './login-routing.module';\n\n/** Custom Components */\nimport { LoginComponent } from './login.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { TwoFactorAuthenticationComponent } from './two-factor-authentication/two-factor-authentication.component';\n\n/**\n * Login Module\n *\n * All components related to user authentication should be declared here.\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    LoginRoutingModule\n  ],\n  declarations: [\n    LoginComponent,\n    LoginFormComponent,\n    ResetPasswordComponent,\n    TwoFactorAuthenticationComponent\n  ]\n})\nexport class LoginModule { }\n","/** Angular Imports */\nimport { FormGroup, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n/** Validates that the values of password and confirm password are same. */\nexport const confirmPasswordValidator: ValidatorFn = (resetPasswordForm: FormGroup): ValidationErrors | null => {\n  const password = resetPasswordForm.get('password');\n  const confirmPassword = resetPasswordForm.get('repeatPassword');\n  return password && confirmPassword && password.value !== confirmPassword.value ?  { 'passwordsDoNotMatch': true } : null;\n};\n","module.exports = \"<p>Please update your password:</p>\\n\\n<mat-divider></mat-divider>\\n\\n<form fxLayout=\\\"column\\\" [formGroup]=\\\"resetPasswordForm\\\" (ngSubmit)=\\\"resetPassword()\\\" id=\\\"reset-password-form\\\">\\n\\n  <mat-form-field fxFlexAlign=\\\"center\\\" class=\\\"reset-password-input\\\">\\n    <span matPrefix>\\n      <fa-icon icon=\\\"lock\\\" size=\\\"lg\\\"></fa-icon>&nbsp;&nbsp;\\n    </span>\\n    <mat-label>Password</mat-label>\\n    <input type=\\\"{{ passwordInputType }}\\\" matInput required formControlName=\\\"password\\\">\\n    <button mat-button *ngIf=\\\"resetPasswordForm.controls.password.value && !loading\\\" matSuffix mat-icon-button\\n      (mousedown)=\\\"passwordInputType = 'text'\\\" (mouseup)=\\\"passwordInputType = 'password'\\\">\\n      <fa-icon *ngIf=\\\"passwordInputType === 'password'\\\" icon=\\\"eye\\\"></fa-icon>\\n      <fa-icon *ngIf=\\\"passwordInputType === 'text'\\\" icon=\\\"eye-slash\\\"></fa-icon>\\n    </button>\\n    <mat-error *ngIf=\\\"resetPasswordForm.controls.password.hasError('required')\\\">\\n      Password is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlexAlign=\\\"center\\\" class=\\\"reset-password-input\\\">\\n    <span matPrefix>\\n      <fa-icon icon=\\\"check-circle\\\" size=\\\"lg\\\"></fa-icon>&nbsp;&nbsp;\\n    </span>\\n    <mat-label>Confirm Password</mat-label>\\n    <input type=\\\"password\\\" matInput required formControlName=\\\"repeatPassword\\\">\\n    <mat-error *ngIf=\\\"resetPasswordForm.controls.repeatPassword.hasError('required')\\\">\\n      Confirm Password is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <p class=\\\"reset-password-error\\\" *ngIf=\\\"resetPasswordForm.errors?.passwordsDoNotMatch &&\\n    (!resetPasswordForm.controls.password.hasError('required') && !resetPasswordForm.controls.repeatPassword.hasError('required'))\\\">\\n    Passwords <strong>do not match</strong>\\n  </p>\\n\\n  <button mat-raised-button color=\\\"primary\\\" fxFlexAlign=\\\"center\\\" class=\\\"reset-password-button\\\" [disabled]=\\\"!resetPasswordForm.valid\\\">\\n    Reset Password\\n    <mat-spinner [diameter]=\\\"20\\\" *ngIf=\\\"loading\\\"></mat-spinner>\\n  </button>\\n\\n</form>\\n\"","module.exports = \"#reset-password-form .reset-password-input {\\n  width: 14rem;\\n  margin-top: 0.6rem; }\\n\\n#reset-password-form .reset-password-button {\\n  width: 14rem;\\n  margin-top: 1rem; }\\n\\n#reset-password-form .reset-password-error {\\n  color: #f44336;\\n  font-size: 80%;\\n  margin: 0; }\\n\\n#reset-password-form mat-spinner {\\n  float: right;\\n  margin: 0.5rem 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2xvZ2luL3Jlc2V0LXBhc3N3b3JkL3Jlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksWUFBWTtFQUNaLGtCQUFrQixFQUFBOztBQUh0QjtFQU9JLFlBQVk7RUFDWixnQkFBZ0IsRUFBQTs7QUFScEI7RUFZSSxjQUFjO0VBQ2QsY0FBYztFQUNkLFNBQVMsRUFBQTs7QUFkYjtFQWtCSSxZQUFZO0VBQ1osZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9yZXNldC1wYXNzd29yZC9yZXNldC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNyZXNldC1wYXNzd29yZC1mb3JtIHtcbiAgLnJlc2V0LXBhc3N3b3JkLWlucHV0IHtcbiAgICB3aWR0aDogMTRyZW07XG4gICAgbWFyZ2luLXRvcDogMC42cmVtO1xuICB9XG5cbiAgLnJlc2V0LXBhc3N3b3JkLWJ1dHRvbiB7XG4gICAgd2lkdGg6IDE0cmVtO1xuICAgIG1hcmdpbi10b3A6IDFyZW07XG4gIH1cblxuICAucmVzZXQtcGFzc3dvcmQtZXJyb3Ige1xuICAgIGNvbG9yOiAjZjQ0MzM2O1xuICAgIGZvbnQtc2l6ZTogODAlO1xuICAgIG1hcmdpbjogMDtcbiAgfVxuXG4gIG1hdC1zcGlubmVyIHtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgbWFyZ2luOiAwLjVyZW0gMDtcbiAgfVxufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n/** rxjs Imports */\nimport { finalize } from 'rxjs/operators';\n\n/** Custom Services */\nimport { AuthenticationService } from '../../core/authentication/authentication.service';\n\n/** Custom Validators */\nimport { confirmPasswordValidator } from './confirm-password.validator';\n\n/**\n * Reset password component.\n */\n@Component({\n  selector: 'mifosx-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  /** Reset password form group. */\n  resetPasswordForm: FormGroup;\n  /** Password input field type. */\n  passwordInputType: string;\n  /** True if loading. */\n  loading = false;\n\n  /**\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {AuthenticationService} authenticationService Authentication Service.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private authenticationService: AuthenticationService) {  }\n\n  /**\n   * Creates reset password form.\n   *\n   * Initializes password input field type.\n   */\n  ngOnInit() {\n    this.createResetPasswordForm();\n    this.passwordInputType = 'password';\n  }\n\n  /**\n   * Resets the password of user.\n   */\n  resetPassword() {\n    this.loading = true;\n    this.resetPasswordForm.disable();\n    this.authenticationService.resetPassword(this.resetPasswordForm.value)\n      .pipe(finalize(() => {\n        this.resetPasswordForm.reset();\n        this.resetPasswordForm.markAsPristine();\n        // Angular Material Bug: Validation errors won't get removed on reset.\n        this.resetPasswordForm.enable();\n        this.loading = false;\n      })).subscribe();\n  }\n\n  /**\n   * Creates reset password form.\n   */\n  private createResetPasswordForm() {\n    this.resetPasswordForm = this.formBuilder.group({\n      'password': ['', Validators.required],\n      'repeatPassword': ['', Validators.required]\n    }, { validator: confirmPasswordValidator });\n  }\n\n}\n","module.exports = \"<p><strong>Two Factor Authentication</strong></p>\\n\\n<mat-divider></mat-divider>\\n\\n<!-- Select delivery method to receive OTP -->\\n<p *ngIf=\\\"!otpRequested\\\">Please select a delivery method:</p>\\n\\n<form fxLayout=\\\"column\\\" *ngIf=\\\"!otpRequested\\\" [formGroup]=\\\"twoFactorAuthenticationDeliveryMethodForm\\\" class=\\\"two-factor-auth-form\\\"\\n  (ngSubmit)=\\\"requestOTP()\\\">\\n\\n  <mat-radio-group fxLayout=\\\"column\\\" fxFlexAlign=\\\"center\\\" formControlName=\\\"twoFactorAuthenticationDeliveryMethod\\\">\\n    <mat-radio-button *ngFor=\\\"let twoFactorAuthenticationDeliveryMethod of twoFactorAuthenticationDeliveryMethods\\\"\\n      [value]=\\\"twoFactorAuthenticationDeliveryMethod\\\">\\n        Send {{ twoFactorAuthenticationDeliveryMethod.name }} to {{ twoFactorAuthenticationDeliveryMethod.target }}\\n    </mat-radio-button>\\n  </mat-radio-group>\\n\\n  <button mat-raised-button color=\\\"primary\\\" fxFlexAlign=\\\"center\\\" fxFlexFill [disabled]=\\\"!twoFactorAuthenticationDeliveryMethodForm.valid\\\">\\n    Request OTP\\n    <mat-spinner [diameter]=\\\"20\\\" *ngIf=\\\"loading\\\"></mat-spinner>\\n  </button>\\n\\n</form>\\n\\n<!-- Show input for OTP -->\\n<p *ngIf=\\\"otpRequested\\\">Please enter the OTP:</p>\\n\\n<form fxLayout=\\\"column\\\" *ngIf=\\\"otpRequested\\\" [formGroup]=\\\"twoFactorAuthenticationForm\\\" class=\\\"two-factor-auth-form\\\"\\n  (ngSubmit)=\\\"validateOTP()\\\">\\n\\n  <mat-form-field fxFlexAlign=\\\"center\\\" class=\\\"two-factor-auth-input\\\">\\n    <span matPrefix>\\n      <fa-icon icon=\\\"user-shield\\\"></fa-icon>&nbsp;&nbsp;\\n    </span>\\n    <mat-label>OTP</mat-label>\\n    <input type=\\\"password\\\" matInput autocomplete=\\\"off\\\" required formControlName=\\\"otp\\\">\\n    <mat-hint align=\\\"start\\\">\\n      <strong>Delivery Method:</strong> {{ selectedTwoFactorAuthenticationDeliveryMethod.name }}\\n    </mat-hint>\\n    <mat-hint align=\\\"end\\\">\\n      <strong>Validity:</strong> {{ tokenValidityTime / 60 }} mins\\n    </mat-hint>\\n    <mat-error *ngIf=\\\"twoFactorAuthenticationForm.controls.otp.hasError('required')\\\">\\n      OTP is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <button mat-raised-button color=\\\"primary\\\" fxFlexAlign=\\\"center\\\" class=\\\"two-factor-auth-button\\\"\\n    [disabled]=\\\"!twoFactorAuthenticationForm.valid\\\">\\n    Validate OTP\\n    <mat-spinner [diameter]=\\\"20\\\" *ngIf=\\\"loading\\\"></mat-spinner>\\n  </button>\\n\\n  <button type=\\\"button\\\" mat-button fxFlexAlign=\\\"center\\\" class=\\\"two-factor-auth-button\\\" (click)=\\\"resendOTP()\\\"\\n    [disabled]=\\\"loading || resendOTPLoading\\\">\\n    Resend OTP\\n    <mat-spinner [diameter]=\\\"20\\\" *ngIf=\\\"resendOTPLoading\\\"></mat-spinner>\\n  </button>\\n\\n</form>\\n\"","module.exports = \".two-factor-auth-form mat-radio-button {\\n  margin-bottom: 0.5rem; }\\n  .two-factor-auth-form mat-radio-button:last-child {\\n    margin-bottom: 1rem; }\\n  .two-factor-auth-form .two-factor-auth-button {\\n  width: 14rem;\\n  margin-top: 0.5rem; }\\n  .two-factor-auth-form .two-factor-auth-input {\\n  width: 14rem; }\\n  .two-factor-auth-form mat-spinner {\\n  float: right;\\n  margin: 0.5rem 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL2xvZ2luL3R3by1mYWN0b3ItYXV0aGVudGljYXRpb24vdHdvLWZhY3Rvci1hdXRoZW50aWNhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLHFCQUFxQixFQUFBO0VBRnpCO0lBS00sbUJBQW1CLEVBQUE7RUFMekI7RUFVSSxZQUFZO0VBQ1osa0JBQWtCLEVBQUE7RUFYdEI7RUFlSSxZQUFZLEVBQUE7RUFmaEI7RUFtQkksWUFBWTtFQUNaLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vdHdvLWZhY3Rvci1hdXRoZW50aWNhdGlvbi90d28tZmFjdG9yLWF1dGhlbnRpY2F0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnR3by1mYWN0b3ItYXV0aC1mb3JtIHtcbiAgbWF0LXJhZGlvLWJ1dHRvbiB7XG4gICAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xuXG4gICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgfVxuICB9XG5cbiAgLnR3by1mYWN0b3ItYXV0aC1idXR0b24ge1xuICAgIHdpZHRoOiAxNHJlbTtcbiAgICBtYXJnaW4tdG9wOiAwLjVyZW07XG4gIH1cblxuICAudHdvLWZhY3Rvci1hdXRoLWlucHV0IHtcbiAgICB3aWR0aDogMTRyZW07XG4gIH1cblxuICBtYXQtc3Bpbm5lciB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIG1hcmdpbjogMC41cmVtIDA7XG4gIH1cbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n/** rxjs Imports */\nimport { finalize } from 'rxjs/operators';\n\n/** Custom Services */\nimport { AuthenticationService } from '../../core/authentication/authentication.service';\n\n/**\n * Two factor authentication component.\n */\n@Component({\n  selector: 'mifosx-two-factor-authentication',\n  templateUrl: './two-factor-authentication.component.html',\n  styleUrls: ['./two-factor-authentication.component.scss']\n})\nexport class TwoFactorAuthenticationComponent implements OnInit {\n\n  /** Available delivery methods to receive OTP. */\n  twoFactorAuthenticationDeliveryMethods: any;\n  /** Delivery method selected to receive OTP. */\n  selectedTwoFactorAuthenticationDeliveryMethod: any;\n  /** True if OTP is requested. */\n  otpRequested = false;\n  /** Time for which OTP is valid. */\n  tokenValidityTime: number;\n  /** Two factor authentication delivery method form group. */\n  twoFactorAuthenticationDeliveryMethodForm: FormGroup;\n  /** Two factor authentication form group. */\n  twoFactorAuthenticationForm: FormGroup;\n  /** True if loading. */\n  loading = false;\n  /** True if loading. */\n  resendOTPLoading = false;\n\n  /**\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {AuthenticationService} authenticationService Authentication Service.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private authenticationService: AuthenticationService) {  }\n\n  /**\n   * Creates two factor authentication delivery method form.\n   *\n   * Gets the delivery methods available to receive OTP.\n   */\n  ngOnInit() {\n    this.createTwoFactorAuthenticationDeliveryMethodForm();\n    this.authenticationService.getDeliveryMethods()\n      .subscribe((deliveryMethods: any) => {\n        this.twoFactorAuthenticationDeliveryMethods = deliveryMethods;\n      });\n  }\n\n  /**\n   * Requests OTP via the selected delivery method.\n   */\n  requestOTP() {\n    this.loading = true;\n    this.twoFactorAuthenticationDeliveryMethodForm.disable();\n    this.selectedTwoFactorAuthenticationDeliveryMethod =\n      this.twoFactorAuthenticationDeliveryMethodForm.value.twoFactorAuthenticationDeliveryMethod;\n\n    this.authenticationService.requestOTP(this.selectedTwoFactorAuthenticationDeliveryMethod)\n      .pipe(finalize(() => {\n        this.twoFactorAuthenticationDeliveryMethodForm.reset();\n        this.twoFactorAuthenticationDeliveryMethodForm.markAsPristine();\n        // Angular Material Bug: Validation errors won't get removed on reset.\n        this.twoFactorAuthenticationDeliveryMethodForm.enable();\n        this.loading = false;\n      }))\n      .subscribe((response: any) => {\n        this.createTwoFactorAuthenticationForm();\n        this.otpRequested = true;\n        this.tokenValidityTime = response.tokenLiveTimeInSec;\n      });\n  }\n\n  /**\n   * Validates the OTP and authenticates the user.\n   */\n  validateOTP() {\n    this.loading = true;\n    this.twoFactorAuthenticationForm.disable();\n    this.authenticationService.validateOTP(this.twoFactorAuthenticationForm.value.otp)\n      .pipe(finalize(() => {\n        this.twoFactorAuthenticationForm.reset();\n        this.twoFactorAuthenticationForm.markAsPristine();\n        // Angular Material Bug: Validation errors won't get removed on reset.\n        this.twoFactorAuthenticationForm.enable();\n        this.loading = false;\n      })).subscribe();\n  }\n\n  /**\n   * Resends OTP via the selected delivery method.\n   */\n  resendOTP() {\n    this.resendOTPLoading = true;\n    this.twoFactorAuthenticationForm.disable();\n    this.authenticationService.requestOTP(this.selectedTwoFactorAuthenticationDeliveryMethod)\n      .pipe(finalize(() => {\n        this.twoFactorAuthenticationForm.reset();\n        this.twoFactorAuthenticationForm.markAsPristine();\n        // Angular Material Bug: Validation errors won't get removed on reset.\n        this.twoFactorAuthenticationForm.enable();\n        this.resendOTPLoading = false;\n      })).subscribe();\n  }\n\n  /**\n   * Creates two factor authentication delivery method form.\n   */\n  private createTwoFactorAuthenticationDeliveryMethodForm() {\n    this.twoFactorAuthenticationDeliveryMethodForm = this.formBuilder.group({\n      'twoFactorAuthenticationDeliveryMethod': ['', Validators.required]\n    });\n  }\n\n  /**\n   * Creates two factor authentication form.\n   */\n  private createTwoFactorAuthenticationForm() {\n    this.twoFactorAuthenticationForm = this.formBuilder.group({\n      'otp': ['', Validators.required]\n    });\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/** Routing Imports */\nimport { Route } from '../core/route/route.service';\n\n/** Translation Imports */\nimport { extract } from '../core/i18n/i18n.service';\n\n/** Custom Components */\nimport { NavigationComponent } from './navigation.component';\n\n/** Navigation Routes */\nconst routes: Routes = [\n  Route.withShell([\n    {\n      path: 'navigation',\n      component: NavigationComponent,\n      data: { title: extract('Navigation'), breadcrumb: 'Navigation' }\n    }\n  ])\n];\n\n/**\n * Navigation Module\n *\n * Configures the navigation (by offices) routes.\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class NavigationRoutingModule { }\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <p>\\n    TODO: navigation component.\\n  </p>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmlnYXRpb24vbmF2aWdhdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\n\n/**\n * Navigation component. (by office)\n */\n@Component({\n  selector: 'mifosx-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\n\n/** Custom Modules */\nimport { SharedModule } from '../shared/shared.module';\nimport { NavigationRoutingModule } from './navigation-routing.module';\n\n/** Custom Components */\nimport { NavigationComponent } from './navigation.component';\n\n/**\n * Navigation Module\n *\n * Navigation components should be declared here.\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    NavigationRoutingModule\n  ],\n  declarations: [\n    NavigationComponent\n  ]\n})\nexport class NavigationModule { }\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { OrganizationService } from '../organization.service';\n\n/**\n * Adhoc Queries data resolver.\n */\n@Injectable()\nexport class AdhocQueriesResolver implements Resolve<Object> {\n\n  /**\n   * @param {OrganizationService} organizationService Organization service.\n   */\n  constructor(private organizationService: OrganizationService) {}\n\n  /**\n   * Returns the adhoc queries data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.organizationService.getAdhocQueries();\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create AdHoc Query\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let adhocquery\\\"> {{ adhocquery.name }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"query\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> SQL Query </th>\\n        <td mat-cell *matCellDef=\\\"let adhocquery\\\"> {{ adhocquery.query }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"tableName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Table Affected </th>\\n        <td mat-cell *matCellDef=\\\"let adhocquery\\\"> {{ adhocquery.tableName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"email\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\n        <td mat-cell *matCellDef=\\\"let adhocquery\\\"> {{ adhocquery.email }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"reportRunFrequency\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Report Run Frequency </th>\\n        <td mat-cell *matCellDef=\\\"let adhocquery\\\"> {{ adhocquery.reportRunFrequency }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"isActive\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\n        <td mat-cell *matCellDef=\\\"let adhocquery\\\">\\n          <div [className]=\\\"adhocquery.isActive === true ? 'true' : 'false'\\\">\\n            <fa-icon matTooltip=\\\"{{ adhocquery.isActive === true ? 'Active' : 'Inactive' }}\\\" matTooltipPosition=\\\"right\\\" icon=\\\"circle\\\" size=\\\"lg\\\"></fa-icon>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"createdBy\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Created By </th>\\n        <td mat-cell *matCellDef=\\\"let adhocquery\\\"> {{ adhocquery.createdBy }} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id]\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n  .true {\\n  color: #32cd32; }\\n  .false {\\n  color: #f44366; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL29yZ2FuaXphdGlvbi9hZGhvYy1xdWVyeS9hZGhvYy1xdWVyeS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTtFQURiO0lBSU0sZUFBZSxFQUFBO0VBSXJCO0VBQ0UsY0FBYyxFQUFBO0VBR2hCO0VBQ0UsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvb3JnYW5pemF0aW9uL2FkaG9jLXF1ZXJ5L2FkaG9jLXF1ZXJ5LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcblxuICAuc2VsZWN0LXJvdzpob3ZlciB7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cblxuLnRydWUge1xuICBjb2xvcjogIzMyY2QzMjtcbn1cblxuLmZhbHNlIHtcbiAgY29sb3I6ICNmNDQzNjY7XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/**\n * Adhoc Query component.\n */\n@Component({\n  selector: 'mifosx-adhoc-query',\n  templateUrl: './adhoc-query.component.html',\n  styleUrls: ['./adhoc-query.component.scss']\n})\nexport class AdhocQueryComponent implements OnInit {\n\n  /** Adhoc Queries data. */\n  adhocQueriesData: any;\n  /** Columns to be displayed in adhoc queries table. */\n  displayedColumns: string[] = ['name', 'query', 'tableName', 'email', 'reportRunFrequency', 'isActive', 'createdBy'];\n  /** Data source for adhoc queries table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for adhoc queries table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for adhoc queries table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the adhoc queries data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { adhocQueries: any }) => {\n      this.adhocQueriesData = data.adhocQueries;\n    });\n  }\n\n  /**\n   * Filters data in adhoc queries table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the adhoc queries table.\n   */\n  ngOnInit() {\n    this.setAdhocQueries();\n    this.setReportRunFrequency();\n  }\n\n  /**\n   * Sets report run frequency to its corresponding values\n   */\n  setReportRunFrequency() {\n    for (let i = 0; i < this.adhocQueriesData.length; i++) {\n      for (let j = 0; j < this.adhocQueriesData[i].reportRunFrequencies.length; j++) {\n        if (this.adhocQueriesData[i].reportRunFrequencies[j].id === this.adhocQueriesData[i].reportRunFrequency) {\n          this.adhocQueriesData[i].reportRunFrequency = this.adhocQueriesData[i].reportRunFrequencies[j].value;\n        }\n      }\n    }\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for adhoc queries table.\n   */\n  setAdhocQueries() {\n    this.dataSource = new MatTableDataSource(this.adhocQueriesData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { OrganizationService } from 'app/organization/organization.service';\n\n/**\n * Adhoc Query data resolver.\n */\n@Injectable()\nexport class AdhocQueryResolver implements Resolve<Object> {\n\n  /**\n   * @param {OrganizationService} organizationService Organization service.\n   */\n  constructor(private organizationService: OrganizationService) {}\n\n  /**\n   * Returns the adhoc query data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const adhocQueryId = route.paramMap.get('id');\n    return this.organizationService.getAdhocQuery(adhocQueryId);\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" class=\\\"container m-b-20\\\">\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteAdhocQuery()\\\">\\n    <fa-icon icon=\\\"trash\\\"></fa-icon>&nbsp;&nbsp;\\n    Delete\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-content>\\n\\n      <div fxLayout=\\\"row wrap\\\" class=\\\"content\\\">\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Name\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ adhocQueryData.name }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Query\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ adhocQueryData.query }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Table Affected\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ adhocQueryData.tableName }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\" *ngIf=\\\"adhocQueryData.reportRunFrequency\\\">\\n          Report Run Frequency\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" *ngIf=\\\"adhocQueryData.reportRunFrequency\\\">\\n          {{ adhocQueryData.reportRunFrequency }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Status\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ adhocQueryData.isActive === true ? 'Active' : 'Inactive' }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Created By\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ adhocQueryData.createdBy }}\\n        </div>\\n\\n      </div>\\n\\n    </mat-card-content>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n  .container .content div {\\n    margin: 1rem 0;\\n    word-wrap: break-word; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL29yZ2FuaXphdGlvbi9hZGhvYy1xdWVyeS92aWV3LWFkaG9jLXF1ZXJ5L3ZpZXctYWRob2MtcXVlcnkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0IsRUFBQTtFQURsQjtJQUtNLGNBQWM7SUFDZCxxQkFBcUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL29yZ2FuaXphdGlvbi9hZGhvYy1xdWVyeS92aWV3LWFkaG9jLXF1ZXJ5L3ZpZXctYWRob2MtcXVlcnkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAzN3JlbTtcblxuICAuY29udGVudCB7XG4gICAgZGl2IHtcbiAgICAgIG1hcmdpbjogMXJlbSAwO1xuICAgICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICAgIH1cbiAgfVxufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\n\n/** Custom Services */\nimport { OrganizationService } from 'app/organization/organization.service';\n\n/** Custom Components */\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\n\n/**\n * View Adhoc Query Component.\n */\n@Component({\n  selector: 'mifosx-view-adhoc-query',\n  templateUrl: './view-adhoc-query.component.html',\n  styleUrls: ['./view-adhoc-query.component.scss']\n})\nexport class ViewAdhocQueryComponent implements OnInit {\n\n  /** Adhoc query data. */\n  adhocQueryData: any;\n\n  /**\n   * Retrieves the adhoc query data from `resolve`.\n   * @param {OrganizationService} organizationService Organization Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   * @param {MatDialog} dialog Dialog reference.\n   */\n  constructor(private organizationService: OrganizationService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private dialog: MatDialog) {\n    this.route.data.subscribe((data: { adhocQuery: any }) => {\n      this.adhocQueryData = data.adhocQuery;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Deletes the adhoc query and redirects to adhoc queries.\n   */\n  deleteAdhocQuery() {\n    const deleteAdhocQueryDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `adhoc query ${this.adhocQueryData.id}` }\n    });\n    deleteAdhocQueryDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.organizationService.deleteAdhocQuery(this.adhocQueryData.id)\n        .subscribe(() => {\n          this.router.navigate(['/organization/adhoc-query']);\n        });\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Add/Edit\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency Name </th>\\n        <td mat-cell *matCellDef=\\\"let currency\\\"> {{ currency.name }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"code\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency Code </th>\\n        <td mat-cell *matCellDef=\\\"let currency\\\"> {{ currency.code }} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL29yZ2FuaXphdGlvbi9jdXJyZW5jaWVzL2N1cnJlbmNpZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9vcmdhbml6YXRpb24vY3VycmVuY2llcy9jdXJyZW5jaWVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/**\n * Currencies component.\n */\n@Component({\n  selector: 'mifosx-currencies',\n  templateUrl: './currencies.component.html',\n  styleUrls: ['./currencies.component.scss']\n})\nexport class CurrenciesComponent implements OnInit {\n\n  /** Currencies data. */\n  currenciesData: any;\n  /** Columns to be displayed in currencies table. */\n  displayedColumns: string[] = ['name', 'code'];\n  /** Data source for currencies table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for currencies table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for currencies table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the currencies data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { currencies: any }) => {\n      this.currenciesData = data.currencies.selectedCurrencyOptions;\n    });\n  }\n\n  /**\n   * Filters data in currencies table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the currencies table.\n   */\n  ngOnInit() {\n    this.setCurrencies();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for currencies table.\n   */\n  setCurrencies() {\n    this.dataSource = new MatTableDataSource(this.currenciesData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { OrganizationService } from '../organization.service';\n\n/**\n * Currencies data resolver.\n */\n@Injectable()\nexport class CurrenciesResolver implements Resolve<Object> {\n\n  /**\n   * @param {OrganizationService} organizationService Organization service.\n   */\n  constructor(private organizationService: OrganizationService) {}\n\n  /**\n   * Returns the currencies data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.organizationService.getCurrencies();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"employeeForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field>\\n            <mat-label>Office</mat-label>\\n            <mat-select required formControlName=\\\"officeId\\\">\\n              <mat-option *ngFor=\\\"let office of officeData\\\" [value]=\\\"office.id\\\">\\n                {{ office.name }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"employeeForm.controls.officeId.hasError('required')\\\">\\n              Office is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>First Name</mat-label>\\n            <input matInput required formControlName=\\\"firstname\\\">\\n            <mat-error *ngIf=\\\"employeeForm.controls.firstname.hasError('required')\\\">\\n              First Name is <strong>required</strong>\\n            </mat-error>\\n            <mat-error *ngIf=\\\"employeeForm.controls.firstname.hasError('pattern')\\\">\\n              First Name <strong>cannot</strong> begin with a special character or number\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Last Name</mat-label>\\n            <input matInput required formControlName=\\\"lastname\\\">\\n            <mat-error *ngIf=\\\"employeeForm.controls.lastname.hasError('required')\\\">\\n              Last Name is <strong>required</strong>\\n            </mat-error>\\n            <mat-error *ngIf=\\\"employeeForm.controls.lastname.hasError('pattern')\\\">\\n              Last Name <strong>cannot</strong> begin with a special character or number\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-checkbox labelPosition=\\\"before\\\" formControlName=\\\"isLoanOfficer\\\" class=\\\"loan-officer\\\">\\n            Is Loan Officer\\n          </mat-checkbox>\\n\\n          <mat-form-field>\\n            <mat-label>Mobile Number for SMS</mat-label>\\n            <input matInput formControlName=\\\"mobileNo\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Joining Date</mat-label>\\n            <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"joiningDatePicker\\\" required formControlName=\\\"joiningDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"joiningDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #joiningDatePicker></mat-datepicker>\\n            <mat-error *ngIf=\\\"employeeForm.controls.joiningDate.hasError('required')\\\">\\n              Joining Date is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!employeeForm.valid\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n.loan-officer {\\n  padding: 17.5px 0 17.5px 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL29yZ2FuaXphdGlvbi9lbXBsb3llZXMvY3JlYXRlLWVtcGxveWVlL2NyZWF0ZS1lbXBsb3llZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQixFQUFBOztBQUdsQjtFQUNFLDBCQUEwQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvb3JnYW5pemF0aW9uL2VtcGxveWVlcy9jcmVhdGUtZW1wbG95ZWUvY3JlYXRlLWVtcGxveWVlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMzdyZW07XG59XG5cbi5sb2FuLW9mZmljZXIge1xuICBwYWRkaW5nOiAxNy41cHggMCAxNy41cHggMDtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\n\n/** Custom Services */\nimport { OrganizationService } from '../../organization.service';\n\n/**\n * Create employee component.\n */\n@Component({\n  selector: 'mifosx-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.scss']\n})\nexport class CreateEmployeeComponent implements OnInit {\n\n  /** Minimum joining date allowed. */\n  minDate = new Date(2000, 0, 1);\n  /** Maximum joining date allowed. */\n  maxDate = new Date();\n  /** Employee form. */\n  employeeForm: FormGroup;\n  /** Office data. */\n  officeData: any;\n\n  /**\n   * Retrieves the offices data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {OrganizationService} organizationService Organization Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   * @param {DatePipe} datePipe Date Pipe to format date.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private organizationService: OrganizationService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private datePipe: DatePipe) {\n    this.route.data.subscribe((data: { offices: any }) => {\n      this.officeData = data.offices;\n    });\n  }\n\n  /**\n   * Creates the employee form.\n   */\n  ngOnInit() {\n    this.createEmployeeForm();\n  }\n\n  /**\n   * Creates the employee form.\n   */\n  createEmployeeForm() {\n    this.employeeForm = this.formBuilder.group({\n      'officeId': ['', Validators.required],\n      'firstname': ['', [Validators.required, Validators.pattern('(^[A-z]).*')]],\n      'lastname': ['', [Validators.required, Validators.pattern('(^[A-z]).*')]],\n      'isLoanOfficer': [false],\n      'mobileNo': [''],\n      'joiningDate': ['', Validators.required],\n    });\n  }\n\n  /**\n   * Submits the employee form and creates employee,\n   * if successful redirects to employees.\n   */\n  submit() {\n    const prevJoiningDate: Date = this.employeeForm.value.joiningDate;\n    // TODO: Update once language and date settings are setup\n    const dateFormat = 'yyyy-MM-dd';\n    this.employeeForm.patchValue({\n      joiningDate: this.datePipe.transform(prevJoiningDate, dateFormat)\n    });\n    const employee = this.employeeForm.value;\n    employee.locale = 'en';\n    employee.dateFormat = dateFormat;\n    this.organizationService.createEmployee(employee).subscribe((response: any) => {\n      this.router.navigate(['../'], { relativeTo: this.route });\n    });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { OrganizationService } from 'app/organization/organization.service';\n\n/**\n * Employee data resolver.\n */\n@Injectable()\nexport class EmployeeResolver implements Resolve<Object> {\n\n  /**\n   * @param {OrganizationService} organizationService Organization service.\n   */\n  constructor(private organizationService: OrganizationService) {}\n\n  /**\n   * Returns the employee data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const employeeId  = route.paramMap.get('id');\n    return this.organizationService.getEmployee(employeeId);\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"upload\\\"></fa-icon>&nbsp;&nbsp;\\n    Import Employees\\n  </button>\\n\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['create']\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Employee\\n  </button>\\n\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"displayName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let employee\\\"> {{ employee.displayName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"isLoanOfficer\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Loan Officer </th>\\n        <td mat-cell *matCellDef=\\\"let employee\\\">\\n          <div [className]=\\\"employee.isLoanOfficer === true ? 'true' : 'false'\\\">\\n            <fa-icon *ngIf=\\\"employee.isLoanOfficer\\\" icon=\\\"check-circle\\\" size=\\\"lg\\\" matTooltip=\\\"Yes\\\" matTooltipPosition=\\\"right\\\"></fa-icon>\\n            <fa-icon *ngIf=\\\"!employee.isLoanOfficer\\\" icon=\\\"times-circle\\\" size=\\\"lg\\\" matTooltip=\\\"No\\\" matTooltipPosition=\\\"right\\\"></fa-icon>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"officeName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Office </th>\\n        <td mat-cell *matCellDef=\\\"let employees\\\"> {{ employees.officeName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"isActive\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\n        <td mat-cell *matCellDef=\\\"let employee\\\">\\n          <div [className]=\\\"employee.isActive === true ? 'true' : 'false'\\\">\\n            <fa-icon matTooltip=\\\"{{ employee.isActive === true ? 'Active' : 'Inactive' }}\\\" matTooltipPosition=\\\"right\\\" icon=\\\"circle\\\" size=\\\"lg\\\"></fa-icon>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id]\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n  .true {\\n  color: #32cd32; }\\n  .false {\\n  color: #f44366; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL29yZ2FuaXphdGlvbi9lbXBsb3llZXMvZW1wbG95ZWVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBO0VBRGI7SUFJTSxlQUFlLEVBQUE7RUFJckI7RUFDRSxjQUFjLEVBQUE7RUFHaEI7RUFDRSxjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9vcmdhbml6YXRpb24vZW1wbG95ZWVzL2VtcGxveWVlcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG5cbiAgLnNlbGVjdC1yb3c6aG92ZXIge1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG59XG5cbi50cnVlIHtcbiAgY29sb3I6ICMzMmNkMzI7XG59XG5cbi5mYWxzZSB7XG4gIGNvbG9yOiAjZjQ0MzY2O1xufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/**\n * Employees component.\n */\n@Component({\n  selector: 'mifosx-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.scss']\n})\nexport class EmployeesComponent implements OnInit {\n\n  /** Employees data. */\n  employeesData: any;\n  /** Columns to be displayed in employees table. */\n  displayedColumns: string[] = ['displayName', 'isLoanOfficer', 'officeName', 'isActive'];\n  /** Data source for employees table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for employees table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for employees table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the employees data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { employees: any }) => {\n      this.employeesData = data.employees;\n    });\n  }\n\n  /**\n   * Filters data in employees table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the employees table.\n   */\n  ngOnInit() {\n    this.setEmployees();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for employees table.\n   */\n  setEmployees() {\n    this.dataSource = new MatTableDataSource(this.employeesData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { OrganizationService } from '../organization.service';\n\n/**\n * Employees data resolver.\n */\n@Injectable()\nexport class EmployeesResolver implements Resolve<Object> {\n\n  /**\n   * @param {OrganizationService} organizationService Organization service.\n   */\n  constructor(private organizationService: OrganizationService) {}\n\n  /**\n   * Returns the employees data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.organizationService.getEmployees();\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-content>\\n\\n      <div fxLayout=\\\"row wrap\\\" class=\\\"content\\\">\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          First Name\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ employeeData.firstname }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Last Name\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ employeeData.lastname }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Office\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ employeeData.officeName }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Is Loan Officer\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ employeeData.isLoanOfficer === true ? 'Yes' : 'No' }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\" *ngIf=\\\"employeeData.mobileNo\\\">\\n          Mobile Number for SMS\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" *ngIf=\\\"employeeData.mobileNo\\\">\\n          {{ employeeData.mobileNo }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Status\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ employeeData.isActive === true ? 'Active' : 'Inactive' }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Joining Date\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ employeeData.joiningDate | date }}\\n        </div>\\n\\n      </div>\\n\\n    </mat-card-content>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n  .container .content div {\\n    margin: 1rem 0;\\n    word-wrap: break-word; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL29yZ2FuaXphdGlvbi9lbXBsb3llZXMvdmlldy1lbXBsb3llZS92aWV3LWVtcGxveWVlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCLEVBQUE7RUFEbEI7SUFLUSxjQUFjO0lBQ2QscUJBQXFCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9vcmdhbml6YXRpb24vZW1wbG95ZWVzL3ZpZXctZW1wbG95ZWUvdmlldy1lbXBsb3llZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDM3cmVtO1xuXG4gICAgLmNvbnRlbnQge1xuICAgICAgZGl2IHtcbiAgICAgICAgbWFyZ2luOiAxcmVtIDA7XG4gICAgICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n/**\n * View Employee Component.\n */\n@Component({\n  selector: 'mifosx-view-employee',\n  templateUrl: './view-employee.component.html',\n  styleUrls: ['./view-employee.component.scss']\n})\nexport class ViewEmployeeComponent implements OnInit {\n\n  /** Employee data. */\n  employeeData: any;\n\n  /**\n   * Retrieves the employee data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { employee: any }) => {\n      this.employeeData = data.employee;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Entity Data Table Check\\n  </button>\\n\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"entity\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Entity </th>\\n        <td mat-cell *matCellDef=\\\"let entityDataTableCheck\\\"> {{ entityDataTableCheck.entity }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"productName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Name </th>\\n        <td mat-cell *matCellDef=\\\"let entityDataTableCheck\\\"> {{ entityDataTableCheck.productName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"datatableName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Data Table </th>\\n        <td mat-cell *matCellDef=\\\"let entityDataTableCheck\\\"> {{ entityDataTableCheck.datatableName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"status\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\n        <td mat-cell *matCellDef=\\\"let entityDataTableCheck\\\"> {{ entityDataTableCheck.status.value }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"systemDefined\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> System Defined </th>\\n        <td mat-cell *matCellDef=\\\"let entityDataTableCheck\\\">\\n          <div [className]=\\\"entityDataTableCheck.systemDefined === true ? 'true' : 'false'\\\">\\n            <fa-icon *ngIf=\\\"entityDataTableCheck.systemDefined\\\" icon=\\\"check-circle\\\" size=\\\"lg\\\" matTooltip=\\\"Yes\\\" matTooltipPosition=\\\"right\\\"></fa-icon>\\n            <fa-icon *ngIf=\\\"!entityDataTableCheck.systemDefined\\\" icon=\\\"times-circle\\\" size=\\\"lg\\\" matTooltip=\\\"No\\\" matTooltipPosition=\\\"right\\\"></fa-icon>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\\n        <td mat-cell *matCellDef=\\\"let entityDataTableCheck\\\">\\n          <button mat-button (click)=\\\"deleteEntityDataTableCheck(entityDataTableCheck.id)\\\" color=\\\"warn\\\">\\n            <fa-icon icon=\\\"trash\\\"></fa-icon>&nbsp;&nbsp;Delete\\n          </button>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.true {\\n  color: #32cd32; }\\n\\n.false {\\n  color: #f44366; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL29yZ2FuaXphdGlvbi9lbnRpdHktZGF0YS10YWJsZS1jaGVja3MvZW50aXR5LWRhdGEtdGFibGUtY2hlY2tzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBOztBQUdiO0VBQ0UsY0FBYyxFQUFBOztBQUdoQjtFQUNFLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL29yZ2FuaXphdGlvbi9lbnRpdHktZGF0YS10YWJsZS1jaGVja3MvZW50aXR5LWRhdGEtdGFibGUtY2hlY2tzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnRydWUge1xuICBjb2xvcjogIzMyY2QzMjtcbn1cblxuLmZhbHNlIHtcbiAgY29sb3I6ICNmNDQzNjY7XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort, MatDialog } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { OrganizationService } from '../organization.service';\n\n/** Custom Components */\nimport { DeleteDialogComponent } from '../../shared/delete-dialog/delete-dialog.component';\n\n/**\n * Entity Data Table Checks component.\n */\n@Component({\n  selector: 'mifosx-entity-data-table-checks',\n  templateUrl: './entity-data-table-checks.component.html',\n  styleUrls: ['./entity-data-table-checks.component.scss']\n})\nexport class EntityDataTableChecksComponent implements OnInit {\n\n  /** Entity Data Table Checks data. */\n  entityDataTableChecksData: any;\n  /** Columns to be displayed in entity data table checks table. */\n  displayedColumns: string[] = ['entity', 'productName', 'datatableName', 'status', 'systemDefined', 'actions'];\n  /** Data source for entity data table checks table. */\n  dataSource: MatTableDataSource<any>;\n  /** Corresponding values for Entity */\n  entityValues: any = [\n    {\n      code: 'm_client',\n      value: 'Client'\n    },\n    {\n      code: 'm_loan',\n      value: 'Loan'\n    },\n    {\n      code: 'm_group',\n      value: 'Group'\n    },\n    {\n      code: 'm_savings_account',\n      value: 'Savings Account'\n    }\n  ];\n\n  /** Paginator for entity data table checks table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for entity data table checks table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the entity data table checks data from `resolve`.\n   * @param {OrganizationService} organizationService Organization Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {MatDialog} dialog Dialog reference.\n   */\n  constructor(private organizationService: OrganizationService,\n              private route: ActivatedRoute,\n              private dialog: MatDialog) {\n    this.route.data.subscribe(( data: { entityDataTableChecks: any }) => {\n      this.entityDataTableChecksData = data.entityDataTableChecks.pageItems;\n    });\n  }\n\n  /**\n   * Filters data in entity data table checks table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the entity data table checks table.\n   */\n  ngOnInit() {\n    this.setEntityDataTableChecks();\n    this.setEntity();\n  }\n\n  /**\n   * Sets Entity to its corresponding values\n   */\n  setEntity() {\n    for (let i = 0; i < this.dataSource.data.length; i++) {\n      for (let j = 0; j < this.entityValues.length; j++) {\n        if (this.entityValues[j].code === this.dataSource.data[i].entity) {\n          this.dataSource.data[i].entity = this.entityValues[j].value;\n        }\n      }\n    }\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for entity data table checks table.\n   */\n  setEntityDataTableChecks() {\n    this.dataSource = new MatTableDataSource(this.entityDataTableChecksData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    this.dataSource.sortingDataAccessor = (item, property) => {\n      switch (property) {\n        case 'status': return item.status.value;\n        default: return item[property];\n      }\n    };\n  }\n\n  /**\n   * Deletes the entity data table check\n   * @param {string} entityDataTableCheckId Entity Data Table Check ID of entity data table check to be deleted.\n   */\n  deleteEntityDataTableCheck(entityDataTableCheckId: string) {\n    const deleteEntityDataTableCheckDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `entity data table check ${entityDataTableCheckId}` }\n    });\n    deleteEntityDataTableCheckDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.organizationService.deleteEntityDataTableCheck(entityDataTableCheckId)\n          .subscribe(() => {\n            this.entityDataTableChecksData = this.entityDataTableChecksData.filter((entityDataTableChecks: any) => entityDataTableChecks.id !== entityDataTableCheckId);\n            this.dataSource.data = this.entityDataTableChecksData;\n          });\n      }\n    });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { OrganizationService } from '../organization.service';\n\n/**\n * Entity Data Table Checks data resolver.\n */\n@Injectable()\nexport class EntityDataTableChecksResolver implements Resolve<Object> {\n\n  /**\n   * @param {OrganizationService} organizationService Organization service.\n   */\n  constructor(private organizationService: OrganizationService) {}\n\n  /**\n   * Returns the Entity Data Table Checks data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.organizationService.getEntityDataTableChecks();\n  }\n\n}\n","module.exports = \"<p>\\n  holidays1 works!\\n</p>\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n  <div class=\\\"search-box\\\">\\n    <mat-form-field>\\n      <input matInput  placeholder=\\\"Filter by Name\\\">\\n    </mat-form-field>\\n    <mat-select name=\\\"sampleType\\\" formControlName=\\\"sampleTypeCtrl\\\" \\n   placeholder=\\\"Select Office\\\" required>\\n       </mat-select>\\n  </div>\\n  <div class=\\\"action-button\\\" fxLayoutGap=\\\"25px\\\">\\n    \\n    <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['./add']\\\">\\n      <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;Create Holidays\\n    </button>\\n  </div>\\n</div>\\n<table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n  <!-- Holiday Name -->\\n  <ng-container matColumnDef=\\\"\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header='displayName'>Holiday Name</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.displayName}} </td>\\n  </ng-container>\\n\\n  <!-- Start Date -->\\n  <ng-container matColumnDef=\\\"clientno\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header='accountNo'> Start Date </th>\\n    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.accountNo}} </td>\\n  </ng-container>\\n\\n  <!-- End Date -->\\n  <ng-container matColumnDef=\\\"externalid\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header='externalId'> End Date </th>\\n    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.externalId}} </td>\\n  </ng-container>\\n\\n  \\n  <!-- Repayment Scheduled To-->\\n  <ng-container matColumnDef=\\\"mobileNo\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Repayment Scheduled To </th>\\n    <td mat-cell *matCellDef=\\\"let client\\\"> {{ client.mobileNo }} </td>\\n  </ng-container>\\n\\n  <!-- Status Column -->\\n  <ng-container matColumnDef=\\\"status\\\">\\n    <th mat-header-cell *matHeaderCellDef> Status </th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">\\n      <div [ngClass]=\\\"row.active|statusLookup\\\">\\n        <i class=\\\"fa fa-user fa-2x\\\"> </i>\\n      </div>\\n    </td>\\n  </ng-container>\\n\\n  \\n  \\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id,'general']\\\">\\n  </tr>\\n</table>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZ2FuaXphdGlvbi9ob2xpZGF5cy9ob2xpZGF5cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mifosx-holidays',\n  templateUrl: './holidays.component.html',\n  styleUrls: ['./holidays.component.scss']\n})\nexport class HolidaysComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Provisioning Criteria\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"criteriaName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let loanProvisioningCriteria\\\"> {{ loanProvisioningCriteria.criteriaName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"createdBy\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Created By </th>\\n        <td mat-cell *matCellDef=\\\"let loanProvisioningCriteria\\\"> {{ loanProvisioningCriteria.createdBy }} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL29yZ2FuaXphdGlvbi9sb2FuLXByb3Zpc2lvbmluZy1jcml0ZXJpYS9sb2FuLXByb3Zpc2lvbmluZy1jcml0ZXJpYS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTtFQURiO0lBSUksZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvb3JnYW5pemF0aW9uL2xvYW4tcHJvdmlzaW9uaW5nLWNyaXRlcmlhL2xvYW4tcHJvdmlzaW9uaW5nLWNyaXRlcmlhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcblxuICAuc2VsZWN0LXJvdzpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/**\n * Loan Provisioning Criteria component.\n */\n@Component({\n  selector: 'mifosx-loan-provisioning-criteria',\n  templateUrl: './loan-provisioning-criteria.component.html',\n  styleUrls: ['./loan-provisioning-criteria.component.scss']\n})\nexport class LoanProvisioningCriteriaComponent implements OnInit {\n\n  /** Loan Provisioning Criteria data. */\n  loanProvisioningCriteriaData: any;\n  /** Columns to be displayed in loan provisioning criteria table. */\n  displayedColumns: string[] = ['criteriaName', 'createdBy'];\n  /** Data source for loan provisioning criteria table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for loan provisioning criteria table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for loan provisioning criteria table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the loan provisioning criteria data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { loanProvisioningCriteria: any }) => {\n      this.loanProvisioningCriteriaData = data.loanProvisioningCriteria;\n    });\n  }\n\n  /**\n   * Filters data in loan provisioning criteria table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the loan provisioning criteria table.\n   */\n  ngOnInit() {\n    this.setLoanProvisioningCriteria();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for loan provisioning criteria table.\n   */\n  setLoanProvisioningCriteria() {\n    this.dataSource = new MatTableDataSource(this.loanProvisioningCriteriaData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { OrganizationService } from '../organization.service';\n\n/**\n * Loan Provisioning Criteria data resolver.\n */\n@Injectable()\nexport class LoanProvisioningCriteriaResolver implements Resolve<Object> {\n\n  /**\n   * @param {OrganizationService} organizationService Organization service.\n   */\n  constructor(private organizationService: OrganizationService) {}\n\n  /**\n   * Returns the loan provisioning criteria data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.organizationService.getProvisioningCriteria();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"officeForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field>\\n            <mat-label>Name</mat-label>\\n            <input required matInput formControlName=\\\"name\\\">\\n            <mat-error *ngIf=\\\"officeForm.controls.name.hasError('required')\\\">\\n              Office is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Staff</mat-label>\\n            <mat-select required formControlName=\\\"parentId\\\">\\n              <mat-option *ngFor=\\\"let office of officeData\\\" [value]=\\\"office.id\\\">\\n                {{ office.name }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"officeForm.controls.parentId.hasError('required')\\\">\\n              Parent Office is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Activation Date</mat-label>\\n            <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" formControlName=\\\"openingDate\\\" required [matDatepicker]=\\\"openedOnDatePicker\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"openedOnDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #openedOnDatePicker></mat-datepicker>\\n            <mat-error *ngIf=\\\"officeForm.controls.openingDate.hasError('required')\\\">\\n              Opening Date is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>External ID</mat-label>\\n            <input matInput formControlName=\\\"externalId\\\">\\n          </mat-form-field>\\n          \\n        </div>\\n        \\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!officeForm.valid\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL29yZ2FuaXphdGlvbi9vZmZpY2VzL2NyZWF0ZS1vZmZpY2UvY3JlYXRlLW9mZmljZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvb3JnYW5pemF0aW9uL29mZmljZXMvY3JlYXRlLW9mZmljZS9jcmVhdGUtb2ZmaWNlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAzN3JlbTtcbiAgICBcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\n\n/** Custom Services */\nimport { OrganizationService } from '../../organization.service';\n\n/**\n * Create Office component.\n */\n@Component({\n  selector: 'mifosx-create-office',\n  templateUrl: './create-office.component.html',\n  styleUrls: ['./create-office.component.scss']\n})\nexport class CreateOfficeComponent implements OnInit {\n\n  /** Office form. */\n  officeForm: FormGroup;\n  /** Office Data */\n  officeData: any;\n  /** Minimum Date allowed. */\n  minDate = new Date(2000, 0, 1);\n  /** Maximum Date allowed. */\n  maxDate = new Date();\n\n  /**\n   * Retrieves the offices data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {OrganizationService} organizationService Organization Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   * @param {DatePipe} datePipe Date Pipe to format date.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private organizationService: OrganizationService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private datePipe: DatePipe) {\n    this.route.data.subscribe((data: { offices: any }) => {\n      this.officeData = data.offices;\n    });\n  }\n\n  ngOnInit() {\n    this.createofficeForm();\n  }\n\n  /**\n   * Creates the Office Form\n   */\n  createofficeForm() {\n    this.officeForm = this.formBuilder.group({\n      'name': ['', Validators.required],\n      'parentId': ['', Validators.required],\n      'openingDate': ['', Validators.required],\n      'externalId': [''],\n    });\n  }\n\n  /**\n   * Submits the office form and creates office.\n   * if successful redirects to offices\n   */\n  submit() {\n    const prevOpeningDate: Date = this.officeForm.value.openingDate;\n    // TODO: Update once language and date settings are setup\n    const dateFormat = 'yyyy-MM-dd';\n    this.officeForm.patchValue({\n      openingDate: this.datePipe.transform(prevOpeningDate, dateFormat)\n    });\n    const office = this.officeForm.value;\n    office.locale = 'en';\n    office.dateFormat = dateFormat;\n    this.organizationService.createOffice(office).subscribe(response => {\n      this.router.navigate(['../'], { relativeTo: this.route });\n    });\n  }\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"sitemap\\\"></fa-icon>&nbsp;&nbsp;\\n    Tree View\\n  </button>\\n\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['create']\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Office\\n  </button>\\n\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"upload\\\"></fa-icon>&nbsp;&nbsp;\\n    Import Offices\\n  </button>\\n\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Office Name </th>\\n        <td mat-cell *matCellDef=\\\"let offices\\\"> {{ offices.name }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"externalId\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> External ID </th>\\n        <td mat-cell *matCellDef=\\\"let offices\\\"> {{ offices.externalId }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"parentName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Parent Office </th>\\n        <td mat-cell *matCellDef=\\\"let offices\\\"> {{ offices.parentName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"openingDate\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Opened On </th>\\n        <td mat-cell *matCellDef=\\\"let offices\\\"> {{ offices.openingDate | date }} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL29yZ2FuaXphdGlvbi9vZmZpY2VzL29mZmljZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7RUFEYjtJQUlJLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL29yZ2FuaXphdGlvbi9vZmZpY2VzL29mZmljZXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuXG4gIC5zZWxlY3Qtcm93OmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/**\n * Offices component.\n */\n@Component({\n  selector: 'mifosx-offices',\n  templateUrl: './offices.component.html',\n  styleUrls: ['./offices.component.scss']\n})\nexport class OfficesComponent implements OnInit {\n\n  /** Offices data. */\n  officesData: any;\n  /** Columns to be displayed in offices table. */\n  displayedColumns: string[] = ['name', 'externalId', 'parentName', 'openingDate'];\n  /** Data source for offices table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for offices table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for offices table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the offices data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { offices: any }) => {\n      this.officesData = data.offices;\n    });\n  }\n\n  /**\n   * Filters data in offices table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the offices table.\n   */\n  ngOnInit() {\n    this.setOffices();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for offices table.\n   */\n  setOffices() {\n    this.dataSource = new MatTableDataSource(this.officesData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { OrganizationService } from '../organization.service';\n\n/**\n * Manage Offices data resolver.\n */\n@Injectable()\nexport class OfficesResolver implements Resolve<Object> {\n\n  /**\n   * @param {OrganizationService} organizationService Organization service.\n   */\n  constructor(private organizationService: OrganizationService) {}\n\n  /**\n   * Returns the offices data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.organizationService.getOffices();\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/** Routing Imports */\nimport { Route } from '../core/route/route.service';\n\n/** Translation Imports */\nimport { extract } from '../core/i18n/i18n.service';\n\n/** Custom Components */\nimport { OrganizationComponent } from './organization.component';\nimport { LoanProvisioningCriteriaComponent } from './loan-provisioning-criteria/loan-provisioning-criteria.component';\nimport { OfficesComponent } from './offices/offices.component';\nimport { EmployeesComponent } from './employees/employees.component';\nimport { CreateEmployeeComponent } from './employees/create-employee/create-employee.component';\nimport { ViewEmployeeComponent } from './employees/view-employee/view-employee.component';\nimport { CurrenciesComponent } from './currencies/currencies.component';\nimport { SmsCampaignsComponent } from './sms-campaigns/sms-campaigns.component';\nimport { AdhocQueryComponent } from './adhoc-query/adhoc-query.component';\nimport { ViewAdhocQueryComponent } from './adhoc-query/view-adhoc-query/view-adhoc-query.component';\nimport { TellersComponent } from './tellers/tellers.component';\nimport { ViewTellerComponent } from './tellers/view-teller/view-teller.component';\nimport { PaymentTypesComponent } from './payment-types/payment-types.component';\nimport { EditPaymentTypeComponent } from './payment-types/edit-payment-type/edit-payment-type.component';\nimport { PasswordPreferencesComponent } from './password-preferences/password-preferences.component';\nimport { EntityDataTableChecksComponent } from './entity-data-table-checks/entity-data-table-checks.component';\nimport { WorkingDaysComponent } from './working-days/working-days.component';\nimport { CreateOfficeComponent } from './offices/create-office/create-office.component';\nimport { CreatePaymentTypeComponent } from './payment-types/create-payment-type/create-payment-type.component';\n\n/** Custom Resolvers */\nimport { LoanProvisioningCriteriaResolver } from './loan-provisioning-criteria/loan-provisioning-criteria.resolver';\nimport { OfficesResolver } from './offices/offices.resolver';\nimport { EmployeesResolver } from './employees/employees.resolver';\nimport { EmployeeResolver } from './employees/employee.resolver';\nimport { CurrenciesResolver } from './currencies/currencies.resolver';\nimport { SmsCampaignsResolver } from './sms-campaigns/sms-campaigns.resolver';\nimport { AdhocQueriesResolver } from './adhoc-query/adhoc-queries.resolver';\nimport { AdhocQueryResolver } from './adhoc-query/adhoc-query.resolver';\nimport { TellersResolver } from './tellers/tellers.resolver';\nimport { TellerResolver } from './tellers/teller.resolver';\nimport { PaymentTypesResolver } from './payment-types/payment-types.resolver';\nimport { PaymentTypeResolver } from './payment-types/payment-type.resolver';\nimport { PasswordPreferencesTemplateResolver } from './password-preferences/password-preferences-template.resolver';\nimport { EntityDataTableChecksResolver } from './entity-data-table-checks/entity-data-table-checks.resolver';\nimport { WorkingDaysResolver } from './working-days/working-days.resolver';\nimport { HolidaysComponent } from './holidays/holidays.component';\n/** Organization Routes */\nconst routes: Routes = [\n  Route.withShell([\n    {\n      path: 'organization',\n      data: { title: extract('Organization'), breadcrumb: 'Organization' },\n      children: [\n        {\n          path: '',\n          component: OrganizationComponent\n        },\n        {\n          path: 'provisioning-criteria',\n          component: LoanProvisioningCriteriaComponent,\n          data: { title: extract('Provisioning Criteria'), breadcrumb: 'Provisioning Criteria' },\n          resolve: {\n            loanProvisioningCriteria: LoanProvisioningCriteriaResolver\n          }\n        },\n        {\n          path: 'manage-holidays',\n          component: HolidaysComponent,\n          data: { title: extract('Manage Holidays'), breadcrumb: 'Manage Holidys' },\n          resolve: {\n            loanProvisioningCriteria: LoanProvisioningCriteriaResolver\n          }\n        },\n        {\n          path: 'offices',\n          data: { title: extract('Manage Offices'), breadcrumb: 'Manage Offices' },\n          children: [\n            {\n              path: '',\n              component: OfficesComponent,\n              resolve: {\n              offices: OfficesResolver\n              }\n            },\n           /* {\n              path: 'create',\n              component: CreateOfficeComponent,\n              data: { title: extract('Create Office'), breadcrumb: 'Create Office' },\n              resolve: {\n                offices: OfficesResolver,\n              }\n            } */\n          ]\n        },\n        {\n          path: 'employees',\n          data: { title: extract('Manage Employees'), breadcrumb: 'Manage Employees' },\n          children: [\n            {\n              path: '',\n              component: EmployeesComponent,\n              resolve: {\n                employees: EmployeesResolver\n              }\n            },\n            {\n              path: 'create',\n              component: CreateEmployeeComponent,\n              data: { title: extract('Create Employee'), breadcrumb: 'Create Employee' },\n              resolve: {\n                offices: OfficesResolver\n              }\n            },\n            {\n              path: ':id',\n              component: ViewEmployeeComponent,\n              data: { title: extract('View Employee'), routeResolveBreadcrumb: ['employee', 'displayName'] },\n              resolve: {\n                employee: EmployeeResolver\n              }\n            }\n          ]\n        },\n        {\n          path: 'currencies',\n          component: CurrenciesComponent,\n          data: { title: extract('Currency Configuration'), breadcrumb: 'Currency Configuration' },\n          resolve: {\n            currencies: CurrenciesResolver\n          }\n        },\n        {\n          path: 'sms-campaigns',\n          component: SmsCampaignsComponent,\n          data: { title: extract('SMS Campaigns'), breadcrumb: 'SMS Campaigns' },\n          resolve: {\n            smsCampaigns: SmsCampaignsResolver\n          }\n        },\n        {\n          path: 'adhoc-query',\n          data: { title: extract('Adhoc Query'), breadcrumb: 'Adhoc Query' },\n          children: [\n            {\n              path: '',\n              component: AdhocQueryComponent,\n              resolve: {\n                adhocQueries: AdhocQueriesResolver\n              }\n            },\n            {\n              path: ':id',\n              component: ViewAdhocQueryComponent,\n              data: { title: extract('View Adhoc Query'), routeResolveBreadcrumb: ['adhocQuery', 'name']},\n              resolve: {\n                adhocQuery: AdhocQueryResolver\n              }\n            }\n          ]\n        },\n        {\n          path: 'tellers',\n          data: { title: extract('Tellers'), breadcrumb: 'Tellers' },\n          children: [\n            {\n              path: '',\n              component: TellersComponent,\n              resolve: {\n                tellers: TellersResolver\n              }\n            },\n            {\n              path: ':id',\n              component: ViewTellerComponent,\n              data: { title: extract('View Teller'), routeResolveBreadcrumb: ['teller', 'name'] },\n              resolve: {\n                teller: TellerResolver\n              }\n            }\n          ]\n        },\n        {\n          path: 'payment-types',\n          data: { title: extract('Payment Types'), breadcrumb: 'Payment Types' },\n          children: [\n            {\n              path: '',\n              component: PaymentTypesComponent,\n              resolve: {\n                paymentTypes: PaymentTypesResolver\n              }\n            },\n            {\n              path: 'create',\n              component: CreatePaymentTypeComponent,\n              data: { title: extract('Create Payment Type'), breadcrumb: 'Create Payment Type'}\n            },\n            {\n              path: ':id',\n              data: { routeParamBreadcrumb: 'id', addBreadcrumbLink: false },\n              children: [\n                {\n                  path: 'edit',\n                  component: EditPaymentTypeComponent,\n                  data: { title: extract('Edit Payment Type'), breadcrumb: 'Edit', routeParamBreadcrumb: false },\n                  resolve: {\n                    paymentType: PaymentTypeResolver\n                  }\n                }\n              ]\n            }\n          ]\n        },\n        {\n          path: 'password-preferences',\n          component: PasswordPreferencesComponent,\n          data: { title: extract('Password Preferences'), breadcrumb: 'Password Preferences' },\n          resolve: {\n            passwordPreferencesTemplate: PasswordPreferencesTemplateResolver\n          }\n        },\n        {\n          path: 'entity-data-table-checks',\n          component: EntityDataTableChecksComponent,\n          data: { title: extract('Entity Data Table Checks'), breadcrumb: 'Entity Data Table Checks' },\n          resolve: {\n            entityDataTableChecks: EntityDataTableChecksResolver\n          }\n        },\n        {\n          path: 'working-days',\n          component: WorkingDaysComponent,\n          data: { title: extract('Working Days'), breadcrumb: 'Working Days' },\n          resolve: {\n            workingDays: WorkingDaysResolver\n          }\n        }\n      ]\n    }\n  ])\n];\n\n/**\n * Organization Routing Module\n *\n * Configures the organization routes.\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    LoanProvisioningCriteriaResolver,\n    OfficesResolver,\n    EmployeesResolver,\n    EmployeeResolver,\n    CurrenciesResolver,\n    SmsCampaignsResolver,\n    AdhocQueriesResolver,\n    AdhocQueryResolver,\n    TellersResolver,\n    TellerResolver,\n    PaymentTypesResolver,\n    PaymentTypeResolver,\n    PasswordPreferencesTemplateResolver,\n    EntityDataTableChecksResolver,\n    WorkingDaysResolver\n  ]\n})\nexport class OrganizationRoutingModule { }","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <div fxFlex=\\\"50%\\\">\\n\\n        <mat-nav-list>\\n\\n          <mat-list-item [routerLink]=\\\"['offices']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"building\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Manage Offices</h4>\\n            <p matLine>Add new office or modify or deactivate office or modify hierarchy</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['manage-holidays']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"calendar-alt\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Manage Holidays</h4>\\n            <p matLine>Define holidays for office</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['employees']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"user\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Manage Employees</h4>\\n            <p matLine>An employee represents loan officers with no access to systems</p>\\n          </mat-list-item>\\n\\n          <mat-list-item>\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"book\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Standing Instructions History</h4>\\n            <p matLine>View logged history of standing instructions</p>\\n          </mat-list-item>\\n\\n          <mat-list-item>\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"money-bill-alt\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Fund Mapping</h4>\\n            <p matLine>Bulk entry screen for mapping fund sources to loans</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['password-preferences']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"lock\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Password Preferences</h4>\\n            <p matLine>Define standards for enforcing the usage of stronger passwords</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['provisioning-criteria']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"edit\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Loan Provisioning Criteria</h4>\\n            <p matLine>Define Loan Provisioning Criteria for Organization</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['entity-data-table-checks']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"check\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Entity Data Table Checks </h4>\\n            <p matLine>Define Entity Data Table Checks for Organization</p>\\n          </mat-list-item>\\n\\n        </mat-nav-list>\\n\\n      </div>\\n\\n      <div fxFlex=\\\"50%\\\">\\n\\n        <mat-nav-list>\\n\\n          <mat-list-item [routerLink]=\\\"['currencies']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"cogs\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Currency Configuration</h4>\\n            <p matLine>Currencies available across organization for different products</p>\\n          </mat-list-item>\\n\\n\\n          <mat-list-item>\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"money-bill-alt\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Manage Funds</h4>\\n            <p matLine>Funds are associated with loans</p>\\n          </mat-list-item>\\n\\n          <mat-list-item>\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"money-bill-alt\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Bulk Loan Reassignment</h4>\\n            <p matLine>Easy way to reassign all the loan from one LO to another LO</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['tellers']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"money-bill-alt\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Teller / Cashier Management</h4>\\n            <p matLine>Manage Tellers / Cashiers and Cash Allocation and Settlement</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['working-days']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"calendar-alt\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Working Days</h4>\\n            <p matLine>Define working days and configure behaviour of payments due on holidays</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['payment-types']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"dollar-sign\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Payment Type</h4>\\n            <p matLine>Manage payment types</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['sms-campaigns']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"envelope\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>SMS Campaigns</h4>\\n            <p matLine>Define SMS Campaigns for Organization</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['adhoc-query']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"chevron-right\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>AdHocQuery</h4>\\n            <p matLine>Define AdHocQuery for Organization</p>\\n          </mat-list-item>\\n\\n          <mat-list-item>\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"upload\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Bulk Import</h4>\\n            <p matLine>Bulk data import using excel spreadsheet templates for clients, offices, etc.</p>\\n          </mat-list-item>\\n\\n        </mat-nav-list>\\n\\n      </div>\\n\\n    </div>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZ2FuaXphdGlvbi9vcmdhbml6YXRpb24uY29tcG9uZW50LnNjc3MifQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\n\n/**\n * Organization component.\n */\n@Component({\n  selector: 'mifosx-products',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.scss']\n})\nexport class OrganizationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\n\n/** Custom Modules */\nimport { SharedModule } from '../shared/shared.module';\nimport { OrganizationRoutingModule } from './organization-routing.module';\nimport { PipesModule } from '../pipes/pipes.module';\n\n/** Custom Components */\nimport { OrganizationComponent } from './organization.component';\nimport { LoanProvisioningCriteriaComponent } from './loan-provisioning-criteria/loan-provisioning-criteria.component';\nimport { OfficesComponent } from './offices/offices.component';\nimport { EmployeesComponent } from './employees/employees.component';\nimport { CurrenciesComponent } from './currencies/currencies.component';\nimport { SmsCampaignsComponent } from './sms-campaigns/sms-campaigns.component';\nimport { AdhocQueryComponent } from './adhoc-query/adhoc-query.component';\nimport { ViewAdhocQueryComponent } from './adhoc-query/view-adhoc-query/view-adhoc-query.component';\nimport { TellersComponent } from './tellers/tellers.component';\nimport { ViewTellerComponent } from './tellers/view-teller/view-teller.component';\nimport { PaymentTypesComponent } from './payment-types/payment-types.component';\nimport { EditPaymentTypeComponent } from './payment-types/edit-payment-type/edit-payment-type.component';\nimport { PasswordPreferencesComponent } from './password-preferences/password-preferences.component';\nimport { EntityDataTableChecksComponent } from './entity-data-table-checks/entity-data-table-checks.component';\nimport { WorkingDaysComponent } from './working-days/working-days.component';\nimport { CreateOfficeComponent } from './offices/create-office/create-office.component';\nimport { CreateEmployeeComponent } from './employees/create-employee/create-employee.component';\nimport { CreatePaymentTypeComponent } from './payment-types/create-payment-type/create-payment-type.component';\nimport { ViewEmployeeComponent } from './employees/view-employee/view-employee.component';\nimport { HolidaysComponent } from './holidays/holidays.component';\n\n/**\n * Organization Module\n *\n * Organization components should be declared here.\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    OrganizationRoutingModule,\n    PipesModule\n  ],\n  declarations: [\n    OrganizationComponent,\n    LoanProvisioningCriteriaComponent,\n    OfficesComponent,\n    EmployeesComponent,\n    CurrenciesComponent,\n    SmsCampaignsComponent,\n    AdhocQueryComponent,\n    ViewAdhocQueryComponent,\n    TellersComponent,\n    ViewTellerComponent,\n    PaymentTypesComponent,\n    EditPaymentTypeComponent,\n    PasswordPreferencesComponent,\n    EntityDataTableChecksComponent,\n    WorkingDaysComponent,\n    CreateOfficeComponent,\n    CreateEmployeeComponent,\n    CreatePaymentTypeComponent,\n    ViewEmployeeComponent,\n    HolidaysComponent\n  ]\n})\nexport class OrganizationModule { }\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/**\n * Organization service.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrganizationService {\n\n  /**\n   * @param {HttpClient} http Http Client to send requests.\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * @returns {Observable<any>} Loan Provisioning Criteria data\n   */\n  getProvisioningCriteria(): Observable<any> {\n    return this.http.get('/provisioningcriteria');\n  }\n\n  /**\n   * @returns {Observable<any>} Offices data\n   */\n  getOffices(): Observable<any> {\n    return this.http.get('/offices');\n  }\n\n  /**\n   * @param {any} office Office to be created.\n   * @returns {Observable<any>}\n   */\n  createOffice(office: any): Observable<any> {\n    return this.http.post('/offices', office);\n  }\n\n  /**\n   * @returns {Observable<any>} Employees data\n   */\n  getEmployees(): Observable<any> {\n    return this.http.get('/staff');\n  }\n\n  /**\n   * @param {any} employee Employee to be created.\n   * @returns {Observable<any>}\n   */\n  createEmployee(employee: any): Observable<any> {\n    return this.http.post('/staff', employee);\n  }\n\n  /**\n   * @param {string} employeeId Employee ID of employee.\n   * @returns {Observable<any>} Employee.\n   */\n  getEmployee(employeeId: string): Observable<any> {\n    return this.http.get(`/staff/${employeeId}`);\n  }\n\n  /**\n   * @returns {Observable<any>} Currencies data\n   */\n  getCurrencies(): Observable<any> {\n    return this.http.get('/currencies');\n  }\n\n  /**\n   * @returns {Observable<any>} SMS Campaigns data\n   */\n  getSmsCampaigns(): Observable<any> {\n    return this.http.get('/smscampaigns');\n  }\n\n  /**\n   * @returns {Observable<any>} Adhoc Queries data\n   */\n  getAdhocQueries(): Observable<any> {\n    return this.http.get('/adhocquery');\n  }\n\n  /**\n   * @param {string} adhocQueryId Adhoc Query ID of adhoc query.\n   * @returns {Observable<any>} Adhoc query.\n   */\n  getAdhocQuery(adhocQueryId: string): Observable<any> {\n    return this.http.get(`/adhocquery/${adhocQueryId}`);\n  }\n\n  /**\n   * @param {string} adhocQueryId Adhoc Query ID of adhoc query to be deleted.\n   * @returns {Observable<any>}\n   */\n  deleteAdhocQuery(adhocQueryId: string): Observable<any> {\n    return this.http.delete(`/adhocquery/${adhocQueryId}`);\n  }\n\n  /**\n   * @returns {Observable<any>} Tellers data\n   */\n  getTellers(): Observable<any> {\n    return this.http.get('/tellers');\n  }\n\n  /**\n   * @param {string} tellerId Teller ID of teller.\n   * @returns {Observable<any>} Teller.\n   */\n  getTeller(tellerId: string): Observable<any> {\n    return this.http.get(`/tellers/${tellerId}`);\n  }\n\n  /**\n   * @param {string} tellerId Teller ID of teller to be deleted.\n   * @returns {Observable<any>}\n   */\n  deleteTeller(tellerId: string): Observable<any> {\n    return this.http.delete(`/tellers/${tellerId}`);\n  }\n\n  /**\n   * @returns {Observable<any>} Payment Types data\n   */\n  getPaymentTypes(): Observable<any> {\n    return this.http.get('/paymenttypes');\n  }\n\n  /**\n   * @param {any} paymentType Payment type to be created.\n   * @returns {Observable<any>}\n   */\n  createPaymentType(paymentType: any): Observable<any> {\n    return this.http.post('/paymenttypes', paymentType);\n  }\n\n  /**\n   * @param {string} paymentTypeId Payment type ID of payment type to be deleted.\n   * @returns {Observable<any>}\n   */\n  deletePaymentType(paymentTypeId: string): Observable<any> {\n    return this.http.delete(`/paymenttypes/${paymentTypeId}`);\n  }\n\n  /**\n   * @param {string} paymentTypeId Payment type ID of payment type.\n   * @returns {Observable<any>} Payment type.\n   */\n  getPaymentType(paymentTypeId: string): Observable<any> {\n    return this.http.get(`/paymenttypes/${paymentTypeId}`);\n  }\n\n  /**\n   * @param {string} paymentTypeId Payment type ID of Payment Type to be edited.\n   * @returns {Observable<any>}\n   */\n  updatePaymentType(paymentTypeId: string, paymentType: any): Observable<any> {\n    return this.http.put(`/paymenttypes/${paymentTypeId}`, paymentType);\n  }\n\n  /**\n   * @returns {Observable<any>} Password Preferences Template data\n   */\n  getPasswordPreferencesTemplate(): Observable<any> {\n    return this.http.get('/passwordpreferences/template');\n  }\n\n  /**\n   * @param {any} passwordPreferences Password Preferences data.\n   * @returns {Observable<any>}\n   */\n  updatePasswordPreferences(passwordPreferences: any): Observable<any> {\n    return this.http.put('/passwordpreferences', passwordPreferences);\n  }\n\n  /**\n   * @param {number} offset Page offset.\n   * @param {number} limit Number of entries within the page.\n   * @returns {Observable<any>} Entity Data Table Checks data.\n   */\n  getEntityDataTableChecks(offset: number = 0, limit: number = -1): Observable<any> {\n    const httpParams = new HttpParams()\n      .set('offset', offset.toString())\n      .set('limit', limit.toString());\n    return this.http.get('/entityDatatableChecks', { params: httpParams });\n  }\n\n  /**\n   * @param {string} entityDataTableCheckId Entity Data Table Check ID of entity data table to be deleted.\n   * @returns {Observable<any>}\n   */\n  deleteEntityDataTableCheck(entityDataTableCheckId: string): Observable<any> {\n    return this.http.delete(`/entityDatatableChecks/${entityDataTableCheckId}`);\n  }\n\n  /**\n   * @returns {Observable<any>} Working days data.\n   */\n  getWorkingDays(): Observable<any> {\n    return this.http.get('/workingdays');\n  }\n\n  /**\n   * @param {any} workingDays Working days data.\n   * @returns {Observable<any>}\n   */\n  updateWorkingDays(workingDays: any): Observable<any> {\n    return this.http.put('/workingdays', workingDays);\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { OrganizationService } from '../organization.service';\n\n/**\n * Password Preferences Template data resolver.\n */\n@Injectable()\nexport class PasswordPreferencesTemplateResolver implements Resolve<Object> {\n\n  /**\n   * @param {OrganizationService} organizationService Organization service.\n   */\n  constructor(private organizationService: OrganizationService) {}\n\n  /**\n   * Returns the password preferences template data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.organizationService.getPasswordPreferencesTemplate();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"passwordPreferencesForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <mat-radio-group fxLayout=\\\"column\\\" formControlName=\\\"validationPolicyId\\\" fxLayoutGap=\\\"10px\\\">\\n          <mat-radio-button *ngFor=\\\"let passwordPreference of passwordPreferencesData\\\" [value]=\\\"passwordPreference.id\\\">\\n            <span class=\\\"description-wrap\\\">{{ passwordPreference.description }}</span>\\n          </mat-radio-button>\\n        </mat-radio-group>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"passwordPreferencesForm.pristine\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".description-wrap {\\n  white-space: normal; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL29yZ2FuaXphdGlvbi9wYXNzd29yZC1wcmVmZXJlbmNlcy9wYXNzd29yZC1wcmVmZXJlbmNlcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvb3JnYW5pemF0aW9uL3Bhc3N3b3JkLXByZWZlcmVuY2VzL3Bhc3N3b3JkLXByZWZlcmVuY2VzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRlc2NyaXB0aW9uLXdyYXAge1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { OrganizationService } from '../organization.service';\n\n/**\n * Password preferences component.\n */\n@Component({\n  selector: 'mifosx-password-preferences',\n  templateUrl: './password-preferences.component.html',\n  styleUrls: ['./password-preferences.component.scss']\n})\nexport class PasswordPreferencesComponent implements OnInit {\n\n  /** Password preferences form. */\n  passwordPreferencesForm: FormGroup;\n  /** Password preferences data. */\n  passwordPreferencesData: any;\n\n  /**\n   * Retrieves the password preferences data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {OrganizationService} organizationService Organization Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private organizationService: OrganizationService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: { passwordPreferencesTemplate: any}) => {\n      this.passwordPreferencesData = data.passwordPreferencesTemplate;\n    });\n  }\n\n  /**\n   * Creates and sets the password preferences form.\n   */\n  ngOnInit() {\n    this.createPasswordPreferencesForm();\n    this.setPasswordPreferencesForm();\n  }\n\n  /**\n   * Creates the password preferences form.\n   */\n  createPasswordPreferencesForm() {\n    this.passwordPreferencesForm = this.formBuilder.group({\n      'validationPolicyId': ['']\n    });\n  }\n\n  /**\n   * Sets the password preferences form.\n   */\n  setPasswordPreferencesForm() {\n    for (const passwordPreference of this.passwordPreferencesData) {\n      if (passwordPreference.active === true) {\n        this.passwordPreferencesForm.get('validationPolicyId').setValue(passwordPreference.id);\n      }\n    }\n  }\n\n  /**\n   * Submits the password preferences form and updates password preferences,\n   * if successful redirects to organization view.\n   */\n  submit() {\n    const passwordPreferences = this.passwordPreferencesForm.value;\n    this.organizationService.updatePasswordPreferences(passwordPreferences).subscribe((response: any) => {\n      this.router.navigate(['../'], { relativeTo: this.route });\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"paymentTypeForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field>\\n            <mat-label>Payment Type</mat-label>\\n            <input required matInput formControlName=\\\"name\\\">\\n            <mat-error *ngIf=\\\"paymentTypeForm.controls.name.hasError('required')\\\">\\n              Payment Type is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Description</mat-label>\\n            <textarea matInput formControlName=\\\"description\\\"></textarea>\\n          </mat-form-field>\\n  \\n          <mat-checkbox labelPosition=\\\"before\\\" formControlName=\\\"isCashPayment\\\" class=\\\"status\\\">\\n            Is Cash Payment?\\n          </mat-checkbox>\\n\\n          <mat-form-field>\\n            <mat-label>Position</mat-label>\\n            <input required matInput formControlName=\\\"position\\\">\\n            <mat-error *ngIf=\\\"paymentTypeForm.controls.position.hasError('required')\\\">\\n              Position is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          \\n        </div>\\n        \\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!paymentTypeForm.valid\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n.status {\\n  padding: 17.5px 0 17.5px 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL29yZ2FuaXphdGlvbi9wYXltZW50LXR5cGVzL2NyZWF0ZS1wYXltZW50LXR5cGUvY3JlYXRlLXBheW1lbnQtdHlwZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLDBCQUEwQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvb3JnYW5pemF0aW9uL3BheW1lbnQtdHlwZXMvY3JlYXRlLXBheW1lbnQtdHlwZS9jcmVhdGUtcGF5bWVudC10eXBlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAzN3JlbTtcbn1cblxuLnN0YXR1cyB7XG4gICAgcGFkZGluZzogMTcuNXB4IDAgMTcuNXB4IDA7XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { OrganizationService } from '../../organization.service';\n\n/**\n * Create Payment Type Component.\n */\n@Component({\n  selector: 'mifosx-create-payment-type',\n  templateUrl: './create-payment-type.component.html',\n  styleUrls: ['./create-payment-type.component.scss']\n})\nexport class CreatePaymentTypeComponent implements OnInit {\n\n  /** Payment Type form. */\n  paymentTypeForm: FormGroup;\n\n  /**\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {OrganizationService} organizationService Organization Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private organizationService: OrganizationService,\n              private router: Router,\n              private route: ActivatedRoute) {}\n\n  /**\n   * Creates and sets the payment type form.\n   */\n  ngOnInit() {\n    this.createpaymentTypeForm();\n  }\n\n  /**\n   * Creates the payment type form.\n   */\n  createpaymentTypeForm() {\n    this.paymentTypeForm = this.formBuilder.group({\n      'name': ['', Validators.required],\n      'description': [''],\n      'isCashPayment': [false],\n      'position': ['', Validators.required],\n    });\n  }\n\n  /**\n   * Submits the payment type form and creates payment type.\n   * if successful redirects to payment types\n   */\n  submit() {\n    const paymentType = this.paymentTypeForm.value;\n    this.organizationService.createPaymentType(paymentType).subscribe(response => {\n      this.router.navigate(['../'], { relativeTo: this.route });\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"paymentTypeForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field>\\n            <mat-label>Payment Type</mat-label>\\n            <input required matInput formControlName=\\\"name\\\">\\n            <mat-error *ngIf=\\\"paymentTypeForm.controls.name.hasError('required')\\\">\\n              Payment Type is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Description</mat-label>\\n            <textarea matInput formControlName=\\\"description\\\"></textarea>\\n          </mat-form-field>\\n  \\n          <mat-checkbox labelPosition=\\\"before\\\" formControlName=\\\"isCashPayment\\\" class=\\\"status\\\">\\n            Is Cash Payment?\\n          </mat-checkbox>\\n\\n          <mat-form-field>\\n            <mat-label>Position</mat-label>\\n            <input required matInput formControlName=\\\"position\\\">\\n            <mat-error *ngIf=\\\"paymentTypeForm.controls.position.hasError('required')\\\">\\n              Position is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n          \\n        </div>\\n        \\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!paymentTypeForm.valid\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n.status {\\n  padding: 17.5px 0 17.5px 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL29yZ2FuaXphdGlvbi9wYXltZW50LXR5cGVzL2VkaXQtcGF5bWVudC10eXBlL2VkaXQtcGF5bWVudC10eXBlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQWdCLEVBQUE7O0FBR3BCO0VBQ0ksMEJBQTBCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9vcmdhbml6YXRpb24vcGF5bWVudC10eXBlcy9lZGl0LXBheW1lbnQtdHlwZS9lZGl0LXBheW1lbnQtdHlwZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICAgIG1heC13aWR0aDogMzdyZW07XG59XG5cbi5zdGF0dXMge1xuICAgIHBhZGRpbmc6IDE3LjVweCAwIDE3LjVweCAwO1xufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { OrganizationService } from 'app/organization/organization.service';\n\n/**\n * Edit Payment Type component.\n */\n@Component({\n  selector: 'mifosx-edit-payment-type',\n  templateUrl: './edit-payment-type.component.html',\n  styleUrls: ['./edit-payment-type.component.scss']\n})\nexport class EditPaymentTypeComponent implements OnInit {\n\n  /** Payment Type form. */\n  paymentTypeForm: FormGroup;\n  /** Payment Type Data. */\n  paymentTypeData: any;\n\n  /**\n   * Retrieves the payment type data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {OrganizationService} organizationService Organization Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private organizationService: OrganizationService,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { paymentType: any }) => {\n      this.paymentTypeData = data.paymentType;\n    });\n  }\n\n  /**\n   * Creates and sets the payment type form.\n   */\n  ngOnInit() {\n    this.createPaymentTypeForm();\n  }\n\n  /**\n   * Creates the payment type form.\n   */\n  createPaymentTypeForm() {\n    this.paymentTypeForm = this.formBuilder.group({\n      'name': [this.paymentTypeData.name, Validators.required],\n      'description': [this.paymentTypeData.description],\n      'isCashPayment': [this.paymentTypeData.isCashPayment],\n      'position': [this.paymentTypeData.position, Validators.required],\n    });\n  }\n\n  /**\n   * Submits the payment type form and updates payment type.\n   * if successful redirects to payment types.\n   */\n  submit() {\n    const paymentType = this.paymentTypeForm.value;\n    this.organizationService.updatePaymentType(this.paymentTypeData.id, paymentType).subscribe(response => {\n      this.router.navigate(['../../'], { relativeTo: this.route });\n    });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { OrganizationService } from 'app/organization/organization.service';\n\n/**\n * Payment Type data resolver.\n */\n@Injectable()\nexport class PaymentTypeResolver implements Resolve<Object> {\n\n  /**\n   * @param {OrganizationService} organizationService Organization service.\n   */\n  constructor(private organizationService: OrganizationService) {}\n\n  /**\n   * Returns the payment type data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const paymentTypeId = route.paramMap.get('id');\n    return this.organizationService.getPaymentType(paymentTypeId);\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['create']\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Payment Type\\n  </button>\\n\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let paymentType\\\"> {{ paymentType.name }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"description\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\\n        <td mat-cell *matCellDef=\\\"let paymentType\\\"> {{ paymentType.description }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"isCashPayment\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Cash Payment </th>\\n        <td mat-cell *matCellDef=\\\"let paymentType\\\">\\n          <div [className]=\\\"paymentType.isCashPayment === true ? 'true' : 'false'\\\">\\n            <fa-icon *ngIf=\\\"paymentType.isCashPayment\\\" icon=\\\"check-circle\\\" size=\\\"lg\\\" matTooltip=\\\"Yes\\\" matTooltipPosition=\\\"right\\\"></fa-icon>\\n            <fa-icon *ngIf=\\\"!paymentType.isCashPayment\\\" icon=\\\"times-circle\\\" size=\\\"lg\\\" matTooltip=\\\"No\\\" matTooltipPosition=\\\"right\\\"></fa-icon>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"position\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Position </th>\\n        <td mat-cell *matCellDef=\\\"let paymentType\\\"> {{ paymentType.position }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\\n        <td mat-cell *matCellDef=\\\"let paymentType\\\">\\n          <button mat-button [routerLink]=\\\"[paymentType.id, 'edit']\\\" color=\\\"primary\\\">\\n            <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;Edit\\n          </button>\\n          <button mat-button (click)=\\\"deletePaymentType(paymentType.id)\\\" color=\\\"warn\\\">\\n            <fa-icon icon=\\\"trash\\\"></fa-icon>&nbsp;&nbsp;Delete\\n          </button>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.true {\\n  color: #32cd32; }\\n\\n.false {\\n  color: #f44366; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL29yZ2FuaXphdGlvbi9wYXltZW50LXR5cGVzL3BheW1lbnQtdHlwZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxjQUFjLEVBQUE7O0FBR2hCO0VBQ0UsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvb3JnYW5pemF0aW9uL3BheW1lbnQtdHlwZXMvcGF5bWVudC10eXBlcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi50cnVlIHtcbiAgY29sb3I6ICMzMmNkMzI7XG59XG5cbi5mYWxzZSB7XG4gIGNvbG9yOiAjZjQ0MzY2O1xufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort, MatDialog } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/** Custom Services */\nimport { OrganizationService } from '../organization.service';\n\n/** Custom Components */\nimport { DeleteDialogComponent } from '../../shared/delete-dialog/delete-dialog.component';\n\n/**\n * Payment Types component.\n */\n@Component({\n  selector: 'mifosx-payment-types',\n  templateUrl: './payment-types.component.html',\n  styleUrls: ['./payment-types.component.scss']\n})\nexport class PaymentTypesComponent implements OnInit {\n\n  /** Payment Types data. */\n  paymentTypesData: any;\n  /** Columns to be displayed in payment types table. */\n  displayedColumns: string[] = ['name', 'description', 'isCashPayment', 'position', 'actions'];\n  /** Data source for payment types table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for payment types table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for payment types table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the payment types data from `resolve`.\n   * @param {OrganizationService} organizationService Organization Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {MatDialog} dialog Dialog reference.\n   */\n  constructor(private organizationService: OrganizationService,\n              private route: ActivatedRoute,\n              private dialog: MatDialog) {\n    this.route.data.subscribe(( data: { paymentTypes: any }) => {\n      this.paymentTypesData = data.paymentTypes;\n    });\n  }\n\n  /**\n   * Filters data in payment types table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the payment types table.\n   */\n  ngOnInit() {\n    this.setPaymentTypes();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for payment types table.\n   */\n  setPaymentTypes() {\n    this.dataSource = new MatTableDataSource(this.paymentTypesData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n   * Deletes the payment type\n   * @param {string} paymentTypeId Payment Type ID of payment type to be deleted.\n   */\n  deletePaymentType(paymentTypeId: string) {\n    const deletePaymentTypeDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `payment type ${paymentTypeId}` }\n    });\n    deletePaymentTypeDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.organizationService.deletePaymentType(paymentTypeId)\n          .subscribe(() => {\n            this.paymentTypesData = this.paymentTypesData.filter((paymentType: any) => paymentType.id !== paymentTypeId);\n            this.setPaymentTypes();\n          });\n      }\n    });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { OrganizationService } from '../organization.service';\n\n/**\n * Payment Types data resolver.\n */\n@Injectable()\nexport class PaymentTypesResolver implements Resolve<Object> {\n\n  /**\n   * @param {OrganizationService} organizationService Organization service.\n   */\n  constructor(private organizationService: OrganizationService) {}\n\n  /**\n   * Returns the payment types data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.organizationService.getPaymentTypes();\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create SMS Campaign\\n  </button>\\n\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"campaignName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let smsCampaign\\\"> {{ smsCampaign.campaignName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"campaignMessage\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Template Message </th>\\n        <td mat-cell *matCellDef=\\\"let smsCampaign\\\"> {{ smsCampaign.campaignMessage }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"campaignType.value\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Campaign Type </th>\\n        <td mat-cell *matCellDef=\\\"let smsCampaign\\\"> {{ smsCampaign.campaignType.value }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"triggerType.value\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Trigger Type </th>\\n        <td mat-cell *matCellDef=\\\"let smsCampaign\\\"> {{ smsCampaign.triggerType.value }} </td>\\n      </ng-container>\\n      \\n      <ng-container matColumnDef=\\\"campaignStatus.value\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\n        <td mat-cell *matCellDef=\\\"let smsCampaign\\\">\\n          <div [className]=\\\"smsCampaign.campaignStatus.code | statusLookup\\\">\\n            <fa-icon matTooltip=\\\"{{ smsCampaign.campaignStatus.value | titlecase }}\\\" matTooltipPosition=\\\"right\\\" icon=\\\"circle\\\" size=\\\"lg\\\"></fa-icon>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"smsCampaignTimeLine.submittedByUsername\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Approved By </th>\\n        <td mat-cell *matCellDef=\\\"let smsCampaign\\\"> {{ smsCampaign.smsCampaignTimeLine.submittedByUsername }} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL29yZ2FuaXphdGlvbi9zbXMtY2FtcGFpZ25zL3Ntcy1jYW1wYWlnbnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7RUFEYjtJQUlNLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL29yZ2FuaXphdGlvbi9zbXMtY2FtcGFpZ25zL3Ntcy1jYW1wYWlnbnMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuXG4gIC5zZWxlY3Qtcm93OmhvdmVyIHtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/**\n * SMS Campaigns component.\n */\n@Component({\n  selector: 'mifosx-sms-campaigns',\n  templateUrl: './sms-campaigns.component.html',\n  styleUrls: ['./sms-campaigns.component.scss']\n})\nexport class SmsCampaignsComponent implements OnInit {\n\n  /** SMS Campaigns data. */\n  smsCampaignsData: any;\n  /** Columns to be displayed in sms campaigns table. */\n  displayedColumns: string[] = ['campaignName', 'campaignMessage', 'campaignType.value', 'triggerType.value', 'campaignStatus.value', 'smsCampaignTimeLine.submittedByUsername'];\n  /** Data source for SMS campaigns table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for SMS campaigns table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for SMS campaigns table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the SMS campaigns data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { smsCampaigns: any }) => {\n      this.smsCampaignsData = data.smsCampaigns.pageItems;\n    });\n  }\n\n  /**\n   * Filters data in SMS campaigns table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the SMS campaigns table.\n   */\n  ngOnInit() {\n    this.setSmsCampaigns();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for SMS campaigns table.\n   */\n  setSmsCampaigns() {\n    this.dataSource = new MatTableDataSource(this.smsCampaignsData);\n    this.dataSource.sortingDataAccessor = (item, property) => {\n      switch (property) {\n        case 'campaignType.value': return item.campaignType.value;\n        case 'triggerType.value': return item.triggerType.value;\n        case 'campaignStatus.value': return item.campaignStatus.value;\n        case 'smsCampaignTimeLine.submittedByUsername': return item.smsCampaignTimeLine.submittedByUsername;\n        default: return item[property];\n      }\n    };\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { OrganizationService } from '../organization.service';\n\n/**\n * SMS Campaigns data resolver.\n */\n@Injectable()\nexport class SmsCampaignsResolver implements Resolve<Object> {\n\n  /**\n   * @param {OrganizationService} organizationService Organization service.\n   */\n  constructor(private organizationService: OrganizationService) {}\n\n  /**\n   * Returns the SMS Campaigns data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.organizationService.getSmsCampaigns();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { OrganizationService } from 'app/organization/organization.service';\n\n/**\n * Teller data resolver.\n */\n@Injectable()\nexport class TellerResolver implements Resolve<Object> {\n\n  /**\n   * @param {OrganizationService} organizationService Organization service.\n   */\n  constructor(private organizationService: OrganizationService) {}\n\n  /**\n   * Returns the teller data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const tellerId = route.paramMap.get('id');\n    return this.organizationService.getTeller(tellerId);\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Teller\\n  </button>\\n\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"officeName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Branch </th>\\n        <td mat-cell *matCellDef=\\\"let teller\\\"> {{ teller.officeName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Teller Name </th>\\n        <td mat-cell *matCellDef=\\\"let teller\\\"> {{ teller.name }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"status\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\n        <td mat-cell *matCellDef=\\\"let teller\\\">\\n          <div [className]=\\\"teller.status === 'ACTIVE' ? 'true' : 'false'\\\">\\n            <fa-icon matTooltip=\\\"{{ teller.status === 'ACTIVE' ? 'Active' : 'Inactive' }}\\\" matTooltipPosition=\\\"right\\\" icon=\\\"circle\\\" size=\\\"lg\\\"></fa-icon>\\n          </div>    \\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"startDate\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Started On </th>\\n        <td mat-cell *matCellDef=\\\"let teller\\\"> {{ teller.startDate | date }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\\n        <td mat-cell *matCellDef=\\\"let teller\\\" (click)=\\\"$event.stopPropagation()\\\">\\n          <button mat-button color=\\\"primary\\\">\\n            <fa-icon icon=\\\"eye\\\"></fa-icon>&nbsp;&nbsp;View Cashiers\\n          </button>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id]\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n  .true {\\n  color: #32cd32; }\\n  .false {\\n  color: #f44366; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL29yZ2FuaXphdGlvbi90ZWxsZXJzL3RlbGxlcnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7RUFEYjtJQUlNLGVBQWUsRUFBQTtFQUlyQjtFQUNFLGNBQWMsRUFBQTtFQUdoQjtFQUNFLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL29yZ2FuaXphdGlvbi90ZWxsZXJzL3RlbGxlcnMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuXG4gIC5zZWxlY3Qtcm93OmhvdmVyIHtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxufVxuXG4udHJ1ZSB7XG4gIGNvbG9yOiAjMzJjZDMyO1xufVxuXG4uZmFsc2Uge1xuICBjb2xvcjogI2Y0NDM2Njtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/**\n * Tellers component.\n */\n@Component({\n  selector: 'mifosx-tellers',\n  templateUrl: './tellers.component.html',\n  styleUrls: ['./tellers.component.scss']\n})\nexport class TellersComponent implements OnInit {\n\n  /** Tellers data. */\n  tellersData: any;\n  /** Columns to be displayed in tellers table. */\n  displayedColumns: string[] = ['officeName', 'name', 'status', 'startDate', 'actions'];\n  /** Data source for tellers table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for tellers table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for tellers table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the tellers data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { tellers: any }) => {\n      this.tellersData = data.tellers;\n    });\n  }\n\n  /**\n   * Filters data in tellers table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the tellers table.\n   */\n  ngOnInit() {\n    this.setTellers();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for tellers table.\n   */\n  setTellers() {\n    this.dataSource = new MatTableDataSource(this.tellersData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { OrganizationService } from '../organization.service';\n\n/**\n * Tellers data resolver.\n */\n@Injectable()\nexport class TellersResolver implements Resolve<Object> {\n\n  /**\n   * @param {OrganizationService} organizationService Organization service.\n   */\n  constructor(private organizationService: OrganizationService) {}\n\n  /**\n   * Returns the Tellers data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.organizationService.getTellers();\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" class=\\\"container m-b-20\\\">\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteTeller()\\\">\\n    <fa-icon icon=\\\"trash\\\"></fa-icon>&nbsp;&nbsp;\\n    Delete\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-content>\\n\\n      <div fxLayout=\\\"row wrap\\\" class=\\\"content\\\">\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Office\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ tellerData.officeName }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\" *ngIf=\\\"tellerData.description\\\">\\n          Description\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" *ngIf=\\\"tellerData.description\\\">\\n          {{ tellerData.description }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Start Date\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ tellerData.startDate | date }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\" *ngIf=\\\"tellerData.endDate\\\">\\n          End Date\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" *ngIf=\\\"tellerData.endDate\\\">\\n          {{ tellerData.endDate | date }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Status\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ tellerData.status | titlecase }}\\n        </div>\\n\\n      </div>\\n\\n    </mat-card-content>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n  .container .content div {\\n    margin: 1rem 0;\\n    word-wrap: break-word; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL29yZ2FuaXphdGlvbi90ZWxsZXJzL3ZpZXctdGVsbGVyL3ZpZXctdGVsbGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCLEVBQUE7RUFEbEI7SUFLTSxjQUFjO0lBQ2QscUJBQXFCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9vcmdhbml6YXRpb24vdGVsbGVycy92aWV3LXRlbGxlci92aWV3LXRlbGxlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDM3cmVtO1xuICBcbiAgLmNvbnRlbnQge1xuICAgIGRpdiB7XG4gICAgICBtYXJnaW46IDFyZW0gMDtcbiAgICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgICB9XG4gIH1cbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\n\n/** Custom Services */\nimport { OrganizationService } from 'app/organization/organization.service';\n\n/** Custom Components */\nimport { DeleteDialogComponent } from '../../../shared/delete-dialog/delete-dialog.component';\n\n/**\n * View Teller Component.\n */\n@Component({\n  selector: 'mifosx-view-teller',\n  templateUrl: './view-teller.component.html',\n  styleUrls: ['./view-teller.component.scss']\n})\nexport class ViewTellerComponent implements OnInit {\n\n  /** Teller data. */\n  tellerData: any;\n\n  /**\n   * Retrieves the Teller data from `resolve`.\n   * @param {OrganizationService} organizationService Organization Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   * @param {MatDialog} dialog Dialog reference.\n   */\n  constructor(private organizationService: OrganizationService,\n              private route: ActivatedRoute,\n              private router: Router,\n              public dialog: MatDialog) {\n    this.route.data.subscribe((data: { teller: any }) => {\n      this.tellerData = data.teller;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Deletes the teller and redirects to tellers.\n   */\n  deleteTeller() {\n    const deleteTellerDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `teller ${this.tellerData.id}` }\n    });\n    deleteTellerDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.organizationService.deleteTeller(this.tellerData.id)\n          .subscribe(() => {\n            this.router.navigate(['/organization/tellers']);\n          });\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"workingDaysForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"column\\\">\\n\\n          <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n            <mat-label fxFlex=\\\"50%\\\" class=\\\"mat-h4\\\">Working Days</mat-label>\\n            <div fxFlex=\\\"50%\\\" fxLayout=\\\"column\\\" formArrayName=\\\"recurrence\\\">\\n              <div *ngFor=\\\"let day of recurrence.controls; let i = index;\\\">\\n                <mat-checkbox labelPosition=\\\"after\\\" [formControlName]=\\\"i\\\">\\n                  {{ weekDays[i].name }}\\n                </mat-checkbox>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <mat-form-field>\\n            <mat-label>Payments due on non working days</mat-label>\\n            <mat-select formControlName=\\\"repaymentRescheduleType\\\">\\n              <mat-option *ngFor=\\\"let repaymentRescheduleType of repaymentRescheduleTypeData\\\" [value]=\\\"repaymentRescheduleType.id\\\">\\n                {{ repaymentRescheduleType.value }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-checkbox labelPosition=\\\"before\\\" formControlName=\\\"extendTermForDailyRepayments\\\">\\n            Extend the term for loans following a daily repayment schedule\\n          </mat-checkbox>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"workingDaysForm.pristine\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL29yZ2FuaXphdGlvbi93b3JraW5nLWRheXMvd29ya2luZy1kYXlzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9vcmdhbml6YXRpb24vd29ya2luZy1kYXlzL3dvcmtpbmctZGF5cy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDM3cmVtO1xufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { OrganizationService } from '../organization.service';\n\n/** Recurrence default value. */\nconst recurrenceDefaultValue = 'FREQ=WEEKLY;INTERVAL=1;BYDAY=';\n\n/**\n * Working days component.\n */\n@Component({\n  selector: 'mifosx-working-days',\n  templateUrl: './working-days.component.html',\n  styleUrls: ['./working-days.component.scss']\n})\nexport class WorkingDaysComponent implements OnInit {\n\n  /** Working days form. */\n  workingDaysForm: FormGroup;\n  /** Working days data. */\n  workingDaysData: any;\n  /** Week days */\n  weekDays = [\n    { name: 'Monday', value: 'MO', checked: false },\n    { name: 'Tuesday', value: 'TU', checked: false },\n    { name: 'Wednesday', value: 'WE', checked: false },\n    { name: 'Thursday', value: 'TH', checked: false },\n    { name: 'Friday', value: 'FR', checked: false },\n    { name: 'Saturday', value: 'SA', checked: false },\n    { name: 'Sunday', value: 'SU', checked: false }\n  ];\n  /**  Repayment schedule type data. */\n  repaymentRescheduleTypeData: any;\n\n  /**\n   * Retrieves the working days data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {OrganizationService} organizationService Organization Service.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private route: ActivatedRoute,\n              private organizationService: OrganizationService,\n              private router: Router) {\n    this.route.data.subscribe((data: { workingDays: any }) => {\n      this.workingDaysData = data.workingDays;\n    });\n  }\n\n  /**\n   * Creates the working days form.\n   */\n  ngOnInit() {\n    this.createWorkingDaysForm();\n  }\n\n  /**\n   * Creates the working days form.\n   */\n  createWorkingDaysForm() {\n    this.setWeeklyWorkingDays();\n    this.repaymentRescheduleTypeData = this.workingDaysData.repaymentRescheduleOptions;\n    this.workingDaysForm = this.formBuilder.group({\n      'recurrence': this.formBuilder.array(this.createRecurrenceFormArray()),\n      'repaymentRescheduleType': [this.workingDaysData.repaymentRescheduleType.id],\n      'extendTermForDailyRepayments': [this.workingDaysData.extendTermForDailyRepayments]\n    });\n  }\n\n  /**\n   * @returns {FormArray} recurrence form array.\n   */\n  get recurrence(): FormArray {\n    return this.workingDaysForm.get('recurrence') as FormArray;\n  }\n\n  /**\n   * Sets weekly working days.\n   */\n  setWeeklyWorkingDays() {\n    const days = this.workingDaysData.recurrence.replace(recurrenceDefaultValue, '');\n    for (let i = 0; i < this.weekDays.length; i++) {\n      this.weekDays[i].checked = days.includes(this.weekDays[i].value);\n    }\n  }\n\n  /**\n   * Creates the recurrence form array.\n   */\n  createRecurrenceFormArray() {\n    return this.weekDays.map(weekDay => new FormControl(weekDay.checked));\n  }\n\n  /**\n   * Submits the working days form and updates working days configuration,\n   * if successful redirects to organization view.\n   */\n  submit() {\n    const workingDays = this.workingDaysForm.value;\n    // TODO: Update once language and date settings are setup\n    workingDays.locale = 'en';\n    let recurrence = recurrenceDefaultValue;\n    for (let i = 0; i < this.weekDays.length; i++) {\n      if (workingDays.recurrence[i]) {\n        recurrence = recurrence + this.weekDays[i].value + ',';\n      }\n    }\n    workingDays.recurrence = recurrence;\n    this.organizationService.updateWorkingDays(workingDays).subscribe(response => {\n      this.router.navigate(['../'], { relativeTo: this.route });\n    });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { OrganizationService } from '../organization.service';\n\n/**\n * Working Days data resolver.\n */\n@Injectable()\nexport class WorkingDaysResolver implements Resolve<Object> {\n\n  /**\n   * @param {OrganizationService} organizationService Organization service.\n   */\n  constructor(private organizationService: OrganizationService) {}\n\n  /**\n   * Returns the working days data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.organizationService.getWorkingDays();\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'accountsFilter'\n})\nexport class AccountsFilterPipe implements PipeTransform {\n\n  transform(accounts: any, type: any, status: any): any {\n    if (accounts) {\n      if (type === 'loan') {\n        if (status === 'closed') {\n          accounts = accounts.filter((account: any) => {\n            return (account.status.code === 'loanStatusType.closed.written.off' ||\n              account.status.code === 'loanStatusType.closed.obligations.met' ||\n              account.status.code === 'loanStatusType.closed.reschedule.outstanding.amount' ||\n              account.status.code === 'loanStatusType.withdrawn.by.client' ||\n              account.status.code === 'loanStatusType.rejected');\n          });\n        } else {\n          accounts = accounts.filter((account: any) => {\n            return (account.status.code !== 'loanStatusType.closed.written.off' &&\n              account.status.code !== 'loanStatusType.closed.obligations.met' &&\n              account.status.code !== 'loanStatusType.closed.reschedule.outstanding.amount' &&\n              account.status.code !== 'loanStatusType.withdrawn.by.client' &&\n              account.status.code !== 'loanStatusType.rejected');\n          });\n        }\n      }\n      if (type === 'saving') {\n        if (status === 'closed') {\n          accounts = accounts.filter((account: any) => {\n            return (account.status.code === 'savingsAccountStatusType.withdrawn.by.applicant' ||\n              account.status.code === 'savingsAccountStatusType.closed' ||\n              account.status.code === 'savingsAccountStatusType.pre.mature.closure' ||\n              account.status.code === 'savingsAccountStatusType.rejected');\n          });\n        } else {\n          accounts = accounts.filter((account: any) => {\n            return (account.status.code !== 'savingsAccountStatusType.withdrawn.by.applicant' &&\n              account.status.code !== 'savingsAccountStatusType.closed' &&\n              account.status.code !== 'savingsAccountStatusType.pre.mature.closure' &&\n              account.status.code !== 'savingsAccountStatusType.rejected');\n          });\n        }\n      }\n      if (type === 'share') {\n        if (status === 'closed') {\n          accounts = accounts.filter((account: any) => {\n            return (account.status.code === 'shareAccountStatusType.closed' ||\n              account.status.code === 'shareAccountStatusType.rejected');\n          });\n        } else {\n          accounts = accounts.filter((account: any) => {\n            return (account.status.code !== 'shareAccountStatusType.closed' &&\n              account.status.code !== 'shareAccountStatusType.rejected');\n          });\n        }\n      }\n      return accounts;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'chargesFilter'\n})\nexport class ChargesFilterPipe implements PipeTransform {\n\n  transform(charges: any, chargesDataSource: any, currencyCode: string, multiDisburseLoan?: boolean): any {\n    if (charges) {\n      charges = charges.filter((charge: any) => {\n        if ((charge.currency.code !== currencyCode) || (!!multiDisburseLoan && charge.chargeTimeType.id === 12) || chargesDataSource.filter((chargeData: any) => chargeData.id === charge.id).length) {\n          return false;\n        }\n        return true;\n      });\n    }\n    return charges;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'chargesPenaltyFilter'\n})\nexport class ChargesPenaltyFilterPipe implements PipeTransform {\n\n  transform(charges: any, penalty: boolean): any {\n    if (charges) {\n      charges = charges.filter((charge: any) => {\n        if (charge.penalty === penalty) {\n          return true;\n        }\n        return false;\n      });\n    }\n    return charges;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'find'\n})\nexport class FindPipe implements PipeTransform {\n\n  transform(value: any, options: any, key: string, property: string): any {\n    let optionFound;\n    if (options) {\n      optionFound = options.find((option: any) => option[key] === value);\n    }\n    return optionFound ? optionFound[property] : '';\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StatusLookupPipe } from './status-lookup.pipe';\nimport { AccountsFilterPipe } from './accounts-filter.pipe';\nimport { ChargesFilterPipe } from './charges-filter.pipe';\nimport { ChargesPenaltyFilterPipe } from './charges-penalty-filter.pipe';\nimport { FindPipe } from './find.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [StatusLookupPipe, AccountsFilterPipe, ChargesFilterPipe, ChargesPenaltyFilterPipe, FindPipe],\n  providers: [StatusLookupPipe, AccountsFilterPipe, ChargesFilterPipe, ChargesPenaltyFilterPipe, FindPipe],\n  exports: [StatusLookupPipe, AccountsFilterPipe, ChargesFilterPipe, ChargesPenaltyFilterPipe, FindPipe]\n})\nexport class PipesModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'statusLookup'\n})\nexport class StatusLookupPipe implements PipeTransform {\n\n  transform(status: string): string {\n    const cssClassNameLookup = {\n      'true': 'status-active',\n      'false': 'status-deleted',\n      'Active': 'status-active',\n      'charges.StatusType.active.true': 'status-active',\n      'loanStatusType.submitted.and.pending.approval': 'status-pending',\n      'loanStatusType.approved': 'status-approved',\n      'loanStatusType.active': 'status-active',\n      'loanStatusType.overpaid': 'status-overpaid',\n      'savingsAccountStatusType.submitted.and.pending.approval': 'status-pending',\n      'savingsAccountStatusType.approved': 'status-approved',\n      'savingsAccountStatusType.active': 'status-active',\n      'savingsAccountStatusType.activeInactive': 'status-active-overdue',\n      'savingsAccountStatusType.activeDormant': 'status-active-overdue',\n      'savingsAccountStatusType.matured': 'status-matured',\n      'shareAccountStatusType.submitted.and.pending.approval': 'status-pending',\n      'shareAccountStatusType.approved': 'status-approved',\n      'shareAccountStatusType.active': 'status-active',\n      'shareAccountStatusType.rejected': 'status-rejected',\n      'loanProduct.active': 'status-active',\n      'loanProduct.inActive': 'status-inactive',\n      'clientStatusType.pending': 'status-pending',\n      'clientStatusType.closed': 'status-closed',\n      'clientStatusType.rejected': 'status-rejected', // write\n      'clientStatusType.withdraw': 'status-withdraw', // write\n      'clientStatusType.active': 'status-active',\n      'clientStatusType.submitted.and.pending.approval': 'status-pending',\n      'clientStatusTYpe.approved': 'status-approved',\n      'clientStatusType.transfer.in.progress': 'status-transfer-progress', // write\n      'clientStatusType.transfer.on.hold': 'status-transfer-hold', // write\n      'smsCampaignStatus.active': 'status-active',\n      'smsCampaignStatus.pending': 'status-pending',\n      'smsCampaignStatus.closed': 'status-closed',\n    };\n    return cssClassNameLookup[status];\n  }\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from 'app/products/products.service';\n\n/**\n * Charge data resolver.\n */\n@Injectable()\nexport class ChargeResolver implements Resolve<Object> {\n\n  /**\n   * @param {productsService} productsService Products service.\n   */\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the charge data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const chargeId = route.paramMap.get('id');\n    return this.productsService.getCharge(chargeId);\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Charge\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\"> {{ charge.name }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"chargeAppliesTo\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Charge Applies To </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\"> {{ charge.chargeAppliesTo.value }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"penalty\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Is Penalty? </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\">\\n            <fa-icon *ngIf=\\\"charge.penalty\\\" icon=\\\"check-circle\\\" size=\\\"lg\\\" class=\\\"ispenalty\\\" matTooltip=\\\"Yes\\\" matTooltipPosition=\\\"right\\\"></fa-icon>\\n            <fa-icon *ngIf=\\\"!charge.penalty\\\" icon=\\\"times-circle\\\" size=\\\"lg\\\" class=\\\"nopenalty\\\" matTooltip=\\\"No\\\" matTooltipPosition=\\\"right\\\"></fa-icon>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"active\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\">\\n          <div [className]=\\\"charge.active === true ? 'true' : 'false'\\\">\\n            <fa-icon matTooltip=\\\"{{ charge.active === true ? 'Active' : 'Inactive' }}\\\" matTooltipPosition=\\\"right\\\" icon=\\\"circle\\\" size=\\\"lg\\\"></fa-icon>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id]\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n  .true {\\n  color: #32cd32; }\\n  .false {\\n  color: #f44366; }\\n  .ispenalty {\\n  color: #32cd32; }\\n  .nopenalty {\\n  color: #f44366; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2NoYXJnZXMvY2hhcmdlcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTtFQURiO0lBSUksZUFBZSxFQUFBO0VBSW5CO0VBQ0UsY0FBYyxFQUFBO0VBR2hCO0VBQ0UsY0FBYyxFQUFBO0VBR2hCO0VBQ0UsY0FBYyxFQUFBO0VBR2hCO0VBQ0UsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdHMvY2hhcmdlcy9jaGFyZ2VzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcblxuICAuc2VsZWN0LXJvdzpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG59XG5cbi50cnVlIHtcbiAgY29sb3I6ICMzMmNkMzI7XG59XG5cbi5mYWxzZSB7XG4gIGNvbG9yOiAjZjQ0MzY2O1xufVxuXG4uaXNwZW5hbHR5IHtcbiAgY29sb3I6ICMzMmNkMzI7XG59XG5cbi5ub3BlbmFsdHkge1xuICBjb2xvcjogI2Y0NDM2Njtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, ViewChild, OnInit } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/**\n * Charges component.\n */\n@Component({\n  selector: 'mifosx-charges',\n  templateUrl: './charges.component.html',\n  styleUrls: ['./charges.component.scss']\n})\nexport class ChargesComponent implements OnInit {\n\n  /** Charge data. */\n  chargeData: any;\n  /** Columns to be displayed in charges table. */\n  displayedColumns: string[] = ['name', 'chargeAppliesTo', 'penalty', 'active'];\n  /** Data source for charges table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for charges table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for charges table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the charges data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { charges: any }) => {\n      this.chargeData = data.charges;\n    });\n  }\n\n  /**\n   * Filters data in charges table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the charges table.\n   */\n  ngOnInit() {\n    this.setCharges();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for charges table.\n   */\n  setCharges() {\n    this.dataSource = new MatTableDataSource(this.chargeData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sortingDataAccessor = (charge: any, property: any) => {\n      switch (property) {\n        case 'chargeAppliesTo': return charge.chargeAppliesTo.value;\n        default: return charge[property];\n      }\n    };\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../products.service';\n\n/**\n * Charges data resolver.\n */\n@Injectable()\nexport class ChargesResolver implements Resolve<Object> {\n\n  /**\n   * @param {ProductsService} productsService Products service.\n   */\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the products data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.productsService.getCharges();\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" class=\\\"container m-b-20\\\">\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteCharge()\\\">\\n    <fa-icon icon=\\\"trash\\\"></fa-icon>&nbsp;&nbsp;\\n    Delete\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-content>\\n\\n      <div fxLayout=\\\"row wrap\\\" class=\\\"content\\\">\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Charge Type\\n        </div>\\n          \\n        <div fxFlex=\\\"50%\\\">\\n          {{ chargeData.penalty === true ? 'Penalty' : 'Charge' }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Currency\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ chargeData.currency.name }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Amount\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ chargeData.amount }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Charge Time Type\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ chargeData.chargeTimeType.value }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Charge Applies to\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ chargeData.chargeAppliesTo.value }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Charge Calculation Type\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ chargeData.chargeCalculationType.value }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Charge Payment Mode\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ chargeData.chargePaymentMode.value }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Active\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ chargeData.active === true ? 'Yes' : 'No' }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\" *ngIf=\\\"chargeData.chargeTimeType.id == 9\\\">\\n          Fee Frequency\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" *ngIf=\\\"chargeData.chargeTimeType.id == 9\\\">\\n          {{ chargeData.feeFrequency.value }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\" *ngIf=\\\"chargeData.chargeTimeType.id == 9\\\">\\n          Frequency Interval\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" *ngIf=\\\"chargeData.chargeTimeType.id == 9\\\">\\n          {{ chargeData.feeInterval }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\" *ngIf=\\\"chargeData.incomeOrLiabilityAccount\\\">\\n          Income from Charges\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" *ngIf=\\\"chargeData.incomeOrLiabilityAccount\\\">\\n          {{ chargeData.incomeOrLiabilityAccount.name + ' (' + chargeData.incomeOrLiabilityAccount.glCode + ')' }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\" *ngIf=\\\"chargeData.taxGroup\\\">\\n          Tax Group\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" *ngIf=\\\"chargeData.taxGroup\\\">\\n          {{ chargeData.taxGroup.name }}\\n        </div>\\n\\n      </div>\\n\\n    </mat-card-content>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n  .container .content div {\\n    margin: 1rem 0;\\n    word-wrap: break-word; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2NoYXJnZXMvdmlldy1jaGFyZ2Uvdmlldy1jaGFyZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0IsRUFBQTtFQURsQjtJQUtNLGNBQWM7SUFDZCxxQkFBcUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL2NoYXJnZXMvdmlldy1jaGFyZ2Uvdmlldy1jaGFyZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAzN3JlbTtcbiAgXG4gIC5jb250ZW50IHtcbiAgICBkaXYge1xuICAgICAgbWFyZ2luOiAxcmVtIDA7XG4gICAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gICAgfVxuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\n\n/** Custom Services */\nimport { ProductsService } from 'app/products/products.service';\n\n/** Custom Components */\nimport { DeleteDialogComponent } from '../../../shared/delete-dialog/delete-dialog.component';\n\n/**\n * View Charge Component.\n */\n@Component({\n  selector: 'mifosx-view-charge',\n  templateUrl: './view-charge.component.html',\n  styleUrls: ['./view-charge.component.scss']\n})\nexport class ViewChargeComponent implements OnInit {\n\n  /** Charge data. */\n  chargeData: any;\n\n  /**\n   * Retrieves the charge data from `resolve`.\n   * @param {ProductsService} productsService Products Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   * @param {MatDialog} dialog Dialog reference.\n   */\n  constructor(private productsService: ProductsService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private dialog: MatDialog) {\n    this.route.data.subscribe((data: { charge: any }) => {\n      this.chargeData = data.charge;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Deletes the charge and redirects to charges.\n   */\n  deleteCharge() {\n    const deleteChargeDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `charge ${this.chargeData.id}` }\n    });\n    deleteChargeDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.productsService.deleteCharge(this.chargeData.id)\n          .subscribe(() => {\n            this.router.navigate(['/products/charges']);\n          });\n      }\n    });\n  }\n\n}\n","module.exports = \"<h1 mat-dialog-title>{{ title }}</h1>\\n\\n<div mat-dialog-content [formGroup]=\\\"depositProductIncentiveForm\\\" fxLayout=\\\"column\\\">\\n\\n  <mat-form-field>\\n    <mat-label>Attribute</mat-label>\\n    <mat-select formControlName=\\\"attributeName\\\" required>\\n      <mat-option *ngFor=\\\"let attributeName of attributeNameData\\\" [value]=\\\"attributeName.id\\\">\\n        {{ attributeName.value }}\\n      </mat-option>\\n    </mat-select>\\n    <mat-error>\\n      Attribute is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Condition</mat-label>\\n    <mat-select formControlName=\\\"conditionType\\\" required>\\n      <mat-option *ngFor=\\\"let conditionType of conditionTypeData\\\" [value]=\\\"conditionType.id\\\">\\n        {{ conditionType.value }}\\n      </mat-option>\\n    </mat-select>\\n    <mat-error>\\n      Condition is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field *ngIf=\\\"depositProductIncentiveForm.value.attributeName\\\">\\n    <mat-label>Value</mat-label>\\n    <mat-select formControlName=\\\"attributeValue\\\" *ngIf=\\\"depositProductIncentiveForm.value.attributeName !== 3\\\" required>\\n      <mat-option *ngFor=\\\"let attributeValue of attributeValueData\\\" [value]=\\\"attributeValue.id\\\">\\n        {{ attributeValue.name }}\\n      </mat-option>\\n    </mat-select>\\n    <input type=\\\"number\\\" matInput formControlName=\\\"attributeValue\\\" *ngIf=\\\"depositProductIncentiveForm.value.attributeName === 3\\\" required>\\n    <mat-error>\\n      Value is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Type</mat-label>\\n    <mat-select formControlName=\\\"incentiveType\\\" required>\\n      <mat-option *ngFor=\\\"let incentiveType of incentiveTypeData\\\" [value]=\\\"incentiveType.id\\\">\\n        {{ incentiveType.value }}\\n      </mat-option>\\n    </mat-select>\\n    <mat-error>\\n      Type is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Interest</mat-label>\\n    <input type=\\\"number\\\" matInput formControlName=\\\"amount\\\" required>\\n    <mat-error>\\n      Interest is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n\\n</div>\\n\\n<mat-dialog-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n  <button mat-raised-button mat-dialog-close> Cancel </button>\\n  <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"{ data: depositProductIncentiveForm }\\\" [disabled]=\\\"!depositProductIncentiveForm.valid || depositProductIncentiveForm.pristine\\\">{{ layout.addButtonText }}</button>\\n</mat-dialog-actions>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL2RlcG9zaXQtcHJvZHVjdC1pbmNlbnRpdmUtZm9ybS1kaWFsb2cvZGVwb3NpdC1wcm9kdWN0LWluY2VudGl2ZS1mb3JtLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'mifosx-deposit-product-incentive-form-dialog',\n  templateUrl: './deposit-product-incentive-form-dialog.component.html',\n  styleUrls: ['./deposit-product-incentive-form-dialog.component.scss']\n})\nexport class DepositProductIncentiveFormDialogComponent implements OnInit {\n\n  layout: {\n    addButtonText?: string\n  } = {\n    addButtonText: 'Add'\n  };\n\n  depositProductIncentiveForm: FormGroup;\n\n  title: string;\n\n  entityTypeData: any;\n  attributeNameData: any;\n  conditionTypeData: any;\n  attributeValueData: any;\n  incentiveTypeData: any;\n\n  constructor(public dialogRef: MatDialogRef<DepositProductIncentiveFormDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private formBuilder: FormBuilder) {\n    this.createDepositProductIncentiveForm();\n    this.setConditionalControls();\n    this.layout = { ...this.layout, ...data.layout };\n    this.dialogRef.disableClose = true;\n  }\n\n  ngOnInit() {\n    this.dialogRef.updateSize('400px');\n\n    this.entityTypeData = this.data.chartTemplate.entityTypeOptions;\n    this.attributeNameData = this.data.chartTemplate.attributeNameOptions;\n    this.conditionTypeData = this.data.chartTemplate.conditionTypeOptions;\n    this.incentiveTypeData = this.data.chartTemplate.incentiveTypeOptions;\n\n    if (this.data.values) {\n      this.depositProductIncentiveForm.patchValue({\n        'entityType': this.data.values.entityType,\n        'attributeName': this.data.values.attributeName,\n        'conditionType': this.data.values.conditionType,\n        'attributeValue': this.data.values.attributeValue,\n        'incentiveType': this.data.values.incentiveType,\n        'amount': this.data.values.amount\n      });\n    } else {\n      this.depositProductIncentiveForm.patchValue({\n        'entityType': this.data.entityType\n      });\n    }\n\n    this.title = `Incentives: ${this.entityTypeData.find((entityType: any) => this.depositProductIncentiveForm.get('entityType').value === entityType.id).value} Attributes`;\n  }\n\n  setConditionalControls() {\n    this.depositProductIncentiveForm.get('attributeName').valueChanges\n      .subscribe((attributeName: any) => {\n        this.depositProductIncentiveForm.patchValue({ 'attributeValue': '' });\n        this.attributeValueData = this.data.chartTemplate[`${this.attributeNameData.find((option: any) => option.id === attributeName).code.split('.')[1]}Options`];\n      });\n  }\n\n  createDepositProductIncentiveForm() {\n    this.depositProductIncentiveForm = this.formBuilder.group({\n      'entityType': [''],\n      'attributeName': ['', Validators.required],\n      'conditionType': ['', Validators.required],\n      'attributeValue': ['', Validators.required],\n      'incentiveType': ['', Validators.required],\n      'amount': ['', Validators.required]\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-horizontal-stepper class=\\\"mat-elevation-z8\\\" labelPosition=\\\"bottom\\\" #fixedDepositProductStepper>\\n\\n    <ng-template matStepperIcon=\\\"number\\\">\\n      <fa-icon icon=\\\"pencil-alt\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"edit\\\">\\n      <fa-icon icon=\\\"pencil-alt\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"done\\\">\\n      <fa-icon icon=\\\"check\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"error\\\">\\n      <fa-icon icon=\\\"exclamation-triangle\\\" size=\\\"lg\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"preview\\\">\\n      <fa-icon icon=\\\"eye\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <mat-step [stepControl]=\\\"fixedDepositProductDetailsForm\\\">\\n\\n      <ng-template matStepLabel>DETAILS</ng-template>\\n\\n      <mifosx-fixed-deposit-product-details-step></mifosx-fixed-deposit-product-details-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"fixedDepositProductCurrencyForm\\\">\\n\\n      <ng-template matStepLabel>CURRENCY</ng-template>\\n\\n      <mifosx-fixed-deposit-product-currency-step [fixedDepositProductsTemplate]=\\\"fixedDepositProductsTemplate\\\"></mifosx-fixed-deposit-product-currency-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"fixedDepositProductTermsForm\\\">\\n\\n      <ng-template matStepLabel>TERMS</ng-template>\\n\\n      <mifosx-fixed-deposit-product-terms-step [fixedDepositProductsTemplate]=\\\"fixedDepositProductsTemplate\\\"></mifosx-fixed-deposit-product-terms-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"fixedDepositProductSettingsForm\\\">\\n\\n      <ng-template matStepLabel>SETTINGS</ng-template>\\n\\n      <mifosx-fixed-deposit-product-settings-step [fixedDepositProductsTemplate]=\\\"fixedDepositProductsTemplate\\\"></mifosx-fixed-deposit-product-settings-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"fixedDepositProductInterestRateChartForm\\\">\\n\\n      <ng-template matStepLabel>INTEREST RATE CHART</ng-template>\\n\\n      <mifosx-fixed-deposit-product-interest-rate-chart-step [fixedDepositProductsTemplate]=\\\"fixedDepositProductsTemplate\\\"></mifosx-fixed-deposit-product-interest-rate-chart-step>\\n\\n    </mat-step>\\n\\n    <mat-step>\\n\\n      <ng-template matStepLabel>CHARGES</ng-template>\\n\\n      <mifosx-fixed-deposit-product-charges-step\\n        [fixedDepositProductsTemplate]=\\\"fixedDepositProductsTemplate\\\"\\n        [currencyCode]=\\\"fixedDepositProductCurrencyForm.get('currencyCode')\\\"\\n      >\\n      </mifosx-fixed-deposit-product-charges-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"fixedDepositProductAccountingForm\\\">\\n\\n      <ng-template matStepLabel>ACCOUNTING</ng-template>\\n\\n      <mifosx-fixed-deposit-product-accounting-step\\n        [fixedDepositProductsTemplate]=\\\"fixedDepositProductsTemplate\\\"\\n        [accountingRuleData]=\\\"accountingRuleData\\\"\\n        [fixedDepositProductFormValid]=\\\"fixedDepositProductFormValid\\\"\\n      >\\n      </mifosx-fixed-deposit-product-accounting-step>\\n\\n    </mat-step>\\n\\n    <mat-step state=\\\"preview\\\" *ngIf=\\\"fixedDepositProductFormValid\\\" completed>\\n\\n      <ng-template matStepLabel>PREVIEW</ng-template>\\n\\n      <mifosx-fixed-deposit-product-preview-step\\n        [fixedDepositProductsTemplate]=\\\"fixedDepositProductsTemplate\\\"\\n        [chartSlabsDisplayedColumns]=\\\"fixedDepositProductInterestRateChartStep.chartSlabsDisplayedColumns\\\"\\n        [accountingRuleData]=\\\"accountingRuleData\\\"\\n        [fixedDepositProduct]=\\\"fixedDepositProduct\\\"\\n        (submit)=\\\"submit()\\\"\\n      >\\n      </mifosx-fixed-deposit-product-preview-step>\\n\\n    </mat-step>\\n\\n  </mat-horizontal-stepper>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL2ZpeGVkLWRlcG9zaXQtcHJvZHVjdHMvY3JlYXRlLWZpeGVkLWRlcG9zaXQtcHJvZHVjdC9jcmVhdGUtZml4ZWQtZGVwb3NpdC1wcm9kdWN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { FixedDepositProductDetailsStepComponent } from '../fixed-deposit-product-stepper/fixed-deposit-product-details-step/fixed-deposit-product-details-step.component';\nimport { FixedDepositProductCurrencyStepComponent } from '../fixed-deposit-product-stepper/fixed-deposit-product-currency-step/fixed-deposit-product-currency-step.component';\nimport { FixedDepositProductTermsStepComponent } from '../fixed-deposit-product-stepper/fixed-deposit-product-terms-step/fixed-deposit-product-terms-step.component';\nimport { FixedDepositProductSettingsStepComponent } from '../fixed-deposit-product-stepper/fixed-deposit-product-settings-step/fixed-deposit-product-settings-step.component';\nimport { FixedDepositProductInterestRateChartStepComponent } from '../fixed-deposit-product-stepper/fixed-deposit-product-interest-rate-chart-step/fixed-deposit-product-interest-rate-chart-step.component';\nimport { FixedDepositProductChargesStepComponent } from '../fixed-deposit-product-stepper/fixed-deposit-product-charges-step/fixed-deposit-product-charges-step.component';\nimport { FixedDepositProductAccountingStepComponent } from '../fixed-deposit-product-stepper/fixed-deposit-product-accounting-step/fixed-deposit-product-accounting-step.component';\n\nimport { ProductsService } from 'app/products/products.service';\n\n@Component({\n  selector: 'mifosx-create-fixed-deposit-product',\n  templateUrl: './create-fixed-deposit-product.component.html',\n  styleUrls: ['./create-fixed-deposit-product.component.scss']\n})\nexport class CreateFixedDepositProductComponent implements OnInit {\n\n  @ViewChild(FixedDepositProductDetailsStepComponent) fixedDepositProductDetailsStep: FixedDepositProductDetailsStepComponent;\n  @ViewChild(FixedDepositProductCurrencyStepComponent) fixedDepositProductCurrencyStep: FixedDepositProductCurrencyStepComponent;\n  @ViewChild(FixedDepositProductTermsStepComponent) fixedDepositProductTermsStep: FixedDepositProductTermsStepComponent;\n  @ViewChild(FixedDepositProductSettingsStepComponent) fixedDepositProductSettingsStep: FixedDepositProductSettingsStepComponent;\n  @ViewChild(FixedDepositProductInterestRateChartStepComponent) fixedDepositProductInterestRateChartStep: FixedDepositProductInterestRateChartStepComponent;\n  @ViewChild(FixedDepositProductChargesStepComponent) fixedDepositProductChargesStep: FixedDepositProductChargesStepComponent;\n  @ViewChild(FixedDepositProductAccountingStepComponent) fixedDepositProductAccountingStep: FixedDepositProductAccountingStepComponent;\n\n  fixedDepositProductsTemplate: any;\n  accountingRuleData = ['None', 'Cash'];\n\n  constructor(private route: ActivatedRoute,\n              private productsService: ProductsService,\n              private router: Router) {\n    this.route.data.subscribe((data: { fixedDepositProductsTemplate: any }) => {\n      this.fixedDepositProductsTemplate = data.fixedDepositProductsTemplate;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  get fixedDepositProductDetailsForm() {\n    return this.fixedDepositProductDetailsStep.fixedDepositProductDetailsForm;\n  }\n\n  get fixedDepositProductCurrencyForm() {\n    return this.fixedDepositProductCurrencyStep.fixedDepositProductCurrencyForm;\n  }\n\n  get fixedDepositProductTermsForm() {\n    return this.fixedDepositProductTermsStep.fixedDepositProductTermsForm;\n  }\n\n  get fixedDepositProductSettingsForm() {\n    return this.fixedDepositProductSettingsStep.fixedDepositProductSettingsForm;\n  }\n\n  get fixedDepositProductInterestRateChartForm() {\n    return this.fixedDepositProductInterestRateChartStep.fixedDepositProductInterestRateChartForm;\n  }\n\n  get fixedDepositProductAccountingForm() {\n    return this.fixedDepositProductAccountingStep.fixedDepositProductAccountingForm;\n  }\n\n  get fixedDepositProductFormValid() {\n    return (\n      this.fixedDepositProductDetailsForm.valid &&\n      this.fixedDepositProductCurrencyForm.valid &&\n      this.fixedDepositProductTermsForm.valid &&\n      this.fixedDepositProductSettingsForm.valid &&\n      this.fixedDepositProductInterestRateChartForm.valid &&\n      this.fixedDepositProductAccountingForm.valid\n    );\n  }\n\n  get fixedDepositProduct() {\n    return {\n      ...this.fixedDepositProductDetailsStep.fixedDepositProductDetails,\n      ...this.fixedDepositProductCurrencyStep.fixedDepositProductCurrency,\n      ...this.fixedDepositProductTermsStep.fixedDepositProductTerms,\n      ...this.fixedDepositProductSettingsStep.fixedDepositProductSettings,\n      ...this.fixedDepositProductInterestRateChartStep.fixedDepositProductInterestRateChart,\n      ...this.fixedDepositProductChargesStep.fixedDepositProductCharges,\n      ...this.fixedDepositProductAccountingStep.fixedDepositProductAccounting\n    };\n  }\n\n  submit() {\n    // TODO: Update once language and date settings are setup\n    const fixedDepositProduct = {\n      ...this.fixedDepositProduct,\n      charges: this.fixedDepositProduct.charges.map((charge: any) => ({ id: charge.id })),\n      locale: 'en' // locale required for depositAmount\n    };\n    delete fixedDepositProduct.advancedAccountingRules;\n    this.productsService.createFixedDepositProduct(fixedDepositProduct)\n      .subscribe((response: any) => {\n        this.router.navigate(['../', response.resourceId], { relativeTo: this.route });\n    });\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"fixedDepositProductAccountingForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <mat-radio-group fxFlex=\\\"98%\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"5%\\\" fxLayout.lt-md=\\\"column\\\" formControlName=\\\"accountingRule\\\">\\n      <mat-radio-button *ngFor=\\\"let accountingRule of accountingRuleData; let i =  index\\\" [value]=\\\"i+1\\\">\\n        {{ accountingRule }}\\n      </mat-radio-button>\\n    </mat-radio-group>\\n\\n    <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n    <div *ngIf=\\\"fixedDepositProductAccountingForm.value.accountingRule === 2\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Assets</h4>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Saving reference</mat-label>\\n        <mat-select formControlName=\\\"savingsReferenceAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let assetAccount of assetAccountData\\\" [value]=\\\"assetAccount.id\\\">\\n            {{ assetAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Saving reference is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n      <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Liabilities</h4>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Saving control</mat-label>\\n        <mat-select formControlName=\\\"savingsControlAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let liabilityAccount of liabilityAccountData\\\" [value]=\\\"liabilityAccount.id\\\">\\n            {{ liabilityAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Saving control is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Savings transfers in suspense</mat-label>\\n        <mat-select formControlName=\\\"transfersInSuspenseAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let liabilityAccount of liabilityAccountData\\\" [value]=\\\"liabilityAccount.id\\\">\\n            {{ liabilityAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Savings transfers in suspense is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n      <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Expenses</h4>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Interest on savings</mat-label>\\n        <mat-select formControlName=\\\"interestOnSavingsAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let expenseAccount of expenseAccountData\\\" [value]=\\\"expenseAccount.id\\\">\\n            {{ expenseAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Interest on savings is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n      <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Income</h4>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Income from fees</mat-label>\\n        <mat-select formControlName=\\\"incomeFromFeeAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let incomeAccount of incomeAccountData\\\" [value]=\\\"incomeAccount.id\\\">\\n            {{ incomeAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Income from fees Repayments is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Income from penalties</mat-label>\\n        <mat-select formControlName=\\\"incomeFromPenaltyAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let incomeAccount of incomeAccountData\\\" [value]=\\\"incomeAccount.id\\\">\\n            {{ incomeAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Income from penalties is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n      <h3 fxFlex=\\\"23%\\\" class=\\\"mat-h3\\\">Advanced Accounting Rules</h3>\\n\\n      <mat-checkbox fxFlex=\\\"73%\\\" formControlName=\\\"advancedAccountingRules\\\"></mat-checkbox>\\n\\n      <div *ngIf=\\\"fixedDepositProductAccountingForm.value.advancedAccountingRules\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <h4 fxFlex=\\\"33%\\\" class=\\\"mat-h4\\\">Configure Fund Sources for Payment Channels</h4>\\n\\n        <div fxFlex=\\\"63%\\\">\\n          <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"add('PaymentFundSource', paymentChannelToFundSourceMappings)\\\">\\n            <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n            Add\\n          </button>\\n        </div>\\n\\n        <table fxFlex=\\\"98%\\\" class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"paymentChannelToFundSourceMappings.value\\\" *ngIf=\\\"paymentChannelToFundSourceMappings.value.length !== 0\\\">\\n\\n          <ng-container matColumnDef=\\\"paymentTypeId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Payment Type </th>\\n            <td mat-cell *matCellDef=\\\"let paymentFundSource\\\">\\n              {{ paymentFundSource.paymentTypeId | find:paymentTypeData:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"fundSourceAccountId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fund Source </th>\\n            <td mat-cell *matCellDef=\\\"let paymentFundSource\\\">\\n              {{ paymentFundSource.fundSourceAccountId | find:assetAccountData:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"actions\\\">\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\n            <td mat-cell *matCellDef=\\\"let paymentFundSource; let i = index\\\">\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"edit('PaymentFundSource', paymentChannelToFundSourceMappings, i)\\\">\\n                <fa-icon icon=\\\"edit\\\"></fa-icon>\\n              </button>\\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"delete(paymentChannelToFundSourceMappings, i)\\\">\\n                <fa-icon icon=\\\"trash\\\"></fa-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"paymentFundSourceDisplayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: paymentFundSourceDisplayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n        <h4 fxFlex=\\\"33%\\\" class=\\\"mat-h4\\\">Map Fees to Specific Income Accounts</h4>\\n\\n        <div fxFlex=\\\"63%\\\">\\n          <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"add('FeesIncome', feeToIncomeAccountMappings)\\\">\\n            <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n            Add\\n          </button>\\n        </div>\\n\\n        <table fxFlex=\\\"98%\\\" class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"feeToIncomeAccountMappings.value\\\" *ngIf=\\\"feeToIncomeAccountMappings.value.length !== 0\\\">\\n\\n          <ng-container matColumnDef=\\\"chargeId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fees </th>\\n            <td mat-cell *matCellDef=\\\"let feesIncome\\\">\\n              {{ feesIncome.chargeId | find:chargeData:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"incomeAccountId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Income Account </th>\\n            <td mat-cell *matCellDef=\\\"let feesIncome\\\">\\n              {{ feesIncome.incomeAccountId | find:incomeAccountData:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"actions\\\">\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\n            <td mat-cell *matCellDef=\\\"let feesIncome; let i = index\\\">\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"edit('FeesIncome', feeToIncomeAccountMappings, i)\\\">\\n                <fa-icon icon=\\\"edit\\\"></fa-icon>\\n              </button>\\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"delete(feeToIncomeAccountMappings, i)\\\">\\n                <fa-icon icon=\\\"trash\\\"></fa-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"feesPenaltyIncomeDisplayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: feesPenaltyIncomeDisplayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n        <h4 fxFlex=\\\"33%\\\" class=\\\"mat-h4\\\">Map Penalties to Specific Income Accounts</h4>\\n\\n        <div fxFlex=\\\"63%\\\">\\n          <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"add('PenaltyIncome', penaltyToIncomeAccountMappings)\\\">\\n            <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n            Add\\n          </button>\\n        </div>\\n\\n\\n        <table fxFlex=\\\"98%\\\" class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"penaltyToIncomeAccountMappings.value\\\" *ngIf=\\\"penaltyToIncomeAccountMappings.value.length !== 0\\\">\\n\\n          <ng-container matColumnDef=\\\"chargeId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Penalty </th>\\n            <td mat-cell *matCellDef=\\\"let penaltyIncome\\\">\\n              {{ penaltyIncome.chargeId | find:penaltyData:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"incomeAccountId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Income Account </th>\\n            <td mat-cell *matCellDef=\\\"let penaltyIncome\\\">\\n              {{ penaltyIncome.incomeAccountId | find:incomeAccountData:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"actions\\\">\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\n            <td mat-cell *matCellDef=\\\"let penaltyIncome; let i = index\\\">\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"edit('PenaltyIncome', penaltyToIncomeAccountMappings, i)\\\">\\n                <fa-icon icon=\\\"edit\\\"></fa-icon>\\n              </button>\\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"delete(penaltyToIncomeAccountMappings, i)\\\">\\n                <fa-icon icon=\\\"trash\\\"></fa-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"feesPenaltyIncomeDisplayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: feesPenaltyIncomeDisplayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext [disabled]=\\\"!fixedDepositProductFormValid\\\">\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-elevation-z1 {\\n  margin: 1em 0 1.5em 0; }\\n\\nh3, h4 {\\n  font-weight: 500; }\\n\\nmat-radio-group, h4 {\\n  margin: 1em 0; }\\n\\nmat-divider {\\n  margin: 1em 0 2em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2ZpeGVkLWRlcG9zaXQtcHJvZHVjdHMvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LXN0ZXBwZXIvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LWFjY291bnRpbmctc3RlcC9maXhlZC1kZXBvc2l0LXByb2R1Y3QtYWNjb3VudGluZy1zdGVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBOztBQUdiO0VBQ0UscUJBQXFCLEVBQUE7O0FBR3ZCO0VBQ0UsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsYUFBYSxFQUFBOztBQUdmO0VBQ0UsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdHMvZml4ZWQtZGVwb3NpdC1wcm9kdWN0cy9maXhlZC1kZXBvc2l0LXByb2R1Y3Qtc3RlcHBlci9maXhlZC1kZXBvc2l0LXByb2R1Y3QtYWNjb3VudGluZy1zdGVwL2ZpeGVkLWRlcG9zaXQtcHJvZHVjdC1hY2NvdW50aW5nLXN0ZXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWF0LWVsZXZhdGlvbi16MSB7XG4gIG1hcmdpbjogMWVtIDAgMS41ZW0gMDtcbn1cblxuaDMsIGg0IHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxubWF0LXJhZGlvLWdyb3VwLCBoNCB7XG4gIG1hcmdpbjogMWVtIDA7XG59XG5cbm1hdC1kaXZpZGVyIHtcbiAgbWFyZ2luOiAxZW0gMCAyZW0gMDtcbn1cblxuLm1hcmdpbi10IHtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuIl19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, Validators, FormControl } from '@angular/forms';\nimport { MatDialog } from '@angular/material';\n\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\n\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\nimport { SelectBase } from 'app/shared/form-dialog/formfield/model/select-base';\n\n@Component({\n  selector: 'mifosx-fixed-deposit-product-accounting-step',\n  templateUrl: './fixed-deposit-product-accounting-step.component.html',\n  styleUrls: ['./fixed-deposit-product-accounting-step.component.scss']\n})\nexport class FixedDepositProductAccountingStepComponent implements OnInit {\n\n  @Input() fixedDepositProductsTemplate: any;\n  @Input() accountingRuleData: any;\n  @Input() fixedDepositProductFormValid: boolean;\n\n  fixedDepositProductAccountingForm: FormGroup;\n\n  chargeData: any;\n  penaltyData: any;\n  paymentTypeData: any;\n  assetAccountData: any;\n  incomeAccountData: any;\n  expenseAccountData: any;\n  liabilityAccountData: any;\n\n  paymentFundSourceDisplayedColumns: string[] = ['paymentTypeId', 'fundSourceAccountId', 'actions'];\n  feesPenaltyIncomeDisplayedColumns: string[] = ['chargeId', 'incomeAccountId', 'actions'];\n\n  constructor(private formBuilder: FormBuilder,\n              public dialog: MatDialog) {\n    this.createfixedDepositProductAccountingForm();\n    this.setConditionalControls();\n  }\n\n  ngOnInit() {\n    this.chargeData = this.fixedDepositProductsTemplate.chargeOptions || [];\n    this.penaltyData = this.fixedDepositProductsTemplate.penaltyOptions || [];\n    this.paymentTypeData = this.fixedDepositProductsTemplate.paymentTypeOptions || [];\n    this.assetAccountData = this.fixedDepositProductsTemplate.accountingMappingOptions.assetAccountOptions || [];\n    this.incomeAccountData = this.fixedDepositProductsTemplate.accountingMappingOptions.incomeAccountOptions || [];\n    this.expenseAccountData = this.fixedDepositProductsTemplate.accountingMappingOptions.expenseAccountOptions || [];\n    this.liabilityAccountData = this.fixedDepositProductsTemplate.accountingMappingOptions.liabilityAccountOptions || [];\n  }\n\n  createfixedDepositProductAccountingForm() {\n    this.fixedDepositProductAccountingForm = this.formBuilder.group({\n      'accountingRule': [1]\n    });\n  }\n\n  setConditionalControls() {\n    this.fixedDepositProductAccountingForm.get('accountingRule').valueChanges\n      .subscribe((accountingRule: any) => {\n        if (accountingRule === 2) {\n          this.fixedDepositProductAccountingForm.addControl('savingsReferenceAccountId', new FormControl('', Validators.required));\n          this.fixedDepositProductAccountingForm.addControl('savingsControlAccountId', new FormControl('', Validators.required));\n          this.fixedDepositProductAccountingForm.addControl('transfersInSuspenseAccountId', new FormControl('', Validators.required));\n          this.fixedDepositProductAccountingForm.addControl('interestOnSavingsAccountId', new FormControl('', Validators.required));\n          this.fixedDepositProductAccountingForm.addControl('incomeFromFeeAccountId', new FormControl('', Validators.required));\n          this.fixedDepositProductAccountingForm.addControl('incomeFromPenaltyAccountId', new FormControl('', Validators.required));\n          this.fixedDepositProductAccountingForm.addControl('advancedAccountingRules', new FormControl(false));\n\n          this.fixedDepositProductAccountingForm.get('advancedAccountingRules').valueChanges\n            .subscribe((advancedAccountingRules: boolean) => {\n              if (advancedAccountingRules) {\n                this.fixedDepositProductAccountingForm.addControl('paymentChannelToFundSourceMappings', this.formBuilder.array([]));\n                this.fixedDepositProductAccountingForm.addControl('feeToIncomeAccountMappings', this.formBuilder.array([]));\n                this.fixedDepositProductAccountingForm.addControl('penaltyToIncomeAccountMappings', this.formBuilder.array([]));\n              } else {\n                this.fixedDepositProductAccountingForm.removeControl('paymentChannelToFundSourceMappings');\n                this.fixedDepositProductAccountingForm.removeControl('feeToIncomeAccountMappings');\n                this.fixedDepositProductAccountingForm.removeControl('penaltyToIncomeAccountMappings');\n              }\n            });\n        } else {\n          this.fixedDepositProductAccountingForm.removeControl('savingsReferenceAccountId');\n          this.fixedDepositProductAccountingForm.removeControl('overdraftPortfolioControlId');\n          this.fixedDepositProductAccountingForm.removeControl('savingsControlAccountId');\n          this.fixedDepositProductAccountingForm.removeControl('transfersInSuspenseAccountId');\n          this.fixedDepositProductAccountingForm.removeControl('interestOnSavingsAccountId');\n          this.fixedDepositProductAccountingForm.removeControl('writeOffAccountId');\n          this.fixedDepositProductAccountingForm.removeControl('incomeFromFeeAccountId');\n          this.fixedDepositProductAccountingForm.removeControl('incomeFromPenaltyAccountId');\n          this.fixedDepositProductAccountingForm.removeControl('incomeFromInterestId');\n          this.fixedDepositProductAccountingForm.removeControl('advancedAccountingRules');\n          this.fixedDepositProductAccountingForm.removeControl('escheatLiabilityId');\n        }\n      });\n  }\n\n  get paymentChannelToFundSourceMappings(): FormArray {\n    return this.fixedDepositProductAccountingForm.get('paymentChannelToFundSourceMappings') as FormArray;\n  }\n\n  get feeToIncomeAccountMappings(): FormArray {\n    return this.fixedDepositProductAccountingForm.get('feeToIncomeAccountMappings') as FormArray;\n  }\n\n  get penaltyToIncomeAccountMappings(): FormArray {\n    return this.fixedDepositProductAccountingForm.get('penaltyToIncomeAccountMappings') as FormArray;\n  }\n\n  add(formType: string, formArray: FormArray) {\n    const data = { ...this.getData(formType), pristine: false };\n    const dialogRef = this.dialog.open(FormDialogComponent, { data });\n    dialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        formArray.push(response.data);\n      }\n    });\n  }\n\n  edit(formType: string, formArray: FormArray, index: number) {\n    const data = { ...this.getData(formType, formArray.at(index).value), layout: { addButtonText: 'Edit' } };\n    const dialogRef = this.dialog.open(FormDialogComponent, { data });\n    dialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        formArray.at(index).patchValue(response.data.value);\n      }\n    });\n  }\n\n  delete(formArray: FormArray, index: number) {\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `this` }\n    });\n    dialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        formArray.removeAt(index);\n      }\n    });\n  }\n\n  getData(formType: string, values?: any) {\n    switch (formType) {\n      case 'PaymentFundSource': return { title: 'Configure Fund Sources for Payment Channels', formfields: this.getPaymentFundSourceFormfields(values) };\n      case 'FeesIncome': return { title: 'Map Fees to Income Accounts', formfields: this.getFeesIncomeFormfields(values) };\n      case 'PenaltyIncome': return { title: 'Map Penalties to Specific Income Accounts', formfields: this.getPenaltyIncomeFormfields(values) };\n    }\n  }\n\n  getPaymentFundSourceFormfields(values?: any) {\n    const formfields: FormfieldBase[] = [\n      new SelectBase({\n        controlName: 'paymentTypeId',\n        label: 'Payment Type',\n        value: values ? values.paymentTypeId : this.paymentTypeData[0].id,\n        options: { label: 'name', value: 'id', data: this.paymentTypeData },\n        required: true,\n        order: 1\n      }),\n      new SelectBase({\n        controlName: 'fundSourceAccountId',\n        label: 'Fund Source',\n        value: values ? values.fundSourceAccountId : this.assetAccountData[0].id,\n        options: { label: 'name', value: 'id', data: this.assetAccountData },\n        required: true,\n        order: 2\n      })\n    ];\n    return formfields;\n  }\n\n  getFeesIncomeFormfields(values?: any) {\n    const formfields: FormfieldBase[] = [\n      new SelectBase({\n        controlName: 'chargeId',\n        label: 'Fees',\n        value: values ? values.chargeId : this.chargeData[0].id,\n        options: { label: 'name', value: 'id', data: this.chargeData },\n        required: true,\n        order: 1\n      }),\n      new SelectBase({\n        controlName: 'incomeAccountId',\n        label: 'Income Account',\n        value: values ? values.incomeAccountId : this.incomeAccountData[0].id,\n        options: { label: 'name', value: 'id', data: this.incomeAccountData },\n        required: true,\n        order: 2\n      })\n    ];\n    return formfields;\n  }\n\n  getPenaltyIncomeFormfields(values?: any) {\n    const formfields: FormfieldBase[] = [\n      new SelectBase({\n        controlName: 'chargeId',\n        label: 'Penalty',\n        value: values ? values.chargeId : this.penaltyData[0].id,\n        options: { label: 'name', value: 'id', data: this.penaltyData },\n        required: true,\n        order: 1\n      }),\n      new SelectBase({\n        controlName: 'incomeAccountId',\n        label: 'Income Account',\n        value: values ? values.incomeAccountId : this.incomeAccountData[0].id,\n        options: { label: 'name', value: 'id', data: this.incomeAccountData },\n        required: true,\n        order: 2\n      })\n    ];\n    return formfields;\n  }\n\n  get fixedDepositProductAccounting() {\n    return this.fixedDepositProductAccountingForm.value;\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n  <mat-form-field fxFlex=\\\"48%\\\">\\n    <mat-label>Charge</mat-label>\\n    <mat-select #charge>\\n      <mat-option *ngFor=\\\"let charge of chargeData | chargesFilter:chargesDataSource:currencyCode.value\\\" [value]=\\\"charge\\\">\\n        {{ charge.name }}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <div fxFlex=\\\"48%\\\" fxFlexAlign=\\\"center\\\">\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"addCharge(charge)\\\" [disabled]=\\\"!charge.value\\\">\\n      <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n      Add\\n    </button>\\n  </div>\\n\\n  <table fxFlex=\\\"98%\\\" class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"chargesDataSource\\\" [hidden]=\\\"chargesDataSource.length === 0\\\">\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        {{ charge.name + ', ' + charge.currency.displaySymbol }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"chargeCalculationType\\\">\\n      <th mat-header-cell *matHeaderCellDef> Type </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        {{ charge.chargeCalculationType.value }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"amount\\\">\\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        {{ charge.amount }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"chargeTimeType\\\">\\n      <th mat-header-cell *matHeaderCellDef> Collected On </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        {{ charge.chargeTimeType.value }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"action\\\">\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteCharge(charge)\\\">\\n          <fa-icon icon=\\\"trash\\\"></fa-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n  </table>\\n\\n</div>\\n\\n<div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n  <button mat-raised-button matStepperPrevious>\\n    <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n    Previous\\n  </button>\\n  <button mat-raised-button matStepperNext>\\n    Next&nbsp;&nbsp;\\n    <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n  </button>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-elevation-z1 {\\n  margin: 1em 0 1.5em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2ZpeGVkLWRlcG9zaXQtcHJvZHVjdHMvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LXN0ZXBwZXIvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LWNoYXJnZXMtc3RlcC9maXhlZC1kZXBvc2l0LXByb2R1Y3QtY2hhcmdlcy1zdGVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBOztBQUdiO0VBQ0UscUJBQXFCLEVBQUE7O0FBR3ZCO0VBQ0UsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdHMvZml4ZWQtZGVwb3NpdC1wcm9kdWN0cy9maXhlZC1kZXBvc2l0LXByb2R1Y3Qtc3RlcHBlci9maXhlZC1kZXBvc2l0LXByb2R1Y3QtY2hhcmdlcy1zdGVwL2ZpeGVkLWRlcG9zaXQtcHJvZHVjdC1jaGFyZ2VzLXN0ZXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWF0LWVsZXZhdGlvbi16MSB7XG4gIG1hcmdpbjogMWVtIDAgMS41ZW0gMDtcbn1cblxuLm1hcmdpbi10IHtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuIl19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { FormControl } from '@angular/forms';\n\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\n\n@Component({\n  selector: 'mifosx-fixed-deposit-product-charges-step',\n  templateUrl: './fixed-deposit-product-charges-step.component.html',\n  styleUrls: ['./fixed-deposit-product-charges-step.component.scss']\n})\nexport class FixedDepositProductChargesStepComponent implements OnInit {\n\n  @Input() fixedDepositProductsTemplate: any;\n  @Input() currencyCode: FormControl;\n\n  chargeData: any;\n\n  chargesDataSource: {}[];\n  displayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType', 'action'];\n\n  constructor(public dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n    this.chargeData = this.fixedDepositProductsTemplate.chargeOptions;\n\n    this.chargesDataSource = [];\n\n    this.currencyCode.valueChanges.subscribe(() => this.chargesDataSource = []);\n  }\n\n  addCharge(charge: any) {\n    this.chargesDataSource = this.chargesDataSource.concat([charge.value]);\n    charge.value = '';\n  }\n\n  deleteCharge(charge: any) {\n    const deleteChargeDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `charge ${charge.name}` }\n    });\n    deleteChargeDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1);\n        this.chargesDataSource = this.chargesDataSource.concat([]);\n      }\n    });\n  }\n\n  get fixedDepositProductCharges() {\n    return {\n      charges: this.chargesDataSource\n    };\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"fixedDepositProductCurrencyForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Currency</mat-label>\\n      <mat-select formControlName=\\\"currencyCode\\\" required>\\n        <mat-option *ngFor=\\\"let currency of currencyData\\\" [value]=\\\"currency.code\\\">\\n          {{ currency.name }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Currency is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Decimal Places</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"digitsAfterDecimal\\\" required>\\n      <mat-error>\\n        Decimal Places is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Currency in multiples of</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"inMultiplesOf\\\" required>\\n      <mat-error>\\n        Currency in multiples of is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext>\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \".margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2ZpeGVkLWRlcG9zaXQtcHJvZHVjdHMvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LXN0ZXBwZXIvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LWN1cnJlbmN5LXN0ZXAvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LWN1cnJlbmN5LXN0ZXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0cy9maXhlZC1kZXBvc2l0LXByb2R1Y3RzL2ZpeGVkLWRlcG9zaXQtcHJvZHVjdC1zdGVwcGVyL2ZpeGVkLWRlcG9zaXQtcHJvZHVjdC1jdXJyZW5jeS1zdGVwL2ZpeGVkLWRlcG9zaXQtcHJvZHVjdC1jdXJyZW5jeS1zdGVwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hcmdpbi10IHtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuIl19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'mifosx-fixed-deposit-product-currency-step',\n  templateUrl: './fixed-deposit-product-currency-step.component.html',\n  styleUrls: ['./fixed-deposit-product-currency-step.component.scss']\n})\nexport class FixedDepositProductCurrencyStepComponent implements OnInit {\n\n  @Input() fixedDepositProductsTemplate: any;\n\n  fixedDepositProductCurrencyForm: FormGroup;\n\n  currencyData: any;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.createFixedDepositProductCurrencyForm();\n  }\n\n  ngOnInit() {\n    this.currencyData = this.fixedDepositProductsTemplate.currencyOptions;\n\n    this.fixedDepositProductCurrencyForm.patchValue({\n      'currencyCode': this.currencyData[0].code,\n      'digitsAfterDecimal': 2\n    });\n  }\n\n  createFixedDepositProductCurrencyForm() {\n    this.fixedDepositProductCurrencyForm = this.formBuilder.group({\n      'currencyCode': ['', Validators.required],\n      'digitsAfterDecimal': ['', Validators.required],\n      'inMultiplesOf': ['', Validators.required]\n    });\n  }\n\n  get fixedDepositProductCurrency() {\n    return this.fixedDepositProductCurrencyForm.value;\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"fixedDepositProductDetailsForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Product Name</mat-label>\\n      <input matInput formControlName=\\\"name\\\" required>\\n      <mat-error>\\n        Product Name is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Short Name</mat-label>\\n      <input matInput formControlName=\\\"shortName\\\" maxlength=\\\"4\\\" required>\\n      <mat-error>\\n        Short Name is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"98%\\\">\\n      <mat-label>Description</mat-label>\\n      <textarea matInput formControlName=\\\"description\\\"></textarea>\\n    </mat-form-field>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious disabled>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext>\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \".margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2ZpeGVkLWRlcG9zaXQtcHJvZHVjdHMvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LXN0ZXBwZXIvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LWRldGFpbHMtc3RlcC9maXhlZC1kZXBvc2l0LXByb2R1Y3QtZGV0YWlscy1zdGVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdHMvZml4ZWQtZGVwb3NpdC1wcm9kdWN0cy9maXhlZC1kZXBvc2l0LXByb2R1Y3Qtc3RlcHBlci9maXhlZC1kZXBvc2l0LXByb2R1Y3QtZGV0YWlscy1zdGVwL2ZpeGVkLWRlcG9zaXQtcHJvZHVjdC1kZXRhaWxzLXN0ZXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFyZ2luLXQge1xuICBtYXJnaW4tdG9wOiAxZW07XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'mifosx-fixed-deposit-product-details-step',\n  templateUrl: './fixed-deposit-product-details-step.component.html',\n  styleUrls: ['./fixed-deposit-product-details-step.component.scss']\n})\nexport class FixedDepositProductDetailsStepComponent implements OnInit {\n\n  fixedDepositProductDetailsForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.createFixedDepositProductDetailsForm();\n  }\n\n  ngOnInit() {\n  }\n\n  createFixedDepositProductDetailsForm() {\n    this.fixedDepositProductDetailsForm = this.formBuilder.group({\n      'name': ['', Validators.required],\n      'shortName': ['', Validators.required],\n      'description': ['']\n    });\n  }\n\n  get fixedDepositProductDetails() {\n    return this.fixedDepositProductDetailsForm.value;\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"fixedDepositProductInterestRateChartForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <h3 fxFlex=\\\"13%\\\" class=\\\"mat-h3\\\">Interest Rate Charts</h3>\\n\\n    <div fxFlex=\\\"83%\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n      <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"addChart()\\\">\\n        <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n        Add\\n      </button>\\n    </div>\\n\\n    <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\" formArrayName=\\\"charts\\\" *ngFor=\\\"let chart of charts.controls; let chartIndex = index\\\">\\n\\n      <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n      <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" [formGroupName]=\\\"chartIndex\\\">\\n\\n        <div fxFlex=\\\"98%\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n          <button type=\\\"button\\\" mat-icon-button color=\\\"warn\\\" (click)=\\\"delete(charts, chartIndex)\\\" matTooltip=\\\"Delete Interest Rate Chart\\\" matTooltipPosition=\\\"left\\\">\\n            <fa-icon icon=\\\"trash\\\"></fa-icon>\\n          </button>\\n        </div>\\n\\n        <mat-form-field fxFlex=\\\"32%\\\">\\n          <mat-label>Name</mat-label>\\n          <input matInput formControlName=\\\"name\\\">\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlex=\\\"31%\\\">\\n          <mat-label>Valid from Date</mat-label>\\n          <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"validFromDatePicker\\\" formControlName=\\\"fromDate\\\" required>\\n          <mat-datepicker-toggle matSuffix [for]=\\\"validFromDatePicker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #validFromDatePicker></mat-datepicker>\\n          <mat-error>\\n            Valid from Date is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlex=\\\"31%\\\">\\n          <mat-label>End Date</mat-label>\\n          <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"endDatePicker\\\" formControlName=\\\"endDate\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #endDatePicker></mat-datepicker>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlex=\\\"65%\\\">\\n          <mat-label>Description</mat-label>\\n          <textarea matInput formControlName=\\\"description\\\"></textarea>\\n        </mat-form-field>\\n\\n        <div fxFlex=\\\"31%\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n          <mat-checkbox labelPosition=\\\"before\\\" formControlName=\\\"isPrimaryGroupingByAmount\\\">\\n            Is primary grouping by amount?\\n          </mat-checkbox>\\n          <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"addChartSlab(chart.controls.chartSlabs)\\\">\\n            <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n            Add Slab\\n          </button>\\n        </div>\\n\\n        <table fxFlex=\\\"98%\\\" class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"chart.value.chartSlabs\\\" *ngIf=\\\"chart.value.chartSlabs.length !== 0\\\" multiTemplateDataRows>\\n\\n          <ng-container matColumnDef=\\\"period\\\">\\n            <th mat-header-cell *matHeaderCellDef> Period </th>\\n            <td mat-cell *matCellDef=\\\"let chartSlab\\\">\\n              {{ chartSlab.fromPeriod + ' - ' + chartSlab.toPeriod + ' ' + (chartSlab.periodType | find:periodTypeData:'id':'value') }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"amountRange\\\">\\n            <th mat-header-cell *matHeaderCellDef> Amount Range </th>\\n            <td mat-cell *matCellDef=\\\"let chartSlab\\\">\\n              {{ chartSlab.amountRangeFrom + ' - ' + chartSlab.amountRangeTo }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"annualInterestRate\\\">\\n            <th mat-header-cell *matHeaderCellDef> Interest </th>\\n            <td mat-cell *matCellDef=\\\"let chartSlab\\\">\\n              {{ chartSlab.annualInterestRate }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"description\\\">\\n            <th mat-header-cell *matHeaderCellDef> Description </th>\\n            <td mat-cell *matCellDef=\\\"let chartSlab\\\">\\n              {{ chartSlab.description }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"actions\\\">\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\n            <td mat-cell *matCellDef=\\\"let chartSlab; let chartSlabIndex = dataIndex\\\">\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"editChartSlab(chart.controls.chartSlabs, chartSlabIndex)\\\">\\n                <fa-icon icon=\\\"edit\\\"></fa-icon>\\n              </button>\\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"delete(chart.controls.chartSlabs, chartSlabIndex)\\\">\\n                <fa-icon icon=\\\"trash\\\"></fa-icon>\\n              </button>\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"expandChartSlabIndex[chartIndex] = expandChartSlabIndex[chartIndex] === chartSlabIndex ? null : chartSlabIndex\\\">\\n                <span *ngIf=\\\"expandChartSlabIndex[chartIndex] !== chartSlabIndex\\\">\\n                  <fa-icon icon=\\\"eye\\\"></fa-icon>&nbsp;&nbsp;\\n                  View Incentives\\n                </span>\\n                <span *ngIf=\\\"expandChartSlabIndex[chartIndex] === chartSlabIndex\\\">\\n                  <fa-icon icon=\\\"eye-slash\\\"></fa-icon>&nbsp;&nbsp;\\n                  Hide Incentives\\n                </span>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"incentives\\\">\\n            <td mat-cell *matCellDef=\\\"let chartSlab; let chartSlabIndex = dataIndex\\\" [attr.colspan]=\\\"chartSlabsDisplayedColumns[chartIndex].length\\\">\\n\\n              <div fxLayout=\\\"row wrap\\\" fxFlexFill class=\\\"incentives\\\" [@expandChartSlab]=\\\"chartSlabIndex === expandChartSlabIndex[chartIndex] ? 'expanded' : 'collapsed'\\\">\\n\\n                <mat-card fxLayout=\\\"row wrap\\\" fxFlexFill>\\n\\n                  <h4 class=\\\"mat-h4\\\" fxFlex=\\\"13%\\\">\\n                    Incentives\\n                  </h4>\\n\\n                  <div fxFlex=\\\"83%\\\">\\n                    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addIncentive(getIncentives(chart.controls.chartSlabs, chartSlabIndex))\\\">\\n                      <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n                      Add\\n                    </button>\\n                  </div>\\n\\n                  <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"chartSlab.incentives\\\" *ngIf=\\\"chartSlab.incentives.length\\\">\\n\\n                    <ng-container matColumnDef=\\\"entityType\\\">\\n                      <th mat-header-cell *matHeaderCellDef> Entity Type </th>\\n                      <td mat-cell *matCellDef=\\\"let incentive\\\">\\n                        {{ incentive.entityType | find:entityTypeData:'id':'value' }}\\n                      </td>\\n                    </ng-container>\\n\\n                    <ng-container matColumnDef=\\\"attributeName\\\">\\n                      <th mat-header-cell *matHeaderCellDef> Attribute Name </th>\\n                      <td mat-cell *matCellDef=\\\"let incentive\\\">\\n                        {{ incentive.attributeName | find:attributeNameData:'id':'value' }}\\n                      </td>\\n                    </ng-container>\\n\\n                    <ng-container matColumnDef=\\\"conditionType\\\">\\n                      <th mat-header-cell *matHeaderCellDef> Condition Type </th>\\n                      <td mat-cell *matCellDef=\\\"let incentive\\\">\\n                        {{ incentive.conditionType | find:conditionTypeData:'id':'value' }}\\n                      </td>\\n                    </ng-container>\\n\\n                    <ng-container matColumnDef=\\\"attributeValue\\\">\\n                      <th mat-header-cell *matHeaderCellDef> Attribute Value </th>\\n                      <td mat-cell *matCellDef=\\\"let incentive\\\" [ngSwitch]=\\\"incentive.attributeName\\\">\\n                        <span *ngSwitchCase=\\\"2\\\">{{ incentive.attributeValue | find:genderData:'id':'name' }}</span>\\n                        <span *ngSwitchCase=\\\"3\\\">{{ incentive.attributeValue }}</span>\\n                        <span *ngSwitchCase=\\\"4\\\">{{ incentive.attributeValue | find:clientTypeData:'id':'name' }}</span>\\n                        <span *ngSwitchCase=\\\"5\\\">{{ incentive.attributeValue | find:clientClassificationData:'id':'name' }}</span>\\n                      </td>\\n                    </ng-container>\\n\\n                    <ng-container matColumnDef=\\\"incentiveType\\\">\\n                      <th mat-header-cell *matHeaderCellDef> Incentive Type </th>\\n                      <td mat-cell *matCellDef=\\\"let incentive\\\">\\n                        {{ incentive.incentiveType | find:incentiveTypeData:'id':'value'}}\\n                      </td>\\n                    </ng-container>\\n\\n                    <ng-container matColumnDef=\\\"amount\\\">\\n                      <th mat-header-cell *matHeaderCellDef> Interest </th>\\n                      <td mat-cell *matCellDef=\\\"let incentive\\\">\\n                        {{ incentive.amount }}\\n                      </td>\\n                    </ng-container>\\n\\n                    <ng-container matColumnDef=\\\"actions\\\">\\n                      <th mat-header-cell *matHeaderCellDef> Actions </th>\\n                      <td mat-cell *matCellDef=\\\"let incentive; let incentiveIndex = index\\\">\\n                        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"editIncentive(getIncentives(chart.controls.chartSlabs, chartSlabIndex), incentiveIndex)\\\">\\n                          <fa-icon icon=\\\"edit\\\"></fa-icon>\\n                        </button>\\n                        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"delete(getIncentives(chart.controls.chartSlabs, chartSlabIndex), incentiveIndex)\\\">\\n                          <fa-icon icon=\\\"trash\\\"></fa-icon>\\n                        </button>\\n                      </td>\\n                    </ng-container>\\n\\n                    <tr mat-header-row *matHeaderRowDef=\\\"incentivesDisplayedColumns\\\"></tr>\\n                    <tr mat-row *matRowDef=\\\"let row; columns: incentivesDisplayedColumns;\\\"></tr>\\n\\n                  </table>\\n\\n                </mat-card>\\n              </div>\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"chartSlabsDisplayedColumns[chartIndex]\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: chartSlabsDisplayedColumns[chartIndex];\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: chartSlabsIncentivesDisplayedColumns;\\\" class=\\\"incentives-row\\\"></tr>\\n\\n        </table>\\n\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious disabled>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext>\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table tr.incentives-row {\\n    height: 0; }\\n  table tr.incentives-row > td {\\n      padding: 0; }\\n  table tr.incentives-row .incentives {\\n      overflow: hidden; }\\n  table tr.incentives-row .mat-card {\\n      border-radius: 0; }\\n  table tr.incentives-row .mat-card > h4 {\\n        margin: 0.5em 0 0; }\\n  mat-divider {\\n  margin: 1em 0 1em 0; }\\n  .mat-elevation-z1 {\\n  margin: 1em 0 1.5em 0; }\\n  h3, h4 {\\n  font-weight: 500; }\\n  h3, h4 {\\n  margin: 1em 0; }\\n  .margin-t {\\n  margin-top: 1em; }\\n  .margin-v {\\n  margin: 1em 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2ZpeGVkLWRlcG9zaXQtcHJvZHVjdHMvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LXN0ZXBwZXIvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LWludGVyZXN0LXJhdGUtY2hhcnQtc3RlcC9maXhlZC1kZXBvc2l0LXByb2R1Y3QtaW50ZXJlc3QtcmF0ZS1jaGFydC1zdGVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBO0VBRGI7SUFJSSxTQUFTLEVBQUE7RUFKYjtNQU9NLFVBQVUsRUFBQTtFQVBoQjtNQVdNLGdCQUFnQixFQUFBO0VBWHRCO01BZU0sZ0JBQWdCLEVBQUE7RUFmdEI7UUFrQlEsaUJBQWlCLEVBQUE7RUFNekI7RUFDRSxtQkFBbUIsRUFBQTtFQUdyQjtFQUNFLHFCQUFxQixFQUFBO0VBR3ZCO0VBQ0UsZ0JBQWdCLEVBQUE7RUFHbEI7RUFDRSxhQUFhLEVBQUE7RUFHZjtFQUNFLGVBQWUsRUFBQTtFQUdqQjtFQUNFLGFBQWEsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL2ZpeGVkLWRlcG9zaXQtcHJvZHVjdHMvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LXN0ZXBwZXIvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LWludGVyZXN0LXJhdGUtY2hhcnQtc3RlcC9maXhlZC1kZXBvc2l0LXByb2R1Y3QtaW50ZXJlc3QtcmF0ZS1jaGFydC1zdGVwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcblxuICB0ci5pbmNlbnRpdmVzLXJvdyB7XG4gICAgaGVpZ2h0OiAwO1xuXG4gICAgPiB0ZCB7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgIH1cblxuICAgIC5pbmNlbnRpdmVzIHtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgfVxuXG4gICAgLm1hdC1jYXJkIHtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDA7XG5cbiAgICAgID4gaDQge1xuICAgICAgICBtYXJnaW46IDAuNWVtIDAgMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxubWF0LWRpdmlkZXIge1xuICBtYXJnaW46IDFlbSAwIDFlbSAwO1xufVxuXG4ubWF0LWVsZXZhdGlvbi16MSB7XG4gIG1hcmdpbjogMWVtIDAgMS41ZW0gMDtcbn1cblxuaDMsIGg0IHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuaDMsIGg0IHtcbiAgbWFyZ2luOiAxZW0gMDtcbn1cblxuLm1hcmdpbi10IHtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuXG4ubWFyZ2luLXYge1xuICBtYXJnaW46IDFlbSAwO1xufVxuIl19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { MatDialog } from '@angular/material';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\nimport { DepositProductIncentiveFormDialogComponent } from 'app/products/deposit-product-incentive-form-dialog/deposit-product-incentive-form-dialog.component';\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\n\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\nimport { SelectBase } from 'app/shared/form-dialog/formfield/model/select-base';\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\n\n@Component({\n  selector: 'mifosx-fixed-deposit-product-interest-rate-chart-step',\n  templateUrl: './fixed-deposit-product-interest-rate-chart-step.component.html',\n  styleUrls: ['./fixed-deposit-product-interest-rate-chart-step.component.scss'],\n  animations: [\n    trigger('expandChartSlab', [\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n  ]\n})\nexport class FixedDepositProductInterestRateChartStepComponent implements OnInit {\n\n  @Input() fixedDepositProductsTemplate: any;\n\n  fixedDepositProductInterestRateChartForm: FormGroup;\n\n  periodTypeData: any;\n  entityTypeData: any;\n  attributeNameData: any;\n  conditionTypeData: any;\n  genderData: any;\n  clientTypeData: any;\n  clientClassificationData: any;\n  incentiveTypeData: any;\n\n  chartSlabsDisplayedColumns: any[] = [];\n  chartSlabsIncentivesDisplayedColumns: string[] = ['incentives'];\n  incentivesDisplayedColumns: string[] = ['entityType', 'attributeName', 'conditionType', 'attributeValue', 'incentiveType', 'amount', 'actions'];\n\n  minDate = new Date(2000, 0, 1);\n  maxDate = new Date(new Date().setFullYear(new Date().getFullYear() + 10));\n\n  expandChartSlabIndex: number[] = [];\n\n  constructor(private formBuilder: FormBuilder,\n              public dialog: MatDialog,\n              private datePipe: DatePipe) {\n    this.createFixedDepositProductInterestRateChartForm();\n  }\n\n  ngOnInit() {\n    this.periodTypeData = this.fixedDepositProductsTemplate.chartTemplate.periodTypes;\n    this.entityTypeData = this.fixedDepositProductsTemplate.chartTemplate.entityTypeOptions;\n    this.attributeNameData = this.fixedDepositProductsTemplate.chartTemplate.attributeNameOptions;\n    this.conditionTypeData = this.fixedDepositProductsTemplate.chartTemplate.conditionTypeOptions;\n    this.genderData = this.fixedDepositProductsTemplate.chartTemplate.genderOptions;\n    this.clientTypeData = this.fixedDepositProductsTemplate.chartTemplate.clientTypeOptions;\n    this.clientClassificationData = this.fixedDepositProductsTemplate.chartTemplate.clientClassificationOptions;\n    this.incentiveTypeData = this.fixedDepositProductsTemplate.chartTemplate.incentiveTypeOptions;\n  }\n\n  createFixedDepositProductInterestRateChartForm() {\n    this.fixedDepositProductInterestRateChartForm = this.formBuilder.group({\n      'charts': this.formBuilder.array([])\n    });\n  }\n\n  get charts(): FormArray {\n    return this.fixedDepositProductInterestRateChartForm.get('charts') as FormArray;\n  }\n\n  createChartForm(): FormGroup {\n    return this.formBuilder.group({\n      'name': [''],\n      'description': [''],\n      'fromDate': ['', Validators.required],\n      'endDate': [''],\n      'isPrimaryGroupingByAmount': [false],\n      'chartSlabs': this.formBuilder.array([])\n    });\n  }\n\n  addChart() {\n    this.charts.push(this.createChartForm());\n    this.setConditionalControls(this.charts.length - 1);\n  }\n\n  setConditionalControls(chartIndex: number) {\n    this.chartSlabsDisplayedColumns[chartIndex] = ['period', 'amountRange', 'annualInterestRate', 'description', 'actions'];\n    this.charts.at(chartIndex).get('isPrimaryGroupingByAmount').valueChanges\n      .subscribe((isPrimaryGroupingByAmount: boolean) => {\n        this.chartSlabsDisplayedColumns[chartIndex] = isPrimaryGroupingByAmount ? ['amountRange', 'period'] : ['period', 'amountRange'];\n        this.chartSlabsDisplayedColumns[chartIndex].push('annualInterestRate', 'description', 'actions');\n      });\n  }\n\n  getIncentives(chartSlabs: FormArray, chartSlabIndex: number): FormArray {\n    return chartSlabs.at(chartSlabIndex).get('incentives') as FormArray;\n  }\n\n  addChartSlab(chartSlabs: FormArray) {\n    const data = { ...this.getData('Slab') };\n    const dialogRef = this.dialog.open(FormDialogComponent, { data });\n    dialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        response.data.addControl('incentives', this.formBuilder.array([]));\n        chartSlabs.push(response.data);\n      }\n    });\n  }\n\n  addIncentive(incentives: FormArray) {\n    const data = { ...this.getData('Incentive'), entityType: this.entityTypeData[0].id };\n    const dialogRef = this.dialog.open(DepositProductIncentiveFormDialogComponent, { data });\n    dialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        incentives.push(response.data);\n      }\n    });\n  }\n\n  editChartSlab(chartSlabs: FormArray, chartSlabIndex: number) {\n    const data = { ...this.getData('Slab', chartSlabs.at(chartSlabIndex).value), layout: { addButtonText: 'Edit' } };\n    const dialogRef = this.dialog.open(FormDialogComponent, { data });\n    dialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        chartSlabs.at(chartSlabIndex).patchValue(response.data.value);\n      }\n    });\n  }\n\n  editIncentive(incentives: FormArray, incentiveIndex: number) {\n    const data = { ...this.getData('Incentive', incentives.at(incentiveIndex).value), layout: { addButtonText: 'Edit' } };\n    const dialogRef = this.dialog.open(DepositProductIncentiveFormDialogComponent, { data });\n    dialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        incentives.at(incentiveIndex).patchValue(response.data.value);\n      }\n    });\n  }\n\n  delete(formArray: FormArray, index: number) {\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `this` }\n    });\n    dialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        formArray.removeAt(index);\n      }\n    });\n  }\n\n  getData(formType: string, values?: any) {\n    switch (formType) {\n      case 'Slab': return  { title: 'Slab', formfields: this.getSlabFormfields(values) };\n      case 'Incentive': return { values, chartTemplate: this.fixedDepositProductsTemplate.chartTemplate };\n    }\n  }\n\n  getSlabFormfields(values?: any) {\n    const formfields: FormfieldBase[] = [\n      new SelectBase({\n        controlName: 'periodType',\n        label: 'Period Type',\n        value: values ? values.periodType : this.periodTypeData[0].id,\n        options: { label: 'value', value: 'id', data: this.periodTypeData },\n        required: true,\n        order: 1\n      }),\n      new InputBase({\n        controlName: 'fromPeriod',\n        label: 'Period From',\n        value: values ? values.fromPeriod : undefined,\n        type: 'number',\n        required: true,\n        order: 2\n      }),\n      new InputBase({\n        controlName: 'toPeriod',\n        label: 'Period To',\n        value: values ? values.toPeriod : undefined,\n        type: 'number',\n        order: 3\n      }),\n      new InputBase({\n        controlName: 'amountRangeFrom',\n        label: 'Amount Range From',\n        value: values ? values.amountRangeFrom : undefined,\n        type: 'number',\n        order: 4\n      }),\n      new InputBase({\n        controlName: 'amountRangeTo',\n        label: 'Amount Range To',\n        value: values ? values.amountRangeTo : undefined,\n        type: 'number',\n        order: 5\n      }),\n      new InputBase({\n        controlName: 'annualInterestRate',\n        label: 'Interest',\n        value: values ? values.annualInterestRate : undefined,\n        type: 'number',\n        required: true,\n        order: 6\n      }),\n      new InputBase({\n        controlName: 'description',\n        label: 'Description',\n        value: values ? values.description : undefined,\n        required: true,\n        order: 7\n      })\n    ];\n    return formfields;\n  }\n\n  get fixedDepositProductInterestRateChart() {\n    // TODO: Update once language and date settings are setup\n    const dateFormat = 'yyyy-MM-dd';\n    const locale = 'en';\n    const fixedDepositProductInterestRateChart = this.fixedDepositProductInterestRateChartForm.value;\n    for (const chart of fixedDepositProductInterestRateChart.charts) {\n      chart.dateFormat = dateFormat;\n      chart.locale = locale;\n      chart.fromDate = this.datePipe.transform(chart.fromDate, dateFormat) || '';\n      chart.endDate = this.datePipe.transform(chart.endDate, dateFormat) || '';\n      if (chart.endDate === '') {\n        delete chart.endDate;\n      }\n    }\n    return fixedDepositProductInterestRateChart;\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n  <h2 class=\\\"mat-h2\\\" fxFlexFill>{{ fixedDepositProduct.name }}</h2>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Details</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Short Name:</span>\\n    <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.shortName }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"fixedDepositProduct.description\\\">\\n    <span fxFlex=\\\"40%\\\">Description:</span>\\n    <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.description }}</span>\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Currency</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Currency:</span>\\n    <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.currencyCode | find:fixedDepositProductsTemplate.currencyOptions:'code':'name' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Decimal Places:</span>\\n    <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.digitsAfterDecimal }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Currency in multiples of:</span>\\n    <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.inMultiplesOf }}</span>\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Terms</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Deposit Amount:</span>\\n    <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.depositAmount + ' (Min: ' + (fixedDepositProduct.minDepositAmount ? fixedDepositProduct.minDepositAmount : fixedDepositProduct.depositAmount) + ', Max: ' + (fixedDepositProduct.maxDepositAmount ? fixedDepositProduct.maxDepositAmount : fixedDepositProduct.depositAmount) + ')' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Interest Compounding Period:</span>\\n    <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.interestCompoundingPeriodType | find:fixedDepositProductsTemplate.interestCompoundingPeriodTypeOptions:'id':'value' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Interest Posting Period:</span>\\n    <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.interestPostingPeriodType | find:fixedDepositProductsTemplate.interestPostingPeriodTypeOptions:'id':'value' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Interest Calculated using:</span>\\n    <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.interestCalculationType | find:fixedDepositProductsTemplate.interestCalculationTypeOptions:'id':'value' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Days in Year:</span>\\n    <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.interestCalculationDaysInYearType | find:fixedDepositProductsTemplate.interestCalculationDaysInYearTypeOptions:'id':'value' }}</span>\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Settings</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill *ngIf=\\\"fixedDepositProduct.lockinPeriodFrequency\\\">\\n    <span fxFlex=\\\"40%\\\">Lock-in Period:</span>\\n    <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.lockinPeriodFrequency + ' ' + (fixedDepositProduct.lockinPeriodFrequencyType | find:fixedDepositProductsTemplate.lockinPeriodFrequencyTypeOptions:'id':'value') }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Minimum Deposit Term:</span>\\n    <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.minDepositTerm + ' ' + (fixedDepositProduct.minDepositTermTypeId | find:fixedDepositProductsTemplate.periodFrequencyTypeOptions:'id':'value') }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"fixedDepositProduct.inMultiplesOfDepositTerm\\\">\\n    <span fxFlex=\\\"40%\\\">And thereafter, in Multiples of:</span>\\n    <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.inMultiplesOfDepositTerm + ' ' + (fixedDepositProduct.inMultiplesOfDepositTermTypeId | find:fixedDepositProductsTemplate.periodFrequencyTypeOptions:'id':'value') }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"fixedDepositProduct.maxDepositTerm\\\">\\n    <span fxFlex=\\\"40%\\\">Minimum Deposit Term:</span>\\n    <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.maxDepositTerm + ' ' + (fixedDepositProduct.maxDepositTermTypeId | find:fixedDepositProductsTemplate.periodFrequencyTypeOptions:'id':'value') }}</span>\\n  </div>\\n  <!-- For Pre-mature closure -->\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Apply Penal Interest (less):</span>\\n    <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.preClosurePenalApplicable ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"fixedDepositProduct.preClosurePenalApplicable\\\">\\n    <span fxFlex=\\\"40%\\\">Penal Interest (%):</span>\\n    <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.preClosurePenalInterest + '% (' + (fixedDepositProduct.preClosurePenalInterestOnTypeId | find:fixedDepositProductsTemplate.preClosurePenalInterestOnTypeOptions:'id':'value') + ')' }}</span>\\n  </div>\\n  <!--  -->\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Withhold Tax is Applicable:</span>\\n    <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.withHoldTax ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"fixedDepositProduct.withHoldTax\\\">\\n    <span fxFlex=\\\"40%\\\">Tax Group:</span>\\n    <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.taxGroupId | find:fixedDepositProductsTemplate.taxGroupOptions:'id':'name' }}</span>\\n  </div>\\n\\n  <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\" *ngIf=\\\"fixedDepositProduct.charts.length !== 0\\\">\\n\\n    <h3 class=\\\"mat-h3\\\" fxFlexFill>Interest Rate Charts</h3>\\n\\n    <mat-divider fxFlexFill></mat-divider>\\n\\n    <div fxFlexFill *ngFor=\\\"let chart of fixedDepositProduct.charts; let chartIndex = index\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <div fxFlexFill *ngIf=\\\"chart.name\\\">\\n        <span fxFlex=\\\"40%\\\">Name:</span>\\n        <span fxFlex=\\\"60%\\\">{{ chart.name }}</span>\\n      </div>\\n\\n      <div fxFlexFill>\\n        <span fxFlex=\\\"40%\\\">Valid from Date:</span>\\n        <span fxFlex=\\\"60%\\\">{{ chart.fromDate | date }}</span>\\n      </div>\\n\\n      <div fxFlexFill *ngIf=\\\"chart.endDate\\\">\\n        <span fxFlex=\\\"40%\\\">End Date:</span>\\n        <span fxFlex=\\\"60%\\\">{{ chart.endDate | date }}</span>\\n      </div>\\n\\n      <div fxFlexFill *ngIf=\\\"chart.description\\\">\\n        <span fxFlex=\\\"40%\\\">Description:</span>\\n        <span fxFlex=\\\"60%\\\">{{ chart.description }}</span>\\n      </div>\\n\\n      <div fxFlexFill>\\n        <span fxFlex=\\\"40%\\\">Primary Grouping by Amount:</span>\\n        <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.isPrimaryGroupingByAmount ? 'Yes' : 'No' }}</span>\\n      </div>\\n\\n      <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"chart.chartSlabs\\\" *ngIf=\\\"chart.chartSlabs.length !== 0\\\" multiTemplateDataRows>\\n\\n        <ng-container matColumnDef=\\\"period\\\">\\n          <th mat-header-cell *matHeaderCellDef> Period </th>\\n          <td mat-cell *matCellDef=\\\"let chartSlab\\\">\\n            {{ chartSlab.fromPeriod + ' - ' + chartSlab.toPeriod + ' ' + (chartSlab.periodType | find:fixedDepositProductsTemplate.chartTemplate.periodTypes:'id':'value') }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"amountRange\\\">\\n          <th mat-header-cell *matHeaderCellDef> Amount Range </th>\\n          <td mat-cell *matCellDef=\\\"let chartSlab\\\">\\n            {{ chartSlab.amountRangeFrom + ' - ' + chartSlab.amountRangeTo }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"annualInterestRate\\\">\\n          <th mat-header-cell *matHeaderCellDef> Interest </th>\\n          <td mat-cell *matCellDef=\\\"let chartSlab\\\">\\n            {{ chartSlab.annualInterestRate }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"description\\\">\\n          <th mat-header-cell *matHeaderCellDef> Description </th>\\n          <td mat-cell *matCellDef=\\\"let chartSlab\\\">\\n            {{ chartSlab.description }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"actions\\\">\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\n          <td mat-cell *matCellDef=\\\"let chartSlab; let chartSlabIndex = dataIndex\\\">\\n            <button mat-button color=\\\"primary\\\" (click)=\\\"expandChartSlabIndex[chartIndex] = expandChartSlabIndex[chartIndex] === chartSlabIndex ? null : chartSlabIndex\\\" [disabled]=\\\"chartSlab.incentives.length === 0\\\">\\n              <span *ngIf=\\\"expandChartSlabIndex[chartIndex] !== chartSlabIndex\\\">\\n                <fa-icon icon=\\\"eye\\\"></fa-icon>&nbsp;&nbsp;\\n                View Incentives\\n              </span>\\n              <span *ngIf=\\\"expandChartSlabIndex[chartIndex] === chartSlabIndex\\\">\\n                <fa-icon icon=\\\"eye-slash\\\"></fa-icon>&nbsp;&nbsp;\\n                Hide Incentives\\n              </span>\\n            </button>\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"incentives\\\">\\n          <td mat-cell *matCellDef=\\\"let chartSlab; let chartSlabIndex = dataIndex\\\" [attr.colspan]=\\\"chartSlabsDisplayedColumns[chartIndex].length\\\">\\n            <div fxLayout=\\\"row wrap\\\" fxFlexFill class=\\\"incentives\\\" [@expandChartSlab]=\\\"chartSlabIndex === expandChartSlabIndex[chartIndex] ? 'expanded' : 'collapsed'\\\">\\n              <mat-card fxLayout=\\\"row wrap\\\" fxFlexFill>\\n\\n                <h4 class=\\\"mat-h4\\\" fxFlex=\\\"23%\\\">\\n                  Incentives\\n                </h4>\\n\\n                <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"chartSlab.incentives\\\">\\n\\n                  <ng-container matColumnDef=\\\"entityType\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Entity Type </th>\\n                    <td mat-cell *matCellDef=\\\"let incentive\\\">\\n                      {{ incentive.entityType | find:fixedDepositProductsTemplate.chartTemplate.entityTypeOptions:'id':'value' }}\\n                    </td>\\n                  </ng-container>\\n\\n                  <ng-container matColumnDef=\\\"attributeName\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Attribute Name </th>\\n                    <td mat-cell *matCellDef=\\\"let incentive\\\">\\n                      {{ incentive.attributeName | find:fixedDepositProductsTemplate.chartTemplate.attributeNameOptions:'id':'value' }}\\n                    </td>\\n                  </ng-container>\\n\\n                  <ng-container matColumnDef=\\\"conditionType\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Condition Type </th>\\n                    <td mat-cell *matCellDef=\\\"let incentive\\\">\\n                      {{ incentive.conditionType | find:fixedDepositProductsTemplate.chartTemplate.conditionTypeOptions:'id':'value' }}\\n                    </td>\\n                  </ng-container>\\n\\n                  <ng-container matColumnDef=\\\"attributeValue\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Attribute Value </th>\\n                    <td mat-cell *matCellDef=\\\"let incentive\\\" [ngSwitch]=\\\"incentive.attributeName\\\">\\n                      <span *ngSwitchCase=\\\"2\\\">{{ incentive.attributeValue | find:fixedDepositProductsTemplate.chartTemplate.genderOptions:'id':'name' }}</span>\\n                      <span *ngSwitchCase=\\\"3\\\">{{ incentive.attributeValue }}</span>\\n                      <span *ngSwitchCase=\\\"4\\\">{{ incentive.attributeValue | find:fixedDepositProductsTemplate.chartTemplate.clientTypeOptions:'id':'name' }}</span>\\n                      <span *ngSwitchCase=\\\"5\\\">{{ incentive.attributeValue | find:fixedDepositProductsTemplate.chartTemplate.clientClassificationOptions:'id':'name' }}</span>\\n                    </td>\\n                  </ng-container>\\n\\n                  <ng-container matColumnDef=\\\"incentiveType\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Incentive Type </th>\\n                    <td mat-cell *matCellDef=\\\"let incentive\\\">\\n                      {{ incentive.incentiveType | find:fixedDepositProductsTemplate.chartTemplate.incentiveTypeOptions:'id':'value'}}\\n                    </td>\\n                  </ng-container>\\n\\n                  <ng-container matColumnDef=\\\"amount\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Amount </th>\\n                    <td mat-cell *matCellDef=\\\"let incentive\\\">\\n                      {{ incentive.amount }}\\n                    </td>\\n                  </ng-container>\\n\\n                  <tr mat-header-row *matHeaderRowDef=\\\"incentivesDisplayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: incentivesDisplayedColumns;\\\"></tr>\\n\\n                </table>\\n\\n              </mat-card>\\n            </div>\\n          </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"chartSlabsDisplayedColumns[chartIndex]\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: chartSlabsDisplayedColumns[chartIndex];\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: chartSlabsIncentivesDisplayedColumns;\\\" class=\\\"incentives-row\\\"></tr>\\n\\n      </table>\\n\\n      <mat-divider fxFlexFill></mat-divider>\\n\\n    </div>\\n\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"fixedDepositProduct.charges.length\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <h3 class=\\\"mat-h3\\\" fxFlexFill>Charges</h3>\\n\\n    <mat-divider fxFlexFill></mat-divider>\\n\\n    <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"fixedDepositProduct.charges\\\">\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Name </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\">\\n          {{ charge.name + ', ' + charge.currency.displaySymbol }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"chargeCalculationType\\\">\\n        <th mat-header-cell *matHeaderCellDef> Type </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\">\\n          {{ charge.chargeCalculationType.value }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"amount\\\">\\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\">\\n          {{ charge.amount  }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"chargeTimeType\\\">\\n        <th mat-header-cell *matHeaderCellDef> Collected On </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\">\\n          {{ charge.chargeTimeType.value }}\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"chargesDisplayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: chargesDisplayedColumns;\\\"></tr>\\n\\n    </table>\\n\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Accounting</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Type:</span>\\n    <span fxFlex=\\\"60%\\\">{{ accountingRuleData[fixedDepositProduct.accountingRule-1] }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"fixedDepositProduct.accountingRule === 2\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <h4 fxFlexFill class=\\\"mat-h4\\\">Assets</h4>\\n\\n    <div fxFlexFill>\\n      <span fxFlex=\\\"40%\\\">Saving reference:</span>\\n      <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.savingsReferenceAccountId | find:fixedDepositProductsTemplate.accountingMappingOptions.assetAccountOptions:'id':'name' }}</span>\\n    </div>\\n\\n    <h4 fxFlexFill class=\\\"mat-h4\\\">Liabilities</h4>\\n\\n    <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n      <span fxFlex=\\\"40%\\\">Saving control:</span>\\n      <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.savingsControlAccountId | find:fixedDepositProductsTemplate.accountingMappingOptions.liabilityAccountOptions:'id':'name' }}</span>\\n      <span fxFlex=\\\"40%\\\">Savings transfers in suspense:</span>\\n      <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.transfersInSuspenseAccountId | find:fixedDepositProductsTemplate.accountingMappingOptions.liabilityAccountOptions:'id':'name' }}</span>\\n    </div>\\n\\n    <h4 fxFlexFill class=\\\"mat-h4\\\">Expenses</h4>\\n\\n    <div fxFlexFill>\\n      <span fxFlex=\\\"40%\\\">Interest on savings:</span>\\n      <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.interestOnSavingsAccountId | find:fixedDepositProductsTemplate.accountingMappingOptions.expenseAccountOptions:'id':'name' }}</span>\\n    </div>\\n\\n    <h4 fxFlexFill class=\\\"mat-h4\\\">Income</h4>\\n\\n    <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n      <span fxFlex=\\\"40%\\\">Income from fees:</span>\\n      <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.incomeFromFeeAccountId | find:fixedDepositProductsTemplate.accountingMappingOptions.incomeAccountOptions:'id':'name' }}</span>\\n      <span fxFlex=\\\"40%\\\">Income from penalties:</span>\\n      <span fxFlex=\\\"60%\\\">{{ fixedDepositProduct.incomeFromPenaltyAccountId | find:fixedDepositProductsTemplate.accountingMappingOptions.incomeAccountOptions:'id':'name' }}</span>\\n    </div>\\n\\n    <div *ngIf=\\\"fixedDepositProduct.advancedAccountingRules && (fixedDepositProduct.paymentChannelToFundSourceMappings?.length || fixedDepositProduct.feeToIncomeAccountMappings?.length || fixedDepositProduct.penaltyToIncomeAccountMappings?.length)\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <h3 class=\\\"mat-h3\\\" fxFlexFill>Advanced Accounting Rules</h3>\\n\\n      <mat-divider fxFlexFill></mat-divider>\\n\\n      <div *ngIf=\\\"fixedDepositProduct.paymentChannelToFundSourceMappings?.length\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <h4 class=\\\"mat-h4\\\" fxFlexFill>Fund Sources for Payment Channels</h4>\\n\\n        <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"fixedDepositProduct.paymentChannelToFundSourceMappings\\\">\\n\\n          <ng-container matColumnDef=\\\"paymentTypeId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Payment Type </th>\\n            <td mat-cell *matCellDef=\\\"let paymentFundSource\\\">\\n              {{ paymentFundSource.paymentTypeId | find:fixedDepositProductsTemplate.paymentTypeOptions:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"fundSourceAccountId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fund Source </th>\\n            <td mat-cell *matCellDef=\\\"let paymentFundSource\\\">\\n              {{ paymentFundSource.fundSourceAccountId | find:fixedDepositProductsTemplate.accountingMappingOptions.assetAccountOptions:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"paymentFundSourceDisplayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: paymentFundSourceDisplayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n      </div>\\n\\n      <div *ngIf=\\\"fixedDepositProduct.feeToIncomeAccountMappings?.length\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <h4 class=\\\"mat-h4\\\" fxFlexFill>Fees to Specific Income Accounts</h4>\\n\\n        <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"fixedDepositProduct.feeToIncomeAccountMappings\\\">\\n\\n          <ng-container matColumnDef=\\\"chargeId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fees </th>\\n            <td mat-cell *matCellDef=\\\"let feesIncome\\\">\\n              {{ feesIncome.chargeId | find:fixedDepositProductsTemplate.chargeOptions:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"incomeAccountId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Income Account </th>\\n            <td mat-cell *matCellDef=\\\"let feesIncome\\\">\\n              {{ feesIncome.incomeAccountId | find:fixedDepositProductsTemplate.accountingMappingOptions.incomeAccountOptions:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"feesPenaltyIncomeDisplayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: feesPenaltyIncomeDisplayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n      </div>\\n\\n      <div *ngIf=\\\"fixedDepositProduct.penaltyToIncomeAccountMappings?.length\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <h4 class=\\\"mat-h4\\\" fxFlexFill>Penalties to Specific Income Accounts</h4>\\n\\n        <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"fixedDepositProduct.penaltyToIncomeAccountMappings\\\">\\n\\n          <ng-container matColumnDef=\\\"chargeId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Penalty </th>\\n            <td mat-cell *matCellDef=\\\"let penaltyIncome\\\">\\n              {{ penaltyIncome.chargeId  | find:fixedDepositProductsTemplate.penaltyOptions:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"incomeAccountId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Income Account </th>\\n            <td mat-cell *matCellDef=\\\"let penaltyIncome\\\">\\n              {{ penaltyIncome.incomeAccountId | find:fixedDepositProductsTemplate.accountingMappingOptions.incomeAccountOptions:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"feesPenaltyIncomeDisplayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: feesPenaltyIncomeDisplayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\\n<div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n  <button mat-raised-button matStepperPrevious>\\n    <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n    Previous\\n  </button>\\n  <button mat-raised-button [routerLink]=\\\"['../']\\\">\\n    Cancel\\n  </button>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"submit.emit()\\\">\\n    Submit\\n  </button>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table tr.incentives-row {\\n    height: 0; }\\n  table tr.incentives-row > td {\\n      padding: 0; }\\n  table tr.incentives-row .incentives {\\n      overflow: hidden; }\\n  table tr.incentives-row .mat-card {\\n      border-radius: 0; }\\n  table tr.incentives-row .mat-card > h4 {\\n        font-weight: 500;\\n        margin: 0.5em 0 0; }\\n  .mat-elevation-z1 {\\n  margin: 1em 0 1.5em 0; }\\n  h2, h3, h4 {\\n  margin: 0;\\n  font-weight: 500; }\\n  span {\\n  margin: 0.5em 0; }\\n  mat-divider {\\n  margin: 0 0 0.5em 0; }\\n  .margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2ZpeGVkLWRlcG9zaXQtcHJvZHVjdHMvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LXN0ZXBwZXIvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LXByZXZpZXctc3RlcC9maXhlZC1kZXBvc2l0LXByb2R1Y3QtcHJldmlldy1zdGVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBO0VBRGI7SUFJSSxTQUFTLEVBQUE7RUFKYjtNQU9NLFVBQVUsRUFBQTtFQVBoQjtNQVdNLGdCQUFnQixFQUFBO0VBWHRCO01BZU0sZ0JBQWdCLEVBQUE7RUFmdEI7UUFrQlEsZ0JBQWdCO1FBQ2hCLGlCQUFpQixFQUFBO0VBTXpCO0VBQ0UscUJBQXFCLEVBQUE7RUFHdkI7RUFDRSxTQUFTO0VBQ1QsZ0JBQWdCLEVBQUE7RUFHbEI7RUFDRSxlQUFlLEVBQUE7RUFHakI7RUFDRSxtQkFBbUIsRUFBQTtFQUdyQjtFQUNFLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL2ZpeGVkLWRlcG9zaXQtcHJvZHVjdHMvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LXN0ZXBwZXIvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LXByZXZpZXctc3RlcC9maXhlZC1kZXBvc2l0LXByb2R1Y3QtcHJldmlldy1zdGVwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcblxuICB0ci5pbmNlbnRpdmVzLXJvdyB7XG4gICAgaGVpZ2h0OiAwO1xuXG4gICAgPiB0ZCB7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgIH1cblxuICAgIC5pbmNlbnRpdmVzIHtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgfVxuXG4gICAgLm1hdC1jYXJkIHtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDA7XG5cbiAgICAgID4gaDQge1xuICAgICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgICBtYXJnaW46IDAuNWVtIDAgMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLm1hdC1lbGV2YXRpb24tejEge1xuICBtYXJnaW46IDFlbSAwIDEuNWVtIDA7XG59XG5cbmgyLCBoMywgaDQge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbnNwYW4ge1xuICBtYXJnaW46IDAuNWVtIDA7XG59XG5cbm1hdC1kaXZpZGVyIHtcbiAgbWFyZ2luOiAwIDAgMC41ZW0gMDtcbn1cblxuLm1hcmdpbi10IHtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuIl19 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { trigger, state, transition, animate, style } from '@angular/animations';\n\n@Component({\n  selector: 'mifosx-fixed-deposit-product-preview-step',\n  templateUrl: './fixed-deposit-product-preview-step.component.html',\n  styleUrls: ['./fixed-deposit-product-preview-step.component.scss'],\n  animations: [\n    trigger('expandChartSlab', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n  ]\n})\nexport class FixedDepositProductPreviewStepComponent implements OnInit {\n\n  @Input() fixedDepositProductsTemplate: any;\n  @Input() chartSlabsDisplayedColumns: any[];\n  @Input() accountingRuleData: any;\n  @Input() fixedDepositProduct: any;\n  @Output() submit = new EventEmitter();\n\n  chartSlabsIncentivesDisplayedColumns: string[] = ['incentives'];\n  incentivesDisplayedColumns: string[] = ['entityType', 'attributeName', 'conditionType', 'attributeValue', 'incentiveType', 'amount'];\n  chargesDisplayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType'];\n  paymentFundSourceDisplayedColumns: string[] = ['paymentTypeId', 'fundSourceAccountId'];\n  feesPenaltyIncomeDisplayedColumns: string[] = ['chargeId', 'incomeAccountId'];\n\n  expandChartSlabIndex: number[] = [];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"fixedDepositProductSettingsForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Lock-in Period</h4>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Frequency</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"lockinPeriodFrequency\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Type</mat-label>\\n      <mat-select formControlName=\\\"lockinPeriodFrequencyType\\\">\\n        <mat-option *ngFor=\\\"let lockinPeriodFrequencyType of lockinPeriodFrequencyTypeData\\\" [value]=\\\"lockinPeriodFrequencyType.id\\\">\\n          {{ lockinPeriodFrequencyType.value }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Minimum Deposit Term</h4>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Frequency</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"minDepositTerm\\\" required>\\n      <mat-error>\\n        Minimum Deposit Term Frequency is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Frequency Type</mat-label>\\n      <mat-select formControlName=\\\"minDepositTermTypeId\\\" required>\\n        <mat-option *ngFor=\\\"let periodFrequencyType of periodFrequencyTypeData\\\" [value]=\\\"periodFrequencyType.id\\\">\\n          {{ periodFrequencyType.value }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Minimum Deposit Term Frequency Type is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">And thereafter, in Multiples of</h4>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Frequency</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"inMultiplesOfDepositTerm\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Type</mat-label>\\n      <mat-select formControlName=\\\"inMultiplesOfDepositTermTypeId\\\">\\n        <mat-option *ngFor=\\\"let periodFrequencyType of periodFrequencyTypeData\\\" [value]=\\\"periodFrequencyType.id\\\">\\n          {{ periodFrequencyType.value }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Maximum Deposit Term</h4>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Frequency</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"maxDepositTerm\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Type</mat-label>\\n      <mat-select formControlName=\\\"maxDepositTermTypeId\\\">\\n        <mat-option *ngFor=\\\"let periodFrequencyType of periodFrequencyTypeData\\\" [value]=\\\"periodFrequencyType.id\\\">\\n          {{ periodFrequencyType.value }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n    <h4 fxFlex=\\\"23%\\\" class=\\\"mat-h4\\\">For Pre-mature closure</h4>\\n\\n    <mat-checkbox fxFlex=\\\"73%\\\" labelPosition=\\\"before\\\" formControlName=\\\"preClosurePenalApplicable\\\" class=\\\"margin-v\\\">\\n      Apply Penal Interest (less)\\n    </mat-checkbox>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Penal Interest (%)</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"preClosurePenalInterest\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Period</mat-label>\\n      <mat-select formControlName=\\\"preClosurePenalInterestOnTypeId\\\">\\n        <mat-option *ngFor=\\\"let preClosurePenalInterestOnType of preClosurePenalInterestOnTypeData\\\" [value]=\\\"preClosurePenalInterestOnType.id\\\">\\n          {{ preClosurePenalInterestOnType.value }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n    <mat-checkbox fxFlex=\\\"48%\\\" labelPosition=\\\"before\\\" formControlName=\\\"withHoldTax\\\" class=\\\"margin-v\\\">\\n      Is Withhold Tax Applicable?\\n    </mat-checkbox>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\" *ngIf=\\\"fixedDepositProductSettingsForm.value.withHoldTax\\\">\\n      <mat-label>Tax Group</mat-label>\\n      <mat-select formControlName=\\\"taxGroupId\\\" required>\\n        <mat-option *ngFor=\\\"let taxGroup of taxGroupData\\\" [value]=\\\"taxGroup.id\\\">\\n          {{ taxGroup.name }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Tax Group is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext>\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \"h4 {\\n  font-weight: 500;\\n  margin: 1em 0; }\\n\\nmat-divider {\\n  margin: 1em 0 2em 0; }\\n\\n.margin-v {\\n  margin: 1em 0; }\\n\\n.margin-b {\\n  margin: 0 0 1em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2ZpeGVkLWRlcG9zaXQtcHJvZHVjdHMvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LXN0ZXBwZXIvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LXNldHRpbmdzLXN0ZXAvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LXNldHRpbmdzLXN0ZXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsYUFBYSxFQUFBOztBQUdmO0VBQ0UsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsYUFBYSxFQUFBOztBQUdmO0VBQ0UsaUJBQWlCLEVBQUE7O0FBR25CO0VBQ0UsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdHMvZml4ZWQtZGVwb3NpdC1wcm9kdWN0cy9maXhlZC1kZXBvc2l0LXByb2R1Y3Qtc3RlcHBlci9maXhlZC1kZXBvc2l0LXByb2R1Y3Qtc2V0dGluZ3Mtc3RlcC9maXhlZC1kZXBvc2l0LXByb2R1Y3Qtc2V0dGluZ3Mtc3RlcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImg0IHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbWFyZ2luOiAxZW0gMDtcbn1cblxubWF0LWRpdmlkZXIge1xuICBtYXJnaW46IDFlbSAwIDJlbSAwO1xufVxuXG4ubWFyZ2luLXYge1xuICBtYXJnaW46IDFlbSAwO1xufVxuXG4ubWFyZ2luLWIge1xuICBtYXJnaW46IDAgMCAxZW0gMDtcbn1cblxuLm1hcmdpbi10IHtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuIl19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'mifosx-fixed-deposit-product-settings-step',\n  templateUrl: './fixed-deposit-product-settings-step.component.html',\n  styleUrls: ['./fixed-deposit-product-settings-step.component.scss']\n})\nexport class FixedDepositProductSettingsStepComponent implements OnInit {\n\n  @Input() fixedDepositProductsTemplate: any;\n\n  fixedDepositProductSettingsForm: FormGroup;\n\n  lockinPeriodFrequencyTypeData: any;\n  periodFrequencyTypeData: any;\n  preClosurePenalInterestOnTypeData: any;\n  taxGroupData: any;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.createFixedDepositProductSettingsForm();\n    this.setConditionalControls();\n  }\n\n  ngOnInit() {\n    this.lockinPeriodFrequencyTypeData = this.fixedDepositProductsTemplate.lockinPeriodFrequencyTypeOptions;\n    this.periodFrequencyTypeData = this.fixedDepositProductsTemplate.periodFrequencyTypeOptions.slice(0, -1);\n    this.preClosurePenalInterestOnTypeData = this.fixedDepositProductsTemplate.preClosurePenalInterestOnTypeOptions;\n    this.taxGroupData = this.fixedDepositProductsTemplate.taxGroupOptions;\n  }\n\n  createFixedDepositProductSettingsForm() {\n    this.fixedDepositProductSettingsForm = this.formBuilder.group({\n      'lockinPeriodFrequency': [''],\n      'lockinPeriodFrequencyType': [''],\n      'minDepositTerm': ['', Validators.required],\n      'minDepositTermTypeId': ['', Validators.required],\n      'inMultiplesOfDepositTerm': [''],\n      'inMultiplesOfDepositTermTypeId': [''],\n      'maxDepositTerm': [''],\n      'maxDepositTermTypeId': [''],\n      'preClosurePenalApplicable': [false],\n      'preClosurePenalInterest': [''],\n      'preClosurePenalInterestOnTypeId': [''],\n      'withHoldTax': [false]\n    });\n  }\n\n  setConditionalControls() {\n    this.fixedDepositProductSettingsForm.get('withHoldTax').valueChanges\n      .subscribe((withHoldTax: any) => {\n        if (withHoldTax) {\n          this.fixedDepositProductSettingsForm.addControl('taxGroupId', new FormControl('', Validators.required));\n        } else {\n          this.fixedDepositProductSettingsForm.removeControl('taxGroupId');\n        }\n      });\n  }\n\n  get fixedDepositProductSettings() {\n    const fixedDepositProductSettings = this.fixedDepositProductSettingsForm.value;\n    for (const key in fixedDepositProductSettings) {\n      if (fixedDepositProductSettings[key] === '') {\n        delete fixedDepositProductSettings[key];\n      }\n    }\n    return fixedDepositProductSettings;\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"fixedDepositProductTermsForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Deposit Amount</h4>\\n\\n    <mat-form-field fxFlex=\\\"31%\\\">\\n      <mat-label>Minimum</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"minDepositAmount\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"31%\\\">\\n      <mat-label>Default</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"depositAmount\\\" required>\\n      <mat-error>\\n        Default Deposit Amount is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"31%\\\">\\n      <mat-label>Maximum</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"maxDepositAmount\\\">\\n    </mat-form-field>\\n\\n    <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Interest Compounding Period</mat-label>\\n      <mat-select formControlName=\\\"interestCompoundingPeriodType\\\" required>\\n        <mat-option *ngFor=\\\"let interestCompoundingPeriodType of interestCompoundingPeriodTypeData\\\" [value]=\\\"interestCompoundingPeriodType.id\\\">\\n          {{ interestCompoundingPeriodType.value }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Interest Compounding Period is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Interest Posting Period</mat-label>\\n      <mat-select formControlName=\\\"interestPostingPeriodType\\\" required>\\n        <mat-option *ngFor=\\\"let interestPostingPeriodType of interestPostingPeriodTypeData\\\" [value]=\\\"interestPostingPeriodType.id\\\">\\n          {{ interestPostingPeriodType.value }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Interest Posting Period is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Interest Calculated using</mat-label>\\n      <mat-select formControlName=\\\"interestCalculationType\\\" required>\\n        <mat-option *ngFor=\\\"let interestCalculationType of interestCalculationTypeData\\\" [value]=\\\"interestCalculationType.id\\\">\\n          {{ interestCalculationType.value }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Interest Calculated using is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Days in Year</mat-label>\\n      <mat-select formControlName=\\\"interestCalculationDaysInYearType\\\" required>\\n        <mat-option *ngFor=\\\"let interestCalculationDaysInYearType of interestCalculationDaysInYearTypeData\\\" [value]=\\\"interestCalculationDaysInYearType.id\\\">\\n          {{ interestCalculationDaysInYearType.value }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Days in Year is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext>\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \"h4 {\\n  font-weight: 500;\\n  margin: 1em 0; }\\n\\nmat-divider {\\n  margin: 1em 0 2em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2ZpeGVkLWRlcG9zaXQtcHJvZHVjdHMvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LXN0ZXBwZXIvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LXRlcm1zLXN0ZXAvZml4ZWQtZGVwb3NpdC1wcm9kdWN0LXRlcm1zLXN0ZXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsYUFBYSxFQUFBOztBQUdmO0VBQ0UsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdHMvZml4ZWQtZGVwb3NpdC1wcm9kdWN0cy9maXhlZC1kZXBvc2l0LXByb2R1Y3Qtc3RlcHBlci9maXhlZC1kZXBvc2l0LXByb2R1Y3QtdGVybXMtc3RlcC9maXhlZC1kZXBvc2l0LXByb2R1Y3QtdGVybXMtc3RlcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImg0IHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbWFyZ2luOiAxZW0gMDtcbn1cblxubWF0LWRpdmlkZXIge1xuICBtYXJnaW46IDFlbSAwIDJlbSAwO1xufVxuXG4ubWFyZ2luLXQge1xuICBtYXJnaW4tdG9wOiAxZW07XG59XG4iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'mifosx-fixed-deposit-product-terms-step',\n  templateUrl: './fixed-deposit-product-terms-step.component.html',\n  styleUrls: ['./fixed-deposit-product-terms-step.component.scss']\n})\nexport class FixedDepositProductTermsStepComponent implements OnInit {\n\n  @Input() fixedDepositProductsTemplate: any;\n\n  fixedDepositProductTermsForm: FormGroup;\n\n  interestCompoundingPeriodTypeData: any;\n  interestPostingPeriodTypeData: any;\n  interestCalculationTypeData: any;\n  interestCalculationDaysInYearTypeData: any;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.createFixedDepositProductTermsForm();\n  }\n\n  ngOnInit() {\n    this.interestCompoundingPeriodTypeData = this.fixedDepositProductsTemplate.interestCompoundingPeriodTypeOptions;\n    this.interestPostingPeriodTypeData = this.fixedDepositProductsTemplate.interestPostingPeriodTypeOptions;\n    this.interestCalculationTypeData = this.fixedDepositProductsTemplate.interestCalculationTypeOptions;\n    this.interestCalculationDaysInYearTypeData = this.fixedDepositProductsTemplate.interestCalculationDaysInYearTypeOptions;\n\n    this.fixedDepositProductTermsForm.patchValue({\n      'interestCompoundingPeriodType': this.fixedDepositProductsTemplate.interestCompoundingPeriodType.id,\n      'interestPostingPeriodType': this.fixedDepositProductsTemplate.interestPostingPeriodType.id,\n      'interestCalculationType': this.fixedDepositProductsTemplate.interestCalculationType.id,\n      'interestCalculationDaysInYearType': this.fixedDepositProductsTemplate.interestCalculationDaysInYearType.id\n    });\n  }\n\n  createFixedDepositProductTermsForm() {\n    this.fixedDepositProductTermsForm = this.formBuilder.group({\n      'minDepositAmount': [''],\n      'depositAmount': ['', Validators.required],\n      'maxDepositAmount': [''],\n      'interestCompoundingPeriodType': ['', Validators.required],\n      'interestPostingPeriodType': ['', Validators.required],\n      'interestCalculationType': ['', Validators.required],\n      'interestCalculationDaysInYearType': ['', Validators.required]\n    });\n  }\n\n  get fixedDepositProductTerms() {\n    const fixedDepositProductTerms = this.fixedDepositProductTermsForm.value;\n    for (const key in fixedDepositProductTerms) {\n      if (fixedDepositProductTerms[key] === '') {\n        delete fixedDepositProductTerms[key];\n      }\n    }\n    return fixedDepositProductTerms;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../products.service';\n\n@Injectable()\nexport class FixedDepositProductsTemplateResolver implements Resolve<Object> {\n\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the fixed deposit products template data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.productsService.getFixedDepositProductsTemplate();\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['create']\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Fixed Deposit Product\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let fixedDepositProduct\\\"> {{ fixedDepositProduct.name }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"shortName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Short Name </th>\\n        <td mat-cell *matCellDef=\\\"let fixedDepositProduct\\\"> {{ fixedDepositProduct.shortName }} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2ZpeGVkLWRlcG9zaXQtcHJvZHVjdHMvZml4ZWQtZGVwb3NpdC1wcm9kdWN0cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTtFQURiO0lBSUksZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdHMvZml4ZWQtZGVwb3NpdC1wcm9kdWN0cy9maXhlZC1kZXBvc2l0LXByb2R1Y3RzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcblxuICAuc2VsZWN0LXJvdzpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/**\n * Fixed Deposit Products component.\n */\n@Component({\n  selector: 'mifosx-fixed-deposit-products',\n  templateUrl: './fixed-deposit-products.component.html',\n  styleUrls: ['./fixed-deposit-products.component.scss']\n})\nexport class FixedDepositProductsComponent implements OnInit {\n\n  /** Fixed deposit products data. */\n  fixedDepositProductData: any;\n  /** Columns to be displayed in fixed deposit products table. */\n  displayedColumns: string[] = ['name', 'shortName'];\n  /** Data source for fixed deposit products table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for fixed deposit products table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for fixed deposit products table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the fixed deposit products data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { fixedDepositProducts: any }) => {\n      this.fixedDepositProductData = data.fixedDepositProducts;\n    });\n  }\n\n  /**\n   * Filters data in fixed deposit products table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the fixed deposit products table.\n   */\n  ngOnInit() {\n    this.setFixedDepositProducts();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for fixed deposit products table.\n   */\n  setFixedDepositProducts() {\n    this.dataSource = new MatTableDataSource(this.fixedDepositProductData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../products.service';\n\n/**\n * Fixed Deposit Products data resolver.\n */\n@Injectable()\nexport class FixedDepositProductsResolver implements Resolve<Object> {\n\n  /**\n   * @param {ProductsService} productsService Products service.\n   */\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the fixed deposit products data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.productsService.getFixedDepositProducts();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-horizontal-stepper class=\\\"mat-elevation-z8\\\" labelPosition=\\\"bottom\\\" #loanProductStepper>\\n\\n    <ng-template matStepperIcon=\\\"number\\\">\\n      <fa-icon icon=\\\"pencil-alt\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"edit\\\">\\n      <fa-icon icon=\\\"pencil-alt\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"done\\\">\\n      <fa-icon icon=\\\"check\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"error\\\">\\n      <fa-icon icon=\\\"exclamation-triangle\\\" size=\\\"lg\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"preview\\\">\\n      <fa-icon icon=\\\"eye\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <mat-step [stepControl]=\\\"loanProductDetailsForm\\\">\\n\\n      <ng-template matStepLabel>DETAILS</ng-template>\\n\\n      <mifosx-loan-product-details-step [loanProductsTemplate]=\\\"loanProductsTemplate\\\"></mifosx-loan-product-details-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"loanProductCurrencyForm\\\">\\n\\n      <ng-template matStepLabel>CURRENCY</ng-template>\\n\\n      <mifosx-loan-product-currency-step [loanProductsTemplate]=\\\"loanProductsTemplate\\\"></mifosx-loan-product-currency-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"loanProductTermsForm\\\">\\n\\n      <ng-template matStepLabel>TERMS</ng-template>\\n\\n      <mifosx-loan-product-terms-step [loanProductsTemplate]=\\\"loanProductsTemplate\\\"></mifosx-loan-product-terms-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"loanProductSettingsForm\\\">\\n\\n      <ng-template matStepLabel>SETTINGS</ng-template>\\n\\n      <mifosx-loan-product-settings-step\\n        [loanProductsTemplate]=\\\"loanProductsTemplate\\\"\\n        [isLinkedToFloatingInterestRates]=\\\"loanProductTermsForm.get('isLinkedToFloatingInterestRates')\\\"\\n      >\\n      </mifosx-loan-product-settings-step>\\n\\n    </mat-step>\\n\\n    <mat-step>\\n\\n      <ng-template matStepLabel>CHARGES</ng-template>\\n\\n      <mifosx-loan-product-charges-step\\n        [loanProductsTemplate]=\\\"loanProductsTemplate\\\"\\n        [currencyCode]=\\\"loanProductCurrencyForm.get('currencyCode')\\\"\\n        [multiDisburseLoan]=\\\"loanProductSettingsForm.get('multiDisburseLoan')\\\"\\n      >\\n      </mifosx-loan-product-charges-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"loanProductAccountingForm\\\">\\n\\n      <ng-template matStepLabel>ACCOUNTING</ng-template>\\n\\n      <mifosx-loan-product-accounting-step\\n        [loanProductsTemplate]=\\\"loanProductsTemplate\\\"\\n        [accountingRuleData]=\\\"accountingRuleData\\\"\\n        [loanProductFormValid]=\\\"loanProductFormValid\\\"\\n      >\\n      </mifosx-loan-product-accounting-step>\\n\\n    </mat-step>\\n\\n    <mat-step state=\\\"preview\\\" *ngIf=\\\"loanProductFormValid\\\" completed>\\n\\n      <ng-template matStepLabel>PREVIEW</ng-template>\\n\\n      <mifosx-loan-product-preview-step\\n        [loanProductsTemplate]=\\\"loanProductsTemplate\\\"\\n        [accountingRuleData]=\\\"accountingRuleData\\\"\\n        [loanProduct]=\\\"loanProduct\\\"\\n        (submit)=\\\"submit()\\\"\\n      >\\n      </mifosx-loan-product-preview-step>\\n\\n    </mat-step>\\n\\n  </mat-horizontal-stepper>\\n\\n</div>\\n\"","module.exports = \"fa-icon {\\n  position: relative;\\n  left: 5%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2xvYW4tcHJvZHVjdHMvY3JlYXRlLWxvYW4tcHJvZHVjdC9jcmVhdGUtbG9hbi1wcm9kdWN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLFFBQVEsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL2xvYW4tcHJvZHVjdHMvY3JlYXRlLWxvYW4tcHJvZHVjdC9jcmVhdGUtbG9hbi1wcm9kdWN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZmEtaWNvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogNSU7XG59XG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { LoanProductDetailsStepComponent } from '../loan-product-stepper/loan-product-details-step/loan-product-details-step.component';\nimport { LoanProductCurrencyStepComponent } from '../loan-product-stepper/loan-product-currency-step/loan-product-currency-step.component';\nimport { LoanProductTermsStepComponent } from '../loan-product-stepper/loan-product-terms-step/loan-product-terms-step.component';\nimport { LoanProductSettingsStepComponent } from '../loan-product-stepper/loan-product-settings-step/loan-product-settings-step.component';\nimport { LoanProductChargesStepComponent } from '../loan-product-stepper/loan-product-charges-step/loan-product-charges-step.component';\nimport { LoanProductAccountingStepComponent } from '../loan-product-stepper/loan-product-accounting-step/loan-product-accounting-step.component';\n\nimport { ProductsService } from 'app/products/products.service';\n\n@Component({\n  selector: 'mifosx-create-loan-product',\n  templateUrl: './create-loan-product.component.html',\n  styleUrls: ['./create-loan-product.component.scss']\n})\nexport class CreateLoanProductComponent implements OnInit {\n\n  @ViewChild(LoanProductDetailsStepComponent) loanProductDetailsStep: LoanProductDetailsStepComponent;\n  @ViewChild(LoanProductCurrencyStepComponent) loanProductCurrencyStep: LoanProductCurrencyStepComponent;\n  @ViewChild(LoanProductTermsStepComponent) loanProductTermsStep: LoanProductTermsStepComponent;\n  @ViewChild(LoanProductSettingsStepComponent) loanProductSettingsStep: LoanProductSettingsStepComponent;\n  @ViewChild(LoanProductChargesStepComponent) loanProductChargesStep: LoanProductChargesStepComponent;\n  @ViewChild(LoanProductAccountingStepComponent) loanProductAccountingStep: LoanProductAccountingStepComponent;\n\n  loanProductsTemplate: any;\n  accountingRuleData = ['None', 'Cash', 'Accrual (periodic)', 'Accrual (upfront)'];\n\n  constructor(private route: ActivatedRoute,\n              private productsService: ProductsService,\n              private router: Router) {\n    this.route.data.subscribe((data: { loanProductsTemplate: any }) => {\n      this.loanProductsTemplate = data.loanProductsTemplate;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  get loanProductDetailsForm() {\n    return this.loanProductDetailsStep.loanProductDetailsForm;\n  }\n\n  get loanProductCurrencyForm() {\n    return this.loanProductCurrencyStep.loanProductCurrencyForm;\n  }\n\n  get loanProductTermsForm() {\n    return this.loanProductTermsStep.loanProductTermsForm;\n  }\n\n  get loanProductSettingsForm() {\n    return this.loanProductSettingsStep.loanProductSettingsForm;\n  }\n\n  get loanProductAccountingForm() {\n    return this.loanProductAccountingStep.loanProductAccountingForm;\n  }\n\n  get loanProductFormValid() {\n    return (\n      this.loanProductDetailsForm.valid &&\n      this.loanProductCurrencyForm.valid &&\n      this.loanProductTermsForm.valid &&\n      this.loanProductSettingsForm.valid &&\n      this.loanProductAccountingForm.valid\n    );\n  }\n\n  get loanProduct() {\n    return {\n      ...this.loanProductDetailsStep.loanProductDetails,\n      ...this.loanProductCurrencyStep.loanProductCurrency,\n      ...this.loanProductTermsStep.loanProductTerms,\n      ...this.loanProductSettingsStep.loanProductSettings,\n      ...this.loanProductChargesStep.loanProductCharges,\n      ...this.loanProductAccountingStep.loanProductAccounting\n    };\n  }\n\n  submit() {\n    // TODO: Update once language and date settings are setup\n    const dateFormat = 'yyyy-MM-dd';\n    const loanProduct = {\n      ...this.loanProduct,\n      charges: this.loanProduct.charges.map((charge: any) => ({ id: charge.id })),\n      dateFormat,\n      locale: 'en'\n    };\n    delete loanProduct.allowAttributeConfiguration;\n    delete loanProduct.advancedAccountingRules;\n    this.productsService.createLoanProduct(loanProduct)\n      .subscribe((response: any) => {\n        this.router.navigate(['../', response.resourceId], { relativeTo: this.route });\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n    <mat-horizontal-stepper class=\\\"mat-elevation-z8\\\" labelPosition=\\\"bottom\\\" #loanProductStepper>\\n\\n      <ng-template matStepperIcon=\\\"number\\\">\\n        <fa-icon icon=\\\"pencil-alt\\\" size=\\\"sm\\\"></fa-icon>\\n      </ng-template>\\n\\n      <ng-template matStepperIcon=\\\"edit\\\">\\n        <fa-icon icon=\\\"pencil-alt\\\" size=\\\"sm\\\"></fa-icon>\\n      </ng-template>\\n\\n      <ng-template matStepperIcon=\\\"done\\\">\\n        <fa-icon icon=\\\"check\\\" size=\\\"sm\\\"></fa-icon>\\n      </ng-template>\\n\\n      <ng-template matStepperIcon=\\\"error\\\">\\n        <fa-icon icon=\\\"exclamation-triangle\\\" size=\\\"lg\\\"></fa-icon>\\n      </ng-template>\\n\\n      <ng-template matStepperIcon=\\\"preview\\\">\\n        <fa-icon icon=\\\"eye\\\" size=\\\"sm\\\"></fa-icon>\\n      </ng-template>\\n\\n      <mat-step [stepControl]=\\\"loanProductDetailsForm\\\" completed>\\n\\n        <ng-template matStepLabel>DETAILS</ng-template>\\n\\n        <mifosx-loan-product-details-step [loanProductsTemplate]=\\\"loanProductAndTemplate\\\"></mifosx-loan-product-details-step>\\n\\n      </mat-step>\\n\\n      <mat-step [stepControl]=\\\"loanProductCurrencyForm\\\" completed>\\n\\n        <ng-template matStepLabel>CURRENCY</ng-template>\\n\\n        <mifosx-loan-product-currency-step [loanProductsTemplate]=\\\"loanProductAndTemplate\\\"></mifosx-loan-product-currency-step>\\n\\n      </mat-step>\\n\\n      <mat-step [stepControl]=\\\"loanProductTermsForm\\\" completed>\\n\\n        <ng-template matStepLabel>TERMS</ng-template>\\n\\n        <mifosx-loan-product-terms-step [loanProductsTemplate]=\\\"loanProductAndTemplate\\\"></mifosx-loan-product-terms-step>\\n\\n      </mat-step>\\n\\n      <mat-step [stepControl]=\\\"loanProductSettingsForm\\\" completed>\\n\\n        <ng-template matStepLabel>SETTINGS</ng-template>\\n\\n        <mifosx-loan-product-settings-step\\n          [loanProductsTemplate]=\\\"loanProductAndTemplate\\\"\\n          [isLinkedToFloatingInterestRates]=\\\"loanProductTermsForm.get('isLinkedToFloatingInterestRates')\\\"\\n        >\\n        </mifosx-loan-product-settings-step>\\n\\n      </mat-step>\\n\\n      <mat-step completed>\\n\\n        <ng-template matStepLabel>CHARGES</ng-template>\\n\\n        <mifosx-loan-product-charges-step\\n          [loanProductsTemplate]=\\\"loanProductAndTemplate\\\"\\n          [currencyCode]=\\\"loanProductCurrencyForm.get('currencyCode')\\\"\\n          [multiDisburseLoan]=\\\"loanProductSettingsForm.get('multiDisburseLoan')\\\"\\n        >\\n        </mifosx-loan-product-charges-step>\\n\\n      </mat-step>\\n\\n      <mat-step [stepControl]=\\\"loanProductAccountingForm\\\" completed>\\n\\n        <ng-template matStepLabel>ACCOUNTING</ng-template>\\n\\n        <mifosx-loan-product-accounting-step\\n          [loanProductsTemplate]=\\\"loanProductAndTemplate\\\"\\n          [accountingRuleData]=\\\"accountingRuleData\\\"\\n          [loanProductFormValid]=\\\"loanProductFormValidAndNotPristine\\\"\\n        >\\n        </mifosx-loan-product-accounting-step>\\n\\n      </mat-step>\\n\\n      <mat-step state=\\\"preview\\\" *ngIf=\\\"loanProductFormValidAndNotPristine\\\" completed>\\n\\n        <ng-template matStepLabel>PREVIEW</ng-template>\\n\\n        <mifosx-loan-product-preview-step\\n          [loanProductsTemplate]=\\\"loanProductAndTemplate\\\"\\n          [accountingRuleData]=\\\"accountingRuleData\\\"\\n          [loanProduct]=\\\"loanProduct\\\"\\n          (submit)=\\\"submit()\\\"\\n        >\\n        </mifosx-loan-product-preview-step>\\n\\n      </mat-step>\\n\\n    </mat-horizontal-stepper>\\n\\n  </div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL2xvYW4tcHJvZHVjdHMvZWRpdC1sb2FuLXByb2R1Y3QvZWRpdC1sb2FuLXByb2R1Y3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { LoanProductDetailsStepComponent } from '../loan-product-stepper/loan-product-details-step/loan-product-details-step.component';\nimport { LoanProductCurrencyStepComponent } from '../loan-product-stepper/loan-product-currency-step/loan-product-currency-step.component';\nimport { LoanProductTermsStepComponent } from '../loan-product-stepper/loan-product-terms-step/loan-product-terms-step.component';\nimport { LoanProductSettingsStepComponent } from '../loan-product-stepper/loan-product-settings-step/loan-product-settings-step.component';\nimport { LoanProductChargesStepComponent } from '../loan-product-stepper/loan-product-charges-step/loan-product-charges-step.component';\nimport { LoanProductAccountingStepComponent } from '../loan-product-stepper/loan-product-accounting-step/loan-product-accounting-step.component';\n\nimport { ProductsService } from 'app/products/products.service';\n\n@Component({\n  selector: 'mifosx-edit-loan-product',\n  templateUrl: './edit-loan-product.component.html',\n  styleUrls: ['./edit-loan-product.component.scss']\n})\nexport class EditLoanProductComponent implements OnInit {\n\n  @ViewChild(LoanProductDetailsStepComponent) loanProductDetailsStep: LoanProductDetailsStepComponent;\n  @ViewChild(LoanProductCurrencyStepComponent) loanProductCurrencyStep: LoanProductCurrencyStepComponent;\n  @ViewChild(LoanProductTermsStepComponent) loanProductTermsStep: LoanProductTermsStepComponent;\n  @ViewChild(LoanProductSettingsStepComponent) loanProductSettingsStep: LoanProductSettingsStepComponent;\n  @ViewChild(LoanProductChargesStepComponent) loanProductChargesStep: LoanProductChargesStepComponent;\n  @ViewChild(LoanProductAccountingStepComponent) loanProductAccountingStep: LoanProductAccountingStepComponent;\n\n  loanProductAndTemplate: any;\n  accountingRuleData = ['None', 'Cash', 'Accrual (periodic)', 'Accrual (upfront)'];\n\n  constructor(private route: ActivatedRoute,\n              private productsService: ProductsService,\n              private router: Router) {\n    this.route.data.subscribe((data: { loanProductAndTemplate: any }) => {\n      this.loanProductAndTemplate = data.loanProductAndTemplate;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  get loanProductDetailsForm() {\n    return this.loanProductDetailsStep.loanProductDetailsForm;\n  }\n\n  get loanProductCurrencyForm() {\n    return this.loanProductCurrencyStep.loanProductCurrencyForm;\n  }\n\n  get loanProductTermsForm() {\n    return this.loanProductTermsStep.loanProductTermsForm;\n  }\n\n  get loanProductSettingsForm() {\n    return this.loanProductSettingsStep.loanProductSettingsForm;\n  }\n\n  get loanProductAccountingForm() {\n    return this.loanProductAccountingStep.loanProductAccountingForm;\n  }\n\n  get loanProductFormValidAndNotPristine() {\n    return (\n      this.loanProductDetailsForm.valid &&\n      this.loanProductCurrencyForm.valid &&\n      this.loanProductTermsForm.valid &&\n      this.loanProductSettingsForm.valid &&\n      this.loanProductAccountingForm.valid &&\n      (\n        !this.loanProductDetailsForm.pristine ||\n        !this.loanProductCurrencyForm.pristine ||\n        !this.loanProductTermsForm.pristine ||\n        !this.loanProductSettingsForm.pristine ||\n        !this.loanProductChargesStep.pristine ||\n        !this.loanProductAccountingForm.pristine\n      )\n    );\n  }\n\n  get loanProduct() {\n    return {\n      ...this.loanProductDetailsStep.loanProductDetails,\n      ...this.loanProductCurrencyStep.loanProductCurrency,\n      ...this.loanProductTermsStep.loanProductTerms,\n      ...this.loanProductSettingsStep.loanProductSettings,\n      ...this.loanProductChargesStep.loanProductCharges,\n      ...this.loanProductAccountingStep.loanProductAccounting\n    };\n  }\n\n  submit() {\n    // TODO: Update once language and date settings are setup\n    const dateFormat = 'yyyy-MM-dd';\n    const loanProduct = {\n      ...this.loanProduct,\n      charges: this.loanProduct.charges.map((charge: any) => ({ id: charge.id })),\n      dateFormat,\n      locale: 'en'\n    };\n    delete loanProduct.allowAttributeConfiguration;\n    delete loanProduct.advancedAccountingRules;\n    this.productsService.updateLoanProduct(this.loanProductAndTemplate.id, loanProduct)\n      .subscribe((response: any) => {\n        this.router.navigate(['../../', response.resourceId], { relativeTo: this.route });\n    });\n  }\n\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../../products.service';\n\n/**\n * Loan product and template data resolver.\n */\n@Injectable()\nexport class LoanProductAndTemplateResolver implements Resolve<Object> {\n\n  /**\n   * @param {ProductsService} productsService Products service.\n   */\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the loan product and template data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const loanProductId = route.paramMap.get('id');\n    return this.productsService.getLoanProduct(loanProductId, true);\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"loanProductAccountingForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <mat-radio-group fxFlex=\\\"98%\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"5%\\\" fxLayout.lt-md=\\\"column\\\" formControlName=\\\"accountingRule\\\">\\n      <mat-radio-button *ngFor=\\\"let accountingRule of accountingRuleData; let i =  index\\\" [value]=\\\"i+1\\\">\\n        {{ accountingRule }}\\n      </mat-radio-button>\\n    </mat-radio-group>\\n\\n    <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n    <div *ngIf=\\\"loanProductAccountingForm.value.accountingRule >= 2 && loanProductAccountingForm.value.accountingRule <= 4\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Assets</h4>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Fund source</mat-label>\\n        <mat-select formControlName=\\\"fundSourceAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let assetAccount of assetAccountData\\\" [value]=\\\"assetAccount.id\\\">\\n            {{ assetAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Fund source is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Loan portfolio</mat-label>\\n        <mat-select formControlName=\\\"loanPortfolioAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let assetAccount of assetAccountData\\\" [value]=\\\"assetAccount.id\\\">\\n            {{ assetAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Loan portfolio is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <div *ngIf=\\\"loanProductAccountingForm.value.accountingRule === 3 || loanProductAccountingForm.value.accountingRule === 4\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <mat-form-field fxFlex=\\\"48%\\\">\\n          <mat-label>Interest Receivable</mat-label>\\n          <mat-select formControlName=\\\"receivableInterestAccountId\\\" required>\\n            <mat-option *ngFor=\\\"let assetAccount of assetAccountData\\\" [value]=\\\"assetAccount.id\\\">\\n              {{ assetAccount.name }}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            Interest Receivable is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlex=\\\"48%\\\">\\n          <mat-label>Fees Receivable</mat-label>\\n          <mat-select formControlName=\\\"receivableFeeAccountId\\\" required>\\n            <mat-option *ngFor=\\\"let assetAccount of assetAccountData\\\" [value]=\\\"assetAccount.id\\\">\\n              {{ assetAccount.name }}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            Fees Receivable is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlex=\\\"48%\\\">\\n          <mat-label>Penalties Receivable</mat-label>\\n          <mat-select formControlName=\\\"receivablePenaltyAccountId\\\" required>\\n            <mat-option *ngFor=\\\"let assetAccount of assetAccountData\\\" [value]=\\\"assetAccount.id\\\">\\n              {{ assetAccount.name }}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            Penalties Receivable is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n\\n      </div>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Transfer in suspense</mat-label>\\n        <mat-select formControlName=\\\"transfersInSuspenseAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let assetAccount of assetAccountData\\\" [value]=\\\"assetAccount.id\\\">\\n            {{ assetAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Transfer in suspense is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n      <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Income</h4>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Income from Interest</mat-label>\\n        <mat-select formControlName=\\\"interestOnLoanAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let incomeAccount of incomeAccountData\\\" [value]=\\\"incomeAccount.id\\\">\\n            {{ incomeAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Income from Interest is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Income from fees</mat-label>\\n        <mat-select formControlName=\\\"incomeFromFeeAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let incomeAccount of incomeAccountData\\\" [value]=\\\"incomeAccount.id\\\">\\n            {{ incomeAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Income from fees is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Income from penalties</mat-label>\\n        <mat-select formControlName=\\\"incomeFromPenaltyAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let incomeAccount of incomeAccountData\\\" [value]=\\\"incomeAccount.id\\\">\\n            {{ incomeAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Income from penalties is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Income from Recovery Repayments</mat-label>\\n        <mat-select formControlName=\\\"incomeFromRecoveryAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let incomeAccount of incomeAccountData\\\" [value]=\\\"incomeAccount.id\\\">\\n            {{ incomeAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Income from Recovery Repayments is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n      <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Expenses</h4>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Losses written off</mat-label>\\n        <mat-select formControlName=\\\"writeOffAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let expenseAccount of expenseAccountData\\\" [value]=\\\"expenseAccount.id\\\">\\n            {{ expenseAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Losses written off is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n      <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Liabilities</h4>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Over payment liability</mat-label>\\n        <mat-select formControlName=\\\"overpaymentLiabilityAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let liabilityAccount of liabilityAccountData\\\" [value]=\\\"liabilityAccount.id\\\">\\n            {{ liabilityAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Over payment liability is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n      <h3 fxFlex=\\\"23%\\\" class=\\\"mat-h3\\\">Advanced Accounting Rules</h3>\\n\\n      <mat-checkbox fxFlex=\\\"73%\\\" formControlName=\\\"advancedAccountingRules\\\"></mat-checkbox>\\n\\n      <div *ngIf=\\\"loanProductAccountingForm.value.advancedAccountingRules\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <h4 fxFlex=\\\"33%\\\" class=\\\"mat-h4\\\">Configure Fund Sources for Payment Channels</h4>\\n\\n        <div fxFlex=\\\"63%\\\">\\n          <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"add('PaymentFundSource', paymentChannelToFundSourceMappings)\\\">\\n            <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n            Add\\n          </button>\\n        </div>\\n\\n        <table fxFlex=\\\"98%\\\" class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"paymentChannelToFundSourceMappings.value\\\" *ngIf=\\\"paymentChannelToFundSourceMappings.value.length !== 0\\\">\\n\\n          <ng-container matColumnDef=\\\"paymentTypeId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Payment Type </th>\\n            <td mat-cell *matCellDef=\\\"let paymentFundSource\\\">\\n              {{ paymentFundSource.paymentTypeId | find:paymentTypeData:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"fundSourceAccountId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fund Source </th>\\n            <td mat-cell *matCellDef=\\\"let paymentFundSource\\\">\\n              {{ paymentFundSource.fundSourceAccountId | find:assetAccountData:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"actions\\\">\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\n            <td mat-cell *matCellDef=\\\"let paymentFundSource; let i = index\\\">\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"edit('PaymentFundSource', paymentChannelToFundSourceMappings, i)\\\">\\n                <fa-icon icon=\\\"edit\\\"></fa-icon>\\n              </button>\\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"delete(paymentChannelToFundSourceMappings, i)\\\">\\n                <fa-icon icon=\\\"trash\\\"></fa-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"paymentFundSourceDisplayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: paymentFundSourceDisplayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n        <h4 fxFlex=\\\"33%\\\" class=\\\"mat-h4\\\">Map Fees to Specific Income Accounts</h4>\\n\\n        <div fxFlex=\\\"63%\\\">\\n          <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"add('FeesIncome', feeToIncomeAccountMappings)\\\">\\n            <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n            Add\\n          </button>\\n        </div>\\n\\n        <table fxFlex=\\\"98%\\\" class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"feeToIncomeAccountMappings.value\\\" *ngIf=\\\"feeToIncomeAccountMappings.value.length !== 0\\\">\\n\\n          <ng-container matColumnDef=\\\"chargeId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fees </th>\\n            <td mat-cell *matCellDef=\\\"let feesIncome\\\">\\n              {{ feesIncome.chargeId | find:chargeData:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"incomeAccountId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Income Account </th>\\n            <td mat-cell *matCellDef=\\\"let feesIncome\\\">\\n              {{ feesIncome.incomeAccountId | find:incomeAndLiabilityAccountData:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"actions\\\">\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\n            <td mat-cell *matCellDef=\\\"let feesIncome; let i = index\\\">\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"edit('FeesIncome', feeToIncomeAccountMappings, i)\\\">\\n                <fa-icon icon=\\\"edit\\\"></fa-icon>\\n              </button>\\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"delete(feeToIncomeAccountMappings, i)\\\">\\n                <fa-icon icon=\\\"trash\\\"></fa-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"feesPenaltyIncomeDisplayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: feesPenaltyIncomeDisplayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n        <h4 fxFlex=\\\"33%\\\" class=\\\"mat-h4\\\">Map Penalties to Specific Income Accounts</h4>\\n\\n        <div fxFlex=\\\"63%\\\">\\n          <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"add('PenaltyIncome', penaltyToIncomeAccountMappings)\\\">\\n            <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n            Add\\n          </button>\\n        </div>\\n\\n\\n        <table fxFlex=\\\"98%\\\" class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"penaltyToIncomeAccountMappings.value\\\" *ngIf=\\\"penaltyToIncomeAccountMappings.value.length !== 0\\\">\\n\\n          <ng-container matColumnDef=\\\"chargeId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Penalty </th>\\n            <td mat-cell *matCellDef=\\\"let penaltyIncome\\\">\\n              {{ penaltyIncome.chargeId | find:penaltyData:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"incomeAccountId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Income Account </th>\\n            <td mat-cell *matCellDef=\\\"let penaltyIncome\\\">\\n              {{ penaltyIncome.incomeAccountId | find:incomeAccountData:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"actions\\\">\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\n            <td mat-cell *matCellDef=\\\"let penaltyIncome; let i = index\\\">\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"edit('PenaltyIncome', penaltyToIncomeAccountMappings, i)\\\">\\n                <fa-icon icon=\\\"edit\\\"></fa-icon>\\n              </button>\\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"delete(penaltyToIncomeAccountMappings, i)\\\">\\n                <fa-icon icon=\\\"trash\\\"></fa-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"feesPenaltyIncomeDisplayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: feesPenaltyIncomeDisplayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext [disabled]=\\\"!loanProductFormValid\\\">\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-elevation-z1 {\\n  margin: 1em 0 1.5em 0; }\\n\\nh3, h4 {\\n  font-weight: 500; }\\n\\nmat-radio-group, h4 {\\n  margin: 1em 0; }\\n\\nmat-divider {\\n  margin: 1em 0 2em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2xvYW4tcHJvZHVjdHMvbG9hbi1wcm9kdWN0LXN0ZXBwZXIvbG9hbi1wcm9kdWN0LWFjY291bnRpbmctc3RlcC9sb2FuLXByb2R1Y3QtYWNjb3VudGluZy1zdGVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBOztBQUdiO0VBQ0UscUJBQXFCLEVBQUE7O0FBR3ZCO0VBQ0UsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsYUFBYSxFQUFBOztBQUdmO0VBQ0UsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdHMvbG9hbi1wcm9kdWN0cy9sb2FuLXByb2R1Y3Qtc3RlcHBlci9sb2FuLXByb2R1Y3QtYWNjb3VudGluZy1zdGVwL2xvYW4tcHJvZHVjdC1hY2NvdW50aW5nLXN0ZXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWF0LWVsZXZhdGlvbi16MSB7XG4gIG1hcmdpbjogMWVtIDAgMS41ZW0gMDtcbn1cblxuaDMsIGg0IHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxubWF0LXJhZGlvLWdyb3VwLCBoNCB7XG4gIG1hcmdpbjogMWVtIDA7XG59XG5cbm1hdC1kaXZpZGVyIHtcbiAgbWFyZ2luOiAxZW0gMCAyZW0gMDtcbn1cblxuLm1hcmdpbi10IHtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuIl19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, Validators, FormControl } from '@angular/forms';\nimport { MatDialog } from '@angular/material';\n\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\n\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\nimport { SelectBase } from 'app/shared/form-dialog/formfield/model/select-base';\n\n@Component({\n  selector: 'mifosx-loan-product-accounting-step',\n  templateUrl: './loan-product-accounting-step.component.html',\n  styleUrls: ['./loan-product-accounting-step.component.scss']\n})\nexport class LoanProductAccountingStepComponent implements OnInit {\n\n  @Input() loanProductsTemplate: any;\n  @Input() accountingRuleData: any;\n  @Input() loanProductFormValid: boolean;\n\n  loanProductAccountingForm: FormGroup;\n\n  chargeData: any;\n  penaltyData: any;\n  paymentTypeData: any;\n  assetAccountData: any;\n  incomeAccountData: any;\n  expenseAccountData: any;\n  liabilityAccountData: any;\n  incomeAndLiabilityAccountData: any;\n\n  paymentFundSourceDisplayedColumns: string[] = ['paymentTypeId', 'fundSourceAccountId', 'actions'];\n  feesPenaltyIncomeDisplayedColumns: string[] = ['chargeId', 'incomeAccountId', 'actions'];\n\n  constructor(private formBuilder: FormBuilder,\n              public dialog: MatDialog) {\n    this.createLoanProductAccountingForm();\n    this.setConditionalControls();\n  }\n\n  ngOnInit() {\n    this.chargeData = this.loanProductsTemplate.chargeOptions || [];\n    this.penaltyData = this.loanProductsTemplate.penaltyOptions || [];\n    this.paymentTypeData = this.loanProductsTemplate.paymentTypeOptions || [];\n    this.assetAccountData = this.loanProductsTemplate.accountingMappingOptions.assetAccountOptions || [];\n    this.incomeAccountData = this.loanProductsTemplate.accountingMappingOptions.incomeAccountOptions || [];\n    this.expenseAccountData = this.loanProductsTemplate.accountingMappingOptions.expenseAccountOptions || [];\n    this.liabilityAccountData = this.loanProductsTemplate.accountingMappingOptions.liabilityAccountOptions || [];\n    this.incomeAndLiabilityAccountData = this.incomeAccountData.concat(this.liabilityAccountData);\n\n    this.loanProductAccountingForm.patchValue({\n      'accountingRule': this.loanProductsTemplate.accountingRule.id\n    });\n\n    switch (this.loanProductsTemplate.accountingRule.id) {\n      case 3:\n      case 4:\n        this.loanProductAccountingForm.patchValue({\n          'receivableInterestAccountId': this.loanProductsTemplate.accountingMappings.receivableInterestAccount.id,\n          'receivableFeeAccountId': this.loanProductsTemplate.accountingMappings.receivableFeeAccount.id,\n          'receivablePenaltyAccountId': this.loanProductsTemplate.accountingMappings.receivablePenaltyAccount.id,\n        });\n        /* falls through */\n      case 2:\n        this.loanProductAccountingForm.patchValue({\n          'fundSourceAccountId': this.loanProductsTemplate.accountingMappings.fundSourceAccount.id,\n          'loanPortfolioAccountId': this.loanProductsTemplate.accountingMappings.loanPortfolioAccount.id,\n          'transfersInSuspenseAccountId': this.loanProductsTemplate.accountingMappings.transfersInSuspenseAccount.id,\n          'interestOnLoanAccountId': this.loanProductsTemplate.accountingMappings.interestOnLoanAccount.id,\n          'incomeFromFeeAccountId': this.loanProductsTemplate.accountingMappings.incomeFromFeeAccount.id,\n          'incomeFromPenaltyAccountId': this.loanProductsTemplate.accountingMappings.incomeFromPenaltyAccount.id,\n          'incomeFromRecoveryAccountId': this.loanProductsTemplate.accountingMappings.incomeFromRecoveryAccount.id,\n          'writeOffAccountId': this.loanProductsTemplate.accountingMappings.writeOffAccount.id,\n          'overpaymentLiabilityAccountId': this.loanProductsTemplate.accountingMappings.overpaymentLiabilityAccount.id,\n          'advancedAccountingRules': (this.loanProductsTemplate.paymentChannelToFundSourceMappings || this.loanProductsTemplate.feeToIncomeAccountMappings || this.loanProductsTemplate.penaltyToIncomeAccountMappings) ? true : false\n        });\n\n        this.loanProductAccountingForm.setControl('paymentChannelToFundSourceMappings',\n          this.formBuilder.array((this.loanProductsTemplate.paymentChannelToFundSourceMappings || []).map((paymentFundSource: any) =>\n          ({ paymentTypeId: paymentFundSource.paymentType.id, fundSourceAccountId: paymentFundSource.fundSourceAccount.id }))));\n        this.loanProductAccountingForm.setControl('feeToIncomeAccountMappings',\n          this.formBuilder.array((this.loanProductsTemplate.feeToIncomeAccountMappings || []).map((feesIncome: any) =>\n          ({ chargeId: feesIncome.charge.id, incomeAccountId: feesIncome.incomeAccount.id }))));\n        this.loanProductAccountingForm.setControl('penaltyToIncomeAccountMappings',\n          this.formBuilder.array((this.loanProductsTemplate.penaltyToIncomeAccountMappings || []).map((penaltyIncome: any) =>\n          ({ chargeId: penaltyIncome.charge.id, incomeAccountId: penaltyIncome.incomeAccount.id }))));\n    }\n  }\n\n  createLoanProductAccountingForm() {\n    this.loanProductAccountingForm = this.formBuilder.group({\n      'accountingRule': [1]\n    });\n  }\n\n  setConditionalControls() {\n    this.loanProductAccountingForm.get('accountingRule').valueChanges\n      .subscribe((accountingRule: any) => {\n        if (accountingRule >= 2 && accountingRule <= 4) {\n          this.loanProductAccountingForm.addControl('fundSourceAccountId', new FormControl('', Validators.required));\n          this.loanProductAccountingForm.addControl('loanPortfolioAccountId', new FormControl('', Validators.required));\n          this.loanProductAccountingForm.addControl('transfersInSuspenseAccountId', new FormControl('', Validators.required));\n          this.loanProductAccountingForm.addControl('interestOnLoanAccountId', new FormControl('', Validators.required));\n          this.loanProductAccountingForm.addControl('incomeFromFeeAccountId', new FormControl('', Validators.required));\n          this.loanProductAccountingForm.addControl('incomeFromPenaltyAccountId', new FormControl('', Validators.required));\n          this.loanProductAccountingForm.addControl('incomeFromRecoveryAccountId', new FormControl('', Validators.required));\n          this.loanProductAccountingForm.addControl('writeOffAccountId', new FormControl('', Validators.required));\n          this.loanProductAccountingForm.addControl('overpaymentLiabilityAccountId', new FormControl('', Validators.required));\n          this.loanProductAccountingForm.addControl('advancedAccountingRules', new FormControl(false));\n\n          this.loanProductAccountingForm.get('advancedAccountingRules').valueChanges\n            .subscribe((advancedAccountingRules: boolean) => {\n              if (advancedAccountingRules) {\n                this.loanProductAccountingForm.addControl('paymentChannelToFundSourceMappings', this.formBuilder.array([]));\n                this.loanProductAccountingForm.addControl('feeToIncomeAccountMappings', this.formBuilder.array([]));\n                this.loanProductAccountingForm.addControl('penaltyToIncomeAccountMappings', this.formBuilder.array([]));\n              } else {\n                this.loanProductAccountingForm.removeControl('paymentChannelToFundSourceMappings');\n                this.loanProductAccountingForm.removeControl('feeToIncomeAccountMappings');\n                this.loanProductAccountingForm.removeControl('penaltyToIncomeAccountMappings');\n              }\n            });\n        } else {\n          this.loanProductAccountingForm.removeControl('fundSourceAccountId');\n          this.loanProductAccountingForm.removeControl('loanPortfolioAccountId');\n          this.loanProductAccountingForm.removeControl('transfersInSuspenseAccountId');\n          this.loanProductAccountingForm.removeControl('interestOnLoanAccountId');\n          this.loanProductAccountingForm.removeControl('incomeFromFeeAccountId');\n          this.loanProductAccountingForm.removeControl('incomeFromPenaltyAccountId');\n          this.loanProductAccountingForm.removeControl('incomeFromRecoveryAccountId');\n          this.loanProductAccountingForm.removeControl('writeOffAccountId');\n          this.loanProductAccountingForm.removeControl('overpaymentLiabilityAccountId');\n          this.loanProductAccountingForm.removeControl('advancedAccountingRules');\n        }\n\n        if (accountingRule === 3 || accountingRule === 4) {\n          this.loanProductAccountingForm.addControl('receivableInterestAccountId', new FormControl('', Validators.required));\n          this.loanProductAccountingForm.addControl('receivableFeeAccountId', new FormControl('', Validators.required));\n          this.loanProductAccountingForm.addControl('receivablePenaltyAccountId', new FormControl('', Validators.required));\n        } else {\n          this.loanProductAccountingForm.removeControl('receivableInterestAccountId');\n          this.loanProductAccountingForm.removeControl('receivableFeeAccountId');\n          this.loanProductAccountingForm.removeControl('receivablePenaltyAccountId');\n        }\n      });\n  }\n\n  get paymentChannelToFundSourceMappings(): FormArray {\n    return this.loanProductAccountingForm.get('paymentChannelToFundSourceMappings') as FormArray;\n  }\n\n  get feeToIncomeAccountMappings(): FormArray {\n    return this.loanProductAccountingForm.get('feeToIncomeAccountMappings') as FormArray;\n  }\n\n  get penaltyToIncomeAccountMappings(): FormArray {\n    return this.loanProductAccountingForm.get('penaltyToIncomeAccountMappings') as FormArray;\n  }\n\n  setLoanProductAccountingFormDirty() {\n    if (this.loanProductAccountingForm.pristine) {\n      this.loanProductAccountingForm.markAsDirty();\n    }\n  }\n\n  add(formType: string, formArray: FormArray) {\n    const data = { ...this.getData(formType), pristine: false };\n    const dialogRef = this.dialog.open(FormDialogComponent, { data });\n    dialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        formArray.push(response.data);\n        this.setLoanProductAccountingFormDirty();\n      }\n    });\n  }\n\n  edit(formType: string, formArray: FormArray, index: number) {\n    const data = { ...this.getData(formType, formArray.at(index).value), layout: { addButtonText: 'Edit' } };\n    const dialogRef = this.dialog.open(FormDialogComponent, { data });\n    dialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        formArray.at(index).patchValue(response.data.value);\n        this.setLoanProductAccountingFormDirty();\n      }\n    });\n  }\n\n  delete(formArray: FormArray, index: number) {\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `this` }\n    });\n    dialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        formArray.removeAt(index);\n        this.setLoanProductAccountingFormDirty();\n      }\n    });\n  }\n\n  getData(formType: string, values?: any) {\n    switch (formType) {\n      case 'PaymentFundSource': return { title: 'Configure Fund Sources for Payment Channels', formfields: this.getPaymentFundSourceFormfields(values) };\n      case 'FeesIncome': return { title: 'Map Fees to Income Accounts', formfields: this.getFeesIncomeFormfields(values) };\n      case 'PenaltyIncome': return { title: 'Map Penalties to Specific Income Accounts', formfields: this.getPenaltyIncomeFormfields(values) };\n    }\n  }\n\n  getPaymentFundSourceFormfields(values?: any) {\n    const formfields: FormfieldBase[] = [\n      new SelectBase({\n        controlName: 'paymentTypeId',\n        label: 'Payment Type',\n        value: values ? values.paymentTypeId : this.paymentTypeData[0].id,\n        options: { label: 'name', value: 'id', data: this.paymentTypeData },\n        required: true,\n        order: 1\n      }),\n      new SelectBase({\n        controlName: 'fundSourceAccountId',\n        label: 'Fund Source',\n        value: values ? values.fundSourceAccountId : this.assetAccountData[0].id,\n        options: { label: 'name', value: 'id', data: this.assetAccountData },\n        required: true,\n        order: 2\n      })\n    ];\n    return formfields;\n  }\n\n  getFeesIncomeFormfields(values?: any) {\n    const formfields: FormfieldBase[] = [\n      new SelectBase({\n        controlName: 'chargeId',\n        label: 'Fees',\n        value: values ? values.chargeId : this.chargeData[0].id,\n        options: { label: 'name', value: 'id', data: this.chargeData },\n        required: true,\n        order: 1\n      }),\n      new SelectBase({\n        controlName: 'incomeAccountId',\n        label: 'Income Account',\n        value: values ? values.incomeAccountId : this.incomeAndLiabilityAccountData[0].id,\n        options: { label: 'name', value: 'id', data: this.incomeAndLiabilityAccountData },\n        required: true,\n        order: 2\n      })\n    ];\n    return formfields;\n  }\n\n  getPenaltyIncomeFormfields(values?: any) {\n    const formfields: FormfieldBase[] = [\n      new SelectBase({\n        controlName: 'chargeId',\n        label: 'Penalty',\n        value: values ? values.chargeId : this.penaltyData[0].id,\n        options: { label: 'name', value: 'id', data: this.penaltyData },\n        required: true,\n        order: 1\n      }),\n      new SelectBase({\n        controlName: 'incomeAccountId',\n        label: 'Income Account',\n        value: values ? values.incomeAccountId : this.incomeAccountData[0].id,\n        options: { label: 'name', value: 'id', data: this.incomeAccountData },\n        required: true,\n        order: 2\n      })\n    ];\n    return formfields;\n  }\n\n  get loanProductAccounting() {\n    return this.loanProductAccountingForm.value;\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n  <mat-form-field fxFlex=\\\"48%\\\">\\n    <mat-label>Charge</mat-label>\\n    <mat-select #charge>\\n      <mat-option *ngFor=\\\"let charge of chargeData | chargesFilter:chargesDataSource:currencyCode.value:multiDisburseLoan.value\\\" [value]=\\\"charge\\\">\\n        {{ charge.name }}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <div fxFlex=\\\"48%\\\" fxFlexAlign=\\\"center\\\">\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"addCharge(charge)\\\" [disabled]=\\\"!charge.value\\\">\\n      <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n      Add\\n    </button>\\n  </div>\\n\\n  <table fxFlex=\\\"98%\\\" class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"chargesDataSource | chargesPenaltyFilter:false\\\" #chargesTable [hidden]=\\\"chargesTable.dataSource.length === 0\\\">\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        {{ charge.name + ', ' + charge.currency.displaySymbol }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"chargeCalculationType\\\">\\n      <th mat-header-cell *matHeaderCellDef> Type </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        {{ charge.chargeCalculationType.value }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"amount\\\">\\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        {{ charge.amount }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"chargeTimeType\\\">\\n      <th mat-header-cell *matHeaderCellDef> Collected On </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        {{ charge.chargeTimeType.value }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"action\\\">\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteCharge(charge)\\\">\\n          <fa-icon icon=\\\"trash\\\"></fa-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n  </table>\\n\\n  <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n  <div fxFlex=\\\"98%\\\">\\n    <h3 class=\\\"mat-h3\\\">Overdue Charges</h3>\\n  </div>\\n\\n  <mat-form-field fxFlex=\\\"48%\\\">\\n    <mat-label>Overdue Charge</mat-label>\\n    <mat-select #overdueCharge>\\n      <mat-option *ngFor=\\\"let overdueCharge of overdueChargeData | chargesFilter:chargesDataSource:currencyCode.value\\\" [value]=\\\"overdueCharge\\\">\\n        {{ overdueCharge.name }}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <div fxFlex=\\\"48%\\\" fxFlexAlign=\\\"center\\\">\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"addCharge(overdueCharge)\\\" [disabled]=\\\"!overdueCharge.value\\\">\\n      <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n      Add\\n    </button>\\n  </div>\\n\\n <table fxFlex=\\\"98%\\\" class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"chargesDataSource | chargesPenaltyFilter:true\\\" #overdueChargesTable [hidden]=\\\"overdueChargesTable.dataSource.length === 0\\\">\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\n      <td mat-cell *matCellDef=\\\"let overdueCharge\\\">\\n        {{ overdueCharge.name + ', ' + overdueCharge.currency.displaySymbol }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"chargeCalculationType\\\">\\n      <th mat-header-cell *matHeaderCellDef> Type </th>\\n      <td mat-cell *matCellDef=\\\"let overdueCharge\\\">\\n        {{ overdueCharge.chargeCalculationType.value }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"amount\\\">\\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\\n      <td mat-cell *matCellDef=\\\"let overdueCharge\\\">\\n        {{ overdueCharge.amount }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"chargeTimeType\\\">\\n      <th mat-header-cell *matHeaderCellDef> Collected On </th>\\n      <td mat-cell *matCellDef=\\\"let overdueCharge\\\">\\n        {{ overdueCharge.chargeTimeType.value }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"action\\\">\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\n      <td mat-cell *matCellDef=\\\"let overdueCharge\\\">\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteCharge(overdueCharge)\\\">\\n          <fa-icon icon=\\\"trash\\\"></fa-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n  </table>\\n\\n</div>\\n\\n<div fxLayout=\\\"row\\\" class=\\\"margin-t+\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n  <button mat-raised-button matStepperPrevious>\\n    <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n    Previous\\n  </button>\\n  <button mat-raised-button matStepperNext>\\n    Next&nbsp;&nbsp;\\n    <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n  </button>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-elevation-z1 {\\n  margin: 1em 0 1.5em 0; }\\n\\nh3 {\\n  font-weight: 500; }\\n\\nmat-divider {\\n  margin: 1em 0 2em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2xvYW4tcHJvZHVjdHMvbG9hbi1wcm9kdWN0LXN0ZXBwZXIvbG9hbi1wcm9kdWN0LWNoYXJnZXMtc3RlcC9sb2FuLXByb2R1Y3QtY2hhcmdlcy1zdGVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBOztBQUdiO0VBQ0UscUJBQXFCLEVBQUE7O0FBR3ZCO0VBQ0UsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdHMvbG9hbi1wcm9kdWN0cy9sb2FuLXByb2R1Y3Qtc3RlcHBlci9sb2FuLXByb2R1Y3QtY2hhcmdlcy1zdGVwL2xvYW4tcHJvZHVjdC1jaGFyZ2VzLXN0ZXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWF0LWVsZXZhdGlvbi16MSB7XG4gIG1hcmdpbjogMWVtIDAgMS41ZW0gMDtcbn1cblxuaDMge1xuICBmb250LXdlaWdodDogNTAwO1xufVxuXG5tYXQtZGl2aWRlciB7XG4gIG1hcmdpbjogMWVtIDAgMmVtIDA7XG59XG5cbi5tYXJnaW4tdCB7XG4gIG1hcmdpbi10b3A6IDFlbTtcbn1cbiJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { FormControl } from '@angular/forms';\n\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\n\n@Component({\n  selector: 'mifosx-loan-product-charges-step',\n  templateUrl: './loan-product-charges-step.component.html',\n  styleUrls: ['./loan-product-charges-step.component.scss']\n})\nexport class LoanProductChargesStepComponent implements OnInit {\n\n  @Input() loanProductsTemplate: any;\n  @Input() currencyCode: FormControl;\n  @Input() multiDisburseLoan: FormControl;\n\n  chargeData: any;\n  overdueChargeData: any;\n\n  chargesDataSource: {}[];\n  displayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType', 'action'];\n\n  pristine = true;\n\n  constructor(public dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n    this.chargeData = this.loanProductsTemplate.chargeOptions;\n    this.overdueChargeData = this.loanProductsTemplate.penaltyOptions.filter((penalty: any) => penalty.chargeTimeType.code === 'chargeTimeType.overdueInstallment');\n\n    this.chargesDataSource = this.loanProductsTemplate.charges || [];\n    this.pristine = true;\n\n    this.currencyCode.valueChanges.subscribe(() => this.chargesDataSource = []);\n    this.multiDisburseLoan.valueChanges.subscribe(() => this.chargesDataSource = []);\n  }\n\n  addCharge(charge: any) {\n    this.chargesDataSource = this.chargesDataSource.concat([charge.value]);\n    charge.value = '';\n    this.pristine = false;\n  }\n\n  deleteCharge(charge: any) {\n    const deleteChargeDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `charge ${charge.name}` }\n    });\n    deleteChargeDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1);\n        this.chargesDataSource = this.chargesDataSource.concat([]);\n        this.pristine = false;\n      }\n    });\n  }\n\n  get loanProductCharges() {\n    return {\n      charges: this.chargesDataSource\n    };\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"loanProductCurrencyForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Currency</mat-label>\\n      <mat-select formControlName=\\\"currencyCode\\\" required>\\n        <mat-option *ngFor=\\\"let currency of currencyData\\\" [value]=\\\"currency.code\\\">\\n          {{ currency.name }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Currency is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Decimal Places</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"digitsAfterDecimal\\\" required>\\n      <mat-error>\\n        Decimal Places is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Currency in multiples of</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"inMultiplesOf\\\" required>\\n      <mat-error>\\n        Currency in multiples of is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Installment in multiples of</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"installmentAmountInMultiplesOf\\\" required>\\n      <mat-error>\\n        Installment in multiples of is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext>\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \".margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2xvYW4tcHJvZHVjdHMvbG9hbi1wcm9kdWN0LXN0ZXBwZXIvbG9hbi1wcm9kdWN0LWN1cnJlbmN5LXN0ZXAvbG9hbi1wcm9kdWN0LWN1cnJlbmN5LXN0ZXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0cy9sb2FuLXByb2R1Y3RzL2xvYW4tcHJvZHVjdC1zdGVwcGVyL2xvYW4tcHJvZHVjdC1jdXJyZW5jeS1zdGVwL2xvYW4tcHJvZHVjdC1jdXJyZW5jeS1zdGVwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hcmdpbi10IHtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuIl19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'mifosx-loan-product-currency-step',\n  templateUrl: './loan-product-currency-step.component.html',\n  styleUrls: ['./loan-product-currency-step.component.scss']\n})\nexport class LoanProductCurrencyStepComponent implements OnInit {\n\n  @Input() loanProductsTemplate: any;\n\n  loanProductCurrencyForm: FormGroup;\n\n  currencyData: any;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.createLoanProductCurrencyForm();\n  }\n\n  ngOnInit() {\n    this.currencyData = this.loanProductsTemplate.currencyOptions;\n\n    this.loanProductCurrencyForm.patchValue({\n      'currencyCode': this.loanProductsTemplate.currency.code || this.currencyData[0].code,\n      'digitsAfterDecimal': this.loanProductsTemplate.installmentAmountInMultiplesOf ? this.loanProductsTemplate.currency.decimalPlaces : 2,\n      'inMultiplesOf': this.loanProductsTemplate.currency.inMultiplesOf,\n      'installmentAmountInMultiplesOf': this.loanProductsTemplate.installmentAmountInMultiplesOf\n    });\n  }\n\n  createLoanProductCurrencyForm() {\n    this.loanProductCurrencyForm = this.formBuilder.group({\n      'currencyCode': ['', Validators.required],\n      'digitsAfterDecimal': ['', Validators.required],\n      'inMultiplesOf': ['', Validators.required],\n      'installmentAmountInMultiplesOf': ['', Validators.required]\n    });\n  }\n\n  get loanProductCurrency() {\n    return this.loanProductCurrencyForm.value;\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"loanProductDetailsForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutAlign.gt-sm=\\\"start center\\\">\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Product Name</mat-label>\\n      <input matInput formControlName=\\\"name\\\" required>\\n      <mat-error>\\n        Product Name is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Short Name</mat-label>\\n      <input matInput formControlName=\\\"shortName\\\" maxlength=\\\"4\\\" required>\\n      <mat-error>\\n        Short Name is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Fund</mat-label>\\n      <mat-select formControlName=\\\"fundId\\\">\\n        <mat-option *ngFor=\\\"let fund of fundData\\\" [value]=\\\"fund.id\\\">\\n          {{ fund.name }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-checkbox labelPosition=\\\"before\\\" formControlName=\\\"includeInBorrowerCycle\\\" fxFlex=\\\"48%\\\">\\n      Include in Customer Loan Counter\\n    </mat-checkbox>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Start Date</mat-label>\\n      <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"startDatePicker\\\" formControlName=\\\"startDate\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #startDatePicker></mat-datepicker>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Close Date</mat-label>\\n      <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"closeDatePicker\\\" formControlName=\\\"closeDate\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"closeDatePicker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #closeDatePicker></mat-datepicker>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"98%\\\">\\n      <mat-label>Description</mat-label>\\n      <textarea matInput formControlName=\\\"description\\\"></textarea>\\n    </mat-form-field>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious disabled>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext>\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \".margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2xvYW4tcHJvZHVjdHMvbG9hbi1wcm9kdWN0LXN0ZXBwZXIvbG9hbi1wcm9kdWN0LWRldGFpbHMtc3RlcC9sb2FuLXByb2R1Y3QtZGV0YWlscy1zdGVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdHMvbG9hbi1wcm9kdWN0cy9sb2FuLXByb2R1Y3Qtc3RlcHBlci9sb2FuLXByb2R1Y3QtZGV0YWlscy1zdGVwL2xvYW4tcHJvZHVjdC1kZXRhaWxzLXN0ZXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFyZ2luLXQge1xuICBtYXJnaW4tdG9wOiAxZW07XG59XG4iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'mifosx-loan-product-details-step',\n  templateUrl: './loan-product-details-step.component.html',\n  styleUrls: ['./loan-product-details-step.component.scss']\n})\nexport class LoanProductDetailsStepComponent implements OnInit {\n\n  @Input() loanProductsTemplate: any;\n\n  loanProductDetailsForm: FormGroup;\n\n  fundData: any;\n\n  minDate = new Date(2000, 0, 1);\n  maxDate = new Date(new Date().setFullYear(new Date().getFullYear() + 10));\n\n  constructor(private formBuilder: FormBuilder,\n              private datePipe: DatePipe) {\n    this.createLoanProductDetailsForm();\n  }\n\n  ngOnInit() {\n    this.fundData = this.loanProductsTemplate.fundOptions;\n\n    this.loanProductDetailsForm.patchValue({\n      'name': this.loanProductsTemplate.name,\n      'shortName': this.loanProductsTemplate.shortName,\n      'description': this.loanProductsTemplate.description,\n      'fundId': this.loanProductsTemplate.fundId,\n      'startDate': this.loanProductsTemplate.startDate && new Date(this.loanProductsTemplate.startDate),\n      'closeDate': this.loanProductsTemplate.closeDate && new Date(this.loanProductsTemplate.closeDate),\n      'includeInBorrowerCycle': this.loanProductsTemplate.includeInBorrowerCycle\n    });\n  }\n\n  createLoanProductDetailsForm() {\n    this.loanProductDetailsForm = this.formBuilder.group({\n      'name': ['', Validators.required],\n      'shortName': ['', Validators.required],\n      'description': [''],\n      'fundId': [''],\n      'startDate': [''],\n      'closeDate': [''],\n      'includeInBorrowerCycle': [false]\n    });\n  }\n\n  get loanProductDetails() {\n    const prevStartDate: Date = this.loanProductDetailsForm.value.startDate;\n    const prevCloseDate: Date = this.loanProductDetailsForm.value.closeDate;\n    // TODO: Update once language and date settings are setup\n    const dateFormat = 'yyyy-MM-dd';\n    this.loanProductDetailsForm.patchValue({\n      startDate: this.datePipe.transform(prevStartDate, dateFormat) || '',\n      closeDate: this.datePipe.transform(prevCloseDate, dateFormat) || ''\n    });\n    return this.loanProductDetailsForm.value;\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n  <h2 class=\\\"mat-h2\\\" fxFlexFill>{{ loanProduct.name }}</h2>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Details</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Short Name:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.shortName }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.fundId\\\">\\n    <span fxFlex=\\\"40%\\\">Fund Name:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.fundId | find:loanProductsTemplate.fundOptions:'id':'name' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Include in Customer Loan Counter:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.includeInBorrowerCycle ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.startDate\\\">\\n    <span fxFlex=\\\"40%\\\">Start Date:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.startDate }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.closeDate\\\">\\n    <span fxFlex=\\\"40%\\\">Close Date:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.closeDate }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.description\\\">\\n    <span fxFlex=\\\"40%\\\">Description:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.description }}</span>\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Currency</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Currency:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.currencyCode | find:loanProductsTemplate.currencyOptions:'code':'name' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Decimal Places:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.digitsAfterDecimal }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Currency in multiples of:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.inMultiplesOf }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Installment in multiples of:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.installmentAmountInMultiplesOf }}</span>\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Terms</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Principal:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.principal + ' (Min: ' + (loanProduct.minPrincipal ? loanProduct.minPrincipal : loanProduct.principal) + ', Max: ' + (loanProduct.maxPrincipal ? loanProduct.maxPrincipal : loanProduct.principal) + ')' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Number of Repayments:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.numberOfRepayments + ' (Min: ' + (loanProduct.minNumberOfRepayments ? loanProduct.minNumberOfRepayments : loanProduct.numberOfRepayments) + ', Max: ' + (loanProduct.maxNumberOfRepayments ? loanProduct.maxNumberOfRepayments : loanProduct.numberOfRepayments) + ')' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Linked to floating interest rates:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.isLinkedToFloatingInterestRates ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"!loanProduct.isLinkedToFloatingInterestRates\\\">\\n    <span fxFlex=\\\"40%\\\">Nominal interest rate:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.interestRatePerPeriod + ' (Min: ' + (loanProduct.minInterestRatePerPeriod ? loanProduct.minInterestRatePerPeriod : loanProduct.interestRatePerPeriod) + ', Max: ' + (loanProduct.maxInterestRatePerPeriod ? loanProduct.maxInterestRatePerPeriod : loanProduct.interestRatePerPeriod) + ')' + ' ' + (loanProduct.interestRateFrequencyType | find:loanProductsTemplate.interestRateFrequencyTypeOptions:'id':'value') }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.isLinkedToFloatingInterestRates\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n    <span fxFlex=\\\"40%\\\">Floating Lending Interest Rate:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.floatingRatesId | find:loanProductsTemplate.floatingRateOptions:'id':'name' }}</span>\\n    <span fxFlex=\\\"40%\\\">Interest Rate Differential:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.interestRateDifferential }}</span>\\n    <span fxFlex=\\\"40%\\\">Floating Interest Rate Calculation Allowed:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.isFloatingInterestRateCalculationAllowed ? 'Yes' : 'No' }}</span>\\n    <span fxFlex=\\\"40%\\\">Floating Interest Rate:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.defaultDifferentialLendingRate + ' (Min: ' + (loanProduct.minDifferentialLendingRate ? loanProduct.minDifferentialLendingRate : loanProduct.defaultDifferentialLendingRate) + ', Max: ' + (loanProduct.maxDifferentialLendingRate ? loanProduct.maxDifferentialLendingRate : loanProduct.defaultDifferentialLendingRate) + ')' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Terms vary based on loan cycle:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.useBorrowerCycle ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.principalVariationsForBorrowerCycle?.length\\\">\\n\\n    <h4 class=\\\"mat-h4\\\" fxFlexFill>Principal by loan cycle</h4>\\n\\n    <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"loanProduct.principalVariationsForBorrowerCycle\\\">\\n\\n      <ng-container matColumnDef=\\\"valueConditionType\\\">\\n        <th mat-header-cell *matHeaderCellDef> Condition </th>\\n        <td mat-cell *matCellDef=\\\"let variation\\\">\\n          {{ variation.valueConditionType | find:loanProductsTemplate.valueConditionTypeOptions:'id':'value' }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"borrowerCycleNumber\\\">\\n        <th mat-header-cell *matHeaderCellDef> Loan Cycle </th>\\n        <td mat-cell *matCellDef=\\\"let variation\\\">\\n          {{ variation.borrowerCycleNumber }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"minValue\\\">\\n        <th mat-header-cell *matHeaderCellDef> Minimum </th>\\n        <td mat-cell *matCellDef=\\\"let variation\\\">\\n          {{ variation.minValue  }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"defaultValue\\\">\\n        <th mat-header-cell *matHeaderCellDef> Default </th>\\n        <td mat-cell *matCellDef=\\\"let variation\\\">\\n          {{ variation.defaultValue }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"maxValue\\\">\\n        <th mat-header-cell *matHeaderCellDef> Maximum </th>\\n        <td mat-cell *matCellDef=\\\"let variation\\\">\\n          {{ variation.maxValue }}\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"variationsDisplayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: variationsDisplayedColumns;\\\"></tr>\\n\\n    </table>\\n\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.numberOfRepaymentVariationsForBorrowerCycle?.length\\\">\\n\\n    <h4 class=\\\"mat-h4\\\" fxFlexFill>Number of Repayments by loan cycle</h4>\\n\\n    <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"loanProduct.numberOfRepaymentVariationsForBorrowerCycle\\\">\\n\\n      <ng-container matColumnDef=\\\"valueConditionType\\\">\\n        <th mat-header-cell *matHeaderCellDef> Condition </th>\\n        <td mat-cell *matCellDef=\\\"let variation\\\">\\n          {{ variation.valueConditionType | find:loanProductsTemplate.valueConditionTypeOptions:'id':'value' }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"borrowerCycleNumber\\\">\\n        <th mat-header-cell *matHeaderCellDef> Loan Cycle </th>\\n        <td mat-cell *matCellDef=\\\"let variation\\\">\\n          {{ variation.borrowerCycleNumber }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"minValue\\\">\\n        <th mat-header-cell *matHeaderCellDef> Minimum </th>\\n        <td mat-cell *matCellDef=\\\"let variation\\\">\\n          {{ variation.minValue  }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"defaultValue\\\">\\n        <th mat-header-cell *matHeaderCellDef> Default </th>\\n        <td mat-cell *matCellDef=\\\"let variation\\\">\\n          {{ variation.defaultValue }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"maxValue\\\">\\n        <th mat-header-cell *matHeaderCellDef> Maximum </th>\\n        <td mat-cell *matCellDef=\\\"let variation\\\">\\n          {{ variation.maxValue }}\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"variationsDisplayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: variationsDisplayedColumns;\\\"></tr>\\n\\n    </table>\\n\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.interestRateVariationsForBorrowerCycle?.length\\\">\\n\\n    <h4 class=\\\"mat-h4\\\" fxFlexFill>Nominal Interest Rate by loan cycle</h4>\\n\\n    <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"loanProduct.interestRateVariationsForBorrowerCycle\\\">\\n\\n      <ng-container matColumnDef=\\\"valueConditionType\\\">\\n        <th mat-header-cell *matHeaderCellDef> Condition </th>\\n        <td mat-cell *matCellDef=\\\"let variation\\\">\\n          {{ variation.valueConditionType | find:loanProductsTemplate.valueConditionTypeOptions:'id':'value' }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"borrowerCycleNumber\\\">\\n        <th mat-header-cell *matHeaderCellDef> Loan Cycle </th>\\n        <td mat-cell *matCellDef=\\\"let variation\\\">\\n          {{ variation.borrowerCycleNumber }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"minValue\\\">\\n        <th mat-header-cell *matHeaderCellDef> Minimum </th>\\n        <td mat-cell *matCellDef=\\\"let variation\\\">\\n          {{ variation.minValue  }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"defaultValue\\\">\\n        <th mat-header-cell *matHeaderCellDef> Default </th>\\n        <td mat-cell *matCellDef=\\\"let variation\\\">\\n          {{ variation.defaultValue }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"maxValue\\\">\\n        <th mat-header-cell *matHeaderCellDef> Maximum </th>\\n        <td mat-cell *matCellDef=\\\"let variation\\\">\\n          {{ variation.maxValue }}\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"variationsDisplayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: variationsDisplayedColumns;\\\"></tr>\\n\\n    </table>\\n\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Repay Every:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.repaymentEvery + ' ' + (loanProduct.repaymentFrequencyType | find:loanProductsTemplate.repaymentFrequencyTypeOptions:'id':'value') }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.minimumDaysBetweenDisbursalAndFirstRepayment\\\">\\n    <span fxFlex=\\\"40%\\\">Minimum days between disbursal and first repayment date:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.minimumDaysBetweenDisbursalAndFirstRepayment }}</span>\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Settings</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Amortization:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.amortizationType | find:loanProductsTemplate.amortizationTypeOptions:'id':'value' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Is Equal Amortization:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.isEqualAmortization ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Interest Method:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.interestType | find:loanProductsTemplate.interestTypeOptions:'id':'value' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Interest Calculation Period:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.interestCalculationPeriodType | find:loanProductsTemplate.interestCalculationPeriodTypeOptions:'id':'value' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.interestCalculationPeriodType === 1\\\">\\n    <span fxFlex=\\\"40%\\\">Allow Partial Interest Calculation with same as repayment:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.allowPartialPeriodInterestCalcualtion ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Repayment Strategy:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.transactionProcessingStrategyId | find:loanProductsTemplate.transactionProcessingStrategyOptions:'id':'name' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.graceOnPrincipalPayment\\\">\\n    <span fxFlex=\\\"40%\\\">Grace on principal payment:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.graceOnPrincipalPayment }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.graceOnInterestPayment\\\">\\n    <span fxFlex=\\\"40%\\\">Grace on interest payment:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.graceOnInterestPayment }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.graceOnInterestCharged\\\">\\n    <span fxFlex=\\\"40%\\\">Interest free period:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.graceOnInterestCharged }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.inArrearsTolerance\\\">\\n    <span fxFlex=\\\"40%\\\">Arrears tolerance:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.inArrearsTolerance }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Days in year:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.daysInYearType | find:loanProductsTemplate.daysInYearTypeOptions:'id':'value' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Days in month:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.daysInMonthType | find:loanProductsTemplate.daysInMonthTypeOptions:'id':'value' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Allow fixing of the installment amount:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.canDefineInstallmentAmount ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.graceOnArrearsAgeing\\\">\\n    <span fxFlex=\\\"40%\\\">Number of days a loan may be overdue before moving into arrears:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.graceOnArrearsAgeing }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.overdueDaysForNPA\\\">\\n    <span fxFlex=\\\"40%\\\">Maximum number of days a loan may be overdue before becoming a NPA (non performing asset):</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.overdueDaysForNPA }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Account moves out of NPA only after all arrears have been cleared:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.accountMovesOutOfNPAOnlyOnArrearsCompletion ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.principalThresholdForLastInstallment\\\">\\n    <span fxFlex=\\\"40%\\\">Principal Threshold (%) for Last Instalment:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.principalThresholdForLastInstallment }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Variable Installments allowed:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.allowVariableInstallments ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.allowVariableInstallments\\\">\\n    <span fxFlex=\\\"40%\\\">Variable Installments:</span>\\n    <span fxFlex=\\\"60%\\\">{{ '(Min: ' + loanProduct.minimumGap + ', Max: ' + (loanProduct.maximumGap ? loanProduct.maximumGap : loanProduct.minimumGap) + ')' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Allowed to be used for providing Topup Loans:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.canUseForTopup ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Interest Recalculation</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Recalculate Interest:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.isInterestRecalculationEnabled ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.isInterestRecalculationEnabled\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n    <span fxFlex=\\\"40%\\\">Pre-closure interest calculation rule:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.preClosureInterestCalculationStrategy | find:loanProductsTemplate.preClosureInterestCalculationStrategyOptions:'id':'value' }}</span>\\n    <span fxFlex=\\\"40%\\\">Advance payments adjustment type:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.rescheduleStrategyMethod | find:loanProductsTemplate.rescheduleStrategyTypeOptions:'id':'value' }}</span>\\n    <span fxFlex=\\\"40%\\\">Interest recalculation compounding on:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.interestRecalculationCompoundingMethod | find:loanProductsTemplate.interestRecalculationCompoundingTypeOptions:'id':'value' }}</span>\\n    <div fxFlexFill *ngIf=\\\"loanProduct.interestRecalculationCompoundingMethod !== 0\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n      <span fxFlex=\\\"40%\\\">Frequency for compounding:</span>\\n      <span fxFlex=\\\"60%\\\">\\n        {{ loanProduct.recalculationCompoundingFrequencyType | find:loanProductsTemplate.interestRecalculationFrequencyTypeOptions:'id':'value' }}\\n        <span *ngIf=\\\"loanProduct.recalculationCompoundingFrequencyType === 4\\\">&nbsp;&nbsp;{{ loanProduct.recalculationCompoundingFrequencyNthDayType | find:loanProductsTemplate.interestRecalculationNthDayTypeOptions:'id':'value' }}</span>\\n        <span *ngIf=\\\"(loanProduct.recalculationCompoundingFrequencyType === 4 && loanProduct.recalculationCompoundingFrequencyNthDayType !== -2) || loanProduct.recalculationCompoundingFrequencyType === 3\\\">&nbsp;&nbsp;{{ loanProduct.recalculationCompoundingFrequencyDayOfWeekType | find:loanProductsTemplate.interestRecalculationDayOfWeekTypeOptions:'id':'value' }}</span>\\n        <span *ngIf=\\\"loanProduct.recalculationCompoundingFrequencyType === 4 && loanProduct.recalculationCompoundingFrequencyNthDayType === -2\\\">&nbsp;&nbsp;{{ loanProduct.recalculationCompoundingFrequencyOnDayType }}</span>\\n      </span>\\n      <div fxFlexFill *ngIf=\\\"loanProduct.recalculationCompoundingFrequencyType !== 1\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n        <span fxFlex=\\\"40%\\\">Frequency Interval for compounding:</span>\\n        <span fxFlex=\\\"60%\\\">{{ loanProduct.recalculationCompoundingFrequencyInterval }}</span>\\n        <div fxFlexFill *ngIf=\\\"loanProduct.recalculationCompoundingFrequencyDate\\\">\\n          <span fxFlex=\\\"40%\\\">Compounding Frequency Date:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.recalculationCompoundingFrequencyDate }}</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n      <span fxFlex=\\\"40%\\\">Frequency for recalculate Outstanding Principal:</span>\\n      <span fxFlex=\\\"60%\\\">\\n        {{ loanProduct.recalculationRestFrequencyType | find:loanProductsTemplate.interestRecalculationFrequencyTypeOptions:'id':'value' }}\\n        <span *ngIf=\\\"loanProduct.recalculationRestFrequencyType === 4\\\">&nbsp;&nbsp;{{ loanProduct.recalculationRestFrequencyNthDayType | find:loanProductsTemplate.interestRecalculationNthDayTypeOptions:'id':'value' }}</span>\\n        <span *ngIf=\\\"(loanProduct.recalculationRestFrequencyType === 4 && loanProduct.recalculationRestFrequencyNthDayType !== -2) || loanProduct.recalculationRestFrequencyType === 3\\\">&nbsp;&nbsp;{{ loanProduct.recalculationRestFrequencyDayOfWeekType | find:loanProductsTemplate.interestRecalculationDayOfWeekTypeOptions:'id':'value' }}</span>\\n        <span *ngIf=\\\"loanProduct.recalculationRestFrequencyType === 4 && loanProduct.recalculationRestFrequencyNthDayType === -2\\\">&nbsp;&nbsp;{{ loanProduct.recalculationRestFrequencyOnDayType }}</span>\\n      </span>\\n    </div>\\n    <div fxFlexFill *ngIf=\\\"loanProduct.recalculationRestFrequencyType !== 1\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n      <span fxFlex=\\\"40%\\\">Frequency Interval for recalculation:</span>\\n      <span fxFlex=\\\"60%\\\">{{ loanProduct.recalculationRestFrequencyInterval }}</span>\\n      <div fxFlexFill *ngIf=\\\"loanProduct.recalculationRestFrequencyDate\\\">\\n        <span fxFlex=\\\"40%\\\">Rest Frequency Date:</span>\\n        <span fxFlex=\\\"60%\\\">{{ loanProduct.recalculationRestFrequencyDate }}</span>\\n      </div>\\n    </div>\\n    <div fxFlexFill>\\n      <span fxFlex=\\\"40%\\\">Is Arrears recognization based on original schedule:</span>\\n      <span fxFlex=\\\"60%\\\">{{ loanProduct.isArrearsBasedOnOriginalSchedule ? 'Yes' : 'No' }}</span>\\n    </div>\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Guarantee Requirements</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Place Guarantee Funds On-Hold:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.holdGuaranteeFunds ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.holdGuaranteeFunds\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n    <span fxFlex=\\\"40%\\\">Mandatory Guarantee(%):</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.mandatoryGuarantee }}</span>\\n    <div fxFlexFill *ngIf=\\\"loanProduct.minimumGuaranteeFromOwnFunds\\\">\\n      <span fxFlex=\\\"40%\\\">Minimum Guarantee from Own Funds(%):</span>\\n      <span fxFlex=\\\"60%\\\">{{ loanProduct.minimumGuaranteeFromOwnFunds }}</span>\\n    </div>\\n    <div fxFlexFill *ngIf=\\\"loanProduct.minimumGuaranteeFromGuarantor\\\">\\n      <span fxFlex=\\\"40%\\\">Minimum Guarantee from Guarantor Funds(%):</span>\\n      <span fxFlex=\\\"60%\\\">{{ loanProduct.minimumGuaranteeFromGuarantor }}</span>\\n    </div>\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Loan Tranche Details</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Enable Multiple Disbursals:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.multiDisburseLoan ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.multiDisburseLoan\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n    <span fxFlex=\\\"40%\\\">Maximum Tranche count:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.maxTrancheCount }}</span>\\n    <div fxFlexFill *ngIf=\\\"loanProduct.outstandingLoanBalance\\\">\\n      <span fxFlex=\\\"40%\\\">Maximum allowed outstanding balance:</span>\\n      <span fxFlex=\\\"60%\\\">{{ loanProduct.outstandingLoanBalance }}</span>\\n    </div>\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Configurable Terms and Settings</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Allow overriding select terms and settings in loan accounts:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.allowAttributeConfiguration ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.allowAttributeConfiguration\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n    <span fxFlex=\\\"40%\\\">Amortization:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.allowAttributeOverrides.amortizationType ? 'Yes' : 'No' }}</span>\\n    <span fxFlex=\\\"40%\\\">Interest method:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.allowAttributeOverrides.interestType ? 'Yes' : 'No' }}</span>\\n    <span fxFlex=\\\"40%\\\">Repayment strategy:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.allowAttributeOverrides.transactionProcessingStrategyId ? 'Yes' : 'No' }}</span>\\n    <span fxFlex=\\\"40%\\\">Interest calculation period:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.allowAttributeOverrides.interestCalculationPeriodType ? 'Yes' : 'No' }}</span>\\n    <span fxFlex=\\\"40%\\\">Arrears tolerance:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.allowAttributeOverrides.inArrearsTolerance ? 'Yes' : 'No' }}</span>\\n    <span fxFlex=\\\"40%\\\">Repaid every:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.allowAttributeOverrides.repaymentEvery ? 'Yes' : 'No' }}</span>\\n    <span fxFlex=\\\"40%\\\">Moratorium:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.allowAttributeOverrides.graceOnPrincipalAndInterestPayment ? 'Yes' : 'No' }}</span>\\n    <span fxFlex=\\\"40%\\\">Number of days a loan may be overdue before moving into arrears:</span>\\n    <span fxFlex=\\\"60%\\\">{{ loanProduct.allowAttributeOverrides.graceOnArrearsAgeing ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.charges.length\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <h3 class=\\\"mat-h3\\\" fxFlexFill>Charges</h3>\\n\\n    <mat-divider fxFlexFill></mat-divider>\\n\\n    <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"loanProduct.charges | chargesPenaltyFilter:false\\\">\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Name </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\">\\n          {{ charge.name + ', ' + charge.currency.displaySymbol }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"chargeCalculationType\\\">\\n        <th mat-header-cell *matHeaderCellDef> Type </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\">\\n          {{ charge.chargeCalculationType.value }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"amount\\\">\\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\">\\n          {{ charge.amount  }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"chargeTimeType\\\">\\n        <th mat-header-cell *matHeaderCellDef> Collected On </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\">\\n          {{ charge.chargeTimeType.value }}\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"chargesDisplayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: chargesDisplayedColumns;\\\"></tr>\\n\\n    </table>\\n\\n    <h3 class=\\\"mat-h3\\\" fxFlexFill>Overdue Charges</h3>\\n\\n    <mat-divider fxFlexFill></mat-divider>\\n\\n    <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"loanProduct.charges | chargesPenaltyFilter:true\\\">\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Name </th>\\n        <td mat-cell *matCellDef=\\\"let overdueCharge\\\">\\n          {{ overdueCharge.name + ', ' + overdueCharge.currency.displaySymbol }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"chargeCalculationType\\\">\\n        <th mat-header-cell *matHeaderCellDef> Type </th>\\n        <td mat-cell *matCellDef=\\\"let overdueCharge\\\">\\n          {{ overdueCharge.chargeCalculationType.value }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"amount\\\">\\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\\n        <td mat-cell *matCellDef=\\\"let overdueCharge\\\">\\n          {{ overdueCharge.amount  }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"chargeTimeType\\\">\\n        <th mat-header-cell *matHeaderCellDef> Collected On </th>\\n        <td mat-cell *matCellDef=\\\"let overdueCharge\\\">\\n          {{ overdueCharge.chargeTimeType.value }}\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"chargesDisplayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: chargesDisplayedColumns;\\\"></tr>\\n\\n    </table>\\n\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Accounting</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Type:</span>\\n    <span fxFlex=\\\"60%\\\">{{ accountingRuleData[loanProduct.accountingRule-1] }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"loanProduct.accountingRule >= 2 && loanProduct.accountingRule <= 4\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <h4 fxFlexFill class=\\\"mat-h4\\\">Assets</h4>\\n\\n    <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n      <span fxFlex=\\\"40%\\\">Fund source:</span>\\n      <span fxFlex=\\\"60%\\\">{{ loanProduct.fundSourceAccountId | find:loanProductsTemplate.accountingMappingOptions.assetAccountOptions:'id':'name' }}</span>\\n      <span fxFlex=\\\"40%\\\">Loan portfolio:</span>\\n      <span fxFlex=\\\"60%\\\">{{ loanProduct.loanPortfolioAccountId | find:loanProductsTemplate.accountingMappingOptions.assetAccountOptions:'id':'name' }}</span>\\n      <div fxFlexFill *ngIf=\\\"loanProduct.accountingRule === 3 || loanProduct.accountingRule === 4\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n        <span fxFlex=\\\"40%\\\">Interest Receivable:</span>\\n        <span fxFlex=\\\"60%\\\">{{ loanProduct.receivableInterestAccountId | find:loanProductsTemplate.accountingMappingOptions.assetAccountOptions:'id':'name' }}</span>\\n        <span fxFlex=\\\"40%\\\">Fees Receivable:</span>\\n        <span fxFlex=\\\"60%\\\">{{ loanProduct.receivableFeeAccountId | find:loanProductsTemplate.accountingMappingOptions.assetAccountOptions:'id':'name' }}</span>\\n        <span fxFlex=\\\"40%\\\">Penalties Receivable:</span>\\n        <span fxFlex=\\\"60%\\\">{{ loanProduct.receivablePenaltyAccountId | find:loanProductsTemplate.accountingMappingOptions.assetAccountOptions:'id':'name' }}</span>\\n      </div>\\n      <span fxFlex=\\\"40%\\\">Transfer in suspense:</span>\\n      <span fxFlex=\\\"60%\\\">{{ loanProduct.transfersInSuspenseAccountId | find:loanProductsTemplate.accountingMappingOptions.assetAccountOptions:'id':'name' }}</span>\\n    </div>\\n\\n    <h4 fxFlexFill class=\\\"mat-h4\\\">Income</h4>\\n\\n    <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n      <span fxFlex=\\\"40%\\\">Income from Interest:</span>\\n      <span fxFlex=\\\"60%\\\">{{ loanProduct.interestOnLoanAccountId | find:loanProductsTemplate.accountingMappingOptions.incomeAccountOptions:'id':'name' }}</span>\\n      <span fxFlex=\\\"40%\\\">Income from fees:</span>\\n      <span fxFlex=\\\"60%\\\">{{ loanProduct.incomeFromFeeAccountId | find:loanProductsTemplate.accountingMappingOptions.incomeAccountOptions:'id':'name' }}</span>\\n      <span fxFlex=\\\"40%\\\">Income from penalties:</span>\\n      <span fxFlex=\\\"60%\\\">{{ loanProduct.incomeFromPenaltyAccountId | find:loanProductsTemplate.accountingMappingOptions.incomeAccountOptions:'id':'name' }}</span>\\n      <span fxFlex=\\\"40%\\\">Income from Recovery Repayments:</span>\\n      <span fxFlex=\\\"60%\\\">{{ loanProduct.incomeFromRecoveryAccountId | find:loanProductsTemplate.accountingMappingOptions.incomeAccountOptions:'id':'name' }}</span>\\n    </div>\\n\\n    <h4 fxFlexFill class=\\\"mat-h4\\\">Expenses</h4>\\n\\n    <div fxFlexFill>\\n      <span fxFlex=\\\"40%\\\">Losses written off:</span>\\n      <span fxFlex=\\\"60%\\\">{{ loanProduct.writeOffAccountId | find:loanProductsTemplate.accountingMappingOptions.expenseAccountOptions:'id':'name' }}</span>\\n    </div>\\n\\n    <h4 fxFlexFill class=\\\"mat-h4\\\">Liabilities</h4>\\n\\n    <div fxFlexFill>\\n      <span fxFlex=\\\"40%\\\">Over payment liability:</span>\\n      <span fxFlex=\\\"60%\\\">{{ loanProduct.overpaymentLiabilityAccountId | find:loanProductsTemplate.accountingMappingOptions.liabilityAccountOptions:'id':'name' }}</span>\\n    </div>\\n\\n    <div *ngIf=\\\"loanProduct.advancedAccountingRules && (loanProduct.paymentChannelToFundSourceMappings?.length || loanProduct.feeToIncomeAccountMappings?.length || loanProduct.penaltyToIncomeAccountMappings?.length)\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <h3 class=\\\"mat-h3\\\" fxFlexFill>Advanced Accounting Rules</h3>\\n\\n      <mat-divider fxFlexFill></mat-divider>\\n\\n      <div *ngIf=\\\"loanProduct.paymentChannelToFundSourceMappings?.length\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <h4 class=\\\"mat-h4\\\" fxFlexFill>Fund Sources for Payment Channels</h4>\\n\\n        <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"loanProduct.paymentChannelToFundSourceMappings\\\">\\n\\n          <ng-container matColumnDef=\\\"paymentTypeId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Payment Type </th>\\n            <td mat-cell *matCellDef=\\\"let paymentFundSource\\\">\\n              {{ paymentFundSource.paymentTypeId | find:loanProductsTemplate.paymentTypeOptions:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"fundSourceAccountId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fund Source </th>\\n            <td mat-cell *matCellDef=\\\"let paymentFundSource\\\">\\n              {{ paymentFundSource.fundSourceAccountId | find:loanProductsTemplate.accountingMappingOptions.assetAccountOptions:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"paymentFundSourceDisplayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: paymentFundSourceDisplayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n      </div>\\n\\n      <div *ngIf=\\\"loanProduct.feeToIncomeAccountMappings?.length\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <h4 class=\\\"mat-h4\\\" fxFlexFill>Fees to Specific Income Accounts</h4>\\n\\n        <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"loanProduct.feeToIncomeAccountMappings\\\">\\n\\n          <ng-container matColumnDef=\\\"chargeId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fees </th>\\n            <td mat-cell *matCellDef=\\\"let feesIncome\\\">\\n              {{ feesIncome.chargeId | find:loanProductsTemplate.chargeOptions:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"incomeAccountId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Income Account </th>\\n            <td mat-cell *matCellDef=\\\"let feesIncome\\\">\\n              {{ feesIncome.incomeAccountId | find:loanProductsTemplate.accountingMappingOptions.incomeAccountOptions.concat(loanProductsTemplate.accountingMappingOptions.liabilityAccountOptions):'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"feesPenaltyIncomeDisplayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: feesPenaltyIncomeDisplayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n      </div>\\n\\n      <div *ngIf=\\\"loanProduct.penaltyToIncomeAccountMappings?.length\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <h4 class=\\\"mat-h4\\\" fxFlexFill>Penalties to Specific Income Accounts</h4>\\n\\n        <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"loanProduct.penaltyToIncomeAccountMappings\\\">\\n\\n          <ng-container matColumnDef=\\\"chargeId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Penalty </th>\\n            <td mat-cell *matCellDef=\\\"let penaltyIncome\\\">\\n              {{ penaltyIncome.chargeId  | find:loanProductsTemplate.penaltyOptions:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"incomeAccountId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Income Account </th>\\n            <td mat-cell *matCellDef=\\\"let penaltyIncome\\\">\\n              {{ penaltyIncome.incomeAccountId | find:loanProductsTemplate.accountingMappingOptions.incomeAccountOptions:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"feesPenaltyIncomeDisplayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: feesPenaltyIncomeDisplayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\\n<div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n  <button mat-raised-button matStepperPrevious>\\n    <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n    Previous\\n  </button>\\n  <button mat-raised-button [routerLink]=\\\"['../']\\\">\\n    Cancel\\n  </button>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"submit.emit()\\\">\\n    Submit\\n  </button>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-elevation-z1 {\\n  margin: 1em 0 1.5em 0; }\\n\\nh2, h3, h4 {\\n  margin: 0;\\n  font-weight: 500; }\\n\\nspan {\\n  margin: 0.5em 0; }\\n\\nmat-divider {\\n  margin: 0 0 0.5em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2xvYW4tcHJvZHVjdHMvbG9hbi1wcm9kdWN0LXN0ZXBwZXIvbG9hbi1wcm9kdWN0LXByZXZpZXctc3RlcC9sb2FuLXByb2R1Y3QtcHJldmlldy1zdGVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBOztBQUdiO0VBQ0UscUJBQXFCLEVBQUE7O0FBR3ZCO0VBQ0UsU0FBUztFQUNULGdCQUFnQixFQUFBOztBQUdsQjtFQUNFLGVBQWUsRUFBQTs7QUFHakI7RUFDRSxtQkFBbUIsRUFBQTs7QUFHckI7RUFDRSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0cy9sb2FuLXByb2R1Y3RzL2xvYW4tcHJvZHVjdC1zdGVwcGVyL2xvYW4tcHJvZHVjdC1wcmV2aWV3LXN0ZXAvbG9hbi1wcm9kdWN0LXByZXZpZXctc3RlcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5tYXQtZWxldmF0aW9uLXoxIHtcbiAgbWFyZ2luOiAxZW0gMCAxLjVlbSAwO1xufVxuXG5oMiwgaDMsIGg0IHtcbiAgbWFyZ2luOiAwO1xuICBmb250LXdlaWdodDogNTAwO1xufVxuXG5zcGFuIHtcbiAgbWFyZ2luOiAwLjVlbSAwO1xufVxuXG5tYXQtZGl2aWRlciB7XG4gIG1hcmdpbjogMCAwIDAuNWVtIDA7XG59XG5cbi5tYXJnaW4tdCB7XG4gIG1hcmdpbi10b3A6IDFlbTtcbn1cbiJdfQ== */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'mifosx-loan-product-preview-step',\n  templateUrl: './loan-product-preview-step.component.html',\n  styleUrls: ['./loan-product-preview-step.component.scss']\n})\nexport class LoanProductPreviewStepComponent implements OnInit {\n\n  @Input() loanProductsTemplate: any;\n  @Input() accountingRuleData: any;\n  @Input() loanProduct: any;\n  @Output() submit = new EventEmitter();\n\n  variationsDisplayedColumns: string[] = ['valueConditionType', 'borrowerCycleNumber', 'minValue', 'defaultValue', 'maxValue'];\n  chargesDisplayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType'];\n  paymentFundSourceDisplayedColumns: string[] = ['paymentTypeId', 'fundSourceAccountId'];\n  feesPenaltyIncomeDisplayedColumns: string[] = ['chargeId', 'incomeAccountId'];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"loanProductSettingsForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutAlign.gt-sm=\\\"start center\\\">\\n\\n    <mat-form-field fxFlex=\\\"31%\\\">\\n      <mat-label>Amortization</mat-label>\\n      <mat-select formControlName=\\\"amortizationType\\\" required>\\n        <mat-option *ngFor=\\\"let amortizationType of amortizationTypeData\\\" [value]=\\\"amortizationType.id\\\">\\n          {{ amortizationType.value }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Amortization is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-checkbox fxFlex=\\\"15%\\\" labelPosition=\\\"before\\\" formControlName=\\\"isEqualAmortization\\\">\\n      Is Equal Amortization?\\n    </mat-checkbox>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Interest Method</mat-label>\\n      <mat-select formControlName=\\\"interestType\\\" required>\\n        <mat-option *ngFor=\\\"let interestType of interestTypeData\\\" [value]=\\\"interestType.id\\\">\\n          {{ interestType.value }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Interest Method is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Interest calculation period</mat-label>\\n      <mat-select formControlName=\\\"interestCalculationPeriodType\\\" required>\\n        <mat-option *ngFor=\\\"let interestCalculationPeriodType of interestCalculationPeriodTypeData\\\" [value]=\\\"interestCalculationPeriodType.id\\\">\\n          {{ interestCalculationPeriodType.value }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Interest calculation period is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-checkbox *ngIf=\\\"loanProductSettingsForm.value.interestCalculationPeriodType === 1\\\" fxFlex=\\\"48%\\\" labelPosition=\\\"before\\\" formControlName=\\\"allowPartialPeriodInterestCalcualtion\\\">\\n      Calculate interest for exact days in partial period\\n    </mat-checkbox>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Repayment strategy</mat-label>\\n      <mat-select formControlName=\\\"transactionProcessingStrategyId\\\" required>\\n        <mat-option *ngFor=\\\"let transactionProcessingStrategy of transactionProcessingStrategyData\\\" [value]=\\\"transactionProcessingStrategy.id\\\">\\n          {{ transactionProcessingStrategy.name }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Repayment strategy is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <span fxFlex=\\\"48%\\\" fxHide.lt-md></span>\\n\\n    <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Moratorium</h4>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Grace on principal payment</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"graceOnPrincipalPayment\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Grace on interest payment</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"graceOnInterestPayment\\\">\\n    </mat-form-field>\\n\\n    <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Interest free period</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"graceOnInterestCharged\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Arrears tolerance</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"inArrearsTolerance\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Days in year</mat-label>\\n      <mat-select formControlName=\\\"daysInYearType\\\" required>\\n        <mat-option *ngFor=\\\"let daysInYearType of daysInYearTypeData\\\" [value]=\\\"daysInYearType.id\\\">\\n          {{ daysInYearType.value }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Days in year is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Days in month</mat-label>\\n      <mat-select formControlName=\\\"daysInMonthType\\\" required>\\n        <mat-option *ngFor=\\\"let daysInMonthType of daysInMonthTypeData\\\" [value]=\\\"daysInMonthType.id\\\">\\n          {{ daysInMonthType.value }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Days in month is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-checkbox fxFlex=\\\"98%\\\" labelPosition=\\\"before\\\" formControlName=\\\"canDefineInstallmentAmount\\\" class=\\\"margin-v\\\">\\n      Allow fixing of the installment amount\\n    </mat-checkbox>\\n\\n    <h4 fxFlex=\\\"48%\\\" class=\\\"mat-h4\\\">Number of days a loan may be overdue before moving into arrears</h4>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>On arrears ageing</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"graceOnArrearsAgeing\\\">\\n    </mat-form-field>\\n\\n    <h4 fxFlex=\\\"48%\\\" class=\\\"mat-h4\\\">Maximum number of days a loan may be overdue before becoming a NPA (non-performing asset)</h4>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Overdue days for NPA</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"overdueDaysForNPA\\\">\\n    </mat-form-field>\\n\\n    <mat-checkbox fxFlex=\\\"48%\\\" labelPosition=\\\"before\\\" formControlName=\\\"accountMovesOutOfNPAOnlyOnArrearsCompletion\\\" class=\\\"margin-v\\\">\\n      Account moves out of NPA only after all arrears have been cleared?\\n    </mat-checkbox>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Principal Threshold (%) for Last Instalment</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"principalThresholdForLastInstallment\\\">\\n    </mat-form-field>\\n\\n    <mat-checkbox fxFlex=\\\"48%\\\" labelPosition=\\\"before\\\" formControlName=\\\"allowVariableInstallments\\\" class=\\\"margin-v\\\">\\n      Are Variable Installments allowed?\\n    </mat-checkbox>\\n\\n    <div *ngIf=\\\"loanProductSettingsForm.value.allowVariableInstallments\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Variable Installments</h4>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Minimum gap between Installments</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"minimumGap\\\" required>\\n        <mat-error>\\n          Minimum gap between Installments is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Maximum gap between Installments</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"maximumGap\\\">\\n      </mat-form-field>\\n\\n    </div>\\n\\n    <mat-checkbox fxFlex=\\\"48%\\\" labelPosition=\\\"before\\\" formControlName=\\\"canUseForTopup\\\" class=\\\"margin-v\\\">\\n      Allowed to be used for providing Topup Loans\\n    </mat-checkbox>\\n\\n    <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n    <h3 fxFlex=\\\"23%\\\" class=\\\"mat-h3\\\">Interest Recalculation</h3>\\n\\n    <mat-checkbox fxFlex=\\\"73%\\\" labelPosition=\\\"before\\\" formControlName=\\\"isInterestRecalculationEnabled\\\" class=\\\"margin-b\\\">\\n      Recalculate Interest\\n    </mat-checkbox>\\n\\n    <div *ngIf=\\\"loanProductSettingsForm.value.isInterestRecalculationEnabled\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Pre-closure interest calculation rule</mat-label>\\n        <mat-select formControlName=\\\"preClosureInterestCalculationStrategy\\\" required>\\n          <mat-option *ngFor=\\\"let preClosureInterestCalculationStrategy of preClosureInterestCalculationStrategyData\\\" [value]=\\\"preClosureInterestCalculationStrategy.id\\\">\\n            {{ preClosureInterestCalculationStrategy.value }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Pre-closure interest calculation rule is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Advance payments adjustment type</mat-label>\\n        <mat-select formControlName=\\\"rescheduleStrategyMethod\\\" required>\\n          <mat-option *ngFor=\\\"let rescheduleStrategyType of rescheduleStrategyTypeData\\\" [value]=\\\"rescheduleStrategyType.id\\\">\\n            {{ rescheduleStrategyType.value }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Advance payments adjustment type is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Interest recalculation compounding on</mat-label>\\n        <mat-select formControlName=\\\"interestRecalculationCompoundingMethod\\\" required>\\n          <mat-option *ngFor=\\\"let interestRecalculationCompoundingType of interestRecalculationCompoundingTypeData\\\" [value]=\\\"interestRecalculationCompoundingType.id\\\">\\n            {{ interestRecalculationCompoundingType.value }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Interest recalculation compounding on is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <span fxFlex=\\\"48%\\\" fxHide.lt-md></span>\\n\\n      <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <mat-form-field fxFlex=\\\"48%\\\" *ngIf=\\\"loanProductSettingsForm.value.interestRecalculationCompoundingMethod !== 0 && loanProductSettingsForm.value.recalculationCompoundingFrequencyType !== 1\\\">\\n          <mat-label>Frequency Interval for compounding</mat-label>\\n          <input type=\\\"number\\\" matInput formControlName=\\\"recalculationCompoundingFrequencyInterval\\\" required>\\n          <mat-error>\\n            Frequency Interval for compounding is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlex=\\\"48%\\\" *ngIf=\\\"loanProductSettingsForm.value.recalculationRestFrequencyType !== 1\\\">\\n          <mat-label>Frequency Interval for recalculation</mat-label>\\n          <input type=\\\"number\\\" matInput formControlName=\\\"recalculationRestFrequencyInterval\\\" required>\\n          <mat-error>\\n            Frequency Interval for recalculation is <strong>required</strong>\\n          </mat-error>\\n        </mat-form-field>\\n\\n      </div>\\n\\n      <div *ngIf=\\\"loanProductSettingsForm.value.interestRecalculationCompoundingMethod !== 0\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <mat-form-field fxFlex=\\\"31%\\\">\\n          <mat-label>Frequency for compounding</mat-label>\\n          <mat-select formControlName=\\\"recalculationCompoundingFrequencyType\\\" required>\\n            <mat-option *ngFor=\\\"let interestRecalculationFrequencyType of interestRecalculationFrequencyTypeData\\\" [value]=\\\"interestRecalculationFrequencyType.id\\\">\\n              {{ interestRecalculationFrequencyType.value }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <div *ngIf=\\\"loanProductSettingsForm.value.recalculationCompoundingFrequencyType === 4\\\" fxFlex=\\\"31%\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n          <mat-form-field fxFlexFill>\\n            <mat-select formControlName=\\\"recalculationCompoundingFrequencyNthDayType\\\">\\n              <mat-option *ngFor=\\\"let interestRecalculationNthDayType of interestRecalculationNthDayTypeData\\\" [value]=\\\"interestRecalculationNthDayType.id\\\">\\n                {{ interestRecalculationNthDayType.value }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n        </div>\\n\\n        <div *ngIf=\\\"(loanProductSettingsForm.value.recalculationCompoundingFrequencyType === 4 && loanProductSettingsForm.value.recalculationCompoundingFrequencyNthDayType !== -2) || loanProductSettingsForm.value.recalculationCompoundingFrequencyType === 3\\\" fxFlex=\\\"31%\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n          <mat-form-field fxFlexFill>\\n              <mat-select formControlName=\\\"recalculationCompoundingFrequencyDayOfWeekType\\\">\\n                <mat-option *ngFor=\\\"let interestRecalculationDayOfWeekType of interestRecalculationDayOfWeekTypeData\\\" [value]=\\\"interestRecalculationDayOfWeekType.id\\\">\\n                  {{ interestRecalculationDayOfWeekType.value }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n        </div>\\n\\n        <div *ngIf=\\\"loanProductSettingsForm.value.recalculationCompoundingFrequencyType === 4 && loanProductSettingsForm.value.recalculationCompoundingFrequencyNthDayType === -2\\\" fxFlex=\\\"31%\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n          <mat-form-field fxFlexFill>\\n            <mat-select formControlName=\\\"recalculationCompoundingFrequencyOnDayType\\\">\\n              <mat-option *ngFor=\\\"let interestRecalculationOnDayType of interestRecalculationOnDayTypeData\\\" [value]=\\\"interestRecalculationOnDayType\\\">\\n                {{ interestRecalculationOnDayType }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </div>\\n\\n      <mat-form-field fxFlex=\\\"31%\\\">\\n        <mat-label>Frequency for recalculate Outstanding Principal</mat-label>\\n        <mat-select formControlName=\\\"recalculationRestFrequencyType\\\" required>\\n          <mat-option *ngFor=\\\"let interestRecalculationFrequencyType of interestRecalculationFrequencyTypeData\\\" [value]=\\\"interestRecalculationFrequencyType.id\\\">\\n            {{ interestRecalculationFrequencyType.value }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Frequency for recalculate Outstanding Principal is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <div *ngIf=\\\"loanProductSettingsForm.value.recalculationRestFrequencyType === 4\\\" fxFlex=\\\"31%\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <mat-form-field fxFlexFill>\\n          <mat-select formControlName=\\\"recalculationRestFrequencyNthDayType\\\">\\n            <mat-option *ngFor=\\\"let interestRecalculationNthDayType of interestRecalculationNthDayTypeData\\\" [value]=\\\"interestRecalculationNthDayType.id\\\">\\n              {{ interestRecalculationNthDayType.value }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n      </div>\\n\\n      <div *ngIf=\\\"(loanProductSettingsForm.value.recalculationRestFrequencyType === 4 && loanProductSettingsForm.value.recalculationRestFrequencyNthDayType !== -2) || loanProductSettingsForm.value.recalculationRestFrequencyType === 3\\\" fxFlex=\\\"31%\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <mat-form-field fxFlexFill>\\n          <mat-select formControlName=\\\"recalculationRestFrequencyDayOfWeekType\\\">\\n            <mat-option *ngFor=\\\"let interestRecalculationDayOfWeekType of interestRecalculationDayOfWeekTypeData\\\" [value]=\\\"interestRecalculationDayOfWeekType.id\\\">\\n              {{ interestRecalculationDayOfWeekType.value }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n      </div>\\n\\n      <div *ngIf=\\\"loanProductSettingsForm.value.recalculationRestFrequencyType === 4 && loanProductSettingsForm.value.recalculationRestFrequencyNthDayType === -2\\\" fxFlex=\\\"31%\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <mat-form-field fxFlexFill>\\n          <mat-select formControlName=\\\"recalculationRestFrequencyOnDayType\\\">\\n            <mat-option *ngFor=\\\"let interestRecalculationOnDayType of interestRecalculationOnDayTypeData\\\" [value]=\\\"interestRecalculationOnDayType\\\">\\n              {{ interestRecalculationOnDayType }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n      </div>\\n\\n      <mat-checkbox fxFlex=\\\"98%\\\" labelPosition=\\\"before\\\" formControlName=\\\"isArrearsBasedOnOriginalSchedule\\\" class=\\\"margin-v\\\">\\n        Is Arrears recognization based on original schedule?\\n      </mat-checkbox>\\n\\n    </div>\\n\\n    <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n    <h3 fxFlex=\\\"23%\\\" class=\\\"mat-h3\\\">Guarantee Requirements</h3>\\n\\n    <mat-checkbox fxFlex=\\\"73%\\\" labelPosition=\\\"before\\\" formControlName=\\\"holdGuaranteeFunds\\\" class=\\\"margin-b\\\">\\n      Place Guarantee Funds On-Hold?\\n    </mat-checkbox>\\n\\n    <div *ngIf=\\\"loanProductSettingsForm.value.holdGuaranteeFunds\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <mat-form-field fxFlex=\\\"31%\\\">\\n        <mat-label>Mandatory Guarantee(%)</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"mandatoryGuarantee\\\" required>\\n        <mat-error>\\n          Mandatory Guarantee is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"31%\\\">\\n        <mat-label>Minimum Guarantee from Own Funds(%)</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"minimumGuaranteeFromOwnFunds\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"31%\\\">\\n        <mat-label>Minimum Guarantee from Guarantor Funds(%)</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"minimumGuaranteeFromGuarantor\\\">\\n      </mat-form-field>\\n\\n    </div>\\n\\n    <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n    <h3 fxFlex=\\\"23%\\\" class=\\\"mat-h3\\\">Loan Tranche Details</h3>\\n\\n    <mat-checkbox fxFlex=\\\"73%\\\" labelPosition=\\\"before\\\" formControlName=\\\"multiDisburseLoan\\\"  class=\\\"margin-b\\\">\\n      Enable Multiple Disbursals\\n    </mat-checkbox>\\n\\n    <div *ngIf=\\\"loanProductSettingsForm.value.multiDisburseLoan\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Maximum Tranche count</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"maxTrancheCount\\\" required>\\n        <mat-error>\\n          Maximum Tranche count is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Maximum allowed outstanding balance</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"outstandingLoanBalance\\\">\\n      </mat-form-field>\\n\\n    </div>\\n\\n    <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n    <h3 fxFlex=\\\"23%\\\" class=\\\"mat-h3\\\">Configurable Terms and Settings</h3>\\n\\n    <mat-checkbox fxFlex=\\\"73%\\\" labelPosition=\\\"before\\\" formControlName=\\\"allowAttributeConfiguration\\\" class=\\\"margin-b\\\">\\n      Allow overriding select terms and settings in loan accounts\\n    </mat-checkbox>\\n\\n    <div *ngIf=\\\"loanProductSettingsForm.value.allowAttributeConfiguration\\\" formGroupName=\\\"allowAttributeOverrides\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <mat-checkbox fxFlex=\\\"48%\\\" labelPosition=\\\"before\\\" formControlName=\\\"amortizationType\\\" class=\\\"margin-v\\\">\\n        Amortization\\n      </mat-checkbox>\\n\\n      <mat-checkbox fxFlex=\\\"48%\\\" labelPosition=\\\"before\\\" formControlName=\\\"interestType\\\" class=\\\"margin-v\\\">\\n        Interest method\\n      </mat-checkbox>\\n\\n      <mat-checkbox fxFlex=\\\"48%\\\" labelPosition=\\\"before\\\" formControlName=\\\"transactionProcessingStrategyId\\\" class=\\\"margin-v\\\">\\n        Repayment strategy\\n      </mat-checkbox>\\n\\n      <mat-checkbox fxFlex=\\\"48%\\\" labelPosition=\\\"before\\\" formControlName=\\\"interestCalculationPeriodType\\\" class=\\\"margin-v\\\">\\n        Interest calculation period\\n      </mat-checkbox>\\n\\n      <mat-checkbox fxFlex=\\\"48%\\\" labelPosition=\\\"before\\\" formControlName=\\\"inArrearsTolerance\\\" class=\\\"margin-v\\\">\\n        Arrears tolerance\\n      </mat-checkbox>\\n\\n      <mat-checkbox fxFlex=\\\"48%\\\" labelPosition=\\\"before\\\" formControlName=\\\"repaymentEvery\\\" class=\\\"margin-v\\\">\\n        Repaid every\\n      </mat-checkbox>\\n\\n      <mat-checkbox fxFlex=\\\"48%\\\" labelPosition=\\\"before\\\" formControlName=\\\"graceOnPrincipalAndInterestPayment\\\" class=\\\"margin-v\\\">\\n        Moratorium\\n      </mat-checkbox>\\n\\n      <mat-checkbox fxFlex=\\\"48%\\\" labelPosition=\\\"before\\\" formControlName=\\\"graceOnArrearsAgeing\\\" class=\\\"margin-v\\\">\\n        Number of days a loan may be overdue before moving into arrears\\n      </mat-checkbox>\\n\\n    </div>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext>\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \"h3, h4 {\\n  font-weight: 500; }\\n\\nh4 {\\n  margin: 1em 0; }\\n\\nmat-divider {\\n  margin: 1em 0 2em 0; }\\n\\n.margin-v {\\n  margin: 1em 0; }\\n\\n.margin-b {\\n  margin: 0 0 1em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2xvYW4tcHJvZHVjdHMvbG9hbi1wcm9kdWN0LXN0ZXBwZXIvbG9hbi1wcm9kdWN0LXNldHRpbmdzLXN0ZXAvbG9hbi1wcm9kdWN0LXNldHRpbmdzLXN0ZXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0IsRUFBQTs7QUFHbEI7RUFDRSxhQUFhLEVBQUE7O0FBR2Y7RUFDRSxtQkFBbUIsRUFBQTs7QUFHckI7RUFDRSxhQUFhLEVBQUE7O0FBR2Y7RUFDRSxpQkFBaUIsRUFBQTs7QUFHbkI7RUFDRSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0cy9sb2FuLXByb2R1Y3RzL2xvYW4tcHJvZHVjdC1zdGVwcGVyL2xvYW4tcHJvZHVjdC1zZXR0aW5ncy1zdGVwL2xvYW4tcHJvZHVjdC1zZXR0aW5ncy1zdGVwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDMsIGg0IHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuaDQge1xuICBtYXJnaW46IDFlbSAwO1xufVxuXG5tYXQtZGl2aWRlciB7XG4gIG1hcmdpbjogMWVtIDAgMmVtIDA7XG59XG5cbi5tYXJnaW4tdiB7XG4gIG1hcmdpbjogMWVtIDA7XG59XG5cbi5tYXJnaW4tYiB7XG4gIG1hcmdpbjogMCAwIDFlbSAwO1xufVxuXG4ubWFyZ2luLXQge1xuICBtYXJnaW4tdG9wOiAxZW07XG59XG4iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'mifosx-loan-product-settings-step',\n  templateUrl: './loan-product-settings-step.component.html',\n  styleUrls: ['./loan-product-settings-step.component.scss']\n})\nexport class LoanProductSettingsStepComponent implements OnInit {\n\n  @Input() loanProductsTemplate: any;\n  @Input() isLinkedToFloatingInterestRates: FormControl;\n\n  loanProductSettingsForm: FormGroup;\n\n  amortizationTypeData: any;\n  interestTypeData: any;\n  interestCalculationPeriodTypeData: any;\n  transactionProcessingStrategyData: any;\n  daysInYearTypeData: any;\n  daysInMonthTypeData: any;\n  preClosureInterestCalculationStrategyData: any;\n  rescheduleStrategyTypeData: any;\n  interestRecalculationCompoundingTypeData: any;\n  interestRecalculationFrequencyTypeData: any;\n  interestRecalculationNthDayTypeData: any;\n  interestRecalculationDayOfWeekTypeData: any;\n  interestRecalculationOnDayTypeData: any;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.createLoanProductSettingsForm();\n    this.setConditionalControls();\n  }\n\n  ngOnInit() {\n    this.isLinkedToFloatingInterestRates.valueChanges\n      .subscribe((isLinkedToFloatingInterestRates: any) => {\n        if (isLinkedToFloatingInterestRates) {\n          this.loanProductSettingsForm.get('isInterestRecalculationEnabled').setValue(true);\n        }\n    });\n\n    this.amortizationTypeData = this.loanProductsTemplate.amortizationTypeOptions;\n    this.interestTypeData = this.loanProductsTemplate.interestTypeOptions;\n    this.interestCalculationPeriodTypeData = this.loanProductsTemplate.interestCalculationPeriodTypeOptions;\n    this.transactionProcessingStrategyData = this.loanProductsTemplate.transactionProcessingStrategyOptions;\n    this.daysInYearTypeData = this.loanProductsTemplate.daysInYearTypeOptions;\n    this.daysInMonthTypeData = this.loanProductsTemplate.daysInMonthTypeOptions;\n    this.preClosureInterestCalculationStrategyData = this.loanProductsTemplate.preClosureInterestCalculationStrategyOptions;\n    this.rescheduleStrategyTypeData = this.loanProductsTemplate.rescheduleStrategyTypeOptions;\n    this.interestRecalculationCompoundingTypeData = this.loanProductsTemplate.interestRecalculationCompoundingTypeOptions;\n    this.interestRecalculationFrequencyTypeData = this.loanProductsTemplate.interestRecalculationFrequencyTypeOptions;\n    this.interestRecalculationNthDayTypeData = this.loanProductsTemplate.interestRecalculationNthDayTypeOptions;\n    this.interestRecalculationNthDayTypeData.push({ 'id': -2, 'code': 'onDay', 'value': 'on day' });\n    this.interestRecalculationDayOfWeekTypeData = this.loanProductsTemplate.interestRecalculationDayOfWeekTypeOptions;\n    this.interestRecalculationOnDayTypeData = Array.from({ length: 28 }, (_, index) => index + 1);\n\n    this.loanProductSettingsForm.patchValue({\n      'amortizationType': this.loanProductsTemplate.amortizationType.id,\n      'interestType': this.loanProductsTemplate.interestType.id,\n      'isEqualAmortization': this.loanProductsTemplate.isEqualAmortization,\n      'interestCalculationPeriodType': this.loanProductsTemplate.interestCalculationPeriodType.id,\n      'allowPartialPeriodInterestCalcualtion': this.loanProductsTemplate.allowPartialPeriodInterestCalcualtion,\n      'transactionProcessingStrategyId': this.loanProductsTemplate.transactionProcessingStrategyId || this.transactionProcessingStrategyData[0].id,\n      'graceOnPrincipalPayment': this.loanProductsTemplate.graceOnPrincipalPayment,\n      'graceOnInterestPayment': this.loanProductsTemplate.graceOnInterestPayment,\n      'graceOnInterestCharged': this.loanProductsTemplate.graceOnInterestCharged,\n      'inArrearsTolerance': this.loanProductsTemplate.inArrearsTolerance,\n      'daysInYearType': this.loanProductsTemplate.daysInYearType.id,\n      'daysInMonthType': this.loanProductsTemplate.daysInMonthType.id,\n      'canDefineInstallmentAmount': this.loanProductsTemplate.canDefineInstallmentAmount,\n      'graceOnArrearsAgeing': this.loanProductsTemplate.graceOnArrearsAgeing,\n      'overdueDaysForNPA': this.loanProductsTemplate.overdueDaysForNPA,\n      'accountMovesOutOfNPAOnlyOnArrearsCompletion': this.loanProductsTemplate.accountMovesOutOfNPAOnlyOnArrearsCompletion,\n      'principalThresholdForLastInstallment': this.loanProductsTemplate.principalThresholdForLastInstallment,\n      'allowVariableInstallments': this.loanProductsTemplate.allowVariableInstallments,\n      'minimumGap': this.loanProductsTemplate.minimumGap,\n      'maximumGap': this.loanProductsTemplate.maximumGap,\n      'canUseForTopup': this.loanProductsTemplate.canUseForTopup,\n      'isInterestRecalculationEnabled': this.loanProductsTemplate.isInterestRecalculationEnabled,\n      'holdGuaranteeFunds': this.loanProductsTemplate.holdGuaranteeFunds,\n      'multiDisburseLoan': this.loanProductsTemplate.multiDisburseLoan,\n      'maxTrancheCount': this.loanProductsTemplate.maxTrancheCount,\n      'outstandingLoanBalance': this.loanProductsTemplate.outstandingLoanBalance\n    });\n\n    if (this.loanProductsTemplate.isInterestRecalculationEnabled) {\n      this.loanProductSettingsForm.patchValue({\n        'preClosureInterestCalculationStrategy': this.loanProductsTemplate.interestRecalculationData.preClosureInterestCalculationStrategy.id,\n        'rescheduleStrategyMethod': this.loanProductsTemplate.interestRecalculationData.rescheduleStrategyType.id,\n        'interestRecalculationCompoundingMethod': this.loanProductsTemplate.interestRecalculationData.interestRecalculationCompoundingType.id,\n        'recalculationRestFrequencyType': this.loanProductsTemplate.interestRecalculationData.recalculationRestFrequencyType.id,\n        'isArrearsBasedOnOriginalSchedule': this.loanProductsTemplate.interestRecalculationData.isArrearsBasedOnOriginalSchedule,\n        'recalculationCompoundingFrequencyType': this.loanProductsTemplate.interestRecalculationData.interestRecalculationCompoundingType.id && this.loanProductsTemplate.interestRecalculationData.recalculationCompoundingFrequencyType.id,\n        'recalculationCompoundingFrequencyInterval': this.loanProductsTemplate.interestRecalculationData.recalculationCompoundingFrequencyInterval,\n        'recalculationRestFrequencyInterval': this.loanProductsTemplate.interestRecalculationData.recalculationRestFrequencyInterval,\n        'recalculationRestFrequencyNthDayType': this.loanProductsTemplate.interestRecalculationData.recalculationRestFrequencyType.id === 4 && this.loanProductsTemplate.interestRecalculationData.recalculationRestFrequencyOnDay ?\n          -2 : this.loanProductsTemplate.interestRecalculationData.recalculationRestFrequencyNthDay && this.loanProductsTemplate.interestRecalculationData.recalculationRestFrequencyNthDay.id,\n        'recalculationCompoundingFrequencyNthDayType': this.loanProductsTemplate.interestRecalculationData.interestRecalculationCompoundingType.id && this.loanProductsTemplate.interestRecalculationData.recalculationCompoundingFrequencyType.id === 4\n          && this.loanProductsTemplate.interestRecalculationData.recalculationCompoundingFrequencyOnDay ? -2 : this.loanProductsTemplate.interestRecalculationData.recalculationCompoundingFrequencyNthDay\n          && this.loanProductsTemplate.interestRecalculationData.recalculationCompoundingFrequencyNthDay.id,\n        'recalculationCompoundingFrequencyDayOfWeekType': this.loanProductsTemplate.interestRecalculationData.interestRecalculationCompoundingType.id && ((this.loanProductsTemplate.interestRecalculationData.recalculationCompoundingFrequencyType.id\n          === 4 && !this.loanProductsTemplate.interestRecalculationData.recalculationCompoundingFrequencyOnDay) || this.loanProductsTemplate.interestRecalculationData.recalculationCompoundingFrequencyType.id === 3)\n          && this.loanProductsTemplate.interestRecalculationData.recalculationCompoundingFrequencyWeekday && this.loanProductsTemplate.interestRecalculationData.recalculationCompoundingFrequencyWeekday.id,\n        'recalculationRestFrequencyDayOfWeekType': ((this.loanProductsTemplate.interestRecalculationData.recalculationRestFrequencyType.id === 4 && !this.loanProductsTemplate.interestRecalculationData.recalculationRestFrequencyOnDay)\n          || this.loanProductsTemplate.interestRecalculationData.recalculationRestFrequencyType.id === 3) && this.loanProductsTemplate.interestRecalculationData.recalculationRestFrequencyWeekday\n          && this.loanProductsTemplate.interestRecalculationData.recalculationRestFrequencyWeekday.id,\n        'recalculationCompoundingFrequencyOnDayType': this.loanProductsTemplate.interestRecalculationData.recalculationCompoundingFrequencyOnDay,\n        'recalculationRestFrequencyOnDayType': this.loanProductsTemplate.interestRecalculationData.recalculationRestFrequencyOnDay\n      });\n    }\n\n    if (this.loanProductsTemplate.holdGuaranteeFunds) {\n      this.loanProductSettingsForm.patchValue({\n        'mandatoryGuarantee': this.loanProductsTemplate.productGuaranteeData.mandatoryGuarantee,\n        'minimumGuaranteeFromOwnFunds': this.loanProductsTemplate.productGuaranteeData.minimumGuaranteeFromOwnFunds,\n        'minimumGuaranteeFromGuarantor': this.loanProductsTemplate.productGuaranteeData.minimumGuaranteeFromGuarantor\n      });\n    }\n\n    if (this.loanProductsTemplate.allowAttributeOverrides) {\n      this.loanProductSettingsForm.patchValue({\n        'allowAttributeConfiguration': Object.values(this.loanProductsTemplate.allowAttributeOverrides).some((attribute: boolean) => attribute),\n        'allowAttributeOverrides': {\n          'amortizationType': this.loanProductsTemplate.allowAttributeOverrides.amortizationType,\n          'interestType': this.loanProductsTemplate.allowAttributeOverrides.interestType,\n          'transactionProcessingStrategyId': this.loanProductsTemplate.allowAttributeOverrides.transactionProcessingStrategyId,\n          'interestCalculationPeriodType': this.loanProductsTemplate.allowAttributeOverrides.interestCalculationPeriodType,\n          'inArrearsTolerance': this.loanProductsTemplate.allowAttributeOverrides.inArrearsTolerance,\n          'repaymentEvery': this.loanProductsTemplate.allowAttributeOverrides.repaymentEvery,\n          'graceOnPrincipalAndInterestPayment': this.loanProductsTemplate.allowAttributeOverrides.graceOnPrincipalAndInterestPayment,\n          'graceOnArrearsAgeing': this.loanProductsTemplate.allowAttributeOverrides.graceOnArrearsAgeing\n        }\n      });\n    }\n  }\n\n  createLoanProductSettingsForm() {\n    this.loanProductSettingsForm = this.formBuilder.group({\n      'amortizationType': ['', Validators.required],\n      'interestType': ['', Validators.required],\n      'isEqualAmortization': [false],\n      'interestCalculationPeriodType': ['', Validators.required],\n      'transactionProcessingStrategyId': ['', Validators.required],\n      'graceOnPrincipalPayment': [''],\n      'graceOnInterestPayment': [''],\n      'graceOnInterestCharged': [''],\n      'inArrearsTolerance': [''],\n      'daysInYearType': ['', Validators.required],\n      'daysInMonthType': ['', Validators.required],\n      'canDefineInstallmentAmount': [false],\n      'graceOnArrearsAgeing': [''],\n      'overdueDaysForNPA': [''],\n      'accountMovesOutOfNPAOnlyOnArrearsCompletion': [false],\n      'principalThresholdForLastInstallment': [''],\n      'allowVariableInstallments': [false],\n      'canUseForTopup': [false],\n      'isInterestRecalculationEnabled': [false],\n      'holdGuaranteeFunds': [false],\n      'multiDisburseLoan': [false],\n      'allowAttributeConfiguration': [true],\n      'allowAttributeOverrides': this.formBuilder.group({\n        'amortizationType': [true],\n        'interestType': [true],\n        'transactionProcessingStrategyId': [true],\n        'interestCalculationPeriodType': [true],\n        'inArrearsTolerance': [true],\n        'repaymentEvery': [true],\n        'graceOnPrincipalAndInterestPayment': [true],\n        'graceOnArrearsAgeing': [true]\n      })\n    });\n  }\n\n  setConditionalControls() {\n    const allowAttributeOverrides = this.loanProductSettingsForm.get('allowAttributeOverrides');\n\n    this.loanProductSettingsForm.get('interestCalculationPeriodType').valueChanges\n      .subscribe((interestCalculationPeriodType: any) => {\n        if (interestCalculationPeriodType === 1) {\n          this.loanProductSettingsForm.addControl('allowPartialPeriodInterestCalcualtion', new FormControl(false));\n        } else {\n          this.loanProductSettingsForm.removeControl('allowPartialPeriodInterestCalcualtion');\n        }\n      });\n\n    this.loanProductSettingsForm.get('allowVariableInstallments').valueChanges\n      .subscribe((allowVariableInstallments: any) => {\n        if (allowVariableInstallments) {\n          this.loanProductSettingsForm.addControl('minimumGap', new FormControl('', Validators.required));\n          this.loanProductSettingsForm.addControl('maximumGap', new FormControl(''));\n        } else {\n          this.loanProductSettingsForm.removeControl('minimumGap');\n          this.loanProductSettingsForm.removeControl('maximumGap');\n        }\n      });\n\n    this.loanProductSettingsForm.get('isInterestRecalculationEnabled').valueChanges\n      .subscribe((isInterestRecalculationEnabled: any) => {\n        if (isInterestRecalculationEnabled) {\n          this.loanProductSettingsForm.addControl('preClosureInterestCalculationStrategy', new FormControl(this.preClosureInterestCalculationStrategyData[0].id, Validators.required));\n          this.loanProductSettingsForm.addControl('rescheduleStrategyMethod', new FormControl(this.rescheduleStrategyTypeData[0].id, Validators.required));\n          this.loanProductSettingsForm.addControl('interestRecalculationCompoundingMethod', new FormControl(this.interestRecalculationCompoundingTypeData[0].id, Validators.required));\n          this.loanProductSettingsForm.addControl('recalculationRestFrequencyType', new FormControl(this.interestRecalculationFrequencyTypeData[0].id, Validators.required));\n          this.loanProductSettingsForm.addControl('isArrearsBasedOnOriginalSchedule', new FormControl(''));\n\n          this.loanProductSettingsForm.get('interestRecalculationCompoundingMethod').valueChanges\n            .subscribe((interestRecalculationCompoundingMethod: any) => {\n              if (interestRecalculationCompoundingMethod !== 0) {\n                this.loanProductSettingsForm.addControl('recalculationCompoundingFrequencyType', new FormControl(this.interestRecalculationFrequencyTypeData[0].id, Validators.required));\n\n                this.loanProductSettingsForm.get('recalculationCompoundingFrequencyType').valueChanges\n                  .subscribe((recalculationCompoundingFrequencyType: any) => {\n                    if (recalculationCompoundingFrequencyType !== 1) {\n                      this.loanProductSettingsForm.addControl('recalculationCompoundingFrequencyInterval', new FormControl('', Validators.required));\n                    } else {\n                      this.loanProductSettingsForm.removeControl('recalculationCompoundingFrequencyInterval');\n                    }\n\n                    if (recalculationCompoundingFrequencyType === 3) {\n                      this.loanProductSettingsForm.addControl('recalculationCompoundingFrequencyDayOfWeekType', new FormControl(''));\n                      this.loanProductSettingsForm.removeControl('recalculationCompoundingFrequencyNthDayType');\n                      this.loanProductSettingsForm.removeControl('recalculationCompoundingFrequencyOnDayType');\n                    } else if (recalculationCompoundingFrequencyType === 4) {\n                      this.loanProductSettingsForm.addControl('recalculationCompoundingFrequencyNthDayType', new FormControl(''));\n                      this.loanProductSettingsForm.addControl('recalculationCompoundingFrequencyDayOfWeekType', new FormControl(''));\n\n                      this.loanProductSettingsForm.get('recalculationCompoundingFrequencyNthDayType').valueChanges\n                        .subscribe((recalculationCompoundingFrequencyNthDayType: any) => {\n                          if (recalculationCompoundingFrequencyNthDayType === -2) {\n                            this.loanProductSettingsForm.addControl('recalculationCompoundingFrequencyOnDayType', new FormControl(''));\n                            this.loanProductSettingsForm.removeControl('recalculationCompoundingFrequencyDayOfWeekType');\n                          } else {\n                            this.loanProductSettingsForm.addControl('recalculationCompoundingFrequencyDayOfWeekType', new FormControl(''));\n                            this.loanProductSettingsForm.removeControl('recalculationCompoundingFrequencyOnDayType');\n                          }\n                        });\n                    } else {\n                      this.loanProductSettingsForm.removeControl('recalculationCompoundingFrequencyNthDayType');\n                      this.loanProductSettingsForm.removeControl('recalculationCompoundingFrequencyDayOfWeekType');\n                      this.loanProductSettingsForm.removeControl('recalculationCompoundingFrequencyOnDayType');\n                    }\n                  });\n\n              } else {\n                this.loanProductSettingsForm.removeControl('recalculationCompoundingFrequencyType');\n              }\n            });\n\n          this.loanProductSettingsForm.get('recalculationRestFrequencyType').valueChanges\n            .subscribe((recalculationRestFrequencyType: any) => {\n              if (recalculationRestFrequencyType !== 1) {\n                this.loanProductSettingsForm.addControl('recalculationRestFrequencyInterval', new FormControl('', Validators.required));\n              } else {\n                this.loanProductSettingsForm.removeControl('recalculationRestFrequencyInterval');\n              }\n\n              if (recalculationRestFrequencyType === 3) {\n                this.loanProductSettingsForm.addControl('recalculationRestFrequencyDayOfWeekType', new FormControl(''));\n                this.loanProductSettingsForm.removeControl('recalculationRestFrequencyNthDayType');\n                this.loanProductSettingsForm.removeControl('recalculationRestFrequencyOnDayType');\n              } else if (recalculationRestFrequencyType === 4) {\n                this.loanProductSettingsForm.addControl('recalculationRestFrequencyNthDayType', new FormControl(''));\n                this.loanProductSettingsForm.addControl('recalculationRestFrequencyDayOfWeekType', new FormControl(''));\n\n                this.loanProductSettingsForm.get('recalculationRestFrequencyNthDayType').valueChanges\n                  .subscribe((recalculationRestFrequencyNthDayType: any) => {\n                    if (recalculationRestFrequencyNthDayType === -2) {\n                      this.loanProductSettingsForm.addControl('recalculationRestFrequencyOnDayType', new FormControl(''));\n                      this.loanProductSettingsForm.removeControl('recalculationRestFrequencyDayOfWeekType');\n                    } else {\n                      this.loanProductSettingsForm.addControl('recalculationRestFrequencyDayOfWeekType', new FormControl(''));\n                      this.loanProductSettingsForm.removeControl('recalculationRestFrequencyOnDayType');\n                    }\n                  });\n\n              } else {\n                this.loanProductSettingsForm.removeControl('recalculationRestFrequencyNthDayType');\n                this.loanProductSettingsForm.removeControl('recalculationRestFrequencyDayOfWeekType');\n                this.loanProductSettingsForm.removeControl('recalculationRestFrequencyOnDayType');\n              }\n            });\n\n        } else {\n          this.loanProductSettingsForm.removeControl('preClosureInterestCalculationStrategy');\n          this.loanProductSettingsForm.removeControl('rescheduleStrategyMethod');\n          this.loanProductSettingsForm.removeControl('interestRecalculationCompoundingMethod');\n          this.loanProductSettingsForm.removeControl('recalculationRestFrequencyType');\n          this.loanProductSettingsForm.removeControl('isArrearsBasedOnOriginalSchedule');\n        }\n      });\n\n    this.loanProductSettingsForm.get('holdGuaranteeFunds').valueChanges\n      .subscribe(holdGuaranteeFunds => {\n        if (holdGuaranteeFunds) {\n          this.loanProductSettingsForm.addControl('mandatoryGuarantee', new FormControl('', Validators.required));\n          this.loanProductSettingsForm.addControl('minimumGuaranteeFromOwnFunds', new FormControl(''));\n          this.loanProductSettingsForm.addControl('minimumGuaranteeFromGuarantor', new FormControl(''));\n        } else {\n          this.loanProductSettingsForm.removeControl('mandatoryGuarantee');\n          this.loanProductSettingsForm.removeControl('minimumGuaranteeFromOwnFunds');\n          this.loanProductSettingsForm.removeControl('minimumGuaranteeFromGuarantor');\n        }\n      });\n\n    this.loanProductSettingsForm.get('multiDisburseLoan').valueChanges\n      .subscribe(multiDisburseLoan => {\n        if (multiDisburseLoan) {\n          this.loanProductSettingsForm.addControl('maxTrancheCount', new FormControl('', Validators.required));\n          this.loanProductSettingsForm.addControl('outstandingLoanBalance', new FormControl(''));\n        } else {\n          this.loanProductSettingsForm.removeControl('maxTrancheCount');\n          this.loanProductSettingsForm.removeControl('outstandingLoanBalance');\n        }\n      });\n\n    this.loanProductSettingsForm.get('allowAttributeConfiguration').valueChanges\n      .subscribe((allowAttributeConfiguration: any) => {\n        if (allowAttributeConfiguration) {\n          allowAttributeOverrides.patchValue({\n            'amortizationType': true,\n            'interestType': true,\n            'transactionProcessingStrategyId': true,\n            'interestCalculationPeriodType': true,\n            'inArrearsTolerance': true,\n            'repaymentEvery': true,\n            'graceOnPrincipalAndInterestPayment': true,\n            'graceOnArrearsAgeing': true\n          });\n        } else {\n          allowAttributeOverrides.patchValue({\n            'amortizationType': false,\n            'interestType': false,\n            'transactionProcessingStrategyId': false,\n            'interestCalculationPeriodType': false,\n            'inArrearsTolerance': false,\n            'repaymentEvery': false,\n            'graceOnPrincipalAndInterestPayment': false,\n            'graceOnArrearsAgeing': false\n          });\n        }\n      });\n  }\n\n  get loanProductSettings() {\n    return this.loanProductSettingsForm.value;\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"loanProductTermsForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Principal</h4>\\n\\n    <mat-form-field fxFlex=\\\"31%\\\">\\n      <mat-label>Minimum</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"minPrincipal\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"31%\\\">\\n      <mat-label>Default</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"principal\\\" required>\\n      <mat-error>\\n        Default Principal is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"31%\\\">\\n      <mat-label>Maximum</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"maxPrincipal\\\">\\n    </mat-form-field>\\n\\n    <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Number of repayments</h4>\\n\\n    <mat-form-field fxFlex=\\\"31%\\\">\\n      <mat-label>Minimum</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"minNumberOfRepayments\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"31%\\\">\\n      <mat-label>Default</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"numberOfRepayments\\\" required>\\n      <mat-error>\\n        Default number of repayments is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"31%\\\">\\n      <mat-label>Maximum</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"maxNumberOfRepayments\\\">\\n    </mat-form-field>\\n\\n    <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n    <h3 fxFlex=\\\"23%\\\" class=\\\"mat-h3\\\">Interest Rates</h3>\\n\\n    <mat-checkbox fxFlex=\\\"73%\\\" labelPosition=\\\"before\\\" formControlName=\\\"isLinkedToFloatingInterestRates\\\">\\n      Is Linked to floating interest rates?\\n    </mat-checkbox>\\n\\n    <div *ngIf=\\\"!loanProductTermsForm.value.isLinkedToFloatingInterestRates\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Nominal interest rate</h4>\\n\\n      <mat-form-field fxFlex=\\\"23%\\\">\\n        <mat-label>Minimum</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"minInterestRatePerPeriod\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"23%\\\">\\n        <mat-label>Default</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"interestRatePerPeriod\\\" required>\\n        <mat-error>\\n          Default nominal interest rate is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"23%\\\">\\n        <mat-label>Maximum</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"maxInterestRatePerPeriod\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"23%\\\">\\n        <mat-label>Frequency</mat-label>\\n        <mat-select formControlName=\\\"interestRateFrequencyType\\\" required>\\n          <mat-option *ngFor=\\\"let interestRateFrequencyType of interestRateFrequencyTypeData\\\" [value]=\\\"interestRateFrequencyType.id\\\">\\n            {{ interestRateFrequencyType.value }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Nominal interest rate frequency is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n    </div>\\n\\n    <div *ngIf=\\\"loanProductTermsForm.value.isLinkedToFloatingInterestRates\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutAlign.gt-sm=\\\"start center\\\">\\n\\n      <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Floating interest rate</h4>\\n\\n      <mat-form-field fxFlex=\\\"31%\\\">\\n        <mat-label>Floating Rate</mat-label>\\n        <mat-select formControlName=\\\"floatingRatesId\\\" required>\\n          <mat-option *ngFor=\\\"let floatingRate of floatingRateData\\\" [value]=\\\"floatingRate.id\\\">\\n            {{ floatingRate.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Floating rate is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"31%\\\">\\n        <mat-label>Differential Rate</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"interestRateDifferential\\\" required>\\n        <mat-error>\\n          Differential rate is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-checkbox fxFlex=\\\"31%\\\" labelPosition=\\\"before\\\" formControlName=\\\"isFloatingInterestRateCalculationAllowed\\\">\\n        Is Floating calculation allowed?\\n      </mat-checkbox>\\n\\n      <mat-form-field fxFlex=\\\"31%\\\">\\n        <mat-label>Minimum</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"minDifferentialLendingRate\\\" required>\\n        <mat-error>\\n          Minimum interest rate is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"31%\\\">\\n        <mat-label>Default</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"defaultDifferentialLendingRate\\\" required>\\n        <mat-error>\\n          Default interest rate is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"31%\\\">\\n        <mat-label>Maximum</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"maxDifferentialLendingRate\\\" required>\\n        <mat-error>\\n          Maximum interest rate is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n    </div>\\n\\n    <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n    <h3 fxFlex=\\\"23%\\\" class=\\\"mat-h3\\\">Variations</h3>\\n\\n    <mat-checkbox fxFlex=\\\"73%\\\" labelPosition=\\\"before\\\" formControlName=\\\"useBorrowerCycle\\\">\\n      Terms vary based on loan cycle\\n    </mat-checkbox>\\n\\n    <div *ngIf=\\\"loanProductTermsForm.value.useBorrowerCycle\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <h4 fxFlex=\\\"23%\\\" class=\\\"mat-h4\\\">Principal by loan cycle</h4>\\n\\n      <div fxFlex=\\\"73%\\\">\\n        <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"addVariationsForBorrowerCycle('Principal', principalVariationsForBorrowerCycle)\\\">\\n          <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n          Add\\n        </button>\\n      </div>\\n\\n      <table fxFlex=\\\"98%\\\" class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"principalVariationsForBorrowerCycle.value\\\" *ngIf=\\\"principalVariationsForBorrowerCycle.value.length\\\">\\n\\n        <ng-container matColumnDef=\\\"valueConditionType\\\">\\n          <th mat-header-cell *matHeaderCellDef> Condition </th>\\n          <td mat-cell *matCellDef=\\\"let variation\\\">\\n            {{ variation.valueConditionType | find:valueConditionTypeData:'id':'value' }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"borrowerCycleNumber\\\">\\n          <th mat-header-cell *matHeaderCellDef> Loan Cycle </th>\\n          <td mat-cell *matCellDef=\\\"let variation\\\">\\n            {{ variation.borrowerCycleNumber }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"minValue\\\">\\n          <th mat-header-cell *matHeaderCellDef> Minimum </th>\\n          <td mat-cell *matCellDef=\\\"let variation\\\">\\n            {{ variation.minValue  }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"defaultValue\\\">\\n          <th mat-header-cell *matHeaderCellDef> Default </th>\\n          <td mat-cell *matCellDef=\\\"let variation\\\">\\n            {{ variation.defaultValue }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"maxValue\\\">\\n          <th mat-header-cell *matHeaderCellDef> Maximum </th>\\n          <td mat-cell *matCellDef=\\\"let variation\\\">\\n            {{ variation.maxValue }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"actions\\\">\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\n          <td mat-cell *matCellDef=\\\"let variation; let i = index\\\">\\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"editVariationsForBorrowerCycle('Principal', principalVariationsForBorrowerCycle, i)\\\">\\n              <fa-icon icon=\\\"edit\\\"></fa-icon>\\n            </button>\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteVariationsForBorrowerCycle(principalVariationsForBorrowerCycle, i)\\\">\\n              <fa-icon icon=\\\"trash\\\"></fa-icon>\\n            </button>\\n          </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n      </table>\\n\\n      <h4 fxFlex=\\\"23%\\\" class=\\\"mat-h4\\\">Number of repayments by loan cycle</h4>\\n\\n      <div fxFlex=\\\"73%\\\">\\n        <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"addVariationsForBorrowerCycle('NumberOfRepayments', numberOfRepaymentVariationsForBorrowerCycle)\\\">\\n          <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n          Add\\n        </button>\\n      </div>\\n\\n      <table fxFlex=\\\"98%\\\" class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"numberOfRepaymentVariationsForBorrowerCycle.value\\\" *ngIf=\\\"numberOfRepaymentVariationsForBorrowerCycle.value.length\\\">\\n\\n        <ng-container matColumnDef=\\\"valueConditionType\\\">\\n          <th mat-header-cell *matHeaderCellDef> Condition </th>\\n          <td mat-cell *matCellDef=\\\"let variation\\\">\\n            {{ variation.valueConditionType | find:valueConditionTypeData:'id':'value' }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"borrowerCycleNumber\\\">\\n          <th mat-header-cell *matHeaderCellDef> Loan Cycle </th>\\n          <td mat-cell *matCellDef=\\\"let variation\\\">\\n            {{ variation.borrowerCycleNumber }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"minValue\\\">\\n          <th mat-header-cell *matHeaderCellDef> Minimum </th>\\n          <td mat-cell *matCellDef=\\\"let variation\\\">\\n            {{ variation.minValue }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"defaultValue\\\">\\n          <th mat-header-cell *matHeaderCellDef> Default </th>\\n          <td mat-cell *matCellDef=\\\"let variation\\\">\\n            {{ variation.defaultValue }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"maxValue\\\">\\n          <th mat-header-cell *matHeaderCellDef> Maximum </th>\\n          <td mat-cell *matCellDef=\\\"let variation\\\">\\n            {{ variation.maxValue }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"actions\\\">\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\n          <td mat-cell *matCellDef=\\\"let variation; let i = index\\\">\\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"editVariationsForBorrowerCycle('NumberOfRepayments', numberOfRepaymentVariationsForBorrowerCycle, i)\\\">\\n              <fa-icon icon=\\\"edit\\\"></fa-icon>\\n            </button>\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteVariationsForBorrowerCycle(numberOfRepaymentVariationsForBorrowerCycle, i)\\\">\\n              <fa-icon icon=\\\"trash\\\"></fa-icon>\\n            </button>\\n          </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n      </table>\\n\\n      <h4 fxFlex=\\\"23%\\\" class=\\\"mat-h4\\\">Nominal interest rate by loan cycle</h4>\\n\\n      <div fxFlex=\\\"73%\\\">\\n        <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"addVariationsForBorrowerCycle('NominalInterestRate', interestRateVariationsForBorrowerCycle)\\\">\\n          <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n          Add\\n        </button>\\n      </div>\\n\\n      <table fxFlex=\\\"98%\\\" class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"interestRateVariationsForBorrowerCycle.value\\\" *ngIf=\\\"interestRateVariationsForBorrowerCycle.value.length\\\">\\n\\n        <ng-container matColumnDef=\\\"valueConditionType\\\">\\n          <th mat-header-cell *matHeaderCellDef> Condition </th>\\n          <td mat-cell *matCellDef=\\\"let variation\\\">\\n            {{ variation.valueConditionType | find:valueConditionTypeData:'id':'value' }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"borrowerCycleNumber\\\">\\n          <th mat-header-cell *matHeaderCellDef> Loan Cycle </th>\\n          <td mat-cell *matCellDef=\\\"let variation\\\">\\n            {{ variation.borrowerCycleNumber }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"minValue\\\">\\n          <th mat-header-cell *matHeaderCellDef> Minimum </th>\\n          <td mat-cell *matCellDef=\\\"let variation\\\">\\n            {{ variation.minValue }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"defaultValue\\\">\\n          <th mat-header-cell *matHeaderCellDef> Default </th>\\n          <td mat-cell *matCellDef=\\\"let variation\\\">\\n            {{ variation.defaultValue }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"maxValue\\\">\\n          <th mat-header-cell *matHeaderCellDef> Maximum </th>\\n          <td mat-cell *matCellDef=\\\"let variation\\\">\\n            {{ variation.maxValue }}\\n          </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"actions\\\">\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\">\\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"editVariationsForBorrowerCycle('NominalInterestRate', interestRateVariationsForBorrowerCycle, i)\\\">\\n              <fa-icon icon=\\\"edit\\\"></fa-icon>\\n            </button>\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteVariationsForBorrowerCycle(interestRateVariationsForBorrowerCycle, i)\\\">\\n              <fa-icon icon=\\\"trash\\\"></fa-icon>\\n            </button>\\n          </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n      </table>\\n\\n    </div>\\n\\n    <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n    <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Repaid every</h4>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Frequency</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"repaymentEvery\\\" required>\\n      <mat-error>\\n        Repaid every frequency is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Type</mat-label>\\n      <mat-select formControlName=\\\"repaymentFrequencyType\\\" required>\\n        <mat-option *ngFor=\\\"let repaymentFrequencyType of repaymentFrequencyTypeData\\\" [value]=\\\"repaymentFrequencyType.id\\\">\\n          {{ repaymentFrequencyType.value }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Repaid every type is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Minimum days between disbursal and first repayment date</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"minimumDaysBetweenDisbursalAndFirstRepayment\\\">\\n    </mat-form-field>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext>\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-elevation-z1 {\\n  margin: 1em 0 1.5em 0; }\\n\\nh3, h4 {\\n  font-weight: 500; }\\n\\nh4 {\\n  margin: 1em 0; }\\n\\nmat-divider {\\n  margin: 1em 0 2em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2xvYW4tcHJvZHVjdHMvbG9hbi1wcm9kdWN0LXN0ZXBwZXIvbG9hbi1wcm9kdWN0LXRlcm1zLXN0ZXAvbG9hbi1wcm9kdWN0LXRlcm1zLXN0ZXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxxQkFBcUIsRUFBQTs7QUFHdkI7RUFDRSxnQkFBZ0IsRUFBQTs7QUFHbEI7RUFDRSxhQUFhLEVBQUE7O0FBR2Y7RUFDRSxtQkFBbUIsRUFBQTs7QUFHckI7RUFDRSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0cy9sb2FuLXByb2R1Y3RzL2xvYW4tcHJvZHVjdC1zdGVwcGVyL2xvYW4tcHJvZHVjdC10ZXJtcy1zdGVwL2xvYW4tcHJvZHVjdC10ZXJtcy1zdGVwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLm1hdC1lbGV2YXRpb24tejEge1xuICBtYXJnaW46IDFlbSAwIDEuNWVtIDA7XG59XG5cbmgzLCBoNCB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbmg0IHtcbiAgbWFyZ2luOiAxZW0gMDtcbn1cblxubWF0LWRpdmlkZXIge1xuICBtYXJnaW46IDFlbSAwIDJlbSAwO1xufVxuXG4ubWFyZ2luLXQge1xuICBtYXJnaW4tdG9wOiAxZW07XG59XG4iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray, FormControl } from '@angular/forms';\nimport { MatDialog } from '@angular/material';\n\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\n\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\nimport { SelectBase } from 'app/shared/form-dialog/formfield/model/select-base';\n\n@Component({\n  selector: 'mifosx-loan-product-terms-step',\n  templateUrl: './loan-product-terms-step.component.html',\n  styleUrls: ['./loan-product-terms-step.component.scss']\n})\nexport class LoanProductTermsStepComponent implements OnInit {\n\n  @Input() loanProductsTemplate: any;\n\n  loanProductTermsForm: FormGroup;\n\n  valueConditionTypeData: any;\n  floatingRateData: any;\n  interestRateFrequencyTypeData: any;\n  repaymentFrequencyTypeData: any;\n\n  displayedColumns: string[] = ['valueConditionType', 'borrowerCycleNumber', 'minValue', 'defaultValue', 'maxValue', 'actions'];\n\n  constructor(private formBuilder: FormBuilder,\n              public dialog: MatDialog) {\n    this.createLoanProductTermsForm();\n    this.setConditionalControls();\n  }\n\n  ngOnInit() {\n    this.valueConditionTypeData = this.loanProductsTemplate.valueConditionTypeOptions;\n    this.floatingRateData = this.loanProductsTemplate.floatingRateOptions;\n    this.interestRateFrequencyTypeData = this.loanProductsTemplate.interestRateFrequencyTypeOptions;\n    this.repaymentFrequencyTypeData = this.loanProductsTemplate.repaymentFrequencyTypeOptions;\n\n    this.loanProductTermsForm.patchValue({\n      'minPrincipal': this.loanProductsTemplate.minPrincipal,\n      'principal': this.loanProductsTemplate.principal,\n      'maxPrincipal': this.loanProductsTemplate.maxPrincipal,\n      'minNumberOfRepayments': this.loanProductsTemplate.minNumberOfRepayments,\n      'numberOfRepayments': this.loanProductsTemplate.numberOfRepayments,\n      'maxNumberOfRepayments': this.loanProductsTemplate.maxNumberOfRepayments,\n      'isLinkedToFloatingInterestRates': this.loanProductsTemplate.isLinkedToFloatingInterestRates,\n      'minInterestRatePerPeriod': this.loanProductsTemplate.minInterestRatePerPeriod,\n      'interestRatePerPeriod': this.loanProductsTemplate.interestRatePerPeriod,\n      'maxInterestRatePerPeriod': this.loanProductsTemplate.maxInterestRatePerPeriod,\n      'interestRateFrequencyType': this.loanProductsTemplate.interestRateFrequencyType.id,\n      'floatingRatesId': this.loanProductsTemplate.floatingRateId,\n      'interestRateDifferential': this.loanProductsTemplate.interestRateDifferential,\n      'isFloatingInterestRateCalculationAllowed': this.loanProductsTemplate.isFloatingInterestRateCalculationAllowed,\n      'minDifferentialLendingRate': this.loanProductsTemplate.minDifferentialLendingRate,\n      'defaultDifferentialLendingRate': this.loanProductsTemplate.defaultDifferentialLendingRate,\n      'maxDifferentialLendingRate': this.loanProductsTemplate.maxDifferentialLendingRate,\n      'useBorrowerCycle': this.loanProductsTemplate.useBorrowerCycle,\n      'repaymentEvery': this.loanProductsTemplate.repaymentEvery,\n      'repaymentFrequencyType': this.loanProductsTemplate.repaymentFrequencyType.id,\n      'minimumDaysBetweenDisbursalAndFirstRepayment': this.loanProductsTemplate.minimumDaysBetweenDisbursalAndFirstRepayment\n    });\n\n    this.loanProductTermsForm.setControl('principalVariationsForBorrowerCycle',\n      this.formBuilder.array(this.loanProductsTemplate.principalVariationsForBorrowerCycle.map((variation: any) => ({ ...variation, valueConditionType: variation.valueConditionType.id }))));\n    this.loanProductTermsForm.setControl('numberOfRepaymentVariationsForBorrowerCycle',\n      this.formBuilder.array(this.loanProductsTemplate.numberOfRepaymentVariationsForBorrowerCycle.map((variation: any) => ({ ...variation, valueConditionType: variation.valueConditionType.id }))));\n    this.loanProductTermsForm.setControl('interestRateVariationsForBorrowerCycle',\n      this.formBuilder.array(this.loanProductsTemplate.interestRateVariationsForBorrowerCycle.map((variation: any) => ({ ...variation, valueConditionType: variation.valueConditionType.id }))));\n  }\n\n  createLoanProductTermsForm() {\n    this.loanProductTermsForm = this.formBuilder.group({\n      'useBorrowerCycle': [false],\n      'minPrincipal': [''],\n      'principal': ['', Validators.required],\n      'maxPrincipal': [''],\n      'minNumberOfRepayments': [''],\n      'numberOfRepayments': ['', Validators.required],\n      'maxNumberOfRepayments': [''],\n      'isLinkedToFloatingInterestRates': [false],\n      'minInterestRatePerPeriod': [''],\n      'interestRatePerPeriod': ['', Validators.required],\n      'maxInterestRatePerPeriod': [''],\n      'interestRateFrequencyType': ['', Validators.required],\n      'repaymentEvery': ['', Validators.required],\n      'repaymentFrequencyType': ['', Validators.required],\n      'minimumDaysBetweenDisbursalAndFirstRepayment': ['']\n    });\n  }\n\n  setConditionalControls() {\n    this.loanProductTermsForm.get('isLinkedToFloatingInterestRates').valueChanges\n      .subscribe(isLinkedToFloatingInterestRates => {\n        if (isLinkedToFloatingInterestRates) {\n          this.loanProductTermsForm.removeControl('minInterestRatePerPeriod');\n          this.loanProductTermsForm.removeControl('interestRatePerPeriod');\n          this.loanProductTermsForm.removeControl('maxInterestRatePerPeriod');\n          this.loanProductTermsForm.removeControl('interestRateFrequencyType');\n          this.loanProductTermsForm.addControl('floatingRatesId', new FormControl('', Validators.required));\n          this.loanProductTermsForm.addControl('interestRateDifferential', new FormControl('', Validators.required));\n          this.loanProductTermsForm.addControl('isFloatingInterestRateCalculationAllowed', new FormControl(false));\n          this.loanProductTermsForm.addControl('minDifferentialLendingRate', new FormControl('', Validators.required));\n          this.loanProductTermsForm.addControl('defaultDifferentialLendingRate', new FormControl('', Validators.required));\n          this.loanProductTermsForm.addControl('maxDifferentialLendingRate', new FormControl('', Validators.required));\n        } else {\n          this.loanProductTermsForm.addControl('minInterestRatePerPeriod', new FormControl(''));\n          this.loanProductTermsForm.addControl('interestRatePerPeriod', new FormControl('', Validators.required));\n          this.loanProductTermsForm.addControl('maxInterestRatePerPeriod', new FormControl(''));\n          this.loanProductTermsForm.addControl('interestRateFrequencyType', new FormControl(this.interestRateFrequencyTypeData.id, Validators.required));\n          this.loanProductTermsForm.removeControl('floatingRatesId');\n          this.loanProductTermsForm.removeControl('interestRateDifferential');\n          this.loanProductTermsForm.removeControl('isFloatingInterestRateCalculationAllowed');\n          this.loanProductTermsForm.removeControl('minDifferentialLendingRate');\n          this.loanProductTermsForm.removeControl('defaultDifferentialLendingRate');\n          this.loanProductTermsForm.removeControl('maxDifferentialLendingRate');\n        }\n      });\n\n      this.loanProductTermsForm.get('useBorrowerCycle').valueChanges\n        .subscribe(useBorrowerCycle => {\n          if (useBorrowerCycle) {\n            this.loanProductTermsForm.addControl('principalVariationsForBorrowerCycle', this.formBuilder.array([]));\n            this.loanProductTermsForm.addControl('numberOfRepaymentVariationsForBorrowerCycle', this.formBuilder.array([]));\n            this.loanProductTermsForm.addControl('interestRateVariationsForBorrowerCycle', this.formBuilder.array([]));\n          } else {\n            this.loanProductTermsForm.removeControl('principalVariationsForBorrowerCycle');\n            this.loanProductTermsForm.removeControl('numberOfRepaymentVariationsForBorrowerCycle');\n            this.loanProductTermsForm.removeControl('interestRateVariationsForBorrowerCycle');\n          }\n        });\n  }\n\n  get principalVariationsForBorrowerCycle(): FormArray {\n    return this.loanProductTermsForm.get('principalVariationsForBorrowerCycle') as FormArray;\n  }\n\n  get numberOfRepaymentVariationsForBorrowerCycle(): FormArray {\n    return this.loanProductTermsForm.get('numberOfRepaymentVariationsForBorrowerCycle') as FormArray;\n  }\n\n  get interestRateVariationsForBorrowerCycle(): FormArray {\n    return this.loanProductTermsForm.get('interestRateVariationsForBorrowerCycle') as FormArray;\n  }\n\n  setLoanProductTermsFormDirty() {\n    if (this.loanProductTermsForm.pristine) {\n      this.loanProductTermsForm.markAsDirty();\n    }\n  }\n\n  addVariationsForBorrowerCycle(formType: string, variationsForBorrowerCycleFormArray: FormArray) {\n    const data = this.getData(formType);\n    const addVariationsForBorrowerCycleDialogRef = this.dialog.open(FormDialogComponent, { data });\n    addVariationsForBorrowerCycleDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        variationsForBorrowerCycleFormArray.push(response.data);\n        this.setLoanProductTermsFormDirty();\n      }\n    });\n  }\n\n  editVariationsForBorrowerCycle(formType: string, variationsForBorrowerCycleFormArray: FormArray, index: number) {\n    const data = { ...this.getData(formType, variationsForBorrowerCycleFormArray.at(index).value), layout: { addButtonText: 'Edit' } };\n    const addVariationsForBorrowerCycleDialogRef = this.dialog.open(FormDialogComponent, { data });\n    addVariationsForBorrowerCycleDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        variationsForBorrowerCycleFormArray.at(index).patchValue(response.data.value);\n        this.setLoanProductTermsFormDirty();\n      }\n    });\n  }\n\n  deleteVariationsForBorrowerCycle(variationsForBorrowerCycleFormArray: FormArray, index: number) {\n    const deleteVariationsForBorrowerCycleDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `this` }\n    });\n    deleteVariationsForBorrowerCycleDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        variationsForBorrowerCycleFormArray.removeAt(index);\n        this.setLoanProductTermsFormDirty();\n      }\n    });\n  }\n\n  getData(formType: string, values?: any) {\n    switch (formType) {\n      case 'Principal': return { title: 'Principal by loan cycle', formfields: this.getFormfields(values) };\n      case 'NumberOfRepayments': return { title: 'Number of repayments by loan cycle', formfields: this.getFormfields(values) };\n      case 'NominalInterestRate': return { title: 'Nominal interest rate by loan cycle', formfields: this.getFormfields(values) };\n    }\n  }\n\n  getFormfields(values?: any) {\n    const formfields: FormfieldBase[] = [\n      new SelectBase({\n        controlName: 'valueConditionType',\n        label: 'Condition',\n        value: values ? values.valueConditionType : this.valueConditionTypeData[0].id,\n        options: { label: 'value', value: 'id', data: this.valueConditionTypeData },\n        required: true,\n        order: 1\n      }),\n      new InputBase({\n        controlName: 'borrowerCycleNumber',\n        label: 'Loan Cycle',\n        value: values ? values.borrowerCycleNumber : undefined,\n        type: 'number',\n        required: true,\n        order: 2\n      }),\n      new InputBase({\n        controlName: 'minValue',\n        label: 'Minimum',\n        value: values ? values.minValue : undefined,\n        type: 'number',\n        order: 3\n      }),\n      new InputBase({\n        controlName: 'defaultValue',\n        label: 'Default',\n        value: values ? values.defaultValue : undefined,\n        type: 'number',\n        required: true,\n        order: 4\n      }),\n      new InputBase({\n        controlName: 'maxValue',\n        label: 'Maximum',\n        value: values ? values.maxValue : undefined,\n        type: 'number',\n        order: 5\n      })\n    ];\n    return formfields;\n  }\n\n  get loanProductTerms() {\n    return this.loanProductTermsForm.value;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../products.service';\n\n/**\n * Loan Product data resolver.\n */\n@Injectable()\nexport class LoanProductResolver implements Resolve<Object> {\n\n  /**\n   * @param {ProductsService} productsService Products service.\n   */\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the loan product data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const id = route.paramMap.get('id');\n    return this.productsService.getLoanProduct(id);\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../products.service';\n\n@Injectable()\nexport class LoanProductsTemplateResolver implements Resolve<Object> {\n\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the loan products template data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.productsService.getLoanProductsTemplate();\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['create']\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Loan Product\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let loanProduct\\\"> {{ loanProduct.name }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"shortName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Short Name </th>\\n        <td mat-cell *matCellDef=\\\"let loanProduct\\\"> {{ loanProduct.shortName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"closeDate\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Expiry Date </th>\\n        <td mat-cell *matCellDef=\\\"let loanProduct\\\"> {{ loanProduct.closeDate | date }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"status\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\n        <td mat-cell *matCellDef=\\\"let loanProduct\\\">\\n          <div [className]=\\\"loanProduct.status | statusLookup\\\">\\n            <fa-icon matTooltip=\\\"{{ loanProduct.status === 'loanProduct.active' ? 'Active' : 'Inactive' }}\\\" matTooltipPosition=\\\"right\\\" icon=\\\"circle\\\" size=\\\"lg\\\"></fa-icon>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id]\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2xvYW4tcHJvZHVjdHMvbG9hbi1wcm9kdWN0cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTtFQURiO0lBSUksZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdHMvbG9hbi1wcm9kdWN0cy9sb2FuLXByb2R1Y3RzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcblxuICAuc2VsZWN0LXJvdzpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'mifosx-loan-products',\n  templateUrl: './loan-products.component.html',\n  styleUrls: ['./loan-products.component.scss']\n})\nexport class LoanProductsComponent implements OnInit {\n\n  loanProductsData: any;\n  displayedColumns: string[] = ['name', 'shortName', 'closeDate', 'status'];\n  dataSource: MatTableDataSource<any>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { loanProducts: any }) => {\n      this.loanProductsData = data.loanProducts;\n    });\n  }\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource(this.loanProductsData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../products.service';\n\n/**\n * Loan products data resolver.\n */\n@Injectable()\nexport class LoanProductsResolver implements Resolve<Object> {\n\n  /**\n   *\n   * @param {ProductsService} productsService Products service.\n   */\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the loan products data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.productsService.getLoanProducts();\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" class=\\\"container m-b-20\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['edit']\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-content>\\n\\n      <div fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <h2 class=\\\"mat-h2\\\" fxFlexFill>{{ loanProduct.name }}</h2>\\n\\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n\\n        <h3 class=\\\"mat-h3\\\" fxFlexFill>Details</h3>\\n\\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Short Name:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.shortName }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.fundId\\\">\\n          <span fxFlex=\\\"40%\\\">Fund Name:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.fundName }}</span>\\n        </div>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Include in Customer Loan Counter:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.includeInBorrowerCycle ? 'Yes' : 'No' }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.startDate\\\">\\n          <span fxFlex=\\\"40%\\\">Start Date:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.startDate | date }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.closeDate\\\">\\n          <span fxFlex=\\\"40%\\\">Close Date:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.closeDate | date }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.description\\\">\\n          <span fxFlex=\\\"40%\\\">Description:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.description }}</span>\\n        </div>\\n\\n        <h3 class=\\\"mat-h3\\\" fxFlexFill>Currency</h3>\\n\\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Currency:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.currency.name }}</span>\\n        </div>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Decimal Places:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.currency.decimalPlaces }}</span>\\n        </div>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Currency in multiples of:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.currency.inMultiplesOf }}</span>\\n        </div>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Installment in multiples of:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.installmentAmountInMultiplesOf }}</span>\\n        </div>\\n\\n        <h3 class=\\\"mat-h3\\\" fxFlexFill>Terms</h3>\\n\\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Principal:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.principal + ' (Min: ' + (loanProduct.minPrincipal ? loanProduct.minPrincipal : loanProduct.principal) + ', Max: ' + (loanProduct.maxPrincipal ? loanProduct.maxPrincipal : loanProduct.principal) + ')' }}</span>\\n        </div>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Number of Repayments:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.numberOfRepayments + ' (Min: ' + (loanProduct.minNumberOfRepayments ? loanProduct.minNumberOfRepayments : loanProduct.numberOfRepayments) + ', Max: ' + (loanProduct.maxNumberOfRepayments ? loanProduct.maxNumberOfRepayments : loanProduct.numberOfRepayments) + ')' }}</span>\\n        </div>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Linked to floating interest rates:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.isLinkedToFloatingInterestRates ? 'Yes' : 'No' }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"!loanProduct.isLinkedToFloatingInterestRates\\\">\\n          <span fxFlex=\\\"40%\\\">Nominal interest rate:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.interestRatePerPeriod + ' (Min: ' + (loanProduct.minInterestRatePerPeriod ? loanProduct.minInterestRatePerPeriod : loanProduct.interestRatePerPeriod) + ', Max: ' + (loanProduct.maxInterestRatePerPeriod ? loanProduct.maxInterestRatePerPeriod : loanProduct.interestRatePerPeriod) + ')' + ' ' + loanProduct.interestRateFrequencyType.value }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.isLinkedToFloatingInterestRates\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n          <span fxFlex=\\\"40%\\\">Floating Lending Interest Rate:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.floatingRateName }}</span>\\n          <span fxFlex=\\\"40%\\\">Interest Rate Differential:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.interestRateDifferential }}</span>\\n          <span fxFlex=\\\"40%\\\">Floating Interest Rate Calculation Allowed:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.isFloatingInterestRateCalculationAllowed ? 'Yes' : 'No' }}</span>\\n          <span fxFlex=\\\"40%\\\">Floating Interest Rate:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.defaultDifferentialLendingRate + ' (Min: ' + (loanProduct.minDifferentialLendingRate ? loanProduct.minDifferentialLendingRate : loanProduct.defaultDifferentialLendingRate) + ', Max: ' + (loanProduct.maxDifferentialLendingRate ? loanProduct.maxDifferentialLendingRate : loanProduct.defaultDifferentialLendingRate) + ')' }}</span>\\n        </div>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Terms vary based on loan cycle:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.useBorrowerCycle ? 'Yes' : 'No' }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.principalVariationsForBorrowerCycle?.length\\\">\\n\\n          <h4 class=\\\"mat-h4\\\" fxFlexFill>Principal by loan cycle</h4>\\n\\n          <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"loanProduct.principalVariationsForBorrowerCycle\\\">\\n\\n            <ng-container matColumnDef=\\\"valueConditionType\\\">\\n              <th mat-header-cell *matHeaderCellDef> Condition </th>\\n              <td mat-cell *matCellDef=\\\"let variation\\\">\\n                {{ variation.valueConditionType.value }}\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"borrowerCycleNumber\\\">\\n              <th mat-header-cell *matHeaderCellDef> Loan Cycle </th>\\n              <td mat-cell *matCellDef=\\\"let variation\\\">\\n                {{ variation.borrowerCycleNumber }}\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"minValue\\\">\\n              <th mat-header-cell *matHeaderCellDef> Minimum </th>\\n              <td mat-cell *matCellDef=\\\"let variation\\\">\\n                {{ variation.minValue  }}\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"defaultValue\\\">\\n              <th mat-header-cell *matHeaderCellDef> Default </th>\\n              <td mat-cell *matCellDef=\\\"let variation\\\">\\n                {{ variation.defaultValue }}\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"maxValue\\\">\\n              <th mat-header-cell *matHeaderCellDef> Maximum </th>\\n              <td mat-cell *matCellDef=\\\"let variation\\\">\\n                {{ variation.maxValue }}\\n              </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"variationsDisplayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: variationsDisplayedColumns;\\\"></tr>\\n\\n          </table>\\n\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.numberOfRepaymentVariationsForBorrowerCycle?.length\\\">\\n\\n          <h4 class=\\\"mat-h4\\\" fxFlexFill>Number of Repayments by loan cycle</h4>\\n\\n          <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"loanProduct.numberOfRepaymentVariationsForBorrowerCycle\\\">\\n\\n            <ng-container matColumnDef=\\\"valueConditionType\\\">\\n              <th mat-header-cell *matHeaderCellDef> Condition </th>\\n              <td mat-cell *matCellDef=\\\"let variation\\\">\\n                {{ variation.valueConditionType.value }}\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"borrowerCycleNumber\\\">\\n              <th mat-header-cell *matHeaderCellDef> Loan Cycle </th>\\n              <td mat-cell *matCellDef=\\\"let variation\\\">\\n                {{ variation.borrowerCycleNumber }}\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"minValue\\\">\\n              <th mat-header-cell *matHeaderCellDef> Minimum </th>\\n              <td mat-cell *matCellDef=\\\"let variation\\\">\\n                {{ variation.minValue  }}\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"defaultValue\\\">\\n              <th mat-header-cell *matHeaderCellDef> Default </th>\\n              <td mat-cell *matCellDef=\\\"let variation\\\">\\n                {{ variation.defaultValue }}\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"maxValue\\\">\\n              <th mat-header-cell *matHeaderCellDef> Maximum </th>\\n              <td mat-cell *matCellDef=\\\"let variation\\\">\\n                {{ variation.maxValue }}\\n              </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"variationsDisplayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: variationsDisplayedColumns;\\\"></tr>\\n\\n          </table>\\n\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.interestRateVariationsForBorrowerCycle?.length\\\">\\n\\n          <h4 class=\\\"mat-h4\\\" fxFlexFill>Nominal Interest Rate by loan cycle</h4>\\n\\n          <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"loanProduct.interestRateVariationsForBorrowerCycle\\\">\\n\\n            <ng-container matColumnDef=\\\"valueConditionType\\\">\\n              <th mat-header-cell *matHeaderCellDef> Condition </th>\\n              <td mat-cell *matCellDef=\\\"let variation\\\">\\n                {{ variation.valueConditionType.value }}\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"borrowerCycleNumber\\\">\\n              <th mat-header-cell *matHeaderCellDef> Loan Cycle </th>\\n              <td mat-cell *matCellDef=\\\"let variation\\\">\\n                {{ variation.borrowerCycleNumber }}\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"minValue\\\">\\n              <th mat-header-cell *matHeaderCellDef> Minimum </th>\\n              <td mat-cell *matCellDef=\\\"let variation\\\">\\n                {{ variation.minValue  }}\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"defaultValue\\\">\\n              <th mat-header-cell *matHeaderCellDef> Default </th>\\n              <td mat-cell *matCellDef=\\\"let variation\\\">\\n                {{ variation.defaultValue }}\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"maxValue\\\">\\n              <th mat-header-cell *matHeaderCellDef> Maximum </th>\\n              <td mat-cell *matCellDef=\\\"let variation\\\">\\n                {{ variation.maxValue }}\\n              </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"variationsDisplayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: variationsDisplayedColumns;\\\"></tr>\\n\\n          </table>\\n\\n        </div>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Repay Every:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.repaymentEvery + ' ' + loanProduct.repaymentFrequencyType.value }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.minimumDaysBetweenDisbursalAndFirstRepayment\\\">\\n          <span fxFlex=\\\"40%\\\">Minimum days between disbursal and first repayment date:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.minimumDaysBetweenDisbursalAndFirstRepayment }}</span>\\n        </div>\\n\\n        <h3 class=\\\"mat-h3\\\" fxFlexFill>Settings</h3>\\n\\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Amortization:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.amortizationType.value }}</span>\\n        </div>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Is Equal Amortization:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.isEqualAmortization ? 'Yes' : 'No' }}</span>\\n        </div>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Interest Method:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.interestType.value }}</span>\\n        </div>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Interest Calculation Period:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.interestCalculationPeriodType.value }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.interestCalculationPeriodType.id === 1\\\">\\n          <span fxFlex=\\\"40%\\\">Allow Partial Interest Calculation with same as repayment:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.allowPartialPeriodInterestCalcualtion ? 'Yes' : 'No' }}</span>\\n        </div>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Repayment Strategy:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.transactionProcessingStrategyName }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.graceOnPrincipalPayment\\\">\\n          <span fxFlex=\\\"40%\\\">Grace on principal payment:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.graceOnPrincipalPayment }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.graceOnInterestPayment\\\">\\n          <span fxFlex=\\\"40%\\\">Grace on interest payment:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.graceOnInterestPayment }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.graceOnInterestCharged\\\">\\n          <span fxFlex=\\\"40%\\\">Interest free period:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.graceOnInterestCharged }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.inArrearsTolerance\\\">\\n          <span fxFlex=\\\"40%\\\">Arrears tolerance:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.inArrearsTolerance }}</span>\\n        </div>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Days in year:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.daysInYearType.value }}</span>\\n        </div>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Days in month:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.daysInMonthType.value }}</span>\\n        </div>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Allow fixing of the installment amount:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.canDefineInstallmentAmount ? 'Yes' : 'No' }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.graceOnArrearsAgeing\\\">\\n          <span fxFlex=\\\"40%\\\">Number of days a loan may be overdue before moving into arrears:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.graceOnArrearsAgeing }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.overdueDaysForNPA\\\">\\n          <span fxFlex=\\\"40%\\\">Maximum number of days a loan may be overdue before becoming a NPA (non performing asset):</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.overdueDaysForNPA }}</span>\\n        </div>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Account moves out of NPA only after all arrears have been cleared:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.accountMovesOutOfNPAOnlyOnArrearsCompletion ? 'Yes' : 'No' }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.principalThresholdForLastInstallment\\\">\\n          <span fxFlex=\\\"40%\\\">Principal Threshold (%) for Last Instalment:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.principalThresholdForLastInstallment }}</span>\\n        </div>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Variable Installments allowed:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.allowVariableInstallments ? 'Yes' : 'No' }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.allowVariableInstallments\\\">\\n          <span fxFlex=\\\"40%\\\">Variable Installments:</span>\\n          <span fxFlex=\\\"60%\\\">{{ '(Min: ' + loanProduct.minimumGap + ', Max: ' + (loanProduct.maximumGap ? loanProduct.maximumGap : loanProduct.minimumGap) + ')' }}</span>\\n        </div>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Allowed to be used for providing Topup Loans:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.canUseForTopup ? 'Yes' : 'No' }}</span>\\n        </div>\\n\\n        <h3 class=\\\"mat-h3\\\" fxFlexFill>Interest Recalculation</h3>\\n\\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Recalculate Interest:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.isInterestRecalculationEnabled ? 'Yes' : 'No' }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.isInterestRecalculationEnabled\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n          <span fxFlex=\\\"40%\\\">Pre-closure interest calculation rule:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.interestRecalculationData.preClosureInterestCalculationStrategy.value }}</span>\\n          <span fxFlex=\\\"40%\\\">Advance payments adjustment type:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.interestRecalculationData.rescheduleStrategyType.value }}</span>\\n          <span fxFlex=\\\"40%\\\">Interest recalculation compounding on:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.interestRecalculationData.interestRecalculationCompoundingType.value }}</span>\\n          <div fxFlexFill *ngIf=\\\"loanProduct.interestRecalculationData.interestRecalculationCompoundingType.id !== 0\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n            <span fxFlex=\\\"40%\\\">Frequency for compounding:</span>\\n            <span fxFlex=\\\"60%\\\">\\n              {{ loanProduct.interestRecalculationData.recalculationCompoundingFrequencyType.value }}\\n              <span *ngIf=\\\"loanProduct.interestRecalculationData.recalculationCompoundingFrequencyType.id === 4 && loanProduct.interestRecalculationData.recalculationCompoundingFrequencyNthDay\\\">&nbsp;&nbsp;{{ 'on ' + loanProduct.interestRecalculationData.recalculationCompoundingFrequencyNthDay?.value }}</span>\\n              <span *ngIf=\\\"(loanProduct.interestRecalculationData.recalculationCompoundingFrequencyType.id === 4 && !loanProduct.interestRecalculationData.recalculationCompoundingFrequencyOnDay) || loanProduct.interestRecalculationData.recalculationCompoundingFrequencyType.id === 3\\\">&nbsp;&nbsp;{{ loanProduct.interestRecalculationData.recalculationCompoundingFrequencyWeekday?.value }}</span>\\n              <span *ngIf=\\\"loanProduct.interestRecalculationData.recalculationCompoundingFrequencyType.id === 4 && loanProduct.interestRecalculationData.recalculationCompoundingFrequencyOnDay\\\">&nbsp;&nbsp;{{ 'on day  ' + loanProduct.interestRecalculationData.recalculationCompoundingFrequencyOnDay }}</span>\\n            </span>\\n            <div fxFlexFill *ngIf=\\\"loanProduct.interestRecalculationData.recalculationCompoundingFrequencyType.id !== 1\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n              <span fxFlex=\\\"40%\\\">Frequency Interval for compounding:</span>\\n              <span fxFlex=\\\"60%\\\">{{ loanProduct.interestRecalculationData.recalculationCompoundingFrequencyInterval }}</span>\\n              <div fxFlexFill *ngIf=\\\"loanProduct.recalculationCompoundingFrequencyDate\\\">\\n                <span fxFlex=\\\"40%\\\">Compounding Frequency Date:</span>\\n                <span fxFlex=\\\"60%\\\">{{ loanProduct.interestRecalculationData.recalculationCompoundingFrequencyDate }}</span>\\n              </div>\\n            </div>\\n          </div>\\n          <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n            <span fxFlex=\\\"40%\\\">Frequency for recalculate Outstanding Principal:</span>\\n            <span fxFlex=\\\"60%\\\">\\n              {{ loanProduct.interestRecalculationData.recalculationRestFrequencyType.value }}\\n              <span *ngIf=\\\"loanProduct.interestRecalculationData.recalculationRestFrequencyType.id === 4 && loanProduct.interestRecalculationData.recalculationRestFrequencyNthDay\\\">&nbsp;&nbsp;{{ 'on ' + loanProduct.interestRecalculationData.recalculationRestFrequencyNthDay?.value }}</span>\\n              <span *ngIf=\\\"(loanProduct.interestRecalculationData.recalculationRestFrequencyType.id === 4 && !loanProduct.interestRecalculationData.recalculationRestFrequencyOnDay) || loanProduct.interestRecalculationData.recalculationRestFrequencyType.id === 3\\\">&nbsp;&nbsp;{{ loanProduct.interestRecalculationData.recalculationRestFrequencyWeekday?.value }}</span>\\n              <span *ngIf=\\\"loanProduct.interestRecalculationData.recalculationRestFrequencyType.id === 4 && loanProduct.interestRecalculationData.recalculationRestFrequencyOnDay\\\">&nbsp;&nbsp;{{ 'on day  ' + loanProduct.interestRecalculationData.recalculationRestFrequencyOnDay }}</span>\\n            </span>\\n          </div>\\n          <div fxFlexFill *ngIf=\\\"loanProduct.interestRecalculationData.recalculationRestFrequencyType.id !== 1\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n            <span fxFlex=\\\"40%\\\">Frequency Interval for recalculation:</span>\\n            <span fxFlex=\\\"60%\\\">{{ loanProduct.interestRecalculationData.recalculationRestFrequencyInterval }}</span>\\n            <div fxFlexFill *ngIf=\\\"loanProduct.recalculationRestFrequencyDate\\\">\\n              <span fxFlex=\\\"40%\\\">Rest Frequency Date:</span>\\n              <span fxFlex=\\\"60%\\\">{{ loanProduct.interestRecalculationData.recalculationRestFrequencyDate }}</span>\\n            </div>\\n          </div>\\n          <div fxFlexFill>\\n            <span fxFlex=\\\"40%\\\">Is Arrears recognization based on original schedule:</span>\\n            <span fxFlex=\\\"60%\\\">{{ loanProduct.isArrearsBasedOnOriginalSchedule ? 'Yes' : 'No' }}</span>\\n          </div>\\n        </div>\\n\\n        <h3 class=\\\"mat-h3\\\" fxFlexFill>Guarantee Requirements</h3>\\n\\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Place Guarantee Funds On-Hold:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.holdGuaranteeFunds ? 'Yes' : 'No' }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.holdGuaranteeFunds\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n          <span fxFlex=\\\"40%\\\">Mandatory Guarantee(%):</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.productGuaranteeData.mandatoryGuarantee }}</span>\\n          <div fxFlexFill *ngIf=\\\"loanProduct.productGuaranteeData.minimumGuaranteeFromOwnFunds\\\">\\n            <span fxFlex=\\\"40%\\\">Minimum Guarantee from Own Funds(%):</span>\\n            <span fxFlex=\\\"60%\\\">{{ loanProduct.productGuaranteeData.minimumGuaranteeFromOwnFunds }}</span>\\n          </div>\\n          <div fxFlexFill *ngIf=\\\"loanProduct.productGuaranteeData.minimumGuaranteeFromGuarantor\\\">\\n            <span fxFlex=\\\"40%\\\">Minimum Guarantee from Guarantor Funds(%):</span>\\n            <span fxFlex=\\\"60%\\\">{{ loanProduct.productGuaranteeData.minimumGuaranteeFromGuarantor }}</span>\\n          </div>\\n        </div>\\n\\n        <h3 class=\\\"mat-h3\\\" fxFlexFill>Loan Tranche Details</h3>\\n\\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Enable Multiple Disbursals:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.multiDisburseLoan ? 'Yes' : 'No' }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.multiDisburseLoan\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n          <span fxFlex=\\\"40%\\\">Maximum Tranche count:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.maxTrancheCount }}</span>\\n          <div fxFlexFill *ngIf=\\\"loanProduct.outstandingLoanBalance\\\">\\n            <span fxFlex=\\\"40%\\\">Maximum allowed outstanding balance:</span>\\n            <span fxFlex=\\\"60%\\\">{{ loanProduct.outstandingLoanBalance }}</span>\\n          </div>\\n        </div>\\n\\n        <h3 class=\\\"mat-h3\\\" fxFlexFill>Configurable Terms and Settings</h3>\\n\\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Allow overriding select terms and settings in loan accounts:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.allowAttributeConfiguration ? 'Yes' : 'No' }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.allowAttributeConfiguration\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n          <span fxFlex=\\\"40%\\\">Amortization:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.allowAttributeOverrides.amortizationType ? 'Yes' : 'No' }}</span>\\n          <span fxFlex=\\\"40%\\\">Interest method:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.allowAttributeOverrides.interestType ? 'Yes' : 'No' }}</span>\\n          <span fxFlex=\\\"40%\\\">Repayment strategy:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.allowAttributeOverrides.transactionProcessingStrategyId ? 'Yes' : 'No' }}</span>\\n          <span fxFlex=\\\"40%\\\">Interest calculation period:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.allowAttributeOverrides.interestCalculationPeriodType ? 'Yes' : 'No' }}</span>\\n          <span fxFlex=\\\"40%\\\">Arrears tolerance:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.allowAttributeOverrides.inArrearsTolerance ? 'Yes' : 'No' }}</span>\\n          <span fxFlex=\\\"40%\\\">Repaid every:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.allowAttributeOverrides.repaymentEvery ? 'Yes' : 'No' }}</span>\\n          <span fxFlex=\\\"40%\\\">Moratorium:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.allowAttributeOverrides.graceOnPrincipalAndInterestPayment ? 'Yes' : 'No' }}</span>\\n          <span fxFlex=\\\"40%\\\">Number of days a loan may be overdue before moving into arrears:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.allowAttributeOverrides.graceOnArrearsAgeing ? 'Yes' : 'No' }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.charges.length\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n          <h3 class=\\\"mat-h3\\\" fxFlexFill>Charges</h3>\\n\\n          <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n\\n          <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"loanProduct.charges | chargesPenaltyFilter:false\\\">\\n\\n            <ng-container matColumnDef=\\\"name\\\">\\n              <th mat-header-cell *matHeaderCellDef> Name </th>\\n              <td mat-cell *matCellDef=\\\"let charge\\\">\\n                {{ charge.name + ', ' + charge.currency.displaySymbol }}\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"chargeCalculationType\\\">\\n              <th mat-header-cell *matHeaderCellDef> Type </th>\\n              <td mat-cell *matCellDef=\\\"let charge\\\">\\n                {{ charge.chargeCalculationType.value }}\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"amount\\\">\\n              <th mat-header-cell *matHeaderCellDef> Amount </th>\\n              <td mat-cell *matCellDef=\\\"let charge\\\">\\n                {{ charge.amount  }}\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"chargeTimeType\\\">\\n              <th mat-header-cell *matHeaderCellDef> Collected On </th>\\n              <td mat-cell *matCellDef=\\\"let charge\\\">\\n                {{ charge.chargeTimeType.value }}\\n              </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"chargesDisplayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: chargesDisplayedColumns;\\\"></tr>\\n\\n          </table>\\n\\n          <h3 class=\\\"mat-h3\\\" fxFlexFill>Overdue Charges</h3>\\n\\n          <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n\\n          <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"loanProduct.charges | chargesPenaltyFilter:true\\\">\\n\\n            <ng-container matColumnDef=\\\"name\\\">\\n              <th mat-header-cell *matHeaderCellDef> Name </th>\\n              <td mat-cell *matCellDef=\\\"let overdueCharge\\\">\\n                {{ overdueCharge.name + ', ' + overdueCharge.currency.displaySymbol }}\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"chargeCalculationType\\\">\\n              <th mat-header-cell *matHeaderCellDef> Type </th>\\n              <td mat-cell *matCellDef=\\\"let overdueCharge\\\">\\n                {{ overdueCharge.chargeCalculationType.value }}\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"amount\\\">\\n              <th mat-header-cell *matHeaderCellDef> Amount </th>\\n              <td mat-cell *matCellDef=\\\"let overdueCharge\\\">\\n                {{ overdueCharge.amount  }}\\n              </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"chargeTimeType\\\">\\n              <th mat-header-cell *matHeaderCellDef> Collected On </th>\\n              <td mat-cell *matCellDef=\\\"let overdueCharge\\\">\\n                {{ overdueCharge.chargeTimeType.value }}\\n              </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"chargesDisplayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: chargesDisplayedColumns;\\\"></tr>\\n\\n          </table>\\n\\n        </div>\\n\\n        <h3 class=\\\"mat-h3\\\" fxFlexFill>Accounting</h3>\\n\\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n\\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Type:</span>\\n          <span fxFlex=\\\"60%\\\">{{ loanProduct.accountingRule.value }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"loanProduct.accountingRule.id >= 2 && loanProduct.accountingRule.id <= 4\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n          <h4 fxFlexFill class=\\\"mat-h4\\\">Assets</h4>\\n\\n          <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n            <span fxFlex=\\\"40%\\\">Fund source:</span>\\n            <span fxFlex=\\\"60%\\\">{{ loanProduct.accountingMappings.fundSourceAccount.name }}</span>\\n            <span fxFlex=\\\"40%\\\">Loan portfolio:</span>\\n            <span fxFlex=\\\"60%\\\">{{ loanProduct.accountingMappings.loanPortfolioAccount.name }}</span>\\n            <div fxFlexFill *ngIf=\\\"loanProduct.accountingRule.id === 3 || loanProduct.accountingRule.id === 4\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n              <span fxFlex=\\\"40%\\\">Interest Receivable:</span>\\n              <span fxFlex=\\\"60%\\\">{{ loanProduct.accountingMappings.receivableInterestAccount.name }}</span>\\n              <span fxFlex=\\\"40%\\\">Fees Receivable:</span>\\n              <span fxFlex=\\\"60%\\\">{{ loanProduct.accountingMappings.receivableInterestAccount.name }}</span>\\n              <span fxFlex=\\\"40%\\\">Penalties Receivable:</span>\\n              <span fxFlex=\\\"60%\\\">{{ loanProduct.accountingMappings.receivablePenaltyAccount.name }}</span>\\n            </div>\\n            <span fxFlex=\\\"40%\\\">Transfer in suspense:</span>\\n            <span fxFlex=\\\"60%\\\">{{ loanProduct.accountingMappings.transfersInSuspenseAccount.name }}</span>\\n          </div>\\n\\n          <h4 fxFlexFill class=\\\"mat-h4\\\">Income</h4>\\n\\n          <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n            <span fxFlex=\\\"40%\\\">Income from Interest:</span>\\n            <span fxFlex=\\\"60%\\\">{{ loanProduct.accountingMappings.interestOnLoanAccount.name }}</span>\\n            <span fxFlex=\\\"40%\\\">Income from fees:</span>\\n            <span fxFlex=\\\"60%\\\">{{ loanProduct.accountingMappings.incomeFromFeeAccount.name }}</span>\\n            <span fxFlex=\\\"40%\\\">Income from penalties:</span>\\n            <span fxFlex=\\\"60%\\\">{{ loanProduct.accountingMappings.incomeFromPenaltyAccount.name }}</span>\\n            <span fxFlex=\\\"40%\\\">Income from Recovery Repayments:</span>\\n            <span fxFlex=\\\"60%\\\">{{ loanProduct.accountingMappings.incomeFromRecoveryAccount.name }}</span>\\n          </div>\\n\\n          <h4 fxFlexFill class=\\\"mat-h4\\\">Expenses</h4>\\n\\n          <div fxFlexFill>\\n            <span fxFlex=\\\"40%\\\">Losses written off:</span>\\n            <span fxFlex=\\\"60%\\\">{{ loanProduct.accountingMappings.writeOffAccount.name }}</span>\\n          </div>\\n\\n          <h4 fxFlexFill class=\\\"mat-h4\\\">Liabilities</h4>\\n\\n          <div fxFlexFill>\\n            <span fxFlex=\\\"40%\\\">Over payment liability:</span>\\n            <span fxFlex=\\\"60%\\\">{{ loanProduct.accountingMappings.overpaymentLiabilityAccount.name }}</span>\\n          </div>\\n\\n          <div *ngIf=\\\"loanProduct.paymentChannelToFundSourceMappings?.length || loanProduct.feeToIncomeAccountMappings?.length || loanProduct.penaltyToIncomeAccountMappings?.length\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n            <h3 class=\\\"mat-h3\\\" fxFlexFill>Advanced Accounting Rules</h3>\\n\\n            <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n\\n            <div *ngIf=\\\"loanProduct.paymentChannelToFundSourceMappings?.length\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n              <h4 class=\\\"mat-h4\\\" fxFlexFill>Fund Sources for Payment Channels</h4>\\n\\n              <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"loanProduct.paymentChannelToFundSourceMappings\\\">\\n\\n                <ng-container matColumnDef=\\\"paymentTypeId\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Payment Type </th>\\n                  <td mat-cell *matCellDef=\\\"let paymentFundSource\\\">\\n                    {{ paymentFundSource.paymentType.name }}\\n                  </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"fundSourceAccountId\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Fund Source </th>\\n                  <td mat-cell *matCellDef=\\\"let paymentFundSource\\\">\\n                    {{ paymentFundSource.fundSourceAccount.name }}\\n                  </td>\\n                </ng-container>\\n\\n                <tr mat-header-row *matHeaderRowDef=\\\"paymentFundSourceDisplayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: paymentFundSourceDisplayedColumns;\\\"></tr>\\n\\n              </table>\\n\\n            </div>\\n\\n            <div *ngIf=\\\"loanProduct.feeToIncomeAccountMappings?.length\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n              <h4 class=\\\"mat-h4\\\" fxFlexFill>Fees to Specific Income Accounts</h4>\\n\\n              <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"loanProduct.feeToIncomeAccountMappings\\\">\\n\\n                <ng-container matColumnDef=\\\"chargeId\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Fees </th>\\n                  <td mat-cell *matCellDef=\\\"let feesIncome\\\">\\n                    {{ feesIncome.charge.name }}\\n                  </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"incomeAccountId\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Income Account </th>\\n                  <td mat-cell *matCellDef=\\\"let feesIncome\\\">\\n                    {{ feesIncome.incomeAccount.name }}\\n                  </td>\\n                </ng-container>\\n\\n                <tr mat-header-row *matHeaderRowDef=\\\"feesPenaltyIncomeDisplayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: feesPenaltyIncomeDisplayedColumns;\\\"></tr>\\n\\n              </table>\\n\\n            </div>\\n\\n            <div *ngIf=\\\"loanProduct.penaltyToIncomeAccountMappings?.length\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n              <h4 class=\\\"mat-h4\\\" fxFlexFill>Penalties to Specific Income Accounts</h4>\\n\\n              <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"loanProduct.penaltyToIncomeAccountMappings\\\">\\n\\n                <ng-container matColumnDef=\\\"chargeId\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Penalty </th>\\n                  <td mat-cell *matCellDef=\\\"let penaltyIncome\\\">\\n                    {{ penaltyIncome.charge.name }}\\n                  </td>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"incomeAccountId\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Income Account </th>\\n                  <td mat-cell *matCellDef=\\\"let penaltyIncome\\\">\\n                    {{ penaltyIncome.incomeAccount.name }}\\n                  </td>\\n                </ng-container>\\n\\n                <tr mat-header-row *matHeaderRowDef=\\\"feesPenaltyIncomeDisplayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: feesPenaltyIncomeDisplayedColumns;\\\"></tr>\\n\\n              </table>\\n\\n            </div>\\n\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n\\n    </mat-card-content>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-elevation-z1 {\\n  margin: 1em 0 1.5em 0; }\\n\\nh2, h3, h4 {\\n  margin: 0;\\n  font-weight: 500; }\\n\\nspan {\\n  margin: 0.5em 0; }\\n\\n.mat-card .mat-divider-horizontal.mat-divider-inset {\\n  margin: 0 0 0.5em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL2xvYW4tcHJvZHVjdHMvdmlldy1sb2FuLXByb2R1Y3Qvdmlldy1sb2FuLXByb2R1Y3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxxQkFBcUIsRUFBQTs7QUFHdkI7RUFDRSxTQUFTO0VBQ1QsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsZUFBZSxFQUFBOztBQUdqQjtFQUNFLG1CQUFtQixFQUFBOztBQUdyQjtFQUNFLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL2xvYW4tcHJvZHVjdHMvdmlldy1sb2FuLXByb2R1Y3Qvdmlldy1sb2FuLXByb2R1Y3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWF0LWVsZXZhdGlvbi16MSB7XG4gIG1hcmdpbjogMWVtIDAgMS41ZW0gMDtcbn1cblxuaDIsIGgzLCBoNCB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuc3BhbiB7XG4gIG1hcmdpbjogMC41ZW0gMDtcbn1cblxuLm1hdC1jYXJkIC5tYXQtZGl2aWRlci1ob3Jpem9udGFsLm1hdC1kaXZpZGVyLWluc2V0IHtcbiAgbWFyZ2luOiAwIDAgMC41ZW0gMDtcbn1cblxuLm1hcmdpbi10IHtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'mifosx-view-loan-product',\n  templateUrl: './view-loan-product.component.html',\n  styleUrls: ['./view-loan-product.component.scss']\n})\nexport class ViewLoanProductComponent implements OnInit {\n\n  loanProduct: any;\n\n  variationsDisplayedColumns: string[] = ['valueConditionType', 'borrowerCycleNumber', 'minValue', 'defaultValue', 'maxValue'];\n  chargesDisplayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType'];\n  paymentFundSourceDisplayedColumns: string[] = ['paymentTypeId', 'fundSourceAccountId'];\n  feesPenaltyIncomeDisplayedColumns: string[] = ['chargeId', 'incomeAccountId'];\n\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { loanProduct: any }) => {\n      this.loanProduct = data.loanProduct;\n    });\n  }\n\n  ngOnInit() {\n    this.loanProduct.allowAttributeConfiguration = Object.values(this.loanProduct.allowAttributeOverrides).some((attribute: boolean) => attribute);\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n    <button mat-raised-button color=\\\"primary\\\">\\n      <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n      Create Tax Component\\n    </button>\\n  </div>\\n  \\n  <div class=\\\"container\\\">\\n  \\n    <div fxLayout=\\\"row\\\">\\n      <mat-form-field fxFlex>\\n        <mat-label>Filter</mat-label>\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n      </mat-form-field>\\n    </div>\\n  \\n    <div class=\\\"mat-elevation-z8\\\">\\n  \\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n  \\n        <ng-container matColumnDef=\\\"name\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n          <td mat-cell *matCellDef=\\\"let taxComponent\\\"> {{ taxComponent.name }} </td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"percentage\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Percentage </th>\\n          <td mat-cell *matCellDef=\\\"let taxComponent\\\"> {{ taxComponent.percentage }} </td>\\n        </ng-container>\\n  \\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id]\\\" class=\\\"select-row\\\"></tr>\\n  \\n      </table>\\n  \\n      <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n  \\n    </div>\\n\\n  </div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL21hbmFnZS10YXgtY29tcG9uZW50cy9tYW5hZ2UtdGF4LWNvbXBvbmVudHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7RUFEYjtJQUlJLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL21hbmFnZS10YXgtY29tcG9uZW50cy9tYW5hZ2UtdGF4LWNvbXBvbmVudHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuXG4gIC5zZWxlY3Qtcm93OmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/**\n * Manage Tax Components component.\n */\n@Component({\n  selector: 'mifosx-manage-tax-components',\n  templateUrl: './manage-tax-components.component.html',\n  styleUrls: ['./manage-tax-components.component.scss']\n})\nexport class ManageTaxComponentsComponent implements OnInit {\n\n  /** Tax Components data. */\n  taxComponentData: any;\n  /** Columns to be displayed in tax component table. */\n  displayedColumns: string[] = ['name', 'percentage'];\n  /** Data source for tax component table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for tax component table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for tax component table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the tax component data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { taxComponents: any }) => {\n      this.taxComponentData = data.taxComponents;\n    });\n  }\n\n  /**\n   * Filters data in tax component table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the tax component table.\n   */\n  ngOnInit() {\n    this.setTaxComponents();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for tax component table.\n   */\n  setTaxComponents() {\n    this.dataSource = new MatTableDataSource(this.taxComponentData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../products.service';\n\n/**\n * Manage Tax Component data resolver.\n */\n@Injectable()\nexport class ManageTaxComponentsResolver implements Resolve<Object> {\n\n  /**\n   * @param {ProductsService} productsService Products service.\n   */\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the tax components data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.productsService.getTaxComponents();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../products.service';\n\n/**\n * tax Component data resolver.\n */\n@Injectable()\nexport class TaxComponentResolver implements Resolve<Object> {\n\n  /**\n   * @param {ProductsService} productsService Products service.\n   */\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the tax Component data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const taxComponentId = route.paramMap.get('id');\n    return this.productsService.getTaxComponent(taxComponentId);\n  }\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"2%\\\">\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-content>\\n\\n      <div fxLayout=\\\"row wrap\\\" class=\\\"content\\\">\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Name\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ taxComponentData.name }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Percentage\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ taxComponentData.percentage }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\" *ngIf=\\\"taxComponentData.debitAccountType\\\">\\n          Debit Account Type\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" *ngIf=\\\"taxComponentData.debitAccountType\\\">\\n          {{ taxComponentData.debitAccountType.value }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\" *ngIf=\\\"taxComponentData.debitAccount\\\">\\n          Debit Account\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" *ngIf=\\\"taxComponentData.debitAccount\\\">\\n          {{ taxComponentData.debitAccount.name}}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\" *ngIf=\\\"taxComponentData.creditAccountType\\\">\\n          Credit Account Type\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" *ngIf=\\\"taxComponentData.creditAccountType\\\">\\n          {{ taxComponentData.creditAccountType.value }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\" *ngIf=\\\"taxComponentData.creditAccount\\\">\\n          Credit Account\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" *ngIf=\\\"taxComponentData.creditAccount\\\">\\n          {{ taxComponentData.creditAccount.name }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Start date\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ taxComponentData.startDate | date }}\\n        </div>\\n\\n      </div>\\n\\n    </mat-card-content>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n  .container .content div {\\n    margin: 1rem 0;\\n    word-wrap: break-word; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL21hbmFnZS10YXgtY29tcG9uZW50cy92aWV3LXRheC1jb21wb25lbnQvdmlldy10YXgtY29tcG9uZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCLEVBQUE7RUFEbEI7SUFLTSxjQUFjO0lBQ2QscUJBQXFCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0cy9tYW5hZ2UtdGF4LWNvbXBvbmVudHMvdmlldy10YXgtY29tcG9uZW50L3ZpZXctdGF4LWNvbXBvbmVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDM3cmVtO1xuXG4gIC5jb250ZW50IHtcbiAgICBkaXYge1xuICAgICAgbWFyZ2luOiAxcmVtIDA7XG4gICAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gICAgfVxuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n/**\n * View tax Component component.\n */\n@Component({\n  selector: 'mifosx-view-tax-component',\n  templateUrl: './view-tax-component.component.html',\n  styleUrls: ['./view-tax-component.component.scss']\n})\nexport class ViewTaxComponentComponent implements OnInit {\n\n  /** tax Component Data. */\n  taxComponentData: any;\n\n  /**\n   * Retrieves the tax Component data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { taxComponent: any }) => {\n      this.taxComponentData = data.taxComponent;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <div fxFlex=\\\"50%\\\">\\n\\n        <mat-nav-list>\\n\\n          <mat-list-item [routerLink]=\\\"['tax-components']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"building\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Manage Tax Components</h4>\\n            <p matLine>Define Tax components</p>\\n          </mat-list-item>\\n\\n        </mat-nav-list>\\n\\n      </div>\\n\\n      <div fxFlex=\\\"50%\\\">\\n\\n        <mat-nav-list>\\n\\n          <mat-list-item [routerLink]=\\\"['tax-groups']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"building\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Manage Tax Groups</h4>\\n            <p matLine>Define Tax Groups</p>\\n          </mat-list-item>\\n\\n        </mat-nav-list>\\n\\n      </div>\\n\\n    </div>\\n\\n  </mat-card>\\n\\n</div>\\n\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\n\n/**\n * Manage Tax Configurations component.\n */\n@Component({\n  selector: 'mifosx-manage-tax-configurations',\n  templateUrl: './manage-tax-configurations.component.html',\n})\nexport class ManageTaxConfigurationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Tax Groups\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let taxGroups\\\"> {{ taxGroups.name }} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL21hbmFnZS10YXgtZ3JvdXBzL21hbmFnZS10YXgtZ3JvdXBzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdHMvbWFuYWdlLXRheC1ncm91cHMvbWFuYWdlLXRheC1ncm91cHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/**\n * Manage Tax Groups component.\n */\n@Component({\n  selector: 'mifosx-manage-tax-groups',\n  templateUrl: './manage-tax-groups.component.html',\n  styleUrls: ['./manage-tax-groups.component.scss']\n})\nexport class ManageTaxGroupsComponent implements OnInit {\n\n  /** Tax Groups data. */\n  taxGroupsData: any;\n  /** Columns to be displayed in tax groups table. */\n  displayedColumns: string[] = ['name'];\n  /** Data source for tax groups table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for tax groups table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for tax groups table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the tax groups data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { taxGroups: any }) => {\n      this.taxGroupsData = data.taxGroups;\n    });\n  }\n\n  /**\n   * Filters data in tax groups table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the tax groups table.\n   */\n  ngOnInit() {\n    this.setTaxGroups();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for tax groups table.\n   */\n  setTaxGroups() {\n    this.dataSource = new MatTableDataSource(this.taxGroupsData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../products.service';\n\n/**\n * Manage Tax Groups data resolver.\n */\n@Injectable()\nexport class ManageTaxGroupsResolver implements Resolve<Object> {\n\n  /**\n   * @param {ProductsService} productsService Products service.\n   */\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the tax groups data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.productsService.getTaxGroups();\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" class=\\\"container m-b-20\\\">\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;Add\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n   <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"productName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Name </th>\\n        <td mat-cell *matCellDef=\\\"let productMix\\\"> {{ productMix.productName }} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3Byb2R1Y3RzLW1peC9wcm9kdWN0cy1taXguY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7RUFEYjtJQUlJLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3Byb2R1Y3RzLW1peC9wcm9kdWN0cy1taXguY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuXG4gIC5zZWxlY3Qtcm93OmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/**\n * Products Mix component.\n */\n@Component({\n  selector: 'mifosx-products-mix',\n  templateUrl: './products-mix.component.html',\n  styleUrls: ['./products-mix.component.scss']\n})\nexport class ProductsMixComponent implements OnInit {\n\n  /** productMix data. */\n  productMixData: any;\n  /** Columns to be displayed in products mix table. */\n  displayedColumns: string[] = ['productName'];\n  /** Data source for products mix table. */\n  dataSource: MatTableDataSource<any>;\n  /** Paginator for manage data tables table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for manage data tables table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the products data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { products: any }) => {\n      this.productMixData = data.products;\n    });\n  }\n\n  /**\n   * Filters data in products mix table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the products mix table.\n   */\n  ngOnInit() {\n    this.setProductsMix();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for products mix table.\n   */\n  setProductsMix() {\n    this.dataSource = new MatTableDataSource(this.productMixData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../products.service';\n\n/**\n * Products Mix data resolver.\n */\n@Injectable()\nexport class ProductsMixResolver implements Resolve<Object> {\n\n  /**\n   * @param {ProductsService} productsService Products service.\n   */\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the products mix data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.productsService.getProductMixes();\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/** Routing Imports */\nimport { Route } from '../core/route/route.service';\n\n/** Translation Imports */\nimport { extract } from '../core/i18n/i18n.service';\n\n/** Custom Components */\nimport { ProductsComponent } from './products.component';\nimport { LoanProductsComponent } from './loan-products/loan-products.component';\nimport { CreateLoanProductComponent } from './loan-products/create-loan-product/create-loan-product.component';\nimport { ViewLoanProductComponent } from './loan-products/view-loan-product/view-loan-product.component';\nimport { EditLoanProductComponent } from './loan-products/edit-loan-product/edit-loan-product.component';\nimport { SavingProductsComponent } from './saving-products/saving-products.component';\nimport { CreateSavingProductComponent } from './saving-products/create-saving-product/create-saving-product.component';\nimport { ViewSavingProductComponent } from './saving-products/view-saving-product/view-saving-product.component';\nimport { EditSavingProductComponent } from './saving-products/edit-saving-product/edit-saving-product.component';\nimport { ShareProductsComponent } from './share-products/share-products.component';\nimport { CreateShareProductComponent } from './share-products/create-share-product/create-share-product.component';\nimport { ViewShareProductComponent } from './share-products/view-share-product/view-share-product.component';\nimport { EditShareProductComponent } from './share-products/edit-share-product/edit-share-product.component';\nimport { ManageTaxConfigurationsComponent } from './manage-tax-configurations/manage-tax-configurations.component';\nimport { RecurringDepositProductsComponent } from './recurring-deposit-products/recurring-deposit-products.component';\nimport { ChargesComponent } from './charges/charges.component';\nimport { ViewChargeComponent } from './charges/view-charge/view-charge.component';\nimport { FixedDepositProductsComponent } from './fixed-deposit-products/fixed-deposit-products.component';\nimport { CreateFixedDepositProductComponent } from './fixed-deposit-products/create-fixed-deposit-product/create-fixed-deposit-product.component';\nimport { ProductsMixComponent } from './products-mix/products-mix.component';\nimport { ManageTaxComponentsComponent } from './manage-tax-components/manage-tax-components.component';\nimport { ManageTaxGroupsComponent } from './manage-tax-groups/manage-tax-groups.component';\nimport { ViewTaxComponentComponent } from './manage-tax-components/view-tax-component/view-tax-component.component';\n\n/** Custom Resolvers */\nimport { LoanProductsResolver } from './loan-products/loan-products.resolver';\nimport { LoanProductsTemplateResolver } from './loan-products/loan-products-template.resolver';\nimport { LoanProductResolver } from './loan-products/loan-product.resolver';\nimport { LoanProductAndTemplateResolver } from './loan-products/edit-loan-product/loan-product-and-template.resolver';\nimport { SavingProductsResolver } from './saving-products/saving-products.resolver';\nimport { SavingProductsTemplateResolver } from './saving-products/saving-products-template.resolver';\nimport { SavingProductResolver } from './saving-products/saving-product.resolver';\nimport { SavingProductAndTemplateResolver } from './saving-products/edit-saving-product/saving-product-and-template.resolver';\nimport { ShareProductsResolver } from './share-products/share-products.resolver';\nimport { ShareProductsTemplateResolver } from './share-products/share-products-template.resolver';\nimport { ShareProductResolver } from './share-products/share-product-resolver';\nimport { ShareProductAndTemplateResolver } from './share-products/edit-share-product/share-product-and-template.resolver';\nimport { RecurringDepositProductsResolver } from './recurring-deposit-products/recurring-deposit-products.resolver';\nimport { ChargesResolver } from './charges/charges.resolver';\nimport { ChargeResolver } from './charges/charge.resolver';\nimport { FixedDepositProductsResolver } from './fixed-deposit-products/fixed-deposit-products.resolver';\nimport { FixedDepositProductsTemplateResolver } from './fixed-deposit-products/fixed-deposit-products-template.resolver';\nimport { ProductsMixResolver } from './products-mix/products-mix.resolver';\nimport { ManageTaxComponentsResolver } from './manage-tax-components/manage-tax-components.resolver';\nimport { ManageTaxGroupsResolver } from './manage-tax-groups/manage-tax-groups.resolver';\nimport { TaxComponentResolver } from './manage-tax-components/tax-component.resolver';\n\n/** Products Routes */\nconst routes: Routes = [\n  Route.withShell([\n    {\n      path: 'products',\n      data: { title: extract('Products'), breadcrumb: 'Products' },\n      children: [\n        {\n          path: '',\n          component: ProductsComponent\n        },\n        {\n          path: 'loan-products',\n          data: { title: extract('Loan Products'), breadcrumb: 'Loan Products' },\n          children: [\n            {\n              path: '',\n              component: LoanProductsComponent,\n              resolve: {\n                loanProducts: LoanProductsResolver\n              }\n            },\n            {\n              path: 'create',\n              component: CreateLoanProductComponent,\n              data: { title: extract('Create Loan Product'), breadcrumb: 'Create' },\n              resolve: {\n                loanProductsTemplate: LoanProductsTemplateResolver\n              }\n            },\n            {\n              path: ':id',\n              data: { title: extract('View Loan Product'), routeParamBreadcrumb: 'id' },\n              children: [\n                {\n                  path: '',\n                  component: ViewLoanProductComponent,\n                  resolve: {\n                    loanProduct: LoanProductResolver\n                  },\n                },\n                {\n                  path: 'edit',\n                  component: EditLoanProductComponent,\n                  data: { title: extract('Edit Loan Product'), breadcrumb: 'Edit', routeParamBreadcrumb: false },\n                  resolve: {\n                    loanProductAndTemplate: LoanProductAndTemplateResolver\n                  }\n                }\n              ]\n            }\n          ]\n        },\n        {\n          path: 'saving-products',\n          data: { title: extract('Saving Products'), breadcrumb: 'Saving Products' },\n          children: [\n            {\n              path: '',\n              component: SavingProductsComponent,\n              resolve: {\n                savingProducts: SavingProductsResolver\n              }\n            },\n            {\n              path: 'create',\n              component: CreateSavingProductComponent,\n              data: { title: extract('Create Saving Product'), breadcrumb: 'Create' },\n              resolve: {\n                savingProductsTemplate: SavingProductsTemplateResolver\n              }\n            },\n            {\n              path: ':id',\n              data: { title: extract('View Saving Product'), routeParamBreadcrumb: 'id' },\n              children: [\n                {\n                  path: '',\n                  component: ViewSavingProductComponent,\n                  resolve: {\n                    savingProduct: SavingProductResolver\n                  }\n                },\n                {\n                  path: 'edit',\n                  component: EditSavingProductComponent,\n                  data: { title: extract('Edit Saving Product'), breadcrumb: 'Edit', routeParamBreadcrumb: false },\n                  resolve: {\n                    savingProductAndTemplate: SavingProductAndTemplateResolver\n                  }\n                }\n              ]\n            }\n          ]\n        },\n        {\n          path: 'share-products',\n          data: { title: extract('Share Products'), breadcrumb: 'Share Products' },\n          children: [\n            {\n              path: '',\n              component: ShareProductsComponent,\n              resolve: {\n                shareProducts: ShareProductsResolver\n              }\n            },\n            {\n              path: 'create',\n              component: CreateShareProductComponent,\n              data: { title: extract('Create Share Product'), breadcrumb: 'Create' },\n              resolve: {\n                shareProductsTemplate: ShareProductsTemplateResolver\n              }\n            },\n            {\n              path: ':id',\n              data: { title: extract('View Share Product'), routeParamBreadcrumb: 'id' },\n              children: [\n                {\n                  path: '',\n                  component: ViewShareProductComponent,\n                  resolve: {\n                    shareProduct: ShareProductResolver\n                  },\n                },\n                {\n                  path: 'edit',\n                  component: EditShareProductComponent,\n                  data: { title: extract('Edit Share Product'), breadcrumb: 'Edit', routeParamBreadcrumb: false },\n                  resolve: {\n                    shareProductAndTemplate: ShareProductAndTemplateResolver\n                  }\n                }\n              ]\n            }\n          ]\n        },\n        {\n          path: 'tax-configurations',\n          data: { title:  extract('Manage Tax Configurations'), breadcrumb: 'Manage Tax Configurations' },\n          children: [\n            {\n              path: '',\n              component: ManageTaxConfigurationsComponent,\n            },\n            {\n              path: 'tax-components',\n              data: { title: extract('Manage Tax Components'), breadcrumb: 'Tax Components'},\n              children: [\n                {\n                  path: '',\n                  component: ManageTaxComponentsComponent,\n                  resolve: {\n                    taxComponents: ManageTaxComponentsResolver\n                  }\n                },\n                {\n                  path: ':id',\n                  data: { title: extract('View Tax Component'), routeParamBreadcrumb: 'id' },\n                  children: [\n                    {\n                      path: '',\n                      component: ViewTaxComponentComponent,\n                      resolve: {\n                        taxComponent: TaxComponentResolver\n                      }\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              path: 'tax-groups',\n              component: ManageTaxGroupsComponent,\n              resolve: {\n                taxGroups: ManageTaxGroupsResolver\n              },\n              data: { title: extract('Manage Tax Groups'), breadcrumb: 'Tax Groups'},\n            },\n          ]\n        },\n        {\n          path: 'recurring-deposit-products',\n          component: RecurringDepositProductsComponent,\n          resolve: {\n                recurringDepositProducts: RecurringDepositProductsResolver\n          },\n          data: { title:  extract('Recurring Deposit Products'), breadcrumb: 'Recurring Deposit Products' },\n        },\n        {\n          path: 'charges',\n          data: { title:  extract('Charges'), breadcrumb: 'Charges' },\n          children: [\n            {\n              path: '',\n              component: ChargesComponent,\n              resolve: {\n                charges: ChargesResolver\n              }\n            },\n            {\n              path: ':id',\n              data: { title: extract('View Charge'), routeResolveBreadcrumb: ['charge', 'name'] },\n              component: ViewChargeComponent,\n              resolve: {\n                charge: ChargeResolver\n              }\n            }\n          ]\n        },\n        {\n          path: 'fixed-deposit-products',\n          data: { title:  extract('Fixed Deposit Products'), breadcrumb: 'Fixed Deposit Products' },\n          children: [\n            {\n              path: '',\n              component: FixedDepositProductsComponent,\n              resolve: {\n                    fixedDepositProducts: FixedDepositProductsResolver\n              },\n            },\n            {\n              path: 'create',\n              component: CreateFixedDepositProductComponent,\n              data: { title: extract('Create Fixed Deposit Product'), breadcrumb: 'Create' },\n              resolve: {\n                fixedDepositProductsTemplate: FixedDepositProductsTemplateResolver\n              }\n            }\n          ]\n        },\n        {\n          path: 'products-mix',\n          component: ProductsMixComponent,\n          resolve: {\n                products: ProductsMixResolver\n          },\n          data: { title:  extract('Products Mix'), breadcrumb: 'Products Mix' },\n        },\n      ]\n    }\n  ])\n];\n\n/**\n * Products Routing Module\n *\n * Configures the products routes.\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    LoanProductsResolver,\n    LoanProductsTemplateResolver,\n    LoanProductResolver,\n    LoanProductAndTemplateResolver,\n    SavingProductsResolver,\n    SavingProductsTemplateResolver,\n    SavingProductResolver,\n    SavingProductAndTemplateResolver,\n    ShareProductsResolver,\n    ShareProductsTemplateResolver,\n    ShareProductResolver,\n    ShareProductAndTemplateResolver,\n    RecurringDepositProductsResolver,\n    ChargesResolver,\n    ChargeResolver,\n    FixedDepositProductsResolver,\n    FixedDepositProductsTemplateResolver,\n    ProductsMixResolver,\n    ManageTaxComponentsResolver,\n    ManageTaxGroupsResolver,\n    TaxComponentResolver\n  ]\n})\nexport class ProductsRoutingModule { }\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <div fxFlex=\\\"50%\\\">\\n\\n        <mat-nav-list>\\n\\n          <mat-list-item [routerLink]=\\\"['loan-products']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"briefcase\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Loan Products</h4>\\n            <p matLine>Add new loan product or modify or inactivate loan product</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['saving-products']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"briefcase\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Savings Products</h4>\\n            <p matLine>Add new savings product or modify or inactivate savings product</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['share-products']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"briefcase\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Share Products</h4>\\n            <p matLine>Add new share product or modify or inactivate share product</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['charges']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"money-bill-alt\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Charges</h4>\\n            <p matLine>Define charges/penalties for loan products, savings and deposit products</p>\\n          </mat-list-item>\\n\\n        </mat-nav-list>\\n\\n      </div>\\n\\n      <div fxFlex=\\\"50%\\\">\\n\\n        <mat-nav-list>\\n\\n          <mat-list-item [routerLink]=\\\"['products-mix']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"random\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Products Mix</h4>\\n            <p matLine>Defines rules for taking multiple rules</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['fixed-deposit-products']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"briefcase\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Fixed Deposit Products</h4>\\n            <p matLine>Add, modify or inactivate a Fixed deposit product</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['recurring-deposit-products']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"briefcase\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Recurring Deposit Products</h4>\\n            <p matLine>Add, modify or inactivate a Recurring Deposit product</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['tax-configurations']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"cogs\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Manage Tax Configurations</h4>\\n            <p matLine>Define Tax components and Tax groups</p>\\n          </mat-list-item>\\n\\n          <mat-list-item>\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"money-bill-alt\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Floating Rates</h4>\\n            <p matLine>Define floating rates for loan products</p>\\n          </mat-list-item>\\n\\n        </mat-nav-list>\\n\\n      </div>\\n\\n    </div>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3Byb2R1Y3RzLmNvbXBvbmVudC5zY3NzIn0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\n\n/**\n * Products component.\n */\n@Component({\n  selector: 'mifosx-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\n/** Custom Modules */\nimport { SharedModule } from '../shared/shared.module';\nimport { ProductsRoutingModule } from './products-routing.module';\nimport { PipesModule } from 'app/pipes/pipes.module';\n\n/** Custom Components */\nimport { ProductsComponent } from './products.component';\nimport { LoanProductsComponent } from './loan-products/loan-products.component';\nimport { LoanProductDetailsStepComponent } from './loan-products/loan-product-stepper/loan-product-details-step/loan-product-details-step.component';\nimport { LoanProductCurrencyStepComponent } from './loan-products/loan-product-stepper/loan-product-currency-step/loan-product-currency-step.component';\nimport { LoanProductTermsStepComponent } from './loan-products/loan-product-stepper/loan-product-terms-step/loan-product-terms-step.component';\nimport { LoanProductSettingsStepComponent } from './loan-products//loan-product-stepper/loan-product-settings-step/loan-product-settings-step.component';\nimport { LoanProductChargesStepComponent } from './loan-products/loan-product-stepper/loan-product-charges-step/loan-product-charges-step.component';\nimport { LoanProductAccountingStepComponent } from './loan-products/loan-product-stepper/loan-product-accounting-step/loan-product-accounting-step.component';\nimport { LoanProductPreviewStepComponent } from './loan-products/loan-product-stepper/loan-product-preview-step/loan-product-preview-step.component';\nimport { CreateLoanProductComponent } from './loan-products/create-loan-product/create-loan-product.component';\nimport { ManageTaxConfigurationsComponent } from './manage-tax-configurations/manage-tax-configurations.component';\nimport { RecurringDepositProductsComponent } from './recurring-deposit-products/recurring-deposit-products.component';\nimport { ChargesComponent } from './charges/charges.component';\nimport { ViewChargeComponent } from './charges/view-charge/view-charge.component';\nimport { FixedDepositProductsComponent } from './fixed-deposit-products/fixed-deposit-products.component';\nimport { ProductsMixComponent } from './products-mix/products-mix.component';\nimport { ManageTaxComponentsComponent } from './manage-tax-components/manage-tax-components.component';\nimport { ViewLoanProductComponent } from './loan-products/view-loan-product/view-loan-product.component';\nimport { EditLoanProductComponent } from './loan-products/edit-loan-product/edit-loan-product.component';\nimport { SavingProductsComponent } from './saving-products/saving-products.component';\nimport { SavingProductDetailsStepComponent } from './saving-products/saving-product-stepper/saving-product-details-step/saving-product-details-step.component';\nimport { SavingProductCurrencyStepComponent } from './saving-products/saving-product-stepper/saving-product-currency-step/saving-product-currency-step.component';\nimport { SavingProductTermsStepComponent } from './saving-products/saving-product-stepper/saving-product-terms-step/saving-product-terms-step.component';\nimport { SavingProductSettingsStepComponent } from './saving-products/saving-product-stepper/saving-product-settings-step/saving-product-settings-step.component';\nimport { SavingProductChargesStepComponent } from './saving-products/saving-product-stepper/saving-product-charges-step/saving-product-charges-step.component';\nimport { SavingProductAccountingStepComponent } from './saving-products/saving-product-stepper/saving-product-accounting-step/saving-product-accounting-step.component';\nimport { SavingProductPreviewStepComponent } from './saving-products/saving-product-stepper/saving-product-preview-step/saving-product-preview-step.component';\nimport { CreateSavingProductComponent } from './saving-products/create-saving-product/create-saving-product.component';\nimport { ViewSavingProductComponent } from './saving-products/view-saving-product/view-saving-product.component';\nimport { EditSavingProductComponent } from './saving-products/edit-saving-product/edit-saving-product.component';\nimport { ShareProductsComponent } from './share-products/share-products.component';\nimport { ShareProductDetailsStepComponent } from './share-products/share-product-stepper/share-product-details-step/share-product-details-step.component';\nimport { ShareProductCurrencyStepComponent } from './share-products/share-product-stepper/share-product-currency-step/share-product-currency-step.component';\nimport { ShareProductTermsStepComponent } from './share-products/share-product-stepper/share-product-terms-step/share-product-terms-step.component';\nimport { ShareProductSettingsStepComponent } from './share-products/share-product-stepper/share-product-settings-step/share-product-settings-step.component';\nimport { ShareProductMarketPriceStepComponent } from './share-products/share-product-stepper/share-product-market-price-step/share-product-market-price-step.component';\nimport { ShareProductChargesStepComponent } from './share-products/share-product-stepper/share-product-charges-step/share-product-charges-step.component';\nimport { ShareProductAccountingStepComponent } from './share-products/share-product-stepper/share-product-accounting-step/share-product-accounting-step.component';\nimport { ShareProductPreviewStepComponent } from './share-products/share-product-stepper/share-product-preview-step/share-product-preview-step.component';\nimport { CreateShareProductComponent } from './share-products/create-share-product/create-share-product.component';\nimport { ViewShareProductComponent } from './share-products/view-share-product/view-share-product.component';\nimport { EditShareProductComponent } from './share-products/edit-share-product/edit-share-product.component';\nimport { CreateFixedDepositProductComponent } from './fixed-deposit-products/create-fixed-deposit-product/create-fixed-deposit-product.component';\nimport { FixedDepositProductDetailsStepComponent } from './fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-details-step/fixed-deposit-product-details-step.component';\nimport { FixedDepositProductCurrencyStepComponent } from './fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-currency-step/fixed-deposit-product-currency-step.component';\nimport { FixedDepositProductTermsStepComponent } from './fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-terms-step/fixed-deposit-product-terms-step.component';\nimport { FixedDepositProductSettingsStepComponent } from './fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-settings-step/fixed-deposit-product-settings-step.component';\nimport { FixedDepositProductInterestRateChartStepComponent } from './fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-interest-rate-chart-step/fixed-deposit-product-interest-rate-chart-step.component';\nimport { FixedDepositProductChargesStepComponent } from './fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-charges-step/fixed-deposit-product-charges-step.component';\nimport { FixedDepositProductAccountingStepComponent } from './fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-accounting-step/fixed-deposit-product-accounting-step.component';\nimport { FixedDepositProductPreviewStepComponent } from './fixed-deposit-products/fixed-deposit-product-stepper/fixed-deposit-product-preview-step/fixed-deposit-product-preview-step.component';\nimport { DepositProductIncentiveFormDialogComponent } from './deposit-product-incentive-form-dialog/deposit-product-incentive-form-dialog.component';\nimport { ManageTaxGroupsComponent } from './manage-tax-groups/manage-tax-groups.component';\nimport { ViewTaxComponentComponent } from './manage-tax-components/view-tax-component/view-tax-component.component';\n\n/**\n * Products Module\n *\n * All components related to product functions should be declared here.\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    ProductsRoutingModule,\n    PipesModule\n  ],\n  declarations: [\n    ProductsComponent,\n    LoanProductsComponent,\n    LoanProductDetailsStepComponent,\n    LoanProductCurrencyStepComponent,\n    LoanProductTermsStepComponent,\n    LoanProductSettingsStepComponent,\n    LoanProductChargesStepComponent,\n    LoanProductAccountingStepComponent,\n    LoanProductPreviewStepComponent,\n    CreateLoanProductComponent,\n    ManageTaxConfigurationsComponent,\n    RecurringDepositProductsComponent,\n    ChargesComponent,\n    ViewChargeComponent,\n    FixedDepositProductsComponent,\n    ProductsMixComponent,\n    ManageTaxComponentsComponent,\n    ViewLoanProductComponent,\n    EditLoanProductComponent,\n    SavingProductsComponent,\n    SavingProductDetailsStepComponent,\n    SavingProductCurrencyStepComponent,\n    SavingProductTermsStepComponent,\n    SavingProductSettingsStepComponent,\n    SavingProductChargesStepComponent,\n    SavingProductAccountingStepComponent,\n    SavingProductPreviewStepComponent,\n    CreateSavingProductComponent,\n    ViewSavingProductComponent,\n    EditSavingProductComponent,\n    ShareProductsComponent,\n    ShareProductDetailsStepComponent,\n    ShareProductCurrencyStepComponent,\n    ShareProductTermsStepComponent,\n    ShareProductSettingsStepComponent,\n    ShareProductMarketPriceStepComponent,\n    ShareProductChargesStepComponent,\n    ShareProductAccountingStepComponent,\n    ShareProductPreviewStepComponent,\n    CreateShareProductComponent,\n    ViewShareProductComponent,\n    EditShareProductComponent,\n    CreateFixedDepositProductComponent,\n    FixedDepositProductDetailsStepComponent,\n    FixedDepositProductCurrencyStepComponent,\n    FixedDepositProductTermsStepComponent,\n    FixedDepositProductSettingsStepComponent,\n    FixedDepositProductInterestRateChartStepComponent,\n    FixedDepositProductChargesStepComponent,\n    FixedDepositProductAccountingStepComponent,\n    FixedDepositProductPreviewStepComponent,\n    DepositProductIncentiveFormDialogComponent,\n    ManageTaxGroupsComponent,\n    ViewTaxComponentComponent\n  ],\n  entryComponents: [\n    DepositProductIncentiveFormDialogComponent\n  ],\n  providers: [DatePipe]\n})\nexport class ProductsModule { }\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/**\n * Products service.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  /**\n   * @param {HttpClient} http Http Client to send requests.\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * @returns {Observable<any>} Loan products data\n   */\n  getLoanProducts(): Observable<any> {\n    return this.http.get('/loanproducts');\n  }\n\n  createLoanProduct(loanProduct: string): Observable<any> {\n    return this.http.post('/loanproducts', loanProduct);\n  }\n\n  getLoanProductsTemplate(): Observable<any> {\n    return this.http.get('/loanproducts/template');\n  }\n\n  getLoanProduct(loanProductId: string, template: boolean = false): Observable<any> {\n    const httpParams = new HttpParams().set('template', template.toString());\n    return this.http.get(`/loanproducts/${loanProductId}`, { params: httpParams });\n  }\n\n  updateLoanProduct(loanProductId: string, loanProduct: any): Observable<any> {\n    return this.http.put(`/loanproducts/${loanProductId}`, loanProduct);\n  }\n\n  /**\n   * @returns {Observable<any>} Saving products data\n   */\n  getSavingProducts(): Observable<any> {\n    return this.http.get('/savingsproducts');\n  }\n\n  createSavingProduct(savingProduct: string): Observable<any> {\n    return this.http.post('/savingsproducts', savingProduct);\n  }\n\n  getSavingProductsTemplate(): Observable<any> {\n    return this.http.get('/savingsproducts/template');\n  }\n\n  getSavingProduct(savingProductId: string, template: boolean = false): Observable<any> {\n    const httpParams = new HttpParams().set('template', template.toString());\n    return this.http.get(`/savingsproducts/${savingProductId}`, { params: httpParams });\n  }\n\n  updateSavingProduct(savingProductId: string, savingProduct: any): Observable<any> {\n    return this.http.put(`/savingsproducts/${savingProductId}`, savingProduct);\n  }\n\n  /**\n   * @returns {Observable<any>} Share products data\n   */\n  getShareProducts(): Observable<any> {\n    return this.http.get('/products/share');\n  }\n\n  createShareProduct(shareProduct: string): Observable<any> {\n    return this.http.post('/products/share', shareProduct);\n  }\n\n  getShareProductsTemplate(): Observable<any> {\n    return this.http.get('/products/share/template');\n  }\n\n  getShareProduct(shareProductId: string, template: boolean = false): Observable<any> {\n    const httpParams = new HttpParams().set('template', template.toString());\n    return this.http.get(`/products/share/${shareProductId}`, { params: httpParams });\n  }\n\n  updateShareProduct(shareProductId: string, shareProduct: any): Observable<any> {\n    return this.http.put(`/products/share/${shareProductId}`, shareProduct);\n  }\n\n  /**\n   * @returns {Observable<any>} Recurring deposit products data\n   */\n  getRecurringDepositProducts(): Observable<any> {\n    return this.http.get('/recurringdepositproducts');\n  }\n\n  /**\n   * @returns {Observable<any>} Charges data\n   */\n  getCharges(): Observable<any> {\n    return this.http.get('/charges');\n  }\n\n  /**\n   * @param {string} chargeId Charge ID of charge.\n   * @returns {Observable<any>} Charge.\n   */\n  getCharge(chargeId: string): Observable<any> {\n    return this.http.get(`/charges/${chargeId}`);\n  }\n\n  /**\n   * @param {string} chargeId  Charge ID of Charge to be deleted.\n   * @returns {Observable<any>}\n   */\n  deleteCharge(chargeId: string): Observable<any> {\n    return this.http.delete(`/charges/${chargeId}`);\n  }\n\n  /**\n   * @returns {Observable<any>} Fixed deposit products data\n   */\n  getFixedDepositProducts(): Observable<any> {\n    return this.http.get('/fixeddepositproducts');\n  }\n\n  createFixedDepositProduct(fixedDepositProduct: string): Observable<any> {\n    return this.http.post('/fixeddepositproducts', fixedDepositProduct);\n  }\n\n  getFixedDepositProductsTemplate(): Observable<any> {\n    return this.http.get('/fixeddepositproducts/template');\n  }\n\n  /**\n   * @returns {Observable<any>} Tax Components data\n   */\n  getTaxComponents(): Observable<any> {\n    return this.http.get('/taxes/component');\n  }\n\n  /**\n   * @param {string} taxComponentId tax Component ID of tax Component.\n   * @returns {Observable<any>} Tax Component.\n   */\n  getTaxComponent(taxComponentId: string): Observable<any> {\n    return this.http.get(`/taxes/component/${taxComponentId}`);\n  }\n\n  /**\n   * @returns {Observable<any>} Tax Groups data\n   */\n  getTaxGroups(): Observable<any> {\n    return this.http.get('/taxes/group');\n  }\n\n  /**\n   * @returns {Observable<any>} Product mixes data\n   */\n  getProductMixes(): Observable<any> {\n    let httpParams = new HttpParams();\n    httpParams = httpParams.set('associations', 'productMixes');\n    return this.http.get('/loanproducts', { params: httpParams });\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Recurring Deposit Product\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let recurringDepositProduct\\\"> {{ recurringDepositProduct.name }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"shortName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Short Name </th>\\n        <td mat-cell *matCellDef=\\\"let recurringDepositProduct\\\"> {{ recurringDepositProduct.shortName }} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3JlY3VycmluZy1kZXBvc2l0LXByb2R1Y3RzL3JlY3VycmluZy1kZXBvc2l0LXByb2R1Y3RzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBO0VBRGI7SUFJSSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0cy9yZWN1cnJpbmctZGVwb3NpdC1wcm9kdWN0cy9yZWN1cnJpbmctZGVwb3NpdC1wcm9kdWN0cy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG5cbiAgLnNlbGVjdC1yb3c6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/**\n * Recurring Deposit Products component.\n */\n@Component({\n  selector: 'mifosx-recurring-deposit-products',\n  templateUrl: './recurring-deposit-products.component.html',\n  styleUrls: ['./recurring-deposit-products.component.scss']\n})\nexport class RecurringDepositProductsComponent implements OnInit {\n\n  /** Data table data. */\n  recurringDepositProductData: any;\n  /** Columns to be displayed in recurring deposit products table. */\n  displayedColumns: string[] = ['name', 'shortName'];\n  /** Data source for recurring deposit products table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for recurring deposit products table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for recurring deposit products table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the recurring deposit products data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { recurringDepositProducts: any }) => {\n      this.recurringDepositProductData = data.recurringDepositProducts;\n    });\n  }\n\n  /**\n   * Filters data in recurring deposit products table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the recurring deposit products table.\n   */\n  ngOnInit() {\n    this.setRecurringDepositProducts();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for recurring deposit products table.\n   */\n  setRecurringDepositProducts() {\n    this.dataSource = new MatTableDataSource(this.recurringDepositProductData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../products.service';\n\n/**\n * Recurring Deposit Products data resolver.\n */\n@Injectable()\nexport class RecurringDepositProductsResolver implements Resolve<Object> {\n\n  /**\n   * @param {ProductsService} productsService Products service.\n   */\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the recurring deposit products data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.productsService.getRecurringDepositProducts();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-horizontal-stepper class=\\\"mat-elevation-z8\\\" labelPosition=\\\"bottom\\\" #savingProductStepper>\\n\\n    <ng-template matStepperIcon=\\\"number\\\">\\n      <fa-icon icon=\\\"pencil-alt\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"edit\\\">\\n      <fa-icon icon=\\\"pencil-alt\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"done\\\">\\n      <fa-icon icon=\\\"check\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"error\\\">\\n      <fa-icon icon=\\\"exclamation-triangle\\\" size=\\\"lg\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"preview\\\">\\n      <fa-icon icon=\\\"eye\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <mat-step [stepControl]=\\\"savingProductDetailsForm\\\">\\n\\n      <ng-template matStepLabel>DETAILS</ng-template>\\n\\n      <mifosx-saving-product-details-step></mifosx-saving-product-details-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"savingProductCurrencyForm\\\">\\n\\n      <ng-template matStepLabel>CURRENCY</ng-template>\\n\\n      <mifosx-saving-product-currency-step [savingProductsTemplate]=\\\"savingProductsTemplate\\\"></mifosx-saving-product-currency-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"savingProductTermsForm\\\">\\n\\n      <ng-template matStepLabel>TERMS</ng-template>\\n\\n      <mifosx-saving-product-terms-step [savingProductsTemplate]=\\\"savingProductsTemplate\\\"></mifosx-saving-product-terms-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"savingProductSettingsForm\\\">\\n\\n      <ng-template matStepLabel>SETTINGS</ng-template>\\n\\n      <mifosx-saving-product-settings-step [savingProductsTemplate]=\\\"savingProductsTemplate\\\"></mifosx-saving-product-settings-step>\\n\\n    </mat-step>\\n\\n    <mat-step>\\n\\n      <ng-template matStepLabel>CHARGES</ng-template>\\n\\n      <mifosx-saving-product-charges-step\\n        [savingProductsTemplate]=\\\"savingProductsTemplate\\\"\\n        [currencyCode]=\\\"savingProductCurrencyForm.get('currencyCode')\\\"\\n      >\\n      </mifosx-saving-product-charges-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"savingProductAccountingForm\\\">\\n\\n      <ng-template matStepLabel>ACCOUNTING</ng-template>\\n\\n      <mifosx-saving-product-accounting-step\\n        [savingProductsTemplate]=\\\"savingProductsTemplate\\\"\\n        [accountingRuleData]=\\\"accountingRuleData\\\"\\n        [isDormancyTrackingActive]=\\\"savingProductSettingsForm.get('isDormancyTrackingActive')\\\"\\n        [savingProductFormValid]=\\\"savingProductFormValid\\\"\\n      >\\n      </mifosx-saving-product-accounting-step>\\n\\n    </mat-step>\\n\\n    <mat-step state=\\\"preview\\\" *ngIf=\\\"savingProductFormValid\\\" completed>\\n\\n      <ng-template matStepLabel>PREVIEW</ng-template>\\n\\n      <mifosx-saving-product-preview-step\\n        [savingProductsTemplate]=\\\"savingProductsTemplate\\\"\\n        [accountingRuleData]=\\\"accountingRuleData\\\"\\n        [savingProduct]=\\\"savingProduct\\\"\\n        (submit)=\\\"submit()\\\"\\n      >\\n      </mifosx-saving-product-preview-step>\\n\\n    </mat-step>\\n\\n  </mat-horizontal-stepper>\\n\\n</div>\\n\"","module.exports = \"fa-icon {\\n  position: relative;\\n  left: 5%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NhdmluZy1wcm9kdWN0cy9jcmVhdGUtc2F2aW5nLXByb2R1Y3QvY3JlYXRlLXNhdmluZy1wcm9kdWN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLFFBQVEsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3NhdmluZy1wcm9kdWN0cy9jcmVhdGUtc2F2aW5nLXByb2R1Y3QvY3JlYXRlLXNhdmluZy1wcm9kdWN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZmEtaWNvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogNSU7XG59XG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { SavingProductDetailsStepComponent } from '../saving-product-stepper/saving-product-details-step/saving-product-details-step.component';\nimport { SavingProductCurrencyStepComponent } from '../saving-product-stepper/saving-product-currency-step/saving-product-currency-step.component';\nimport { SavingProductTermsStepComponent } from '../saving-product-stepper/saving-product-terms-step/saving-product-terms-step.component';\nimport { SavingProductSettingsStepComponent } from '../saving-product-stepper/saving-product-settings-step/saving-product-settings-step.component';\nimport { SavingProductChargesStepComponent } from '../saving-product-stepper/saving-product-charges-step/saving-product-charges-step.component';\nimport { SavingProductAccountingStepComponent } from '../saving-product-stepper/saving-product-accounting-step/saving-product-accounting-step.component';\n\nimport { ProductsService } from 'app/products/products.service';\n\n@Component({\n  selector: 'mifosx-create-saving-product',\n  templateUrl: './create-saving-product.component.html',\n  styleUrls: ['./create-saving-product.component.scss']\n})\nexport class CreateSavingProductComponent implements OnInit {\n\n  @ViewChild(SavingProductDetailsStepComponent) savingProductDetailsStep: SavingProductDetailsStepComponent;\n  @ViewChild(SavingProductCurrencyStepComponent) savingProductCurrencyStep: SavingProductCurrencyStepComponent;\n  @ViewChild(SavingProductTermsStepComponent) savingProductTermsStep: SavingProductTermsStepComponent;\n  @ViewChild(SavingProductSettingsStepComponent) savingProductSettingsStep: SavingProductSettingsStepComponent;\n  @ViewChild(SavingProductChargesStepComponent) savingProductChargesStep: SavingProductChargesStepComponent;\n  @ViewChild(SavingProductAccountingStepComponent) savingProductAccountingStep: SavingProductAccountingStepComponent;\n\n  savingProductsTemplate: any;\n  accountingRuleData = ['None', 'Cash'];\n\n  constructor(private route: ActivatedRoute,\n              private productsService: ProductsService,\n              private router: Router) {\n    this.route.data.subscribe((data: { savingProductsTemplate: any }) => {\n      this.savingProductsTemplate = data.savingProductsTemplate;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  get savingProductDetailsForm() {\n    return this.savingProductDetailsStep.savingProductDetailsForm;\n  }\n\n  get savingProductCurrencyForm() {\n    return this.savingProductCurrencyStep.savingProductCurrencyForm;\n  }\n\n  get savingProductTermsForm() {\n    return this.savingProductTermsStep.savingProductTermsForm;\n  }\n\n  get savingProductSettingsForm() {\n    return this.savingProductSettingsStep.savingProductSettingsForm;\n  }\n\n  get savingProductAccountingForm() {\n    return this.savingProductAccountingStep.savingProductAccountingForm;\n  }\n\n  get savingProductFormValid() {\n    return (\n      this.savingProductDetailsForm.valid &&\n      this.savingProductCurrencyForm.valid &&\n      this.savingProductTermsForm.valid &&\n      this.savingProductSettingsForm.valid &&\n      this.savingProductAccountingForm.valid\n    );\n  }\n\n  get savingProduct() {\n    return {\n      ...this.savingProductDetailsStep.savingProductDetails,\n      ...this.savingProductCurrencyStep.savingProductCurrency,\n      ...this.savingProductTermsStep.savingProductTerms,\n      ...this.savingProductSettingsStep.savingProductSettings,\n      ...this.savingProductChargesStep.savingProductCharges,\n      ...this.savingProductAccountingStep.savingProductAccounting\n    };\n  }\n\n  submit() {\n    // TODO: Update once language and date settings are setup\n    const savingProduct = {\n      ...this.savingProduct,\n      charges: this.savingProduct.charges.map((charge: any) => ({ id: charge.id })),\n      locale: 'en' // locale required for nominalAnnualInterestRate\n    };\n    delete savingProduct.advancedAccountingRules;\n    this.productsService.createSavingProduct(savingProduct)\n      .subscribe((response: any) => {\n        this.router.navigate(['../', response.resourceId], { relativeTo: this.route });\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-horizontal-stepper class=\\\"mat-elevation-z8\\\" labelPosition=\\\"bottom\\\" #savingProductStepper>\\n\\n    <ng-template matStepperIcon=\\\"number\\\">\\n      <fa-icon icon=\\\"pencil-alt\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"edit\\\">\\n      <fa-icon icon=\\\"pencil-alt\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"done\\\">\\n      <fa-icon icon=\\\"check\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"error\\\">\\n      <fa-icon icon=\\\"exclamation-triangle\\\" size=\\\"lg\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"preview\\\">\\n      <fa-icon icon=\\\"eye\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <mat-step [stepControl]=\\\"savingProductDetailsForm\\\" completed>\\n\\n      <ng-template matStepLabel>DETAILS</ng-template>\\n\\n      <mifosx-saving-product-details-step [savingProductsTemplate]=\\\"savingProductAndTemplate\\\"></mifosx-saving-product-details-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"savingProductCurrencyForm\\\" completed>\\n\\n      <ng-template matStepLabel>CURRENCY</ng-template>\\n\\n      <mifosx-saving-product-currency-step [savingProductsTemplate]=\\\"savingProductAndTemplate\\\"></mifosx-saving-product-currency-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"savingProductTermsForm\\\" completed>\\n\\n      <ng-template matStepLabel>TERMS</ng-template>\\n\\n      <mifosx-saving-product-terms-step [savingProductsTemplate]=\\\"savingProductAndTemplate\\\"></mifosx-saving-product-terms-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"savingProductSettingsForm\\\" completed>\\n\\n      <ng-template matStepLabel>SETTINGS</ng-template>\\n\\n      <mifosx-saving-product-settings-step [savingProductsTemplate]=\\\"savingProductAndTemplate\\\"></mifosx-saving-product-settings-step>\\n\\n    </mat-step>\\n\\n    <mat-step completed>\\n\\n      <ng-template matStepLabel>CHARGES</ng-template>\\n\\n      <mifosx-saving-product-charges-step\\n        [savingProductsTemplate]=\\\"savingProductAndTemplate\\\"\\n        [currencyCode]=\\\"savingProductCurrencyForm.get('currencyCode')\\\"\\n      >\\n      </mifosx-saving-product-charges-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"savingProductAccountingForm\\\" completed>\\n\\n      <ng-template matStepLabel>ACCOUNTING</ng-template>\\n\\n      <mifosx-saving-product-accounting-step\\n        [savingProductsTemplate]=\\\"savingProductAndTemplate\\\"\\n        [accountingRuleData]=\\\"accountingRuleData\\\"\\n        [isDormancyTrackingActive]=\\\"savingProductSettingsForm.get('isDormancyTrackingActive')\\\"\\n        [savingProductFormValid]=\\\"savingProductFormValidAndNotPristine\\\"\\n      >\\n      </mifosx-saving-product-accounting-step>\\n\\n    </mat-step>\\n\\n    <mat-step state=\\\"preview\\\" *ngIf=\\\"savingProductFormValidAndNotPristine\\\" completed>\\n\\n      <ng-template matStepLabel>PREVIEW</ng-template>\\n\\n      <mifosx-saving-product-preview-step\\n        [savingProductsTemplate]=\\\"savingProductAndTemplate\\\"\\n        [accountingRuleData]=\\\"accountingRuleData\\\"\\n        [savingProduct]=\\\"savingProduct\\\"\\n        (submit)=\\\"submit()\\\"\\n      >\\n      </mifosx-saving-product-preview-step>\\n\\n    </mat-step>\\n\\n  </mat-horizontal-stepper>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3NhdmluZy1wcm9kdWN0cy9lZGl0LXNhdmluZy1wcm9kdWN0L2VkaXQtc2F2aW5nLXByb2R1Y3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { SavingProductDetailsStepComponent } from '../saving-product-stepper/saving-product-details-step/saving-product-details-step.component';\nimport { SavingProductCurrencyStepComponent } from '../saving-product-stepper/saving-product-currency-step/saving-product-currency-step.component';\nimport { SavingProductTermsStepComponent } from '../saving-product-stepper/saving-product-terms-step/saving-product-terms-step.component';\nimport { SavingProductSettingsStepComponent } from '../saving-product-stepper/saving-product-settings-step/saving-product-settings-step.component';\nimport { SavingProductChargesStepComponent } from '../saving-product-stepper/saving-product-charges-step/saving-product-charges-step.component';\nimport { SavingProductAccountingStepComponent } from '../saving-product-stepper/saving-product-accounting-step/saving-product-accounting-step.component';\n\nimport { ProductsService } from 'app/products/products.service';\n\n@Component({\n  selector: 'mifosx-edit-saving-product',\n  templateUrl: './edit-saving-product.component.html',\n  styleUrls: ['./edit-saving-product.component.scss']\n})\nexport class EditSavingProductComponent implements OnInit {\n\n  @ViewChild(SavingProductDetailsStepComponent) savingProductDetailsStep: SavingProductDetailsStepComponent;\n  @ViewChild(SavingProductCurrencyStepComponent) savingProductCurrencyStep: SavingProductCurrencyStepComponent;\n  @ViewChild(SavingProductTermsStepComponent) savingProductTermsStep: SavingProductTermsStepComponent;\n  @ViewChild(SavingProductSettingsStepComponent) savingProductSettingsStep: SavingProductSettingsStepComponent;\n  @ViewChild(SavingProductChargesStepComponent) savingProductChargesStep: SavingProductChargesStepComponent;\n  @ViewChild(SavingProductAccountingStepComponent) savingProductAccountingStep: SavingProductAccountingStepComponent;\n\n  savingProductAndTemplate: any;\n  accountingRuleData = ['None', 'Cash'];\n\n  constructor(private route: ActivatedRoute,\n              private productsService: ProductsService,\n              private router: Router) {\n    this.route.data.subscribe((data: { savingProductAndTemplate: any }) => {\n      this.savingProductAndTemplate = data.savingProductAndTemplate;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  get savingProductDetailsForm() {\n    return this.savingProductDetailsStep.savingProductDetailsForm;\n  }\n\n  get savingProductCurrencyForm() {\n    return this.savingProductCurrencyStep.savingProductCurrencyForm;\n  }\n\n  get savingProductTermsForm() {\n    return this.savingProductTermsStep.savingProductTermsForm;\n  }\n\n  get savingProductSettingsForm() {\n    return this.savingProductSettingsStep.savingProductSettingsForm;\n  }\n\n  get savingProductAccountingForm() {\n    return this.savingProductAccountingStep.savingProductAccountingForm;\n  }\n\n  get savingProductFormValidAndNotPristine() {\n    return (\n      this.savingProductDetailsForm.valid &&\n      this.savingProductCurrencyForm.valid &&\n      this.savingProductTermsForm.valid &&\n      this.savingProductSettingsForm.valid &&\n      this.savingProductAccountingForm.valid &&\n      (\n        !this.savingProductDetailsForm.pristine ||\n        !this.savingProductCurrencyForm.pristine ||\n        !this.savingProductTermsForm.pristine ||\n        !this.savingProductSettingsForm.pristine ||\n        !this.savingProductChargesStep.pristine ||\n        !this.savingProductAccountingForm.pristine\n      )\n    );\n  }\n\n  get savingProduct() {\n    return {\n      ...this.savingProductDetailsStep.savingProductDetails,\n      ...this.savingProductCurrencyStep.savingProductCurrency,\n      ...this.savingProductTermsStep.savingProductTerms,\n      ...this.savingProductSettingsStep.savingProductSettings,\n      ...this.savingProductChargesStep.savingProductCharges,\n      ...this.savingProductAccountingStep.savingProductAccounting\n    };\n  }\n\n  submit() {\n    // TODO: Update once language and date settings are setup\n    const savingProduct = {\n      ...this.savingProduct,\n      charges: this.savingProduct.charges.map((charge: any) => ({ id: charge.id })),\n      locale: 'en' // locale required for nominalAnnualInterestRate\n    };\n    delete savingProduct.advancedAccountingRules;\n    this.productsService.updateSavingProduct(this.savingProductAndTemplate.id, savingProduct)\n      .subscribe((response: any) => {\n        this.router.navigate(['../../', response.resourceId], { relativeTo: this.route });\n    });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../../products.service';\n\n/**\n * Saving product and template data resolver.\n */\n@Injectable()\nexport class SavingProductAndTemplateResolver implements Resolve<Object> {\n\n  /**\n   * @param {ProductsService} productsService Products service.\n   */\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the saving product and template data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const savingProductId = route.paramMap.get('id');\n    return this.productsService.getSavingProduct(savingProductId, true);\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"savingProductAccountingForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <mat-radio-group fxFlex=\\\"98%\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"5%\\\" fxLayout.lt-md=\\\"column\\\" formControlName=\\\"accountingRule\\\">\\n      <mat-radio-button *ngFor=\\\"let accountingRule of accountingRuleData; let i =  index\\\" [value]=\\\"i+1\\\">\\n        {{ accountingRule }}\\n      </mat-radio-button>\\n    </mat-radio-group>\\n\\n    <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n    <div *ngIf=\\\"savingProductAccountingForm.value.accountingRule === 2\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Assets</h4>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Saving reference</mat-label>\\n        <mat-select formControlName=\\\"savingsReferenceAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let assetAccount of assetAccountData\\\" [value]=\\\"assetAccount.id\\\">\\n            {{ assetAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Saving reference is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Overdraft portfolio</mat-label>\\n        <mat-select formControlName=\\\"overdraftPortfolioControlId\\\" required>\\n          <mat-option *ngFor=\\\"let assetAccount of assetAccountData\\\" [value]=\\\"assetAccount.id\\\">\\n            {{ assetAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Overdraft portfolio is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n      <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Liabilities</h4>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Saving control</mat-label>\\n        <mat-select formControlName=\\\"savingsControlAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let liabilityAccount of liabilityAccountData\\\" [value]=\\\"liabilityAccount.id\\\">\\n            {{ liabilityAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Saving control is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Savings transfers in suspense</mat-label>\\n        <mat-select formControlName=\\\"transfersInSuspenseAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let liabilityAccount of liabilityAccountData\\\" [value]=\\\"liabilityAccount.id\\\">\\n            {{ liabilityAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Savings transfers in suspense is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\" *ngIf=\\\"isDormancyTrackingActive.value\\\">\\n        <mat-label>Escheat liability</mat-label>\\n        <mat-select formControlName=\\\"escheatLiabilityId\\\" required>\\n          <mat-option *ngFor=\\\"let liabilityAccount of liabilityAccountData\\\" [value]=\\\"liabilityAccount.id\\\">\\n            {{ liabilityAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Escheat liability is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n      <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Expenses</h4>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Interest on savings</mat-label>\\n        <mat-select formControlName=\\\"interestOnSavingsAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let expenseAccount of expenseAccountData\\\" [value]=\\\"expenseAccount.id\\\">\\n            {{ expenseAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Interest on savings is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Write-off</mat-label>\\n        <mat-select formControlName=\\\"writeOffAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let expenseAccount of expenseAccountData\\\" [value]=\\\"expenseAccount.id\\\">\\n            {{ expenseAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Write-off is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n      <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Income</h4>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Income from fees</mat-label>\\n        <mat-select formControlName=\\\"incomeFromFeeAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let incomeAccount of incomeAccountData\\\" [value]=\\\"incomeAccount.id\\\">\\n            {{ incomeAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Income from fees Repayments is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Income from penalties</mat-label>\\n        <mat-select formControlName=\\\"incomeFromPenaltyAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let incomeAccount of incomeAccountData\\\" [value]=\\\"incomeAccount.id\\\">\\n            {{ incomeAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Income from penalties is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Overdraft Interest Income</mat-label>\\n        <mat-select formControlName=\\\"incomeFromInterestId\\\" required>\\n          <mat-option *ngFor=\\\"let incomeAccount of incomeAccountData\\\" [value]=\\\"incomeAccount.id\\\">\\n            {{ incomeAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Overdraft Interest Income is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n      <h3 fxFlex=\\\"23%\\\" class=\\\"mat-h3\\\">Advanced Accounting Rules</h3>\\n\\n      <mat-checkbox fxFlex=\\\"73%\\\" formControlName=\\\"advancedAccountingRules\\\"></mat-checkbox>\\n\\n      <div *ngIf=\\\"savingProductAccountingForm.value.advancedAccountingRules\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <h4 fxFlex=\\\"33%\\\" class=\\\"mat-h4\\\">Configure Fund Sources for Payment Channels</h4>\\n\\n        <div fxFlex=\\\"63%\\\">\\n          <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"add('PaymentFundSource', paymentChannelToFundSourceMappings)\\\">\\n            <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n            Add\\n          </button>\\n        </div>\\n\\n        <table fxFlex=\\\"98%\\\" class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"paymentChannelToFundSourceMappings.value\\\" *ngIf=\\\"paymentChannelToFundSourceMappings.value.length !== 0\\\">\\n\\n          <ng-container matColumnDef=\\\"paymentTypeId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Payment Type </th>\\n            <td mat-cell *matCellDef=\\\"let paymentFundSource\\\">\\n              {{ paymentFundSource.paymentTypeId | find:paymentTypeData:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"fundSourceAccountId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fund Source </th>\\n            <td mat-cell *matCellDef=\\\"let paymentFundSource\\\">\\n              {{ paymentFundSource.fundSourceAccountId | find:assetAccountData:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"actions\\\">\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\n            <td mat-cell *matCellDef=\\\"let paymentFundSource; let i = index\\\">\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"edit('PaymentFundSource', paymentChannelToFundSourceMappings, i)\\\">\\n                <fa-icon icon=\\\"edit\\\"></fa-icon>\\n              </button>\\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"delete(paymentChannelToFundSourceMappings, i)\\\">\\n                <fa-icon icon=\\\"trash\\\"></fa-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"paymentFundSourceDisplayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: paymentFundSourceDisplayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n        <h4 fxFlex=\\\"33%\\\" class=\\\"mat-h4\\\">Map Fees to Specific Income Accounts</h4>\\n\\n        <div fxFlex=\\\"63%\\\">\\n          <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"add('FeesIncome', feeToIncomeAccountMappings)\\\">\\n            <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n            Add\\n          </button>\\n        </div>\\n\\n        <table fxFlex=\\\"98%\\\" class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"feeToIncomeAccountMappings.value\\\" *ngIf=\\\"feeToIncomeAccountMappings.value.length !== 0\\\">\\n\\n          <ng-container matColumnDef=\\\"chargeId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fees </th>\\n            <td mat-cell *matCellDef=\\\"let feesIncome\\\">\\n              {{ feesIncome.chargeId | find:chargeData:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"incomeAccountId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Income Account </th>\\n            <td mat-cell *matCellDef=\\\"let feesIncome\\\">\\n              {{ feesIncome.incomeAccountId | find:incomeAccountData:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"actions\\\">\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\n            <td mat-cell *matCellDef=\\\"let feesIncome; let i = index\\\">\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"edit('FeesIncome', feeToIncomeAccountMappings, i)\\\">\\n                <fa-icon icon=\\\"edit\\\"></fa-icon>\\n              </button>\\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"delete(feeToIncomeAccountMappings, i)\\\">\\n                <fa-icon icon=\\\"trash\\\"></fa-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"feesPenaltyIncomeDisplayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: feesPenaltyIncomeDisplayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n        <h4 fxFlex=\\\"33%\\\" class=\\\"mat-h4\\\">Map Penalties to Specific Income Accounts</h4>\\n\\n        <div fxFlex=\\\"63%\\\">\\n          <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"add('PenaltyIncome', penaltyToIncomeAccountMappings)\\\">\\n            <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n            Add\\n          </button>\\n        </div>\\n\\n\\n        <table fxFlex=\\\"98%\\\" class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"penaltyToIncomeAccountMappings.value\\\" *ngIf=\\\"penaltyToIncomeAccountMappings.value.length !== 0\\\">\\n\\n          <ng-container matColumnDef=\\\"chargeId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Penalty </th>\\n            <td mat-cell *matCellDef=\\\"let penaltyIncome\\\">\\n              {{ penaltyIncome.chargeId | find:penaltyData:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"incomeAccountId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Income Account </th>\\n            <td mat-cell *matCellDef=\\\"let penaltyIncome\\\">\\n              {{ penaltyIncome.incomeAccountId | find:incomeAccountData:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"actions\\\">\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\n            <td mat-cell *matCellDef=\\\"let penaltyIncome; let i = index\\\">\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"edit('PenaltyIncome', penaltyToIncomeAccountMappings, i)\\\">\\n                <fa-icon icon=\\\"edit\\\"></fa-icon>\\n              </button>\\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"delete(penaltyToIncomeAccountMappings, i)\\\">\\n                <fa-icon icon=\\\"trash\\\"></fa-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"feesPenaltyIncomeDisplayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: feesPenaltyIncomeDisplayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext [disabled]=\\\"!savingProductFormValid\\\">\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-elevation-z1 {\\n  margin: 1em 0 1.5em 0; }\\n\\nh3, h4 {\\n  font-weight: 500; }\\n\\nmat-radio-group, h4 {\\n  margin: 1em 0; }\\n\\nmat-divider {\\n  margin: 1em 0 2em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NhdmluZy1wcm9kdWN0cy9zYXZpbmctcHJvZHVjdC1zdGVwcGVyL3NhdmluZy1wcm9kdWN0LWFjY291bnRpbmctc3RlcC9zYXZpbmctcHJvZHVjdC1hY2NvdW50aW5nLXN0ZXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxxQkFBcUIsRUFBQTs7QUFHdkI7RUFDRSxnQkFBZ0IsRUFBQTs7QUFHbEI7RUFDRSxhQUFhLEVBQUE7O0FBR2Y7RUFDRSxtQkFBbUIsRUFBQTs7QUFHckI7RUFDRSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0cy9zYXZpbmctcHJvZHVjdHMvc2F2aW5nLXByb2R1Y3Qtc3RlcHBlci9zYXZpbmctcHJvZHVjdC1hY2NvdW50aW5nLXN0ZXAvc2F2aW5nLXByb2R1Y3QtYWNjb3VudGluZy1zdGVwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLm1hdC1lbGV2YXRpb24tejEge1xuICBtYXJnaW46IDFlbSAwIDEuNWVtIDA7XG59XG5cbmgzLCBoNCB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbm1hdC1yYWRpby1ncm91cCwgaDQge1xuICBtYXJnaW46IDFlbSAwO1xufVxuXG5tYXQtZGl2aWRlciB7XG4gIG1hcmdpbjogMWVtIDAgMmVtIDA7XG59XG5cbi5tYXJnaW4tdCB7XG4gIG1hcmdpbi10b3A6IDFlbTtcbn1cbiJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, Validators, FormControl } from '@angular/forms';\nimport { MatDialog } from '@angular/material';\n\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\n\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\nimport { SelectBase } from 'app/shared/form-dialog/formfield/model/select-base';\n\n@Component({\n  selector: 'mifosx-saving-product-accounting-step',\n  templateUrl: './saving-product-accounting-step.component.html',\n  styleUrls: ['./saving-product-accounting-step.component.scss']\n})\nexport class SavingProductAccountingStepComponent implements OnInit {\n\n  @Input() savingProductsTemplate: any;\n  @Input() accountingRuleData: any;\n  @Input() isDormancyTrackingActive: FormControl;\n  @Input() savingProductFormValid: boolean;\n\n  savingProductAccountingForm: FormGroup;\n\n  chargeData: any;\n  penaltyData: any;\n  paymentTypeData: any;\n  assetAccountData: any;\n  incomeAccountData: any;\n  expenseAccountData: any;\n  liabilityAccountData: any;\n  incomeAndLiabilityAccountData: any;\n\n  paymentFundSourceDisplayedColumns: string[] = ['paymentTypeId', 'fundSourceAccountId', 'actions'];\n  feesPenaltyIncomeDisplayedColumns: string[] = ['chargeId', 'incomeAccountId', 'actions'];\n\n  constructor(private formBuilder: FormBuilder,\n              public dialog: MatDialog) {\n    this.createsavingProductAccountingForm();\n    this.setConditionalControls();\n  }\n\n  ngOnInit() {\n    this.chargeData = this.savingProductsTemplate.chargeOptions || [];\n    this.penaltyData = this.savingProductsTemplate.penaltyOptions || [];\n    this.paymentTypeData = this.savingProductsTemplate.paymentTypeOptions || [];\n    this.assetAccountData = this.savingProductsTemplate.accountingMappingOptions.assetAccountOptions || [];\n    this.incomeAccountData = this.savingProductsTemplate.accountingMappingOptions.incomeAccountOptions || [];\n    this.expenseAccountData = this.savingProductsTemplate.accountingMappingOptions.expenseAccountOptions || [];\n    this.liabilityAccountData = this.savingProductsTemplate.accountingMappingOptions.liabilityAccountOptions || [];\n\n    this.savingProductAccountingForm.patchValue({\n      'accountingRule': this.savingProductsTemplate.accountingRule.id\n    });\n\n    if (this.savingProductsTemplate.accountingRule.id === 2) {\n        this.savingProductAccountingForm.patchValue({\n          'savingsReferenceAccountId': this.savingProductsTemplate.accountingMappings.savingsReferenceAccount.id,\n          'overdraftPortfolioControlId': this.savingProductsTemplate.accountingMappings.overdraftPortfolioControl.id,\n          'savingsControlAccountId': this.savingProductsTemplate.accountingMappings.savingsControlAccount.id,\n          'transfersInSuspenseAccountId': this.savingProductsTemplate.accountingMappings.transfersInSuspenseAccount.id,\n          'interestOnSavingsAccountId': this.savingProductsTemplate.accountingMappings.interestOnSavingsAccount.id,\n          'writeOffAccountId': this.savingProductsTemplate.accountingMappings.writeOffAccount.id,\n          'incomeFromFeeAccountId': this.savingProductsTemplate.accountingMappings.incomeFromFeeAccount.id,\n          'incomeFromPenaltyAccountId': this.savingProductsTemplate.accountingMappings.incomeFromPenaltyAccount.id,\n          'incomeFromInterestId': this.savingProductsTemplate.accountingMappings.incomeFromInterest.id,\n          'escheatLiabilityId': this.savingProductsTemplate.accountingMappings.escheatLiabilityAccount.id,\n          'advancedAccountingRules': (this.savingProductsTemplate.paymentChannelToFundSourceMappings || this.savingProductsTemplate.feeToIncomeAccountMappings || this.savingProductsTemplate.penaltyToIncomeAccountMappings) ? true : false\n        });\n\n        this.savingProductAccountingForm.setControl('paymentChannelToFundSourceMappings',\n          this.formBuilder.array((this.savingProductsTemplate.paymentChannelToFundSourceMappings || []).map((paymentFundSource: any) =>\n          ({ paymentTypeId: paymentFundSource.paymentType.id, fundSourceAccountId: paymentFundSource.fundSourceAccount.id }))));\n        this.savingProductAccountingForm.setControl('feeToIncomeAccountMappings',\n          this.formBuilder.array((this.savingProductsTemplate.feeToIncomeAccountMappings || []).map((feesIncome: any) =>\n          ({ chargeId: feesIncome.charge.id, incomeAccountId: feesIncome.incomeAccount.id }))));\n        this.savingProductAccountingForm.setControl('penaltyToIncomeAccountMappings',\n          this.formBuilder.array((this.savingProductsTemplate.penaltyToIncomeAccountMappings || []).map((penaltyIncome: any) =>\n          ({ chargeId: penaltyIncome.charge.id, incomeAccountId: penaltyIncome.incomeAccount.id }))));\n    }\n  }\n\n  createsavingProductAccountingForm() {\n    this.savingProductAccountingForm = this.formBuilder.group({\n      'accountingRule': [1]\n    });\n  }\n\n  setConditionalControls() {\n    this.savingProductAccountingForm.get('accountingRule').valueChanges\n      .subscribe((accountingRule: any) => {\n        if (accountingRule === 2) {\n          this.savingProductAccountingForm.addControl('savingsReferenceAccountId', new FormControl('', Validators.required));\n          this.savingProductAccountingForm.addControl('overdraftPortfolioControlId', new FormControl('', Validators.required));\n          this.savingProductAccountingForm.addControl('savingsControlAccountId', new FormControl('', Validators.required));\n          this.savingProductAccountingForm.addControl('transfersInSuspenseAccountId', new FormControl('', Validators.required));\n          this.savingProductAccountingForm.addControl('interestOnSavingsAccountId', new FormControl('', Validators.required));\n          this.savingProductAccountingForm.addControl('writeOffAccountId', new FormControl('', Validators.required));\n          this.savingProductAccountingForm.addControl('incomeFromFeeAccountId', new FormControl('', Validators.required));\n          this.savingProductAccountingForm.addControl('incomeFromPenaltyAccountId', new FormControl('', Validators.required));\n          this.savingProductAccountingForm.addControl('incomeFromInterestId', new FormControl('', Validators.required));\n          this.savingProductAccountingForm.addControl('advancedAccountingRules', new FormControl(false));\n\n          if (this.isDormancyTrackingActive.value) {\n            this.savingProductAccountingForm.addControl('escheatLiabilityId', new FormControl('', Validators.required));\n          }\n\n          this.isDormancyTrackingActive.valueChanges\n            .subscribe((isDormancyTrackingActive: boolean) => {\n              if (isDormancyTrackingActive) {\n                this.savingProductAccountingForm.addControl('escheatLiabilityId', new FormControl('', Validators.required));\n              } else {\n                this.savingProductAccountingForm.removeControl('escheatLiabilityId');\n              }\n            });\n\n          this.savingProductAccountingForm.get('advancedAccountingRules').valueChanges\n            .subscribe((advancedAccountingRules: boolean) => {\n              if (advancedAccountingRules) {\n                this.savingProductAccountingForm.addControl('paymentChannelToFundSourceMappings', this.formBuilder.array([]));\n                this.savingProductAccountingForm.addControl('feeToIncomeAccountMappings', this.formBuilder.array([]));\n                this.savingProductAccountingForm.addControl('penaltyToIncomeAccountMappings', this.formBuilder.array([]));\n              } else {\n                this.savingProductAccountingForm.removeControl('paymentChannelToFundSourceMappings');\n                this.savingProductAccountingForm.removeControl('feeToIncomeAccountMappings');\n                this.savingProductAccountingForm.removeControl('penaltyToIncomeAccountMappings');\n              }\n            });\n        } else {\n          this.savingProductAccountingForm.removeControl('savingsReferenceAccountId');\n          this.savingProductAccountingForm.removeControl('overdraftPortfolioControlId');\n          this.savingProductAccountingForm.removeControl('savingsControlAccountId');\n          this.savingProductAccountingForm.removeControl('transfersInSuspenseAccountId');\n          this.savingProductAccountingForm.removeControl('interestOnSavingsAccountId');\n          this.savingProductAccountingForm.removeControl('writeOffAccountId');\n          this.savingProductAccountingForm.removeControl('incomeFromFeeAccountId');\n          this.savingProductAccountingForm.removeControl('incomeFromPenaltyAccountId');\n          this.savingProductAccountingForm.removeControl('incomeFromInterestId');\n          this.savingProductAccountingForm.removeControl('advancedAccountingRules');\n          this.savingProductAccountingForm.removeControl('escheatLiabilityId');\n        }\n      });\n  }\n\n  get paymentChannelToFundSourceMappings(): FormArray {\n    return this.savingProductAccountingForm.get('paymentChannelToFundSourceMappings') as FormArray;\n  }\n\n  get feeToIncomeAccountMappings(): FormArray {\n    return this.savingProductAccountingForm.get('feeToIncomeAccountMappings') as FormArray;\n  }\n\n  get penaltyToIncomeAccountMappings(): FormArray {\n    return this.savingProductAccountingForm.get('penaltyToIncomeAccountMappings') as FormArray;\n  }\n\n  setSavingProductAccountingFormDirty() {\n    if (this.savingProductAccountingForm.pristine) {\n      this.savingProductAccountingForm.markAsDirty();\n    }\n  }\n\n  add(formType: string, formArray: FormArray) {\n    const data = { ...this.getData(formType), pristine: false };\n    const dialogRef = this.dialog.open(FormDialogComponent, { data });\n    dialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        formArray.push(response.data);\n        this.setSavingProductAccountingFormDirty();\n      }\n    });\n  }\n\n  edit(formType: string, formArray: FormArray, index: number) {\n    const data = { ...this.getData(formType, formArray.at(index).value), layout: { addButtonText: 'Edit' } };\n    const dialogRef = this.dialog.open(FormDialogComponent, { data });\n    dialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        formArray.at(index).patchValue(response.data.value);\n        this.setSavingProductAccountingFormDirty();\n      }\n    });\n  }\n\n  delete(formArray: FormArray, index: number) {\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `this` }\n    });\n    dialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        formArray.removeAt(index);\n        this.setSavingProductAccountingFormDirty();\n      }\n    });\n  }\n\n  getData(formType: string, values?: any) {\n    switch (formType) {\n      case 'PaymentFundSource': return { title: 'Configure Fund Sources for Payment Channels', formfields: this.getPaymentFundSourceFormfields(values) };\n      case 'FeesIncome': return { title: 'Map Fees to Income Accounts', formfields: this.getFeesIncomeFormfields(values) };\n      case 'PenaltyIncome': return { title: 'Map Penalties to Specific Income Accounts', formfields: this.getPenaltyIncomeFormfields(values) };\n    }\n  }\n\n  getPaymentFundSourceFormfields(values?: any) {\n    const formfields: FormfieldBase[] = [\n      new SelectBase({\n        controlName: 'paymentTypeId',\n        label: 'Payment Type',\n        value: values ? values.paymentTypeId : this.paymentTypeData[0].id,\n        options: { label: 'name', value: 'id', data: this.paymentTypeData },\n        required: true,\n        order: 1\n      }),\n      new SelectBase({\n        controlName: 'fundSourceAccountId',\n        label: 'Fund Source',\n        value: values ? values.fundSourceAccountId : this.assetAccountData[0].id,\n        options: { label: 'name', value: 'id', data: this.assetAccountData },\n        required: true,\n        order: 2\n      })\n    ];\n    return formfields;\n  }\n\n  getFeesIncomeFormfields(values?: any) {\n    const formfields: FormfieldBase[] = [\n      new SelectBase({\n        controlName: 'chargeId',\n        label: 'Fees',\n        value: values ? values.chargeId : this.chargeData[0].id,\n        options: { label: 'name', value: 'id', data: this.chargeData },\n        required: true,\n        order: 1\n      }),\n      new SelectBase({\n        controlName: 'incomeAccountId',\n        label: 'Income Account',\n        value: values ? values.incomeAccountId : this.incomeAccountData[0].id,\n        options: { label: 'name', value: 'id', data: this.incomeAccountData },\n        required: true,\n        order: 2\n      })\n    ];\n    return formfields;\n  }\n\n  getPenaltyIncomeFormfields(values?: any) {\n    const formfields: FormfieldBase[] = [\n      new SelectBase({\n        controlName: 'chargeId',\n        label: 'Penalty',\n        value: values ? values.chargeId : this.penaltyData[0].id,\n        options: { label: 'name', value: 'id', data: this.penaltyData },\n        required: true,\n        order: 1\n      }),\n      new SelectBase({\n        controlName: 'incomeAccountId',\n        label: 'Income Account',\n        value: values ? values.incomeAccountId : this.incomeAccountData[0].id,\n        options: { label: 'name', value: 'id', data: this.incomeAccountData },\n        required: true,\n        order: 2\n      })\n    ];\n    return formfields;\n  }\n\n  get savingProductAccounting() {\n    return this.savingProductAccountingForm.value;\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n  <mat-form-field fxFlex=\\\"48%\\\">\\n    <mat-label>Charge</mat-label>\\n    <mat-select #charge>\\n      <mat-option *ngFor=\\\"let charge of chargeData | chargesFilter:chargesDataSource:currencyCode.value\\\" [value]=\\\"charge\\\">\\n        {{ charge.name }}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <div fxFlex=\\\"48%\\\" fxFlexAlign=\\\"center\\\">\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"addCharge(charge)\\\" [disabled]=\\\"!charge.value\\\">\\n      <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n      Add\\n    </button>\\n  </div>\\n\\n  <table fxFlex=\\\"98%\\\" class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"chargesDataSource\\\" [hidden]=\\\"chargesDataSource.length === 0\\\">\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        {{ charge.name + ', ' + charge.currency.displaySymbol }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"chargeCalculationType\\\">\\n      <th mat-header-cell *matHeaderCellDef> Type </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        {{ charge.chargeCalculationType.value }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"amount\\\">\\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        {{ charge.amount }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"chargeTimeType\\\">\\n      <th mat-header-cell *matHeaderCellDef> Collected On </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        {{ charge.chargeTimeType.value }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"action\\\">\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteCharge(charge)\\\">\\n          <fa-icon icon=\\\"trash\\\"></fa-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n  </table>\\n\\n</div>\\n\\n<div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n  <button mat-raised-button matStepperPrevious>\\n    <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n    Previous\\n  </button>\\n  <button mat-raised-button matStepperNext>\\n    Next&nbsp;&nbsp;\\n    <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n  </button>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-elevation-z1 {\\n  margin: 1em 0 1.5em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NhdmluZy1wcm9kdWN0cy9zYXZpbmctcHJvZHVjdC1zdGVwcGVyL3NhdmluZy1wcm9kdWN0LWNoYXJnZXMtc3RlcC9zYXZpbmctcHJvZHVjdC1jaGFyZ2VzLXN0ZXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxxQkFBcUIsRUFBQTs7QUFHdkI7RUFDRSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0cy9zYXZpbmctcHJvZHVjdHMvc2F2aW5nLXByb2R1Y3Qtc3RlcHBlci9zYXZpbmctcHJvZHVjdC1jaGFyZ2VzLXN0ZXAvc2F2aW5nLXByb2R1Y3QtY2hhcmdlcy1zdGVwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLm1hdC1lbGV2YXRpb24tejEge1xuICBtYXJnaW46IDFlbSAwIDEuNWVtIDA7XG59XG5cbi5tYXJnaW4tdCB7XG4gIG1hcmdpbi10b3A6IDFlbTtcbn1cbiJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { FormControl } from '@angular/forms';\n\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\n\n@Component({\n  selector: 'mifosx-saving-product-charges-step',\n  templateUrl: './saving-product-charges-step.component.html',\n  styleUrls: ['./saving-product-charges-step.component.scss']\n})\nexport class SavingProductChargesStepComponent implements OnInit {\n\n  @Input() savingProductsTemplate: any;\n  @Input() currencyCode: FormControl;\n\n  chargeData: any;\n\n  chargesDataSource: {}[];\n  displayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType', 'action'];\n\n  pristine = true;\n\n  constructor(public dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n    this.chargeData = this.savingProductsTemplate.chargeOptions;\n\n    this.chargesDataSource = this.savingProductsTemplate.charges || [];\n    this.pristine = true;\n\n    this.currencyCode.valueChanges.subscribe(() => this.chargesDataSource = []);\n  }\n\n  addCharge(charge: any) {\n    this.chargesDataSource = this.chargesDataSource.concat([charge.value]);\n    charge.value = '';\n    this.pristine = false;\n  }\n\n  deleteCharge(charge: any) {\n    const deleteChargeDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `charge ${charge.name}` }\n    });\n    deleteChargeDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1);\n        this.chargesDataSource = this.chargesDataSource.concat([]);\n        this.pristine = false;\n      }\n    });\n  }\n\n  get savingProductCharges() {\n    return {\n      charges: this.chargesDataSource\n    };\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"savingProductCurrencyForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Currency</mat-label>\\n      <mat-select formControlName=\\\"currencyCode\\\" required>\\n        <mat-option *ngFor=\\\"let currency of currencyData\\\" [value]=\\\"currency.code\\\">\\n          {{ currency.name }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Currency is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Decimal Places</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"digitsAfterDecimal\\\" required>\\n      <mat-error>\\n        Decimal Places is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Currency in multiples of</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"inMultiplesOf\\\" required>\\n      <mat-error>\\n        Currency in multiples of is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext>\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \".margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NhdmluZy1wcm9kdWN0cy9zYXZpbmctcHJvZHVjdC1zdGVwcGVyL3NhdmluZy1wcm9kdWN0LWN1cnJlbmN5LXN0ZXAvc2F2aW5nLXByb2R1Y3QtY3VycmVuY3ktc3RlcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3NhdmluZy1wcm9kdWN0cy9zYXZpbmctcHJvZHVjdC1zdGVwcGVyL3NhdmluZy1wcm9kdWN0LWN1cnJlbmN5LXN0ZXAvc2F2aW5nLXByb2R1Y3QtY3VycmVuY3ktc3RlcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXJnaW4tdCB7XG4gIG1hcmdpbi10b3A6IDFlbTtcbn1cbiJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'mifosx-saving-product-currency-step',\n  templateUrl: './saving-product-currency-step.component.html',\n  styleUrls: ['./saving-product-currency-step.component.scss']\n})\nexport class SavingProductCurrencyStepComponent implements OnInit {\n\n  @Input() savingProductsTemplate: any;\n\n  savingProductCurrencyForm: FormGroup;\n\n  currencyData: any;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.createSavingProductCurrencyForm();\n  }\n\n  ngOnInit() {\n    this.currencyData = this.savingProductsTemplate.currencyOptions;\n\n    this.savingProductCurrencyForm.patchValue({\n      'currencyCode': this.savingProductsTemplate.currency.code || this.currencyData[0].code,\n      'digitsAfterDecimal': this.savingProductsTemplate.currency.code ? this.savingProductsTemplate.currency.decimalPlaces : 2,\n      'inMultiplesOf': this.savingProductsTemplate.currency.inMultiplesOf\n    });\n  }\n\n  createSavingProductCurrencyForm() {\n    this.savingProductCurrencyForm = this.formBuilder.group({\n      'currencyCode': ['', Validators.required],\n      'digitsAfterDecimal': ['', Validators.required],\n      'inMultiplesOf': ['', Validators.required]\n    });\n  }\n\n  get savingProductCurrency() {\n    return this.savingProductCurrencyForm.value;\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"savingProductDetailsForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Product Name</mat-label>\\n      <input matInput formControlName=\\\"name\\\" required>\\n      <mat-error>\\n        Product Name is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Short Name</mat-label>\\n      <input matInput formControlName=\\\"shortName\\\" maxlength=\\\"4\\\" required>\\n      <mat-error>\\n        Short Name is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"98%\\\">\\n      <mat-label>Description</mat-label>\\n      <textarea matInput formControlName=\\\"description\\\"></textarea>\\n    </mat-form-field>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious disabled>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext>\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \".margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NhdmluZy1wcm9kdWN0cy9zYXZpbmctcHJvZHVjdC1zdGVwcGVyL3NhdmluZy1wcm9kdWN0LWRldGFpbHMtc3RlcC9zYXZpbmctcHJvZHVjdC1kZXRhaWxzLXN0ZXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0cy9zYXZpbmctcHJvZHVjdHMvc2F2aW5nLXByb2R1Y3Qtc3RlcHBlci9zYXZpbmctcHJvZHVjdC1kZXRhaWxzLXN0ZXAvc2F2aW5nLXByb2R1Y3QtZGV0YWlscy1zdGVwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hcmdpbi10IHtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuIl19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'mifosx-saving-product-details-step',\n  templateUrl: './saving-product-details-step.component.html',\n  styleUrls: ['./saving-product-details-step.component.scss']\n})\nexport class SavingProductDetailsStepComponent implements OnInit {\n\n  @Input() savingProductsTemplate: any;\n\n  savingProductDetailsForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.createSavingProductDetailsForm();\n  }\n\n  ngOnInit() {\n    if (this.savingProductsTemplate) {\n      this.savingProductDetailsForm.patchValue({\n        'name': this.savingProductsTemplate.name,\n        'shortName': this.savingProductsTemplate.shortName,\n        'description': this.savingProductsTemplate.description\n      });\n    }\n  }\n\n  createSavingProductDetailsForm() {\n    this.savingProductDetailsForm = this.formBuilder.group({\n      'name': ['', Validators.required],\n      'shortName': ['', Validators.required],\n      'description': ['']\n    });\n  }\n\n  get savingProductDetails() {\n    return this.savingProductDetailsForm.value;\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n  <h2 class=\\\"mat-h2\\\" fxFlexFill>{{ savingProduct.name }}</h2>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Details</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Short Name:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.shortName }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"savingProduct.description\\\">\\n    <span fxFlex=\\\"40%\\\">Description:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.description }}</span>\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Currency</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Currency:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.currencyCode | find:savingProductsTemplate.currencyOptions:'code':'name' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Decimal Places:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.digitsAfterDecimal }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Currency in multiples of:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.inMultiplesOf }}</span>\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Terms</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Nominal Annual Interest Rate:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.nominalAnnualInterestRate }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Interest Compounding Period:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.interestCompoundingPeriodType | find:savingProductsTemplate.interestCompoundingPeriodTypeOptions:'id':'value' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Interest Posting Period:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.interestPostingPeriodType | find:savingProductsTemplate.interestPostingPeriodTypeOptions:'id':'value' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Interest Calculated using:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.interestCalculationType | find:savingProductsTemplate.interestCalculationTypeOptions:'id':'value' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Days in Year:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.interestCalculationDaysInYearType | find:savingProductsTemplate.interestCalculationDaysInYearTypeOptions:'id':'value' }}</span>\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Settings</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill *ngIf=\\\"savingProduct.minRequiredOpeningBalance\\\">\\n    <span fxFlex=\\\"40%\\\">Minimum Opening Balance:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.minRequiredOpeningBalance }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"savingProduct.lockinPeriodFrequency\\\">\\n    <span fxFlex=\\\"40%\\\">Lock-in Period:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.lockinPeriodFrequency + ' ' + (savingProduct.lockinPeriodFrequencyType | find:savingProductsTemplate.lockinPeriodFrequencyTypeOptions:'id':'value') }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Apply Withdrawal Fee for Transfers:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.withdrawalFeeForTransfers ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"savingProduct.minBalanceForInterestCalculation\\\">\\n    <span fxFlex=\\\"40%\\\">Balance Required for Interest Calculation:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.minBalanceForInterestCalculation }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Enforce Minimum Balance:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.enforceMinRequiredBalance ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"savingProduct.minRequiredBalance\\\">\\n    <span fxFlex=\\\"40%\\\">Minimum Balance:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.minRequiredBalance }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Withhold Tax is Applicable:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.withHoldTax ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"savingProduct.withHoldTax\\\">\\n    <span fxFlex=\\\"40%\\\">Tax Group:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.taxGroupId | find:savingProductsTemplate.taxGroupOptions:'id':'name' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Is Overdraft Allowed:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.allowOverdraft ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"savingProduct.minOverdraftForInterestCalculation\\\">\\n    <span fxFlex=\\\"40%\\\">Minimum Overdraft Required for Interest Calculation:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.minOverdraftForInterestCalculation }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"savingProduct.nominalAnnualInterestRateOverdraft\\\">\\n    <span fxFlex=\\\"40%\\\">Nominal Annual Interest for Overdraft:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.nominalAnnualInterestRateOverdraft }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"savingProduct.overdraftLimit\\\">\\n    <span fxFlex=\\\"40%\\\">Maximum Overdraft Amount Limit:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.overdraftLimit }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Enable Dormancy Tracking:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.isDormancyTrackingActive ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"savingProduct.isDormancyTrackingActive\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n    <span fxFlex=\\\"40%\\\">Number of Days to Inactive sub-status:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.daysToInactive }}</span>\\n    <span fxFlex=\\\"40%\\\">Number of Days to Dormant sub-status:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.daysToDormancy }}</span>\\n    <span fxFlex=\\\"40%\\\">Number of Days to Escheat:</span>\\n    <span fxFlex=\\\"60%\\\">{{ savingProduct.daysToEscheat }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"savingProduct.charges.length\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <h3 class=\\\"mat-h3\\\" fxFlexFill>Charges</h3>\\n\\n    <mat-divider fxFlexFill></mat-divider>\\n\\n    <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"savingProduct.charges\\\">\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Name </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\">\\n          {{ charge.name + ', ' + charge.currency.displaySymbol }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"chargeCalculationType\\\">\\n        <th mat-header-cell *matHeaderCellDef> Type </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\">\\n          {{ charge.chargeCalculationType.value }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"amount\\\">\\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\">\\n          {{ charge.amount  }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"chargeTimeType\\\">\\n        <th mat-header-cell *matHeaderCellDef> Collected On </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\">\\n          {{ charge.chargeTimeType.value }}\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"chargesDisplayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: chargesDisplayedColumns;\\\"></tr>\\n\\n    </table>\\n\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Accounting</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Type:</span>\\n    <span fxFlex=\\\"60%\\\">{{ accountingRuleData[savingProduct.accountingRule-1] }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"savingProduct.accountingRule === 2\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <h4 fxFlexFill class=\\\"mat-h4\\\">Assets</h4>\\n\\n    <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n      <span fxFlex=\\\"40%\\\">Saving reference:</span>\\n      <span fxFlex=\\\"60%\\\">{{ savingProduct.savingsReferenceAccountId | find:savingProductsTemplate.accountingMappingOptions.assetAccountOptions:'id':'name' }}</span>\\n      <span fxFlex=\\\"40%\\\">Overdraft portfolio:</span>\\n      <span fxFlex=\\\"60%\\\">{{ savingProduct.overdraftPortfolioControlId | find:savingProductsTemplate.accountingMappingOptions.assetAccountOptions:'id':'name' }}</span>\\n    </div>\\n\\n    <h4 fxFlexFill class=\\\"mat-h4\\\">Liabilities</h4>\\n\\n    <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n      <span fxFlex=\\\"40%\\\">Saving control:</span>\\n      <span fxFlex=\\\"60%\\\">{{ savingProduct.savingsControlAccountId | find:savingProductsTemplate.accountingMappingOptions.liabilityAccountOptions:'id':'name' }}</span>\\n      <span fxFlex=\\\"40%\\\">Savings transfers in suspense:</span>\\n      <span fxFlex=\\\"60%\\\">{{ savingProduct.transfersInSuspenseAccountId | find:savingProductsTemplate.accountingMappingOptions.liabilityAccountOptions:'id':'name' }}</span>\\n      <div fxFlexFill *ngIf=\\\"savingProduct.isDormancyTrackingActive\\\">\\n        <span fxFlex=\\\"40%\\\">Escheat liability:</span>\\n        <span fxFlex=\\\"60%\\\">{{ savingProduct.escheatLiabilityId | find:savingProductsTemplate.accountingMappingOptions.liabilityAccountOptions:'id':'name' }}</span>\\n      </div>\\n    </div>\\n\\n    <h4 fxFlexFill class=\\\"mat-h4\\\">Expenses</h4>\\n\\n    <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n      <span fxFlex=\\\"40%\\\">Interest on savings:</span>\\n      <span fxFlex=\\\"60%\\\">{{ savingProduct.interestOnSavingsAccountId | find:savingProductsTemplate.accountingMappingOptions.expenseAccountOptions:'id':'name' }}</span>\\n      <span fxFlex=\\\"40%\\\">Write-off:</span>\\n      <span fxFlex=\\\"60%\\\">{{ savingProduct.writeOffAccountId | find:savingProductsTemplate.accountingMappingOptions.expenseAccountOptions:'id':'name' }}</span>\\n    </div>\\n\\n    <h4 fxFlexFill class=\\\"mat-h4\\\">Income</h4>\\n\\n    <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n      <span fxFlex=\\\"40%\\\">Income from fees:</span>\\n      <span fxFlex=\\\"60%\\\">{{ savingProduct.incomeFromFeeAccountId | find:savingProductsTemplate.accountingMappingOptions.incomeAccountOptions:'id':'name' }}</span>\\n      <span fxFlex=\\\"40%\\\">Income from penalties:</span>\\n      <span fxFlex=\\\"60%\\\">{{ savingProduct.incomeFromPenaltyAccountId | find:savingProductsTemplate.accountingMappingOptions.incomeAccountOptions:'id':'name' }}</span>\\n      <span fxFlex=\\\"40%\\\">Overdraft Interest Income:</span>\\n      <span fxFlex=\\\"60%\\\">{{ savingProduct.incomeFromInterestId | find:savingProductsTemplate.accountingMappingOptions.incomeAccountOptions:'id':'name' }}</span>\\n    </div>\\n\\n    <div *ngIf=\\\"savingProduct.advancedAccountingRules && (savingProduct.paymentChannelToFundSourceMappings?.length || savingProduct.feeToIncomeAccountMappings?.length || savingProduct.penaltyToIncomeAccountMappings?.length)\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <h3 class=\\\"mat-h3\\\" fxFlexFill>Advanced Accounting Rules</h3>\\n\\n      <mat-divider fxFlexFill></mat-divider>\\n\\n      <div *ngIf=\\\"savingProduct.paymentChannelToFundSourceMappings?.length\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <h4 class=\\\"mat-h4\\\" fxFlexFill>Fund Sources for Payment Channels</h4>\\n\\n        <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"savingProduct.paymentChannelToFundSourceMappings\\\">\\n\\n          <ng-container matColumnDef=\\\"paymentTypeId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Payment Type </th>\\n            <td mat-cell *matCellDef=\\\"let paymentFundSource\\\">\\n              {{ paymentFundSource.paymentTypeId | find:savingProductsTemplate.paymentTypeOptions:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"fundSourceAccountId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fund Source </th>\\n            <td mat-cell *matCellDef=\\\"let paymentFundSource\\\">\\n              {{ paymentFundSource.fundSourceAccountId | find:savingProductsTemplate.accountingMappingOptions.assetAccountOptions:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"paymentFundSourceDisplayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: paymentFundSourceDisplayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n      </div>\\n\\n      <div *ngIf=\\\"savingProduct.feeToIncomeAccountMappings?.length\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <h4 class=\\\"mat-h4\\\" fxFlexFill>Fees to Specific Income Accounts</h4>\\n\\n        <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"savingProduct.feeToIncomeAccountMappings\\\">\\n\\n          <ng-container matColumnDef=\\\"chargeId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Fees </th>\\n            <td mat-cell *matCellDef=\\\"let feesIncome\\\">\\n              {{ feesIncome.chargeId | find:savingProductsTemplate.chargeOptions:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"incomeAccountId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Income Account </th>\\n            <td mat-cell *matCellDef=\\\"let feesIncome\\\">\\n              {{ feesIncome.incomeAccountId | find:savingProductsTemplate.accountingMappingOptions.incomeAccountOptions:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"feesPenaltyIncomeDisplayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: feesPenaltyIncomeDisplayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n      </div>\\n\\n      <div *ngIf=\\\"savingProduct.penaltyToIncomeAccountMappings?.length\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <h4 class=\\\"mat-h4\\\" fxFlexFill>Penalties to Specific Income Accounts</h4>\\n\\n        <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"savingProduct.penaltyToIncomeAccountMappings\\\">\\n\\n          <ng-container matColumnDef=\\\"chargeId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Penalty </th>\\n            <td mat-cell *matCellDef=\\\"let penaltyIncome\\\">\\n              {{ penaltyIncome.chargeId  | find:savingProductsTemplate.penaltyOptions:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"incomeAccountId\\\">\\n            <th mat-header-cell *matHeaderCellDef> Income Account </th>\\n            <td mat-cell *matCellDef=\\\"let penaltyIncome\\\">\\n              {{ penaltyIncome.incomeAccountId | find:savingProductsTemplate.accountingMappingOptions.incomeAccountOptions:'id':'name' }}\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"feesPenaltyIncomeDisplayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: feesPenaltyIncomeDisplayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\\n<div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n  <button mat-raised-button matStepperPrevious>\\n    <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n    Previous\\n  </button>\\n  <button mat-raised-button [routerLink]=\\\"['../']\\\">\\n    Cancel\\n  </button>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"submit.emit()\\\">\\n    Submit\\n  </button>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-elevation-z1 {\\n  margin: 1em 0 1.5em 0; }\\n\\nh2, h3, h4 {\\n  margin: 0;\\n  font-weight: 500; }\\n\\nspan {\\n  margin: 0.5em 0; }\\n\\nmat-divider {\\n  margin: 0 0 0.5em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NhdmluZy1wcm9kdWN0cy9zYXZpbmctcHJvZHVjdC1zdGVwcGVyL3NhdmluZy1wcm9kdWN0LXByZXZpZXctc3RlcC9zYXZpbmctcHJvZHVjdC1wcmV2aWV3LXN0ZXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxxQkFBcUIsRUFBQTs7QUFHdkI7RUFDRSxTQUFTO0VBQ1QsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsZUFBZSxFQUFBOztBQUdqQjtFQUNFLG1CQUFtQixFQUFBOztBQUdyQjtFQUNFLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3NhdmluZy1wcm9kdWN0cy9zYXZpbmctcHJvZHVjdC1zdGVwcGVyL3NhdmluZy1wcm9kdWN0LXByZXZpZXctc3RlcC9zYXZpbmctcHJvZHVjdC1wcmV2aWV3LXN0ZXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWF0LWVsZXZhdGlvbi16MSB7XG4gIG1hcmdpbjogMWVtIDAgMS41ZW0gMDtcbn1cblxuaDIsIGgzLCBoNCB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuc3BhbiB7XG4gIG1hcmdpbjogMC41ZW0gMDtcbn1cblxubWF0LWRpdmlkZXIge1xuICBtYXJnaW46IDAgMCAwLjVlbSAwO1xufVxuXG4ubWFyZ2luLXQge1xuICBtYXJnaW4tdG9wOiAxZW07XG59XG4iXX0= */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'mifosx-saving-product-preview-step',\n  templateUrl: './saving-product-preview-step.component.html',\n  styleUrls: ['./saving-product-preview-step.component.scss']\n})\nexport class SavingProductPreviewStepComponent implements OnInit {\n\n  @Input() savingProductsTemplate: any;\n  @Input() accountingRuleData: any;\n  @Input() savingProduct: any;\n  @Output() submit = new EventEmitter();\n\n  chargesDisplayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType'];\n  paymentFundSourceDisplayedColumns: string[] = ['paymentTypeId', 'fundSourceAccountId'];\n  feesPenaltyIncomeDisplayedColumns: string[] = ['chargeId', 'incomeAccountId'];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"savingProductSettingsForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutAlign.gt-sm=\\\"start center\\\">\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Minimum Opening Balance</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"minRequiredOpeningBalance\\\">\\n    </mat-form-field>\\n    \\n    <span fxFlex=\\\"48%\\\" fxHide.lt-md></span>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Lock-in Period</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"lockinPeriodFrequency\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-select formControlName=\\\"lockinPeriodFrequencyType\\\">\\n        <mat-option *ngFor=\\\"let lockinPeriodFrequencyType of lockinPeriodFrequencyTypeData\\\" [value]=\\\"lockinPeriodFrequencyType.id\\\">\\n          {{ lockinPeriodFrequencyType.value }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-checkbox fxFlex=\\\"48%\\\" labelPosition=\\\"before\\\" formControlName=\\\"withdrawalFeeForTransfers\\\" class=\\\"margin-v\\\">\\n      Apply Withdrawal Fee for Transfers\\n    </mat-checkbox>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Balance Required for Interest Calculation</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"minBalanceForInterestCalculation\\\">\\n    </mat-form-field>\\n\\n    <mat-checkbox fxFlex=\\\"48%\\\" labelPosition=\\\"before\\\" formControlName=\\\"enforceMinRequiredBalance\\\" class=\\\"margin-v\\\">\\n      Enforce Minimum Balance\\n    </mat-checkbox>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Minimum Balance</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"minRequiredBalance\\\">\\n    </mat-form-field>\\n\\n    <mat-checkbox fxFlex=\\\"48%\\\" labelPosition=\\\"before\\\" formControlName=\\\"withHoldTax\\\" class=\\\"margin-v\\\">\\n      Is Withhold Tax Applicable?\\n    </mat-checkbox>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\" *ngIf=\\\"savingProductSettingsForm.value.withHoldTax\\\">\\n      <mat-label>Tax Group</mat-label>\\n      <mat-select formControlName=\\\"taxGroupId\\\" required>\\n        <mat-option *ngFor=\\\"let taxGroup of taxGroupData\\\" [value]=\\\"taxGroup.id\\\">\\n          {{ taxGroup.name }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Tax Group is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n    <h3 fxFlex=\\\"23%\\\" class=\\\"mat-h3\\\">Overdraft</h3>\\n\\n    <mat-checkbox fxFlex=\\\"73%\\\" labelPosition=\\\"before\\\" formControlName=\\\"allowOverdraft\\\" class=\\\"margin-b\\\">\\n      Is Overdraft Allowed?\\n    </mat-checkbox>\\n\\n    <div *ngIf=\\\"savingProductSettingsForm.value.allowOverdraft\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <mat-form-field fxFlex=\\\"31%\\\">\\n        <mat-label>Minimum Overdraft Required for Interest Calculation</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"minOverdraftForInterestCalculation\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"31%\\\">\\n        <mat-label>Nominal Annual Interest for Overdraft</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"nominalAnnualInterestRateOverdraft\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"31%\\\">\\n        <mat-label>Maximum Overdraft Amount Limit</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"overdraftLimit\\\">\\n      </mat-form-field>\\n\\n    </div>\\n\\n    <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n    <h3 fxFlex=\\\"23%\\\" class=\\\"mat-h3\\\">Dormancy Tracking</h3>\\n\\n    <mat-checkbox fxFlex=\\\"73%\\\" labelPosition=\\\"before\\\" formControlName=\\\"isDormancyTrackingActive\\\" class=\\\"margin-b\\\">\\n      Enable Dormancy Tracking\\n    </mat-checkbox>\\n\\n    <div *ngIf=\\\"savingProductSettingsForm.value.isDormancyTrackingActive\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <mat-form-field fxFlex=\\\"31%\\\">\\n        <mat-label>Number of Days to Inactive sub-status</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"daysToInactive\\\" required>\\n        <mat-error>\\n          Number of Days to Inactive sub-status is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"31%\\\">\\n        <mat-label>Number of Days to Dormant sub-status</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"daysToDormancy\\\" required>\\n        <mat-error>\\n          Number of Days to Dormant sub-status is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlex=\\\"31%\\\">\\n        <mat-label>Number of Days to Escheat</mat-label>\\n        <input type=\\\"number\\\" matInput formControlName=\\\"daysToEscheat\\\" required>\\n        <mat-error>\\n          Number of Days to Escheat is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n    </div>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext>\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \"h3 {\\n  font-weight: 500; }\\n\\nmat-divider {\\n  margin: 1em 0 2em 0; }\\n\\n.margin-v {\\n  margin: 1em 0; }\\n\\n.margin-b {\\n  margin: 0 0 1em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NhdmluZy1wcm9kdWN0cy9zYXZpbmctcHJvZHVjdC1zdGVwcGVyL3NhdmluZy1wcm9kdWN0LXNldHRpbmdzLXN0ZXAvc2F2aW5nLXByb2R1Y3Qtc2V0dGluZ3Mtc3RlcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQixFQUFBOztBQUdsQjtFQUNFLG1CQUFtQixFQUFBOztBQUdyQjtFQUNFLGFBQWEsRUFBQTs7QUFHZjtFQUNFLGlCQUFpQixFQUFBOztBQUduQjtFQUNFLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3NhdmluZy1wcm9kdWN0cy9zYXZpbmctcHJvZHVjdC1zdGVwcGVyL3NhdmluZy1wcm9kdWN0LXNldHRpbmdzLXN0ZXAvc2F2aW5nLXByb2R1Y3Qtc2V0dGluZ3Mtc3RlcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImgzIHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxubWF0LWRpdmlkZXIge1xuICBtYXJnaW46IDFlbSAwIDJlbSAwO1xufVxuXG4ubWFyZ2luLXYge1xuICBtYXJnaW46IDFlbSAwO1xufVxuXG4ubWFyZ2luLWIge1xuICBtYXJnaW46IDAgMCAxZW0gMDtcbn1cblxuLm1hcmdpbi10IHtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuIl19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'mifosx-saving-product-settings-step',\n  templateUrl: './saving-product-settings-step.component.html',\n  styleUrls: ['./saving-product-settings-step.component.scss']\n})\nexport class SavingProductSettingsStepComponent implements OnInit {\n\n  @Input() savingProductsTemplate: any;\n\n  savingProductSettingsForm: FormGroup;\n\n  lockinPeriodFrequencyTypeData: any;\n  taxGroupData: any;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.createSavingProductSettingsForm();\n    this.setConditionalControls();\n  }\n\n  ngOnInit() {\n    this.lockinPeriodFrequencyTypeData = this.savingProductsTemplate.lockinPeriodFrequencyTypeOptions;\n    this.taxGroupData = this.savingProductsTemplate.taxGroupOptions;\n\n    this.savingProductSettingsForm.patchValue({\n      'minRequiredOpeningBalance': this.savingProductsTemplate.minRequiredOpeningBalance,\n      'lockinPeriodFrequency': this.savingProductsTemplate.lockinPeriodFrequency,\n      'lockinPeriodFrequencyType': this.savingProductsTemplate.lockinPeriodFrequencyType && this.savingProductsTemplate.lockinPeriodFrequencyType.id,\n      'withdrawalFeeForTransfers': this.savingProductsTemplate.withdrawalFeeForTransfers,\n      'minBalanceForInterestCalculation': this.savingProductsTemplate.minBalanceForInterestCalculation,\n      'enforceMinRequiredBalance': this.savingProductsTemplate.enforceMinRequiredBalance,\n      'minRequiredBalance': this.savingProductsTemplate.minRequiredBalance,\n      'allowOverdraft': this.savingProductsTemplate.allowOverdraft,\n      'minOverdraftForInterestCalculation': this.savingProductsTemplate.minOverdraftForInterestCalculation,\n      'nominalAnnualInterestRateOverdraft': this.savingProductsTemplate.nominalAnnualInterestRateOverdraft,\n      'overdraftLimit': this.savingProductsTemplate.overdraftLimit,\n      'withHoldTax': this.savingProductsTemplate.withHoldTax,\n      'taxGroupId': this.savingProductsTemplate.taxGroup && this.savingProductsTemplate.taxGroup.id,\n      'isDormancyTrackingActive': this.savingProductsTemplate.isDormancyTrackingActive,\n      'daysToInactive': this.savingProductsTemplate.daysToInactive,\n      'daysToDormancy': this.savingProductsTemplate.daysToDormancy,\n      'daysToEscheat': this.savingProductsTemplate.daysToEscheat\n    });\n  }\n\n  createSavingProductSettingsForm() {\n    this.savingProductSettingsForm = this.formBuilder.group({\n      'minRequiredOpeningBalance': [''],\n      'lockinPeriodFrequency': [''],\n      'lockinPeriodFrequencyType': [''],\n      'withdrawalFeeForTransfers': [false],\n      'minBalanceForInterestCalculation': [''],\n      'enforceMinRequiredBalance': [false],\n      'minRequiredBalance': [''],\n      'allowOverdraft': [false],\n      'withHoldTax': [false],\n      'isDormancyTrackingActive': [false]\n    });\n  }\n\n  setConditionalControls() {\n    this.savingProductSettingsForm.get('allowOverdraft').valueChanges\n      .subscribe((allowOverdraft: any) => {\n        if (allowOverdraft) {\n          this.savingProductSettingsForm.addControl('minOverdraftForInterestCalculation', new FormControl(''));\n          this.savingProductSettingsForm.addControl('nominalAnnualInterestRateOverdraft', new FormControl(''));\n          this.savingProductSettingsForm.addControl('overdraftLimit', new FormControl(''));\n        } else {\n          this.savingProductSettingsForm.removeControl('minOverdraftForInterestCalculation');\n          this.savingProductSettingsForm.removeControl('nominalAnnualInterestRateOverdraft');\n          this.savingProductSettingsForm.removeControl('overdraftLimit');\n        }\n      });\n\n    this.savingProductSettingsForm.get('withHoldTax').valueChanges\n      .subscribe((withHoldTax: any) => {\n        if (withHoldTax) {\n          this.savingProductSettingsForm.addControl('taxGroupId', new FormControl('', Validators.required));\n        } else {\n          this.savingProductSettingsForm.removeControl('taxGroupId');\n        }\n      });\n\n    this.savingProductSettingsForm.get('isDormancyTrackingActive').valueChanges\n      .subscribe((isDormancyTrackingActive: any) => {\n        if (isDormancyTrackingActive) {\n          this.savingProductSettingsForm.addControl('daysToInactive', new FormControl('', Validators.required));\n          this.savingProductSettingsForm.addControl('daysToDormancy', new FormControl('', Validators.required));\n          this.savingProductSettingsForm.addControl('daysToEscheat', new FormControl('', Validators.required));\n        } else {\n          this.savingProductSettingsForm.removeControl('daysToInactive');\n          this.savingProductSettingsForm.removeControl('daysToDormancy');\n          this.savingProductSettingsForm.removeControl('daysToEscheat');\n        }\n      });\n  }\n\n  get savingProductSettings() {\n    return this.savingProductSettingsForm.value;\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"savingProductTermsForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Nominal Annual Interest Rate</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"nominalAnnualInterestRate\\\" required>\\n      <mat-error>\\n        Nominal Annual Interest is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <span fxFlex=\\\"48%\\\" fxHide.lt-md></span>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Interest Compounding Period</mat-label>\\n      <mat-select formControlName=\\\"interestCompoundingPeriodType\\\" required>\\n        <mat-option *ngFor=\\\"let interestCompoundingPeriodType of interestCompoundingPeriodTypeData\\\" [value]=\\\"interestCompoundingPeriodType.id\\\">\\n          {{ interestCompoundingPeriodType.value }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Interest Compounding Period is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Interest Posting Period</mat-label>\\n      <mat-select formControlName=\\\"interestPostingPeriodType\\\" required>\\n        <mat-option *ngFor=\\\"let interestPostingPeriodType of interestPostingPeriodTypeData\\\" [value]=\\\"interestPostingPeriodType.id\\\">\\n          {{ interestPostingPeriodType.value }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Interest Posting Period is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Interest Calculated using</mat-label>\\n      <mat-select formControlName=\\\"interestCalculationType\\\" required>\\n        <mat-option *ngFor=\\\"let interestCalculationType of interestCalculationTypeData\\\" [value]=\\\"interestCalculationType.id\\\">\\n          {{ interestCalculationType.value }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Interest Calculated using is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Days in Year</mat-label>\\n      <mat-select formControlName=\\\"interestCalculationDaysInYearType\\\" required>\\n        <mat-option *ngFor=\\\"let interestCalculationDaysInYearType of interestCalculationDaysInYearTypeData\\\" [value]=\\\"interestCalculationDaysInYearType.id\\\">\\n          {{ interestCalculationDaysInYearType.value }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Days in Year is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext>\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \".margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NhdmluZy1wcm9kdWN0cy9zYXZpbmctcHJvZHVjdC1zdGVwcGVyL3NhdmluZy1wcm9kdWN0LXRlcm1zLXN0ZXAvc2F2aW5nLXByb2R1Y3QtdGVybXMtc3RlcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3NhdmluZy1wcm9kdWN0cy9zYXZpbmctcHJvZHVjdC1zdGVwcGVyL3NhdmluZy1wcm9kdWN0LXRlcm1zLXN0ZXAvc2F2aW5nLXByb2R1Y3QtdGVybXMtc3RlcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXJnaW4tdCB7XG4gIG1hcmdpbi10b3A6IDFlbTtcbn1cbiJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'mifosx-saving-product-terms-step',\n  templateUrl: './saving-product-terms-step.component.html',\n  styleUrls: ['./saving-product-terms-step.component.scss']\n})\nexport class SavingProductTermsStepComponent implements OnInit {\n\n  @Input() savingProductsTemplate: any;\n\n  savingProductTermsForm: FormGroup;\n\n  interestCompoundingPeriodTypeData: any;\n  interestPostingPeriodTypeData: any;\n  interestCalculationTypeData: any;\n  interestCalculationDaysInYearTypeData: any;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.createSavingProductTermsForm();\n  }\n\n  ngOnInit() {\n    this.interestCompoundingPeriodTypeData = this.savingProductsTemplate.interestCompoundingPeriodTypeOptions;\n    this.interestPostingPeriodTypeData = this.savingProductsTemplate.interestPostingPeriodTypeOptions;\n    this.interestCalculationTypeData = this.savingProductsTemplate.interestCalculationTypeOptions;\n    this.interestCalculationDaysInYearTypeData = this.savingProductsTemplate.interestCalculationDaysInYearTypeOptions;\n\n    this.savingProductTermsForm.patchValue({\n      'nominalAnnualInterestRate': this.savingProductsTemplate.nominalAnnualInterestRate,\n      'interestCompoundingPeriodType': this.savingProductsTemplate.interestCompoundingPeriodType.id,\n      'interestPostingPeriodType': this.savingProductsTemplate.interestPostingPeriodType.id,\n      'interestCalculationType': this.savingProductsTemplate.interestCalculationType.id,\n      'interestCalculationDaysInYearType': this.savingProductsTemplate.interestCalculationDaysInYearType.id\n    });\n  }\n\n  createSavingProductTermsForm() {\n    this.savingProductTermsForm = this.formBuilder.group({\n      'nominalAnnualInterestRate': ['', Validators.required],\n      'interestCompoundingPeriodType': ['', Validators.required],\n      'interestPostingPeriodType': ['', Validators.required],\n      'interestCalculationType': ['', Validators.required],\n      'interestCalculationDaysInYearType': ['', Validators.required]\n    });\n  }\n\n  get savingProductTerms() {\n    return this.savingProductTermsForm.value;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../products.service';\n\n/**\n * Saving Product data resolver.\n */\n@Injectable()\nexport class SavingProductResolver implements Resolve<Object> {\n\n  /**\n   * @param {ProductsService} productsService Products service.\n   */\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the saving product data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const id = route.paramMap.get('id');\n    return this.productsService.getSavingProduct(id);\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../products.service';\n\n@Injectable()\nexport class SavingProductsTemplateResolver implements Resolve<Object> {\n\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the saving products template data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.productsService.getSavingProductsTemplate();\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['create']\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Saving Product\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let savingProduct\\\"> {{ savingProduct.name }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"shortName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Short Name </th>\\n        <td mat-cell *matCellDef=\\\"let savingProduct\\\"> {{ savingProduct.shortName }} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id]\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NhdmluZy1wcm9kdWN0cy9zYXZpbmctcHJvZHVjdHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7RUFEYjtJQUlJLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3NhdmluZy1wcm9kdWN0cy9zYXZpbmctcHJvZHVjdHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuXG4gIC5zZWxlY3Qtcm93OmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'mifosx-saving-products',\n  templateUrl: './saving-products.component.html',\n  styleUrls: ['./saving-products.component.scss']\n})\nexport class SavingProductsComponent implements OnInit {\n\n  savingProductsData: any;\n  displayedColumns: string[] = ['name', 'shortName'];\n  dataSource: MatTableDataSource<any>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { savingProducts: any }) => {\n      this.savingProductsData = data.savingProducts;\n    });\n  }\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource(this.savingProductsData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../products.service';\n\n/**\n * Saving products data resolver.\n */\n@Injectable()\nexport class SavingProductsResolver implements Resolve<Object> {\n\n  /**\n   *\n   * @param {ProductsService} productsService Products service.\n   */\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the saving products data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.productsService.getSavingProducts();\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" class=\\\"container m-b-20\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['edit']\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-content>\\n\\n      <div fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <h2 class=\\\"mat-h2\\\" fxFlexFill>{{ savingProduct.name }}</h2>\\n      \\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      \\n        <h3 class=\\\"mat-h3\\\" fxFlexFill>Details</h3>\\n      \\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Short Name:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.shortName }}</span>\\n        </div>\\n      \\n        <div fxFlexFill *ngIf=\\\"savingProduct.description\\\">\\n          <span fxFlex=\\\"40%\\\">Description:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.description }}</span>\\n        </div>\\n      \\n        <h3 class=\\\"mat-h3\\\" fxFlexFill>Currency</h3>\\n      \\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Currency:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.currency.name }}</span>\\n        </div>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Decimal Places:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.currency.decimalPlaces }}</span>\\n        </div>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Currency in multiples of:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.currency.inMultiplesOf }}</span>\\n        </div>\\n      \\n        <h3 class=\\\"mat-h3\\\" fxFlexFill>Terms</h3>\\n      \\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Nominal Annual Interest Rate:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.nominalAnnualInterestRate }}</span>\\n        </div>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Interest Compounding Period:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.interestCompoundingPeriodType.value }}</span>\\n        </div>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Interest Posting Period:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.interestPostingPeriodType.value }}</span>\\n        </div>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Interest Calculated using:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.interestCalculationType.value }}</span>\\n        </div>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Days in Year:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.interestCalculationDaysInYearType.value }}</span>\\n        </div>\\n      \\n        <h3 class=\\\"mat-h3\\\" fxFlexFill>Settings</h3>\\n      \\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      \\n        <div fxFlexFill *ngIf=\\\"savingProduct.minRequiredOpeningBalance\\\">\\n          <span fxFlex=\\\"40%\\\">Minimum Opening Balance:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.minRequiredOpeningBalance }}</span>\\n        </div>\\n      \\n        <div fxFlexFill *ngIf=\\\"savingProduct.lockinPeriodFrequency\\\">\\n          <span fxFlex=\\\"40%\\\">Lock-in Period:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.lockinPeriodFrequency + ' ' + savingProduct.lockinPeriodFrequencyType.value }}</span>\\n        </div>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Apply Withdrawal Fee for Transfers:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.withdrawalFeeForTransfers ? 'Yes' : 'No' }}</span>\\n        </div>\\n      \\n        <div fxFlexFill *ngIf=\\\"savingProduct.minBalanceForInterestCalculation\\\">\\n          <span fxFlex=\\\"40%\\\">Balance Required for Interest Calculation:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.minBalanceForInterestCalculation }}</span>\\n        </div>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Enforce Minimum Balance:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.enforceMinRequiredBalance ? 'Yes' : 'No' }}</span>\\n        </div>\\n      \\n        <div fxFlexFill *ngIf=\\\"savingProduct.minRequiredBalance\\\">\\n          <span fxFlex=\\\"40%\\\">Minimum Balance:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.minRequiredBalance }}</span>\\n        </div>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Withhold Tax is Applicable:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.withHoldTax ? 'Yes' : 'No' }}</span>\\n        </div>\\n      \\n        <div fxFlexFill *ngIf=\\\"savingProduct.withHoldTax\\\">\\n          <span fxFlex=\\\"40%\\\">Tax Group:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.taxGroup.name }}</span>\\n        </div>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Is Overdraft Allowed:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.allowOverdraft ? 'Yes' : 'No' }}</span>\\n        </div>\\n      \\n        <div fxFlexFill *ngIf=\\\"savingProduct.minOverdraftForInterestCalculation\\\">\\n          <span fxFlex=\\\"40%\\\">Minimum Overdraft Required for Interest Calculation:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.minOverdraftForInterestCalculation }}</span>\\n        </div>\\n      \\n        <div fxFlexFill *ngIf=\\\"savingProduct.nominalAnnualInterestRateOverdraft\\\">\\n          <span fxFlex=\\\"40%\\\">Nominal Annual Interest for Overdraft:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.nominalAnnualInterestRateOverdraft }}</span>\\n        </div>\\n      \\n        <div fxFlexFill *ngIf=\\\"savingProduct.overdraftLimit\\\">\\n          <span fxFlex=\\\"40%\\\">Maximum Overdraft Amount Limit:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.overdraftLimit }}</span>\\n        </div>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Enable Dormancy Tracking:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.isDormancyTrackingActive ? 'Yes' : 'No' }}</span>\\n        </div>\\n      \\n        <div fxFlexFill *ngIf=\\\"savingProduct.isDormancyTrackingActive\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n          <span fxFlex=\\\"40%\\\">Number of Days to Inactive sub-status:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.daysToInactive }}</span>\\n          <span fxFlex=\\\"40%\\\">Number of Days to Dormant sub-status:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.daysToDormancy }}</span>\\n          <span fxFlex=\\\"40%\\\">Number of Days to Escheat:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.daysToEscheat }}</span>\\n        </div>\\n      \\n        <div fxFlexFill *ngIf=\\\"savingProduct.charges.length\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n      \\n          <h3 class=\\\"mat-h3\\\" fxFlexFill>Charges</h3>\\n      \\n          <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      \\n          <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"savingProduct.charges\\\">\\n      \\n            <ng-container matColumnDef=\\\"name\\\">\\n              <th mat-header-cell *matHeaderCellDef> Name </th>\\n              <td mat-cell *matCellDef=\\\"let charge\\\">\\n                {{ charge.name + ', ' + charge.currency.displaySymbol }}\\n              </td>\\n            </ng-container>\\n      \\n            <ng-container matColumnDef=\\\"chargeCalculationType\\\">\\n              <th mat-header-cell *matHeaderCellDef> Type </th>\\n              <td mat-cell *matCellDef=\\\"let charge\\\">\\n                {{ charge.chargeCalculationType.value }}\\n              </td>\\n            </ng-container>\\n      \\n            <ng-container matColumnDef=\\\"amount\\\">\\n              <th mat-header-cell *matHeaderCellDef> Amount </th>\\n              <td mat-cell *matCellDef=\\\"let charge\\\">\\n                {{ charge.amount  }}\\n              </td>\\n            </ng-container>\\n      \\n            <ng-container matColumnDef=\\\"chargeTimeType\\\">\\n              <th mat-header-cell *matHeaderCellDef> Collected On </th>\\n              <td mat-cell *matCellDef=\\\"let charge\\\">\\n                {{ charge.chargeTimeType.value }}\\n              </td>\\n            </ng-container>\\n      \\n            <tr mat-header-row *matHeaderRowDef=\\\"chargesDisplayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: chargesDisplayedColumns;\\\"></tr>\\n      \\n          </table>\\n      \\n        </div>\\n      \\n        <h3 class=\\\"mat-h3\\\" fxFlexFill>Accounting</h3>\\n      \\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Type:</span>\\n          <span fxFlex=\\\"60%\\\">{{ savingProduct.accountingRule.value }}</span>\\n        </div>\\n      \\n        <div fxFlexFill *ngIf=\\\"savingProduct.accountingRule.id === 2\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n      \\n          <h4 fxFlexFill class=\\\"mat-h4\\\">Assets</h4>\\n      \\n          <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n            <span fxFlex=\\\"40%\\\">Saving reference:</span>\\n            <span fxFlex=\\\"60%\\\">{{ savingProduct.accountingMappings.savingsReferenceAccount.name }}</span>\\n            <span fxFlex=\\\"40%\\\">Overdraft portfolio:</span>\\n            <span fxFlex=\\\"60%\\\">{{ savingProduct.accountingMappings.overdraftPortfolioControl.name }}</span>\\n          </div>\\n      \\n          <h4 fxFlexFill class=\\\"mat-h4\\\">Liabilities</h4>\\n      \\n          <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n            <span fxFlex=\\\"40%\\\">Saving control:</span>\\n            <span fxFlex=\\\"60%\\\">{{ savingProduct.accountingMappings.savingsControlAccount.name }}</span>\\n            <span fxFlex=\\\"40%\\\">Savings transfers in suspense:</span>\\n            <span fxFlex=\\\"60%\\\">{{ savingProduct.accountingMappings.transfersInSuspenseAccount.name }}</span>\\n            <div fxFlexFill *ngIf=\\\"savingProduct.isDormancyTrackingActive\\\">\\n              <span fxFlex=\\\"40%\\\">Escheat liability:</span>\\n              <span fxFlex=\\\"60%\\\">{{ savingProduct.accountingMappings.escheatLiabilityAccount.name }}</span>\\n            </div>\\n          </div>\\n      \\n          <h4 fxFlexFill class=\\\"mat-h4\\\">Expenses</h4>\\n      \\n          <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n            <span fxFlex=\\\"40%\\\">Interest on savings:</span>\\n            <span fxFlex=\\\"60%\\\">{{ savingProduct.accountingMappings.interestOnSavingsAccount.name }}</span>\\n            <span fxFlex=\\\"40%\\\">Write-off:</span>\\n            <span fxFlex=\\\"60%\\\">{{ savingProduct.accountingMappings.writeOffAccount.name }}</span>\\n          </div>\\n      \\n          <h4 fxFlexFill class=\\\"mat-h4\\\">Income</h4>\\n      \\n          <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n            <span fxFlex=\\\"40%\\\">Income from fees:</span>\\n            <span fxFlex=\\\"60%\\\">{{ savingProduct.accountingMappings.incomeFromFeeAccount.name }}</span>\\n            <span fxFlex=\\\"40%\\\">Income from penalties:</span>\\n            <span fxFlex=\\\"60%\\\">{{ savingProduct.accountingMappings.incomeFromPenaltyAccount.name }}</span>\\n            <span fxFlex=\\\"40%\\\">Overdraft Interest Income:</span>\\n            <span fxFlex=\\\"60%\\\">{{ savingProduct.accountingMappings.incomeFromInterest.name }}</span>\\n          </div>\\n      \\n          <div *ngIf=\\\"savingProduct.paymentChannelToFundSourceMappings?.length || savingProduct.feeToIncomeAccountMappings?.length || savingProduct.penaltyToIncomeAccountMappings?.length\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n      \\n            <h3 class=\\\"mat-h3\\\" fxFlexFill>Advanced Accounting Rules</h3>\\n      \\n            <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      \\n            <div *ngIf=\\\"savingProduct.paymentChannelToFundSourceMappings?.length\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n      \\n              <h4 class=\\\"mat-h4\\\" fxFlexFill>Fund Sources for Payment Channels</h4>\\n      \\n              <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"savingProduct.paymentChannelToFundSourceMappings\\\">\\n      \\n                <ng-container matColumnDef=\\\"paymentTypeId\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Payment Type </th>\\n                  <td mat-cell *matCellDef=\\\"let paymentFundSource\\\">\\n                    {{ paymentFundSource.paymentType.name }}\\n                  </td>\\n                </ng-container>\\n      \\n                <ng-container matColumnDef=\\\"fundSourceAccountId\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Fund Source </th>\\n                  <td mat-cell *matCellDef=\\\"let paymentFundSource\\\">\\n                    {{ paymentFundSource.fundSourceAccount.name }}\\n                  </td>\\n                </ng-container>\\n      \\n                <tr mat-header-row *matHeaderRowDef=\\\"paymentFundSourceDisplayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: paymentFundSourceDisplayedColumns;\\\"></tr>\\n      \\n              </table>\\n      \\n            </div>\\n      \\n            <div *ngIf=\\\"savingProduct.feeToIncomeAccountMappings?.length\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n      \\n              <h4 class=\\\"mat-h4\\\" fxFlexFill>Fees to Specific Income Accounts</h4>\\n      \\n              <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"savingProduct.feeToIncomeAccountMappings\\\">\\n      \\n                <ng-container matColumnDef=\\\"chargeId\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Fees </th>\\n                  <td mat-cell *matCellDef=\\\"let feesIncome\\\">\\n                    {{ feesIncome.charge.name }}\\n                  </td>\\n                </ng-container>\\n      \\n                <ng-container matColumnDef=\\\"incomeAccountId\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Income Account </th>\\n                  <td mat-cell *matCellDef=\\\"let feesIncome\\\">\\n                    {{ feesIncome.incomeAccount.name }}\\n                  </td>\\n                </ng-container>\\n      \\n                <tr mat-header-row *matHeaderRowDef=\\\"feesPenaltyIncomeDisplayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: feesPenaltyIncomeDisplayedColumns;\\\"></tr>\\n      \\n              </table>\\n      \\n            </div>\\n      \\n            <div *ngIf=\\\"savingProduct.penaltyToIncomeAccountMappings?.length\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n      \\n              <h4 class=\\\"mat-h4\\\" fxFlexFill>Penalties to Specific Income Accounts</h4>\\n      \\n              <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"savingProduct.penaltyToIncomeAccountMappings\\\">\\n      \\n                <ng-container matColumnDef=\\\"chargeId\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Penalty </th>\\n                  <td mat-cell *matCellDef=\\\"let penaltyIncome\\\">\\n                    {{ penaltyIncome.charge.name }}\\n                  </td>\\n                </ng-container>\\n      \\n                <ng-container matColumnDef=\\\"incomeAccountId\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Income Account </th>\\n                  <td mat-cell *matCellDef=\\\"let penaltyIncome\\\">\\n                    {{ penaltyIncome.incomeAccount.name }}\\n                  </td>\\n                </ng-container>\\n      \\n                <tr mat-header-row *matHeaderRowDef=\\\"feesPenaltyIncomeDisplayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: feesPenaltyIncomeDisplayedColumns;\\\"></tr>\\n      \\n              </table>\\n      \\n            </div>\\n      \\n          </div>\\n      \\n        </div>\\n      \\n      </div>     \\n\\n    </mat-card-content>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-elevation-z1 {\\n  margin: 1em 0 1.5em 0; }\\n\\nh2, h3, h4 {\\n  margin: 0;\\n  font-weight: 500; }\\n\\nspan {\\n  margin: 0.5em 0; }\\n\\n.mat-card .mat-divider-horizontal.mat-divider-inset {\\n  margin: 0 0 0.5em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NhdmluZy1wcm9kdWN0cy92aWV3LXNhdmluZy1wcm9kdWN0L3ZpZXctc2F2aW5nLXByb2R1Y3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxxQkFBcUIsRUFBQTs7QUFHdkI7RUFDRSxTQUFTO0VBQ1QsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsZUFBZSxFQUFBOztBQUdqQjtFQUNFLG1CQUFtQixFQUFBOztBQUdyQjtFQUNFLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3NhdmluZy1wcm9kdWN0cy92aWV3LXNhdmluZy1wcm9kdWN0L3ZpZXctc2F2aW5nLXByb2R1Y3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWF0LWVsZXZhdGlvbi16MSB7XG4gIG1hcmdpbjogMWVtIDAgMS41ZW0gMDtcbn1cblxuaDIsIGgzLCBoNCB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuc3BhbiB7XG4gIG1hcmdpbjogMC41ZW0gMDtcbn1cblxuLm1hdC1jYXJkIC5tYXQtZGl2aWRlci1ob3Jpem9udGFsLm1hdC1kaXZpZGVyLWluc2V0IHtcbiAgbWFyZ2luOiAwIDAgMC41ZW0gMDtcbn1cblxuLm1hcmdpbi10IHtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'mifosx-view-saving-product',\n  templateUrl: './view-saving-product.component.html',\n  styleUrls: ['./view-saving-product.component.scss']\n})\nexport class ViewSavingProductComponent implements OnInit {\n\n  savingProduct: any;\n\n  chargesDisplayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType'];\n  paymentFundSourceDisplayedColumns: string[] = ['paymentTypeId', 'fundSourceAccountId'];\n  feesPenaltyIncomeDisplayedColumns: string[] = ['chargeId', 'incomeAccountId'];\n\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { savingProduct: any }) => {\n      this.savingProduct = data.savingProduct;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-horizontal-stepper class=\\\"mat-elevation-z8\\\" labelPosition=\\\"bottom\\\" #shareProductStepper>\\n\\n    <ng-template matStepperIcon=\\\"number\\\">\\n      <fa-icon icon=\\\"pencil-alt\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"edit\\\">\\n      <fa-icon icon=\\\"pencil-alt\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"done\\\">\\n      <fa-icon icon=\\\"check\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"error\\\">\\n      <fa-icon icon=\\\"exclamation-triangle\\\" size=\\\"lg\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"preview\\\">\\n      <fa-icon icon=\\\"eye\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <mat-step [stepControl]=\\\"shareProductDetailsForm\\\">\\n\\n      <ng-template matStepLabel>DETAILS</ng-template>\\n\\n      <mifosx-share-product-details-step></mifosx-share-product-details-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"shareProductCurrencyForm\\\">\\n\\n      <ng-template matStepLabel>CURRENCY</ng-template>\\n\\n      <mifosx-share-product-currency-step [shareProductsTemplate]=\\\"shareProductsTemplate\\\"></mifosx-share-product-currency-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"shareProductTermsForm\\\">\\n\\n      <ng-template matStepLabel>TERMS</ng-template>\\n\\n      <mifosx-share-product-terms-step></mifosx-share-product-terms-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"shareProductSettingsForm\\\">\\n\\n      <ng-template matStepLabel>SETTINGS</ng-template>\\n\\n      <mifosx-share-product-settings-step [shareProductsTemplate]=\\\"shareProductsTemplate\\\"></mifosx-share-product-settings-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"shareProductMarketPriceForm\\\">\\n\\n      <ng-template matStepLabel>MARKET PRICE</ng-template>\\n\\n      <mifosx-share-product-market-price-step></mifosx-share-product-market-price-step>\\n\\n    </mat-step>\\n\\n    <mat-step>\\n\\n      <ng-template matStepLabel>CHARGES</ng-template>\\n\\n      <mifosx-share-product-charges-step\\n        [shareProductsTemplate]=\\\"shareProductsTemplate\\\"\\n        [currencyCode]=\\\"shareProductCurrencyForm.get('currencyCode')\\\"\\n      >\\n      </mifosx-share-product-charges-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"shareProductAccountingForm\\\">\\n\\n      <ng-template matStepLabel>ACCOUNTING</ng-template>\\n\\n      <mifosx-share-product-accounting-step\\n        [shareProductsTemplate]=\\\"shareProductsTemplate\\\"\\n        [accountingRuleData]=\\\"accountingRuleData\\\"\\n        [shareProductFormValid]=\\\"shareProductFormValid\\\"\\n      >\\n      </mifosx-share-product-accounting-step>\\n\\n    </mat-step>\\n\\n    <mat-step state=\\\"preview\\\" *ngIf=\\\"shareProductFormValid\\\" completed>\\n\\n      <ng-template matStepLabel>PREVIEW</ng-template>\\n\\n      <mifosx-share-product-preview-step\\n        [shareProductsTemplate]=\\\"shareProductsTemplate\\\"\\n        [accountingRuleData]=\\\"accountingRuleData\\\"\\n        [shareProduct]=\\\"shareProduct\\\"\\n        (submit)=\\\"submit()\\\"\\n      >\\n      </mifosx-share-product-preview-step>\\n\\n    </mat-step>\\n\\n  </mat-horizontal-stepper>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3NoYXJlLXByb2R1Y3RzL2NyZWF0ZS1zaGFyZS1wcm9kdWN0L2NyZWF0ZS1zaGFyZS1wcm9kdWN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ShareProductDetailsStepComponent } from '../share-product-stepper/share-product-details-step/share-product-details-step.component';\nimport { ShareProductCurrencyStepComponent } from '../share-product-stepper/share-product-currency-step/share-product-currency-step.component';\nimport { ShareProductTermsStepComponent } from '../share-product-stepper/share-product-terms-step/share-product-terms-step.component';\nimport { ShareProductSettingsStepComponent } from '../share-product-stepper/share-product-settings-step/share-product-settings-step.component';\nimport { ShareProductMarketPriceStepComponent } from '../share-product-stepper/share-product-market-price-step/share-product-market-price-step.component';\nimport { ShareProductChargesStepComponent } from '../share-product-stepper/share-product-charges-step/share-product-charges-step.component';\nimport { ShareProductAccountingStepComponent } from '../share-product-stepper/share-product-accounting-step/share-product-accounting-step.component';\n\nimport { ProductsService } from 'app/products/products.service';\n\n@Component({\n  selector: 'mifosx-create-share-product',\n  templateUrl: './create-share-product.component.html',\n  styleUrls: ['./create-share-product.component.scss']\n})\nexport class CreateShareProductComponent implements OnInit {\n\n  @ViewChild(ShareProductDetailsStepComponent) shareProductDetailsStep: ShareProductDetailsStepComponent;\n  @ViewChild(ShareProductCurrencyStepComponent) shareProductCurrencyStep: ShareProductCurrencyStepComponent;\n  @ViewChild(ShareProductTermsStepComponent) shareProductTermsStep: ShareProductTermsStepComponent;\n  @ViewChild(ShareProductSettingsStepComponent) shareProductSettingsStep: ShareProductSettingsStepComponent;\n  @ViewChild(ShareProductMarketPriceStepComponent) shareProductMarketPriceStep: ShareProductMarketPriceStepComponent;\n  @ViewChild(ShareProductChargesStepComponent) shareProductChargesStep: ShareProductChargesStepComponent;\n  @ViewChild(ShareProductAccountingStepComponent) shareProductAccountingStep: ShareProductAccountingStepComponent;\n\n  shareProductsTemplate: any;\n  accountingRuleData = ['None', 'Cash'];\n\n  constructor(private route: ActivatedRoute,\n              private productsService: ProductsService,\n              private router: Router) {\n    this.route.data.subscribe((data: { shareProductsTemplate: any }) => {\n      this.shareProductsTemplate = data.shareProductsTemplate;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  get shareProductDetailsForm() {\n    return this.shareProductDetailsStep.shareProductDetailsForm;\n  }\n\n  get shareProductCurrencyForm() {\n    return this.shareProductCurrencyStep.shareProductCurrencyForm;\n  }\n\n  get shareProductTermsForm() {\n    return this.shareProductTermsStep.shareProductTermsForm;\n  }\n\n  get shareProductSettingsForm() {\n    return this.shareProductSettingsStep.shareProductSettingsForm;\n  }\n\n  get shareProductMarketPriceForm() {\n    return this.shareProductMarketPriceStep.shareProductMarketPriceForm;\n  }\n\n  get shareProductAccountingForm() {\n    return this.shareProductAccountingStep.shareProductAccountingForm;\n  }\n\n  get shareProductFormValid() {\n    return (\n      this.shareProductDetailsForm.valid &&\n      this.shareProductCurrencyForm.valid &&\n      this.shareProductTermsForm.valid &&\n      this.shareProductSettingsForm.valid &&\n      this.shareProductMarketPriceForm.valid &&\n      this.shareProductAccountingForm.valid\n    );\n  }\n\n  get shareProduct() {\n    return {\n      ...this.shareProductDetailsStep.shareProductDetails,\n      ...this.shareProductCurrencyStep.shareProductCurrency,\n      ...this.shareProductTermsStep.shareProductTerms,\n      ...this.shareProductSettingsStep.shareProductSettings,\n      ...this.shareProductMarketPriceStep.shareProductMarketPrice,\n      ...this.shareProductChargesStep.shareProductCharges,\n      ...this.shareProductAccountingStep.shareProductAccounting\n    };\n  }\n\n  submit() {\n    // TODO: Update once language and date settings are setup\n    const shareProduct = {\n      ...this.shareProduct,\n      chargesSelected: this.shareProduct.chargesSelected.map((charge: any) => ({ id: charge.id })),\n      locale: 'en' // locale required for digitsAfterDecimal\n    };\n    this.productsService.createShareProduct(shareProduct)\n      .subscribe((response: any) => {\n        this.router.navigate(['../', response.resourceId], { relativeTo: this.route });\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-horizontal-stepper class=\\\"mat-elevation-z8\\\" labelPosition=\\\"bottom\\\" #shareProductStepper>\\n\\n    <ng-template matStepperIcon=\\\"number\\\">\\n      <fa-icon icon=\\\"pencil-alt\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"edit\\\">\\n      <fa-icon icon=\\\"pencil-alt\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"done\\\">\\n      <fa-icon icon=\\\"check\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"error\\\">\\n      <fa-icon icon=\\\"exclamation-triangle\\\" size=\\\"lg\\\"></fa-icon>\\n    </ng-template>\\n\\n    <ng-template matStepperIcon=\\\"preview\\\">\\n      <fa-icon icon=\\\"eye\\\" size=\\\"sm\\\"></fa-icon>\\n    </ng-template>\\n\\n    <mat-step [stepControl]=\\\"shareProductDetailsForm\\\" completed>\\n\\n      <ng-template matStepLabel>DETAILS</ng-template>\\n\\n      <mifosx-share-product-details-step [shareProductsTemplate]=\\\"shareProductAndTemplate\\\"></mifosx-share-product-details-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"shareProductCurrencyForm\\\" completed>\\n\\n      <ng-template matStepLabel>CURRENCY</ng-template>\\n\\n      <mifosx-share-product-currency-step [shareProductsTemplate]=\\\"shareProductAndTemplate\\\"></mifosx-share-product-currency-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"shareProductTermsForm\\\" completed>\\n\\n      <ng-template matStepLabel>TERMS</ng-template>\\n\\n      <mifosx-share-product-terms-step [shareProductsTemplate]=\\\"shareProductAndTemplate\\\"></mifosx-share-product-terms-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"shareProductSettingsForm\\\" completed>\\n\\n      <ng-template matStepLabel>SETTINGS</ng-template>\\n\\n      <mifosx-share-product-settings-step [shareProductsTemplate]=\\\"shareProductAndTemplate\\\"></mifosx-share-product-settings-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"shareProductMarketPriceForm\\\" completed>\\n\\n      <ng-template matStepLabel>MARKET PRICE</ng-template>\\n\\n      <mifosx-share-product-market-price-step [shareProductsTemplate]=\\\"shareProductAndTemplate\\\"></mifosx-share-product-market-price-step>\\n\\n    </mat-step>\\n\\n    <mat-step completed>\\n\\n      <ng-template matStepLabel>CHARGES</ng-template>\\n\\n      <mifosx-share-product-charges-step\\n        [shareProductsTemplate]=\\\"shareProductAndTemplate\\\"\\n        [currencyCode]=\\\"shareProductCurrencyForm.get('currencyCode')\\\"\\n      >\\n      </mifosx-share-product-charges-step>\\n\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"shareProductAccountingForm\\\" completed>\\n\\n      <ng-template matStepLabel>ACCOUNTING</ng-template>\\n\\n      <mifosx-share-product-accounting-step\\n        [shareProductsTemplate]=\\\"shareProductAndTemplate\\\"\\n        [accountingRuleData]=\\\"accountingRuleData\\\"\\n        [shareProductFormValid]=\\\"shareProductFormValidAndNotPristine\\\"\\n      >\\n      </mifosx-share-product-accounting-step>\\n\\n    </mat-step>\\n\\n    <mat-step state=\\\"preview\\\" *ngIf=\\\"shareProductFormValidAndNotPristine\\\" completed>\\n\\n      <ng-template matStepLabel>PREVIEW</ng-template>\\n\\n      <mifosx-share-product-preview-step\\n        [shareProductsTemplate]=\\\"shareProductAndTemplate\\\"\\n        [accountingRuleData]=\\\"accountingRuleData\\\"\\n        [shareProduct]=\\\"shareProduct\\\"\\n        (submit)=\\\"submit()\\\"\\n      >\\n      </mifosx-share-product-preview-step>\\n\\n    </mat-step>\\n\\n  </mat-horizontal-stepper>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3NoYXJlLXByb2R1Y3RzL2VkaXQtc2hhcmUtcHJvZHVjdC9lZGl0LXNoYXJlLXByb2R1Y3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ShareProductDetailsStepComponent } from '../share-product-stepper/share-product-details-step/share-product-details-step.component';\nimport { ShareProductCurrencyStepComponent } from '../share-product-stepper/share-product-currency-step/share-product-currency-step.component';\nimport { ShareProductTermsStepComponent } from '../share-product-stepper/share-product-terms-step/share-product-terms-step.component';\nimport { ShareProductSettingsStepComponent } from '../share-product-stepper/share-product-settings-step/share-product-settings-step.component';\nimport { ShareProductMarketPriceStepComponent } from '../share-product-stepper/share-product-market-price-step/share-product-market-price-step.component';\nimport { ShareProductChargesStepComponent } from '../share-product-stepper/share-product-charges-step/share-product-charges-step.component';\nimport { ShareProductAccountingStepComponent } from '../share-product-stepper/share-product-accounting-step/share-product-accounting-step.component';\n\nimport { ProductsService } from 'app/products/products.service';\n\n@Component({\n  selector: 'mifosx-edit-share-product',\n  templateUrl: './edit-share-product.component.html',\n  styleUrls: ['./edit-share-product.component.scss']\n})\nexport class EditShareProductComponent implements OnInit {\n\n  @ViewChild(ShareProductDetailsStepComponent) shareProductDetailsStep: ShareProductDetailsStepComponent;\n  @ViewChild(ShareProductCurrencyStepComponent) shareProductCurrencyStep: ShareProductCurrencyStepComponent;\n  @ViewChild(ShareProductTermsStepComponent) shareProductTermsStep: ShareProductTermsStepComponent;\n  @ViewChild(ShareProductSettingsStepComponent) shareProductSettingsStep: ShareProductSettingsStepComponent;\n  @ViewChild(ShareProductMarketPriceStepComponent) shareProductMarketPriceStep: ShareProductMarketPriceStepComponent;\n  @ViewChild(ShareProductChargesStepComponent) shareProductChargesStep: ShareProductChargesStepComponent;\n  @ViewChild(ShareProductAccountingStepComponent) shareProductAccountingStep: ShareProductAccountingStepComponent;\n\n  shareProductAndTemplate: any;\n  accountingRuleData = ['None', 'Cash'];\n\n  constructor(private route: ActivatedRoute,\n              private productsService: ProductsService,\n              private router: Router) {\n    this.route.data.subscribe((data: { shareProductAndTemplate: any }) => {\n      this.shareProductAndTemplate = data.shareProductAndTemplate;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  get shareProductDetailsForm() {\n    return this.shareProductDetailsStep.shareProductDetailsForm;\n  }\n\n  get shareProductCurrencyForm() {\n    return this.shareProductCurrencyStep.shareProductCurrencyForm;\n  }\n\n  get shareProductTermsForm() {\n    return this.shareProductTermsStep.shareProductTermsForm;\n  }\n\n  get shareProductSettingsForm() {\n    return this.shareProductSettingsStep.shareProductSettingsForm;\n  }\n\n  get shareProductMarketPriceForm() {\n    return this.shareProductMarketPriceStep.shareProductMarketPriceForm;\n  }\n\n  get shareProductAccountingForm() {\n    return this.shareProductAccountingStep.shareProductAccountingForm;\n  }\n\n  get shareProductFormValidAndNotPristine() {\n    return (\n      this.shareProductDetailsForm.valid &&\n      this.shareProductCurrencyForm.valid &&\n      this.shareProductTermsForm.valid &&\n      this.shareProductSettingsForm.valid &&\n      this.shareProductMarketPriceForm.valid &&\n      this.shareProductAccountingForm.valid &&\n      (\n        !this.shareProductDetailsForm.pristine ||\n        !this.shareProductCurrencyForm.pristine ||\n        !this.shareProductTermsForm.pristine ||\n        !this.shareProductSettingsForm.pristine ||\n        !this.shareProductMarketPriceForm.pristine ||\n        !this.shareProductChargesStep.pristine ||\n        !this.shareProductAccountingForm.pristine\n      )\n    );\n  }\n\n  get shareProduct() {\n    return {\n      ...this.shareProductDetailsStep.shareProductDetails,\n      ...this.shareProductCurrencyStep.shareProductCurrency,\n      ...this.shareProductTermsStep.shareProductTerms,\n      ...this.shareProductSettingsStep.shareProductSettings,\n      ...this.shareProductMarketPriceStep.shareProductMarketPrice,\n      ...this.shareProductChargesStep.shareProductCharges,\n      ...this.shareProductAccountingStep.shareProductAccounting\n    };\n  }\n\n  submit() {\n    // TODO: Update once language and date settings are setup\n    const shareProduct = {\n      ...this.shareProduct,\n      chargesSelected: this.shareProduct.chargesSelected.map((charge: any) => ({ id: charge.id })),\n      locale: 'en' // locale required for digitsAfterDecimal\n    };\n    this.productsService.updateShareProduct(this.shareProductAndTemplate.id, shareProduct)\n      .subscribe((response: any) => {\n        this.router.navigate(['../../', response.resourceId], { relativeTo: this.route });\n    });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../../products.service';\n\n/**\n * Share product and template data resolver.\n */\n@Injectable()\nexport class ShareProductAndTemplateResolver implements Resolve<Object> {\n\n  /**\n   * @param {ProductsService} productsService Products service.\n   */\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the share product and template data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const shareProductId = route.paramMap.get('id');\n    return this.productsService.getShareProduct(shareProductId, true);\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../products.service';\n\n/**\n * Share Product data resolver.\n */\n@Injectable()\nexport class ShareProductResolver implements Resolve<Object> {\n\n  /**\n   * @param {ProductsService} productsService Products service.\n   */\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the share product data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const id = route.paramMap.get('id');\n    return this.productsService.getShareProduct(id);\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"shareProductAccountingForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <mat-radio-group fxFlex=\\\"98%\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"5%\\\" fxLayout.lt-md=\\\"column\\\" formControlName=\\\"accountingRule\\\">\\n      <mat-radio-button *ngFor=\\\"let accountingRule of accountingRuleData; let i =  index\\\" [value]=\\\"i+1\\\">\\n        {{ accountingRule }}\\n      </mat-radio-button>\\n    </mat-radio-group>\\n\\n    <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n    <div *ngIf=\\\"shareProductAccountingForm.value.accountingRule === 2\\\" fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Assets</h4>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Share reference</mat-label>\\n        <mat-select formControlName=\\\"shareReferenceId\\\" required>\\n          <mat-option *ngFor=\\\"let assetAccount of assetAccountData\\\" [value]=\\\"assetAccount.id\\\">\\n            {{ assetAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Share reference is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n      <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Liabilities</h4>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Share suspense control</mat-label>\\n        <mat-select formControlName=\\\"shareSuspenseId\\\" required>\\n          <mat-option *ngFor=\\\"let liabilityAccount of liabilityAccountData\\\" [value]=\\\"liabilityAccount.id\\\">\\n            {{ liabilityAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Share suspense control is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n      <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Share Equity</h4>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Equity</mat-label>\\n        <mat-select formControlName=\\\"shareEquityId\\\" required>\\n          <mat-option *ngFor=\\\"let equityAccount of equityAccountData\\\" [value]=\\\"equityAccount.id\\\">\\n            {{ equityAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Equity is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-divider fxFlex=\\\"98%\\\"></mat-divider>\\n\\n      <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Income</h4>\\n\\n      <mat-form-field fxFlex=\\\"48%\\\">\\n        <mat-label>Income from fees</mat-label>\\n        <mat-select formControlName=\\\"incomeFromFeeAccountId\\\" required>\\n          <mat-option *ngFor=\\\"let incomeAccount of incomeAccountData\\\" [value]=\\\"incomeAccount.id\\\">\\n            {{ incomeAccount.name }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          Income from fees is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n    </div>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext [disabled]=\\\"!shareProductFormValid\\\">\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \"h4 {\\n  font-weight: 500; }\\n\\nmat-radio-group, h4 {\\n  margin: 1em 0; }\\n\\nmat-divider {\\n  margin: 1em 0 2em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NoYXJlLXByb2R1Y3RzL3NoYXJlLXByb2R1Y3Qtc3RlcHBlci9zaGFyZS1wcm9kdWN0LWFjY291bnRpbmctc3RlcC9zaGFyZS1wcm9kdWN0LWFjY291bnRpbmctc3RlcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQixFQUFBOztBQUdsQjtFQUNFLGFBQWEsRUFBQTs7QUFHZjtFQUNFLG1CQUFtQixFQUFBOztBQUdyQjtFQUNFLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3NoYXJlLXByb2R1Y3RzL3NoYXJlLXByb2R1Y3Qtc3RlcHBlci9zaGFyZS1wcm9kdWN0LWFjY291bnRpbmctc3RlcC9zaGFyZS1wcm9kdWN0LWFjY291bnRpbmctc3RlcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImg0IHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxubWF0LXJhZGlvLWdyb3VwLCBoNCB7XG4gIG1hcmdpbjogMWVtIDA7XG59XG5cbm1hdC1kaXZpZGVyIHtcbiAgbWFyZ2luOiAxZW0gMCAyZW0gMDtcbn1cblxuLm1hcmdpbi10IHtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuIl19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'mifosx-share-product-accounting-step',\n  templateUrl: './share-product-accounting-step.component.html',\n  styleUrls: ['./share-product-accounting-step.component.scss']\n})\nexport class ShareProductAccountingStepComponent implements OnInit {\n\n  @Input() shareProductsTemplate: any;\n  @Input() accountingRuleData: any;\n  @Input() shareProductFormValid: boolean;\n\n  shareProductAccountingForm: FormGroup;\n\n  assetAccountData: any;\n  incomeAccountData: any;\n  equityAccountData: any;\n  liabilityAccountData: any;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.createShareProductAccountingForm();\n    this.setConditionalControls();\n  }\n\n  ngOnInit() {\n    this.assetAccountData = this.shareProductsTemplate.accountingMappingOptions.assetAccountOptions || [];\n    this.incomeAccountData = this.shareProductsTemplate.accountingMappingOptions.incomeAccountOptions || [];\n    this.equityAccountData = this.shareProductsTemplate.accountingMappingOptions.equityAccountOptions || [];\n    this.liabilityAccountData = this.shareProductsTemplate.accountingMappingOptions.liabilityAccountOptions || [];\n\n    if (this.shareProductsTemplate.accountingRule) {\n      this.shareProductAccountingForm.patchValue({\n        'accountingRule': this.shareProductsTemplate.accountingRule.id\n      });\n\n      if (this.shareProductsTemplate.accountingRule.id === 2) {\n        this.shareProductAccountingForm.patchValue({\n          'shareReferenceId': this.shareProductsTemplate.accountingMappings.shareReferenceId.id,\n          'shareSuspenseId': this.shareProductsTemplate.accountingMappings.shareSuspenseId.id,\n          'shareEquityId': this.shareProductsTemplate.accountingMappings.shareEquityId.id,\n          'incomeFromFeeAccountId': this.shareProductsTemplate.accountingMappings.incomeFromFeeAccountId.id\n        });\n      }\n    }\n  }\n\n  createShareProductAccountingForm() {\n    this.shareProductAccountingForm = this.formBuilder.group({\n      'accountingRule': [1]\n    });\n  }\n\n  setConditionalControls() {\n    this.shareProductAccountingForm.get('accountingRule').valueChanges\n      .subscribe((accountingRule: any) => {\n        if (accountingRule === 2) {\n          this.shareProductAccountingForm.addControl('shareReferenceId', new FormControl('', Validators.required));\n          this.shareProductAccountingForm.addControl('shareSuspenseId', new FormControl('', Validators.required));\n          this.shareProductAccountingForm.addControl('shareEquityId', new FormControl('', Validators.required));\n          this.shareProductAccountingForm.addControl('incomeFromFeeAccountId', new FormControl('', Validators.required));\n        } else {\n          this.shareProductAccountingForm.removeControl('shareReferenceId');\n          this.shareProductAccountingForm.removeControl('shareSuspenseId');\n          this.shareProductAccountingForm.removeControl('shareEquityId');\n          this.shareProductAccountingForm.removeControl('incomeFromFeeAccountId');\n        }\n      });\n  }\n\n  get shareProductAccounting() {\n    return this.shareProductAccountingForm.value;\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n  <mat-form-field fxFlex=\\\"48%\\\">\\n    <mat-label>Charge</mat-label>\\n    <mat-select #charge>\\n      <mat-option *ngFor=\\\"let charge of chargeData | chargesFilter:chargesDataSource:currencyCode.value\\\" [value]=\\\"charge\\\">\\n        {{ charge.name }}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <div fxFlex=\\\"48%\\\" fxFlexAlign=\\\"center\\\">\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"addCharge(charge)\\\" [disabled]=\\\"!charge.value\\\">\\n      <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n      Add\\n    </button>\\n  </div>\\n\\n  <table fxFlex=\\\"98%\\\" class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"chargesDataSource\\\" [hidden]=\\\"chargesDataSource.length === 0\\\">\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        {{ charge.name + ', ' + charge.currency.displaySymbol }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"chargeCalculationType\\\">\\n      <th mat-header-cell *matHeaderCellDef> Type </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        {{ charge.chargeCalculationType.value }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"amount\\\">\\n      <th mat-header-cell *matHeaderCellDef> Amount </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        {{ charge.amount }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"chargeTimeType\\\">\\n      <th mat-header-cell *matHeaderCellDef> Collected On </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        {{ charge.chargeTimeType.value }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"action\\\">\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\n      <td mat-cell *matCellDef=\\\"let charge\\\">\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteCharge(charge)\\\">\\n          <fa-icon icon=\\\"trash\\\"></fa-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n  </table>\\n\\n</div>\\n\\n<div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n  <button mat-raised-button matStepperPrevious>\\n    <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n    Previous\\n  </button>\\n  <button mat-raised-button matStepperNext>\\n    Next&nbsp;&nbsp;\\n    <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n  </button>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-elevation-z1 {\\n  margin: 1em 0 1.5em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NoYXJlLXByb2R1Y3RzL3NoYXJlLXByb2R1Y3Qtc3RlcHBlci9zaGFyZS1wcm9kdWN0LWNoYXJnZXMtc3RlcC9zaGFyZS1wcm9kdWN0LWNoYXJnZXMtc3RlcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTs7QUFHYjtFQUNFLHFCQUFxQixFQUFBOztBQUd2QjtFQUNFLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3NoYXJlLXByb2R1Y3RzL3NoYXJlLXByb2R1Y3Qtc3RlcHBlci9zaGFyZS1wcm9kdWN0LWNoYXJnZXMtc3RlcC9zaGFyZS1wcm9kdWN0LWNoYXJnZXMtc3RlcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5tYXQtZWxldmF0aW9uLXoxIHtcbiAgbWFyZ2luOiAxZW0gMCAxLjVlbSAwO1xufVxuXG4ubWFyZ2luLXQge1xuICBtYXJnaW4tdG9wOiAxZW07XG59XG4iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { FormControl } from '@angular/forms';\n\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\n\n@Component({\n  selector: 'mifosx-share-product-charges-step',\n  templateUrl: './share-product-charges-step.component.html',\n  styleUrls: ['./share-product-charges-step.component.scss']\n})\nexport class ShareProductChargesStepComponent implements OnInit {\n\n  @Input() shareProductsTemplate: any;\n  @Input() currencyCode: FormControl;\n\n  chargeData: any;\n\n  chargesDataSource: {}[];\n  displayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType', 'action'];\n\n  pristine = true;\n\n  constructor(public dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n    this.chargeData = this.shareProductsTemplate.chargeOptions;\n\n    this.chargesDataSource = this.shareProductsTemplate.charges || [];\n    this.pristine = true;\n\n    this.currencyCode.valueChanges.subscribe(() => this.chargesDataSource = []);\n  }\n\n  addCharge(charge: any) {\n    this.chargesDataSource = this.chargesDataSource.concat([charge.value]);\n    charge.value = '';\n    this.pristine = false;\n  }\n\n  deleteCharge(charge: any) {\n    const deleteChargeDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `charge ${charge.name}` }\n    });\n    deleteChargeDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.chargesDataSource.splice(this.chargesDataSource.indexOf(charge), 1);\n        this.chargesDataSource = this.chargesDataSource.concat([]);\n        this.pristine = false;\n      }\n    });\n  }\n\n  get shareProductCharges() {\n    return {\n      chargesSelected: this.chargesDataSource\n    };\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"shareProductCurrencyForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Currency</mat-label>\\n      <mat-select formControlName=\\\"currencyCode\\\" required>\\n        <mat-option *ngFor=\\\"let currency of currencyData\\\" [value]=\\\"currency.code\\\">\\n          {{ currency.name }}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        Currency is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Decimal Places</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"digitsAfterDecimal\\\" required>\\n      <mat-error>\\n        Decimal Places is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Currency in multiples of</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"inMultiplesOf\\\" required>\\n      <mat-error>\\n        Currency in multiples of is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext>\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \".margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NoYXJlLXByb2R1Y3RzL3NoYXJlLXByb2R1Y3Qtc3RlcHBlci9zaGFyZS1wcm9kdWN0LWN1cnJlbmN5LXN0ZXAvc2hhcmUtcHJvZHVjdC1jdXJyZW5jeS1zdGVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdHMvc2hhcmUtcHJvZHVjdHMvc2hhcmUtcHJvZHVjdC1zdGVwcGVyL3NoYXJlLXByb2R1Y3QtY3VycmVuY3ktc3RlcC9zaGFyZS1wcm9kdWN0LWN1cnJlbmN5LXN0ZXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFyZ2luLXQge1xuICBtYXJnaW4tdG9wOiAxZW07XG59XG4iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'mifosx-share-product-currency-step',\n  templateUrl: './share-product-currency-step.component.html',\n  styleUrls: ['./share-product-currency-step.component.scss']\n})\nexport class ShareProductCurrencyStepComponent implements OnInit {\n\n  @Input() shareProductsTemplate: any;\n\n  shareProductCurrencyForm: FormGroup;\n\n  currencyData: any;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.createShareProductCurrencyForm();\n  }\n\n  ngOnInit() {\n    this.currencyData = this.shareProductsTemplate.currencyOptions;\n\n    if (this.shareProductsTemplate.currency) {\n      this.shareProductCurrencyForm.patchValue({\n        'currencyCode': this.shareProductsTemplate.currency.code,\n        'digitsAfterDecimal': this.shareProductsTemplate.currency.decimalPlaces,\n        'inMultiplesOf': this.shareProductsTemplate.currency.inMultiplesOf\n      });\n    } else {\n      this.shareProductCurrencyForm.patchValue({\n        'currencyCode': this.currencyData[0].code,\n        'digitsAfterDecimal': 2\n      });\n    }\n  }\n\n  createShareProductCurrencyForm() {\n    this.shareProductCurrencyForm = this.formBuilder.group({\n      'currencyCode': ['', Validators.required],\n      'digitsAfterDecimal': ['', Validators.required],\n      'inMultiplesOf': ['', Validators.required]\n    });\n  }\n\n  get shareProductCurrency() {\n    return this.shareProductCurrencyForm.value;\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"shareProductDetailsForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Product Name</mat-label>\\n      <input matInput formControlName=\\\"name\\\" required>\\n      <mat-error>\\n        Product Name is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Short Name</mat-label>\\n      <input matInput formControlName=\\\"shortName\\\" maxlength=\\\"4\\\" required>\\n      <mat-error>\\n        Short Name is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"98%\\\">\\n      <mat-label>Description</mat-label>\\n      <textarea matInput formControlName=\\\"description\\\"></textarea>\\n    </mat-form-field>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious disabled>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext>\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \".margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NoYXJlLXByb2R1Y3RzL3NoYXJlLXByb2R1Y3Qtc3RlcHBlci9zaGFyZS1wcm9kdWN0LWRldGFpbHMtc3RlcC9zaGFyZS1wcm9kdWN0LWRldGFpbHMtc3RlcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3NoYXJlLXByb2R1Y3RzL3NoYXJlLXByb2R1Y3Qtc3RlcHBlci9zaGFyZS1wcm9kdWN0LWRldGFpbHMtc3RlcC9zaGFyZS1wcm9kdWN0LWRldGFpbHMtc3RlcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXJnaW4tdCB7XG4gIG1hcmdpbi10b3A6IDFlbTtcbn1cbiJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'mifosx-share-product-details-step',\n  templateUrl: './share-product-details-step.component.html',\n  styleUrls: ['./share-product-details-step.component.scss']\n})\nexport class ShareProductDetailsStepComponent implements OnInit {\n\n  @Input() shareProductsTemplate: any;\n\n  shareProductDetailsForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.createShareProductDetailsForm();\n  }\n\n  ngOnInit() {\n    if (this.shareProductsTemplate) {\n      this.shareProductDetailsForm.patchValue({\n        'name': this.shareProductsTemplate.name,\n        'shortName': this.shareProductsTemplate.shortName,\n        'description': this.shareProductsTemplate.description\n      });\n    }\n  }\n\n  createShareProductDetailsForm() {\n    this.shareProductDetailsForm = this.formBuilder.group({\n      'name': ['', Validators.required],\n      'shortName': ['', Validators.required],\n      'description': ['']\n    });\n  }\n\n  get shareProductDetails() {\n    return this.shareProductDetailsForm.value;\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n  <h4 fxFlex=\\\"23%\\\" class=\\\"mat-h4\\\">Market Price Periods</h4>\\n\\n  <div fxFlex=\\\"73%\\\">\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"addMarketPricePeriod()\\\">\\n      <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n      Add\\n    </button>\\n  </div>\\n\\n  <table fxFlex=\\\"98%\\\" class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"marketPricePeriods.value\\\" *ngIf=\\\"marketPricePeriods.value.length\\\">\\n\\n    <ng-container matColumnDef=\\\"fromDate\\\">\\n      <th mat-header-cell *matHeaderCellDef> From Date </th>\\n      <td mat-cell *matCellDef=\\\"let marketPricePeriod\\\">\\n        {{ marketPricePeriod.fromDate | date }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"shareValue\\\">\\n      <th mat-header-cell *matHeaderCellDef> Nominal/Unit Price </th>\\n      <td mat-cell *matCellDef=\\\"let marketPricePeriod\\\">\\n        {{ marketPricePeriod.shareValue }}\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\n      <td mat-cell *matCellDef=\\\"let variation; let i = index\\\">\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"editMarketPricePeriod(i)\\\">\\n          <fa-icon icon=\\\"edit\\\"></fa-icon>\\n        </button>\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteMarketPricePeriod(i)\\\">\\n          <fa-icon icon=\\\"trash\\\"></fa-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n  </table>\\n\\n</div>\\n\\n<div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n  <button mat-raised-button matStepperPrevious>\\n    <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n    Previous\\n  </button>\\n  <button mat-raised-button matStepperNext>\\n    Next&nbsp;&nbsp;\\n    <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n  </button>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-elevation-z1 {\\n  margin: 1em 0 1.5em 0; }\\n\\nh4 {\\n  font-weight: 500;\\n  margin: 1em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NoYXJlLXByb2R1Y3RzL3NoYXJlLXByb2R1Y3Qtc3RlcHBlci9zaGFyZS1wcm9kdWN0LW1hcmtldC1wcmljZS1zdGVwL3NoYXJlLXByb2R1Y3QtbWFya2V0LXByaWNlLXN0ZXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxxQkFBcUIsRUFBQTs7QUFHdkI7RUFDRSxnQkFBZ0I7RUFDaEIsYUFBYSxFQUFBOztBQUdmO0VBQ0UsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdHMvc2hhcmUtcHJvZHVjdHMvc2hhcmUtcHJvZHVjdC1zdGVwcGVyL3NoYXJlLXByb2R1Y3QtbWFya2V0LXByaWNlLXN0ZXAvc2hhcmUtcHJvZHVjdC1tYXJrZXQtcHJpY2Utc3RlcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5tYXQtZWxldmF0aW9uLXoxIHtcbiAgbWFyZ2luOiAxZW0gMCAxLjVlbSAwO1xufVxuXG5oNCB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIG1hcmdpbjogMWVtIDA7XG59XG5cbi5tYXJnaW4tdCB7XG4gIG1hcmdpbi10b3A6IDFlbTtcbn1cbiJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\nimport { MatDialog } from '@angular/material';\n\nimport { FormDialogComponent } from 'app/shared/form-dialog/form-dialog.component';\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\n\nimport { FormfieldBase } from 'app/shared/form-dialog/formfield/model/formfield-base';\nimport { DatepickerBase } from 'app/shared/form-dialog/formfield/model/datepicker-base';\nimport { InputBase } from 'app/shared/form-dialog/formfield/model/input-base';\n\n@Component({\n  selector: 'mifosx-share-product-market-price-step',\n  templateUrl: './share-product-market-price-step.component.html',\n  styleUrls: ['./share-product-market-price-step.component.scss']\n})\nexport class ShareProductMarketPriceStepComponent implements OnInit {\n\n  @Input() shareProductsTemplate: any;\n\n  shareProductMarketPriceForm: FormGroup;\n\n  displayedColumns: string[] = ['fromDate', 'shareValue', 'actions'];\n\n  constructor(private formBuilder: FormBuilder,\n              public dialog: MatDialog,\n              private datePipe: DatePipe) {\n    this.createShareProductMarketPriceForm();\n  }\n\n  ngOnInit() {\n    if (this.shareProductsTemplate) {\n      this.shareProductMarketPriceForm.setControl('marketPricePeriods', this.formBuilder.array((this.shareProductsTemplate.marketPrice)));\n    }\n  }\n\n  createShareProductMarketPriceForm() {\n    this.shareProductMarketPriceForm = this.formBuilder.group({\n      'marketPricePeriods':  this.formBuilder.array([])\n    });\n  }\n\n  get marketPricePeriods(): FormArray {\n    return this.shareProductMarketPriceForm.get('marketPricePeriods') as FormArray;\n  }\n\n  setShareProductMarketPriceFormDirty() {\n    if (this.shareProductMarketPriceForm.pristine) {\n      this.shareProductMarketPriceForm.markAsDirty();\n    }\n  }\n\n  addMarketPricePeriod() {\n    const data = this.getData();\n    const addMarketPricePeriodDialogRef = this.dialog.open(FormDialogComponent, { data });\n    addMarketPricePeriodDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        this.marketPricePeriods.push(response.data);\n        this.setShareProductMarketPriceFormDirty();\n      }\n    });\n  }\n\n  editMarketPricePeriod(index: number) {\n    const data = { ...this.getData(this.marketPricePeriods.at(index).value), layout: { addButtonText: 'Edit' } };\n    const addMarketPricePeriodDialogRef = this.dialog.open(FormDialogComponent, { data });\n    addMarketPricePeriodDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.data) {\n        this.marketPricePeriods.at(index).patchValue(response.data.value);\n        this.setShareProductMarketPriceFormDirty();\n      }\n    });\n  }\n\n  deleteMarketPricePeriod(index: number) {\n    const deleteMarketPricePeriodDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `this` }\n    });\n    deleteMarketPricePeriodDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.marketPricePeriods.removeAt(index);\n        this.setShareProductMarketPriceFormDirty();\n      }\n    });\n  }\n\n  getData(values?: any) {\n    return { title: 'Market Price Period', formfields: this.getFormfields(values) };\n  }\n\n  getFormfields(values?: any) {\n    const formfields: FormfieldBase[] = [\n      new DatepickerBase({\n        controlName: 'fromDate',\n        label: 'From Date',\n        value: values ? values.fromDate : undefined,\n        maxDate: new Date(new Date().setFullYear(new Date().getFullYear() + 10)),\n        required: true,\n        order: 1\n      }),\n      new InputBase({\n        controlName: 'shareValue',\n        label: 'Nominal/Unit Price',\n        value: values ? values.shareValue : undefined,\n        type: 'number',\n        required: true,\n        order: 2\n      })\n    ];\n    return formfields;\n  }\n\n  get shareProductMarketPrice() {\n    // TODO: Update once language and date settings are setup\n    const dateFormat = 'yyyy-MM-dd';\n    const marketPricePeriods = [];\n    for (const marketPricePeriod of this.marketPricePeriods.value) {\n      marketPricePeriods.push({\n        ...marketPricePeriod,\n        fromDate: this.datePipe.transform(marketPricePeriod.fromDate, dateFormat),\n        dateFormat,\n        locale: 'en'\n      });\n    }\n    return { marketPricePeriods };\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n  <h2 class=\\\"mat-h2\\\" fxFlexFill>{{ shareProduct.name }}</h2>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Details</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Short Name:</span>\\n    <span fxFlex=\\\"60%\\\">{{ shareProduct.shortName }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"shareProduct.description\\\">\\n    <span fxFlex=\\\"40%\\\">Description:</span>\\n    <span fxFlex=\\\"60%\\\">{{ shareProduct.description }}</span>\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Currency</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Currency:</span>\\n    <span fxFlex=\\\"60%\\\">{{ shareProduct.currencyCode | find:shareProductsTemplate.currencyOptions:'code':'name' }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Decimal Places:</span>\\n    <span fxFlex=\\\"60%\\\">{{ shareProduct.digitsAfterDecimal }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Currency in multiples of:</span>\\n    <span fxFlex=\\\"60%\\\">{{ shareProduct.inMultiplesOf }}</span>\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Terms</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Total Number of Shares:</span>\\n    <span fxFlex=\\\"60%\\\">{{ shareProduct.totalShares }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Shares to be Issued:</span>\\n    <span fxFlex=\\\"60%\\\">{{ shareProduct.sharesIssued }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Nominal/Unit Price:</span>\\n    <span fxFlex=\\\"60%\\\">{{ shareProduct.unitPrice }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Capital Value:</span>\\n    <span fxFlex=\\\"60%\\\">{{ shareProduct.shareCapital }}</span>\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Settings</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Shares per Client:</span>\\n    <span fxFlex=\\\"60%\\\">{{ shareProduct.nominalShares + ' (Min: ' + (shareProduct.minimumShares ? shareProduct.minimumShares : shareProduct.nominalShares) + ', Max: ' + (shareProduct.maximumShares ? shareProduct.maximumShares : shareProduct.nominalShares) + ')' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"shareProduct.minimumActivePeriodForDividends\\\">\\n    <span fxFlex=\\\"40%\\\">Minimum Active Period:</span>\\n    <span fxFlex=\\\"60%\\\">{{ shareProduct.minimumActivePeriodForDividends + ' ' + (shareProduct.minimumactiveperiodFrequencyType | find:shareProductsTemplate.minimumActivePeriodFrequencyTypeOptions:'id':'value') }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"shareProduct.lockinPeriodFrequency\\\">\\n    <span fxFlex=\\\"40%\\\">Lock-in Period:</span>\\n    <span fxFlex=\\\"60%\\\">{{ shareProduct.lockinPeriodFrequency + ' ' + (shareProduct.lockinPeriodFrequencyType | find:shareProductsTemplate.lockinPeriodFrequencyTypeOptions:'id':'value') }}</span>\\n  </div>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Allow dividends for inactive clients:</span>\\n    <span fxFlex=\\\"60%\\\">{{ shareProduct.allowDividendCalculationForInactiveClients ? 'Yes' : 'No' }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"shareProduct.marketPricePeriods.length\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <h3 class=\\\"mat-h3\\\" fxFlexFill>Market Price Periods</h3>\\n\\n    <mat-divider fxFlexFill></mat-divider>\\n\\n    <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"shareProduct.marketPricePeriods\\\">\\n\\n      <ng-container matColumnDef=\\\"fromDate\\\">\\n        <th mat-header-cell *matHeaderCellDef> From Date </th>\\n        <td mat-cell *matCellDef=\\\"let marketPricePeriod\\\">\\n          {{ marketPricePeriod.fromDate | date }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"shareValue\\\">\\n        <th mat-header-cell *matHeaderCellDef> Nominal/Unit Price </th>\\n        <td mat-cell *matCellDef=\\\"let marketPricePeriod\\\">\\n          {{ marketPricePeriod.shareValue }}\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"marketPriceDisplayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: marketPriceDisplayedColumns;\\\"></tr>\\n\\n    </table>\\n\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"shareProduct.chargesSelected.length\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <h3 class=\\\"mat-h3\\\" fxFlexFill>Charges</h3>\\n\\n    <mat-divider fxFlexFill></mat-divider>\\n\\n    <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"shareProduct.chargesSelected\\\">\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Name </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\">\\n          {{ charge.name + ', ' + charge.currency.displaySymbol }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"chargeCalculationType\\\">\\n        <th mat-header-cell *matHeaderCellDef> Type </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\">\\n          {{ charge.chargeCalculationType.value }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"amount\\\">\\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\">\\n          {{ charge.amount  }}\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"chargeTimeType\\\">\\n        <th mat-header-cell *matHeaderCellDef> Collected On </th>\\n        <td mat-cell *matCellDef=\\\"let charge\\\">\\n          {{ charge.chargeTimeType.value }}\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"chargesDisplayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: chargesDisplayedColumns;\\\"></tr>\\n\\n    </table>\\n\\n  </div>\\n\\n  <h3 class=\\\"mat-h3\\\" fxFlexFill>Accounting</h3>\\n\\n  <mat-divider fxFlexFill></mat-divider>\\n\\n  <div fxFlexFill>\\n    <span fxFlex=\\\"40%\\\">Type:</span>\\n    <span fxFlex=\\\"60%\\\">{{ accountingRuleData[shareProduct.accountingRule-1] }}</span>\\n  </div>\\n\\n  <div fxFlexFill *ngIf=\\\"shareProduct.accountingRule === 2\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <h4 fxFlexFill class=\\\"mat-h4\\\">Assets</h4>\\n\\n    <div fxFlexFill>\\n      <span fxFlex=\\\"40%\\\">Share reference:</span>\\n      <span fxFlex=\\\"60%\\\">{{ shareProduct.shareReferenceId | find:shareProductsTemplate.accountingMappingOptions.assetAccountOptions:'id':'name' }}</span>\\n    </div>\\n\\n    <h4 fxFlexFill class=\\\"mat-h4\\\">Liabilities</h4>\\n\\n    <div fxFlexFill>\\n      <span fxFlex=\\\"40%\\\">Share suspense control:</span>\\n      <span fxFlex=\\\"60%\\\">{{ shareProduct.shareSuspenseId | find:shareProductsTemplate.accountingMappingOptions.liabilityAccountOptions:'id':'name' }}</span>\\n    </div>\\n\\n    <h4 fxFlexFill class=\\\"mat-h4\\\">Share Equity</h4>\\n\\n    <div fxFlexFill>\\n      <span fxFlex=\\\"40%\\\">Equity:</span>\\n      <span fxFlex=\\\"60%\\\">{{ shareProduct.shareEquityId | find:shareProductsTemplate.accountingMappingOptions.equityAccountOptions:'id':'name' }}</span>\\n    </div>\\n\\n    <h4 fxFlexFill class=\\\"mat-h4\\\">Income</h4>\\n\\n    <div fxFlexFill>\\n      <span fxFlex=\\\"40%\\\">Income from fees:</span>\\n      <span fxFlex=\\\"60%\\\">{{ shareProduct.incomeFromFeeAccountId | find:shareProductsTemplate.accountingMappingOptions.incomeAccountOptions:'id':'name' }}</span>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\\n<div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n  <button mat-raised-button matStepperPrevious>\\n    <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n    Previous\\n  </button>\\n  <button mat-raised-button [routerLink]=\\\"['../']\\\">\\n    Cancel\\n  </button>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"submit.emit()\\\">\\n    Submit\\n  </button>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-elevation-z1 {\\n  margin: 1em 0 1.5em 0; }\\n\\nh2, h3, h4 {\\n  margin: 0;\\n  font-weight: 500; }\\n\\nspan {\\n  margin: 0.5em 0; }\\n\\nmat-divider {\\n  margin: 0 0 0.5em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NoYXJlLXByb2R1Y3RzL3NoYXJlLXByb2R1Y3Qtc3RlcHBlci9zaGFyZS1wcm9kdWN0LXByZXZpZXctc3RlcC9zaGFyZS1wcm9kdWN0LXByZXZpZXctc3RlcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTs7QUFHYjtFQUNFLHFCQUFxQixFQUFBOztBQUd2QjtFQUNFLFNBQVM7RUFDVCxnQkFBZ0IsRUFBQTs7QUFHbEI7RUFDRSxlQUFlLEVBQUE7O0FBR2pCO0VBQ0UsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdHMvc2hhcmUtcHJvZHVjdHMvc2hhcmUtcHJvZHVjdC1zdGVwcGVyL3NoYXJlLXByb2R1Y3QtcHJldmlldy1zdGVwL3NoYXJlLXByb2R1Y3QtcHJldmlldy1zdGVwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLm1hdC1lbGV2YXRpb24tejEge1xuICBtYXJnaW46IDFlbSAwIDEuNWVtIDA7XG59XG5cbmgyLCBoMywgaDQge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbnNwYW4ge1xuICBtYXJnaW46IDAuNWVtIDA7XG59XG5cbm1hdC1kaXZpZGVyIHtcbiAgbWFyZ2luOiAwIDAgMC41ZW0gMDtcbn1cblxuLm1hcmdpbi10IHtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuIl19 */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'mifosx-share-product-preview-step',\n  templateUrl: './share-product-preview-step.component.html',\n  styleUrls: ['./share-product-preview-step.component.scss']\n})\nexport class ShareProductPreviewStepComponent implements OnInit {\n\n  @Input() shareProductsTemplate: any;\n  @Input() accountingRuleData: any;\n  @Input() shareProduct: any;\n  @Output() submit = new EventEmitter();\n\n  marketPriceDisplayedColumns: string[] = ['fromDate', 'shareValue'];\n  chargesDisplayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType'];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"shareProductSettingsForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Shares per Client</h4>\\n\\n    <mat-form-field fxFlex=\\\"31%\\\">\\n      <mat-label>Minimum</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"minimumShares\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"31%\\\">\\n      <mat-label>Default</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"nominalShares\\\" required>\\n      <mat-error>\\n        Default Shares per Client is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"31%\\\">\\n      <mat-label>Maximum</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"maximumShares\\\">\\n    </mat-form-field>\\n\\n    <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Minimum Active Period</h4>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Frequency</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"minimumActivePeriodForDividends\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Type</mat-label>\\n      <mat-select formControlName=\\\"minimumactiveperiodFrequencyType\\\">\\n        <mat-option *ngFor=\\\"let minimumActivePeriodFrequencyType of minimumActivePeriodFrequencyTypeData\\\" [value]=\\\"minimumActivePeriodFrequencyType.id\\\">\\n          {{ minimumActivePeriodFrequencyType.value }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <h4 fxFlex=\\\"98%\\\" class=\\\"mat-h4\\\">Lock-in Period</h4>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Frequency</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"lockinPeriodFrequency\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Type</mat-label>\\n      <mat-select formControlName=\\\"lockinPeriodFrequencyType\\\">\\n        <mat-option *ngFor=\\\"let lockinPeriodFrequencyType of lockinPeriodFrequencyTypeData\\\" [value]=\\\"lockinPeriodFrequencyType.id\\\">\\n          {{ lockinPeriodFrequencyType.value }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-checkbox fxFlex=\\\"98%\\\" class=\\\"margin-v\\\" labelPosition=\\\"before\\\" formControlName=\\\"allowDividendCalculationForInactiveClients\\\">\\n      Allow dividends for inactive clients\\n    </mat-checkbox>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext>\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \"h4 {\\n  font-weight: 500;\\n  margin: 1em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n.margin-v {\\n  margin: 1em 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NoYXJlLXByb2R1Y3RzL3NoYXJlLXByb2R1Y3Qtc3RlcHBlci9zaGFyZS1wcm9kdWN0LXNldHRpbmdzLXN0ZXAvc2hhcmUtcHJvZHVjdC1zZXR0aW5ncy1zdGVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGFBQWEsRUFBQTs7QUFHZjtFQUNFLGVBQWUsRUFBQTs7QUFHakI7RUFDRSxhQUFhLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0cy9zaGFyZS1wcm9kdWN0cy9zaGFyZS1wcm9kdWN0LXN0ZXBwZXIvc2hhcmUtcHJvZHVjdC1zZXR0aW5ncy1zdGVwL3NoYXJlLXByb2R1Y3Qtc2V0dGluZ3Mtc3RlcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImg0IHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbWFyZ2luOiAxZW0gMDtcbn1cblxuLm1hcmdpbi10IHtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuXG4ubWFyZ2luLXYge1xuICBtYXJnaW46IDFlbSAwO1xufVxuIl19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'mifosx-share-product-settings-step',\n  templateUrl: './share-product-settings-step.component.html',\n  styleUrls: ['./share-product-settings-step.component.scss']\n})\nexport class ShareProductSettingsStepComponent implements OnInit {\n\n  @Input() shareProductsTemplate: any;\n\n  shareProductSettingsForm: FormGroup;\n\n  minimumActivePeriodFrequencyTypeData: any;\n  lockinPeriodFrequencyTypeData: any;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.createShareProductSettingsForm();\n  }\n\n  ngOnInit() {\n    this.minimumActivePeriodFrequencyTypeData = this.shareProductsTemplate.minimumActivePeriodFrequencyTypeOptions;\n    this.lockinPeriodFrequencyTypeData = this.shareProductsTemplate.lockinPeriodFrequencyTypeOptions;\n\n    this.shareProductSettingsForm.patchValue({\n      'minimumShares': this.shareProductsTemplate.minimumShares,\n      'nominalShares': this.shareProductsTemplate.nominalShares,\n      'maximumShares': this.shareProductsTemplate.maximumShares,\n      'minimumActivePeriodForDividends': this.shareProductsTemplate.minimumActivePeriod,\n      'minimumactiveperiodFrequencyType': this.shareProductsTemplate.minimumActivePeriodForDividendsTypeEnum && this.shareProductsTemplate.minimumActivePeriodForDividendsTypeEnum.id,\n      'lockinPeriodFrequency': this.shareProductsTemplate.lockinPeriod,\n      'lockinPeriodFrequencyType': this.shareProductsTemplate.lockPeriodTypeEnum && this.shareProductsTemplate.lockPeriodTypeEnum.id,\n      'allowDividendCalculationForInactiveClients': this.shareProductsTemplate.allowDividendCalculationForInactiveClients\n    });\n  }\n\n  createShareProductSettingsForm() {\n    this.shareProductSettingsForm = this.formBuilder.group({\n      'minimumShares': [''],\n      'nominalShares': ['', Validators.required],\n      'maximumShares': [''],\n      'minimumActivePeriodForDividends': [''],\n      'minimumactiveperiodFrequencyType': [''],\n      'lockinPeriodFrequency': [''],\n      'lockinPeriodFrequencyType': [''],\n      'allowDividendCalculationForInactiveClients': [false]\n    });\n  }\n\n  get shareProductSettings() {\n    return this.shareProductSettingsForm.value;\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"shareProductTermsForm\\\">\\n\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Total Number of Shares</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"totalShares\\\" required>\\n      <mat-error>\\n        Total Number of Shares is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Shares to be Issued</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"sharesIssued\\\" required>\\n      <mat-error>\\n        Shares to be Issued is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Nominal/Unit Price</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"unitPrice\\\" required>\\n      <mat-error>\\n        Nominal Price is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex=\\\"48%\\\">\\n      <mat-label>Capital Value</mat-label>\\n      <input type=\\\"number\\\" matInput formControlName=\\\"shareCapital\\\" readonly>\\n      <mat-hint>\\n        Shares to be Issued * Nominal Price (Auto calculated)\\n      </mat-hint>\\n    </mat-form-field>\\n\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" class=\\\"margin-t\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n    <button mat-raised-button matStepperPrevious>\\n      <fa-icon icon=\\\"arrow-left\\\"></fa-icon>&nbsp;&nbsp;\\n      Previous\\n    </button>\\n    <button mat-raised-button matStepperNext>\\n      Next&nbsp;&nbsp;\\n      <fa-icon icon=\\\"arrow-right\\\"></fa-icon>\\n    </button>\\n  </div>\\n\\n</form>\\n\"","module.exports = \".margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NoYXJlLXByb2R1Y3RzL3NoYXJlLXByb2R1Y3Qtc3RlcHBlci9zaGFyZS1wcm9kdWN0LXRlcm1zLXN0ZXAvc2hhcmUtcHJvZHVjdC10ZXJtcy1zdGVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdHMvc2hhcmUtcHJvZHVjdHMvc2hhcmUtcHJvZHVjdC1zdGVwcGVyL3NoYXJlLXByb2R1Y3QtdGVybXMtc3RlcC9zaGFyZS1wcm9kdWN0LXRlcm1zLXN0ZXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFyZ2luLXQge1xuICBtYXJnaW4tdG9wOiAxZW07XG59XG4iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n  selector: 'mifosx-share-product-terms-step',\n  templateUrl: './share-product-terms-step.component.html',\n  styleUrls: ['./share-product-terms-step.component.scss']\n})\nexport class ShareProductTermsStepComponent implements OnInit {\n\n  @Input() shareProductsTemplate: any;\n\n  shareProductTermsForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.createShareProductTermsForm();\n  }\n\n  ngOnInit() {\n    combineLatest([\n      this.shareProductTermsForm.get('sharesIssued').valueChanges,\n      this.shareProductTermsForm.get('unitPrice').valueChanges\n    ]).subscribe(([sharesIssued, unitPrice]: number[]) => {\n      this.shareProductTermsForm.get('shareCapital').setValue(sharesIssued * unitPrice);\n    });\n\n    if (this.shareProductsTemplate) {\n      this.shareProductTermsForm.patchValue({\n        'totalShares': this.shareProductsTemplate.totalShares,\n        'sharesIssued': this.shareProductsTemplate.totalSharesIssued,\n        'unitPrice': this.shareProductsTemplate.unitPrice,\n        'shareCapital': this.shareProductsTemplate.shareCapital\n      });\n    }\n  }\n\n  createShareProductTermsForm() {\n    this.shareProductTermsForm = this.formBuilder.group({\n      'totalShares': ['', Validators.required],\n      'sharesIssued': ['', Validators.required],\n      'unitPrice': ['', Validators.required],\n      'shareCapital': ['']\n    });\n  }\n\n  get shareProductTerms() {\n    return this.shareProductTermsForm.value;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../products.service';\n\n@Injectable()\nexport class ShareProductsTemplateResolver implements Resolve<Object> {\n\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the share products template data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.productsService.getShareProductsTemplate();\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['create']\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Share Product\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let shareProduct\\\"> {{ shareProduct.name }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"shortName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Short Name </th>\\n        <td mat-cell *matCellDef=\\\"let shareProduct\\\"> {{ shareProduct.shortName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"totalShares\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Total Shares </th>\\n        <td mat-cell *matCellDef=\\\"let shareProduct\\\"> {{ shareProduct.totalShares }} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id]\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NoYXJlLXByb2R1Y3RzL3NoYXJlLXByb2R1Y3RzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBO0VBRGI7SUFJSSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0cy9zaGFyZS1wcm9kdWN0cy9zaGFyZS1wcm9kdWN0cy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG5cbiAgLnNlbGVjdC1yb3c6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'mifosx-share-products',\n  templateUrl: './share-products.component.html',\n  styleUrls: ['./share-products.component.scss']\n})\nexport class ShareProductsComponent implements OnInit {\n\n  shareProductsData: any;\n  displayedColumns: string[] = ['name', 'shortName', 'totalShares'];\n  dataSource: MatTableDataSource<any>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { shareProducts: any }) => {\n      this.shareProductsData = data.shareProducts.pageItems;\n    });\n  }\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource(this.shareProductsData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { ProductsService } from '../products.service';\n\n/**\n * Share products data resolver.\n */\n@Injectable()\nexport class ShareProductsResolver implements Resolve<Object> {\n\n  /**\n   *\n   * @param {ProductsService} productsService Products service.\n   */\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns the share products data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.productsService.getShareProducts();\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" class=\\\"container m-b-20\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['edit']\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"hand-holding-usd\\\"></fa-icon>&nbsp;&nbsp;\\n    Dividends\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-content>\\n\\n      <div fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n        <h2 class=\\\"mat-h2\\\" fxFlexFill>{{ shareProduct.name }}</h2>\\n      \\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      \\n        <h3 class=\\\"mat-h3\\\" fxFlexFill>Details</h3>\\n      \\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Short Name:</span>\\n          <span fxFlex=\\\"60%\\\">{{ shareProduct.shortName }}</span>\\n        </div>\\n      \\n        <div fxFlexFill *ngIf=\\\"shareProduct.description\\\">\\n          <span fxFlex=\\\"40%\\\">Description:</span>\\n          <span fxFlex=\\\"60%\\\">{{ shareProduct.description }}</span>\\n        </div>\\n      \\n        <h3 class=\\\"mat-h3\\\" fxFlexFill>Currency</h3>\\n      \\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Currency:</span>\\n          <span fxFlex=\\\"60%\\\">{{ shareProduct.currency.name }}</span>\\n        </div>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Decimal Places:</span>\\n          <span fxFlex=\\\"60%\\\">{{ shareProduct.currency.decimalPlaces }}</span>\\n        </div>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Currency in multiples of:</span>\\n          <span fxFlex=\\\"60%\\\">{{ shareProduct.currency.inMultiplesOf }}</span>\\n        </div>\\n      \\n        <h3 class=\\\"mat-h3\\\" fxFlexFill>Terms</h3>\\n      \\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Total Number of Shares:</span>\\n          <span fxFlex=\\\"60%\\\">{{ shareProduct.totalShares }}</span>\\n        </div>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Shares to be Issued:</span>\\n          <span fxFlex=\\\"60%\\\">{{ shareProduct.totalSharesIssued }}</span>\\n        </div>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Nominal/Unit Price:</span>\\n          <span fxFlex=\\\"60%\\\">{{ shareProduct.unitPrice }}</span>\\n        </div>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Capital Value:</span>\\n          <span fxFlex=\\\"60%\\\">{{ shareProduct.shareCapital }}</span>\\n        </div>\\n      \\n        <h3 class=\\\"mat-h3\\\" fxFlexFill>Settings</h3>\\n      \\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Shares per Client:</span>\\n          <span fxFlex=\\\"60%\\\">{{ shareProduct.nominalShares + ' (Min: ' + (shareProduct.minimumShares ? shareProduct.minimumShares : shareProduct.nominalShares) + ', Max: ' + (shareProduct.maximumShares ? shareProduct.maximumShares : shareProduct.nominalShares) + ')' }}</span>\\n        </div>\\n      \\n        <div fxFlexFill *ngIf=\\\"shareProduct.minimumActivePeriod\\\">\\n          <span fxFlex=\\\"40%\\\">Minimum Active Period:</span>\\n          <span fxFlex=\\\"60%\\\">{{ shareProduct.minimumActivePeriod + ' ' + shareProduct.minimumActivePeriodForDividendsTypeEnum.value }}</span>\\n        </div>\\n      \\n        <div fxFlexFill *ngIf=\\\"shareProduct.lockinPeriod\\\">\\n          <span fxFlex=\\\"40%\\\">Lock-in Period:</span>\\n          <span fxFlex=\\\"60%\\\">{{ shareProduct.lockinPeriod + ' ' + shareProduct.lockPeriodTypeEnum.value }}</span>\\n        </div>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Allow dividends for inactive clients:</span>\\n          <span fxFlex=\\\"60%\\\">{{ shareProduct.allowDividendCalculationForInactiveClients ? 'Yes' : 'No' }}</span>\\n        </div>\\n\\n        <div fxFlexFill *ngIf=\\\"shareProduct.marketPrice?.length\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n          <h3 class=\\\"mat-h3\\\" fxFlexFill>Market Price Periods</h3>\\n      \\n          <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      \\n          <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"shareProduct.marketPrice\\\">\\n      \\n            <ng-container matColumnDef=\\\"fromDate\\\">\\n              <th mat-header-cell *matHeaderCellDef> From Date </th>\\n              <td mat-cell *matCellDef=\\\"let marketPrice\\\">\\n                {{ marketPrice.fromDate | date }}\\n              </td>\\n            </ng-container>\\n      \\n            <ng-container matColumnDef=\\\"shareValue\\\">\\n              <th mat-header-cell *matHeaderCellDef> Nominal/Unit Price </th>\\n              <td mat-cell *matCellDef=\\\"let marketPrice\\\">\\n                {{ marketPrice.shareValue }}\\n              </td>\\n            </ng-container>\\n      \\n            <tr mat-header-row *matHeaderRowDef=\\\"marketPriceDisplayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: marketPriceDisplayedColumns;\\\"></tr>\\n      \\n          </table>\\n      \\n        </div>        \\n      \\n        <div fxFlexFill *ngIf=\\\"shareProduct.charges.length\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n      \\n          <h3 class=\\\"mat-h3\\\" fxFlexFill>Charges</h3>\\n      \\n          <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      \\n          <table fxFlexFill class=\\\"mat-elevation-z1\\\" mat-table [dataSource]=\\\"shareProduct.charges\\\">\\n      \\n            <ng-container matColumnDef=\\\"name\\\">\\n              <th mat-header-cell *matHeaderCellDef> Name </th>\\n              <td mat-cell *matCellDef=\\\"let charge\\\">\\n                {{ charge.name + ', ' + charge.currency.displaySymbol }}\\n              </td>\\n            </ng-container>\\n      \\n            <ng-container matColumnDef=\\\"chargeCalculationType\\\">\\n              <th mat-header-cell *matHeaderCellDef> Type </th>\\n              <td mat-cell *matCellDef=\\\"let charge\\\">\\n                {{ charge.chargeCalculationType.value }}\\n              </td>\\n            </ng-container>\\n      \\n            <ng-container matColumnDef=\\\"amount\\\">\\n              <th mat-header-cell *matHeaderCellDef> Amount </th>\\n              <td mat-cell *matCellDef=\\\"let charge\\\">\\n                {{ charge.amount  }}\\n              </td>\\n            </ng-container>\\n      \\n            <ng-container matColumnDef=\\\"chargeTimeType\\\">\\n              <th mat-header-cell *matHeaderCellDef> Collected On </th>\\n              <td mat-cell *matCellDef=\\\"let charge\\\">\\n                {{ charge.chargeTimeType.value }}\\n              </td>\\n            </ng-container>\\n      \\n            <tr mat-header-row *matHeaderRowDef=\\\"chargesDisplayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: chargesDisplayedColumns;\\\"></tr>\\n      \\n          </table>\\n      \\n        </div>\\n      \\n        <h3 class=\\\"mat-h3\\\" fxFlexFill>Accounting</h3>\\n      \\n        <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      \\n        <div fxFlexFill>\\n          <span fxFlex=\\\"40%\\\">Type:</span>\\n          <span fxFlex=\\\"60%\\\">{{ shareProduct.accountingRule.value }}</span>\\n        </div>\\n      \\n        <div fxFlexFill *ngIf=\\\"shareProduct.accountingRule.id === 2\\\" fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\">\\n      \\n          <h4 fxFlexFill class=\\\"mat-h4\\\">Assets</h4>\\n      \\n          <div fxFlexFill>\\n            <span fxFlex=\\\"40%\\\">Share reference:</span>\\n            <span fxFlex=\\\"60%\\\">{{ shareProduct.accountingMappings.shareReferenceId.name }}</span>\\n          </div>\\n      \\n          <h4 fxFlexFill class=\\\"mat-h4\\\">Liabilities</h4>\\n      \\n          <div fxFlexFill>\\n            <span fxFlex=\\\"40%\\\">Share suspense control:</span>\\n            <span fxFlex=\\\"60%\\\">{{ shareProduct.accountingMappings.shareSuspenseId.name }}</span>\\n          </div>\\n\\n          <h4 fxFlexFill class=\\\"mat-h4\\\">Share Equity</h4>\\n      \\n          <div fxFlexFill>\\n            <span fxFlex=\\\"40%\\\">Equity:</span>\\n            <span fxFlex=\\\"60%\\\">{{ shareProduct.accountingMappings.shareEquityId.name }}</span>\\n          </div>\\n      \\n          <h4 fxFlexFill class=\\\"mat-h4\\\">Income</h4>\\n      \\n          <div fxFlexFill>\\n            <span fxFlex=\\\"40%\\\">Income from fees:</span>\\n            <span fxFlex=\\\"60%\\\">{{ shareProduct.accountingMappings.incomeFromFeeAccountId.name }}</span>\\n          </div>\\n      \\n        </div>\\n      \\n      </div>     \\n\\n    </mat-card-content>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-elevation-z1 {\\n  margin: 1em 0 1.5em 0; }\\n\\nh2, h3, h4 {\\n  margin: 0;\\n  font-weight: 500; }\\n\\nspan {\\n  margin: 0.5em 0; }\\n\\n.mat-card .mat-divider-horizontal.mat-divider-inset {\\n  margin: 0 0 0.5em 0; }\\n\\n.margin-t {\\n  margin-top: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3Byb2R1Y3RzL3NoYXJlLXByb2R1Y3RzL3ZpZXctc2hhcmUtcHJvZHVjdC92aWV3LXNoYXJlLXByb2R1Y3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxxQkFBcUIsRUFBQTs7QUFHdkI7RUFDRSxTQUFTO0VBQ1QsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsZUFBZSxFQUFBOztBQUdqQjtFQUNFLG1CQUFtQixFQUFBOztBQUdyQjtFQUNFLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3NoYXJlLXByb2R1Y3RzL3ZpZXctc2hhcmUtcHJvZHVjdC92aWV3LXNoYXJlLXByb2R1Y3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWF0LWVsZXZhdGlvbi16MSB7XG4gIG1hcmdpbjogMWVtIDAgMS41ZW0gMDtcbn1cblxuaDIsIGgzLCBoNCB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuc3BhbiB7XG4gIG1hcmdpbjogMC41ZW0gMDtcbn1cblxuLm1hdC1jYXJkIC5tYXQtZGl2aWRlci1ob3Jpem9udGFsLm1hdC1kaXZpZGVyLWluc2V0IHtcbiAgbWFyZ2luOiAwIDAgMC41ZW0gMDtcbn1cblxuLm1hcmdpbi10IHtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'mifosx-view-share-product',\n  templateUrl: './view-share-product.component.html',\n  styleUrls: ['./view-share-product.component.scss']\n})\nexport class ViewShareProductComponent implements OnInit {\n\n  shareProduct: any;\n\n  marketPriceDisplayedColumns: string[] = ['fromDate', 'shareValue'];\n  chargesDisplayedColumns: string[] = ['name', 'chargeCalculationType', 'amount', 'chargeTimeType'];\n\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { shareProduct: any }) => {\n      this.shareProduct = data.shareProduct;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"report_name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Report Name </th>\\n        <td mat-cell *matCellDef=\\\"let report\\\"> {{report.report_name}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"report_type\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Report Type </th>\\n        <td mat-cell *matCellDef=\\\"let report\\\"> {{report.report_type}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"report_category\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Report Category </th>\\n        <td mat-cell *matCellDef=\\\"let report\\\"> {{report.report_category}} </td>\\n      </ng-container>\\n\\n      \\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id]\\\"\\n      class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvYWNjb3VudGluZy1yZXBvcnRzL2FjY291bnRpbmctcmVwb3J0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ReportsService } from '../reports.service';\n\n@Component({\n  selector: 'mifosx-accounting-reports',\n  templateUrl: './accounting-reports.component.html',\n  styleUrls: ['./accounting-reports.component.scss']\n})\nexport class AccountingReportsComponent implements OnInit {\n\n  displayedColumns:string[] = ['report_name','report_type','report_category'];\n  dataSource = new MatTableDataSource();\n  @ViewChild(MatPaginator) paginator : MatPaginator;\n  @ViewChild(MatSort) sort : MatSort;\n  \n  \n\n  constructor(private reportsService: ReportsService) { }\n\n  ngOnInit() {\n    this.reportsService.getAccountingReports()\n    .subscribe(\n      (res =>{\n        console.log(res);\n        this.dataSource =new MatTableDataSource(res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n    );\n  }\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"report_name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Report Name </th>\\n        <td mat-cell *matCellDef=\\\"let report\\\"> {{report.report_name}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"report_type\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Report Type </th>\\n        <td mat-cell *matCellDef=\\\"let report\\\"> {{report.report_type}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"report_category\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Report Category </th>\\n        <td mat-cell *matCellDef=\\\"let report\\\"> {{report.report_category}} </td>\\n      </ng-container>\\n\\n      \\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id]\\\"\\n      class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvYWxsLXJlcG9ydHMvYWxsLXJlcG9ydHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild} from '@angular/core';\nimport { ReportsService } from '../reports.service';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\n\n@Component({\n  selector: 'mifosx-all-reports',\n  templateUrl: './all-reports.component.html',\n  styleUrls: ['./all-reports.component.scss']\n})\nexport class AllReportsComponent implements OnInit {\n\n  displayedColumns:string[] = ['report_name','report_type','report_category'];\n  dataSource = new MatTableDataSource();\n  @ViewChild(MatPaginator) paginator : MatPaginator;\n  @ViewChild(MatSort) sort : MatSort;\n  \n  \n\n  constructor(private reportsService: ReportsService) { }\n\n  ngOnInit() {\n    this.reportsService.getAllReports()\n    .subscribe(\n      (res =>{\n        console.log(res);\n        this.dataSource =new MatTableDataSource(res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n    );\n  }\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"report_name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Report Name </th>\\n        <td mat-cell *matCellDef=\\\"let report\\\"> {{report.report_name}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"report_type\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Report Type </th>\\n        <td mat-cell *matCellDef=\\\"let report\\\"> {{report.report_type}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"report_category\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Report Category </th>\\n        <td mat-cell *matCellDef=\\\"let report\\\"> {{report.report_category}} </td>\\n      </ng-container>\\n\\n      \\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id]\\\"\\n      class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvY2xpZW50cy1yZXBvcnRzL2NsaWVudHMtcmVwb3J0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ReportsService } from '../reports.service';\n\n\n@Component({\n  selector: 'mifosx-clients-reports',\n  templateUrl: './clients-reports.component.html',\n  styleUrls: ['./clients-reports.component.scss']\n})\nexport class ClientsReportsComponent implements OnInit {\n  \n  displayedColumns:string[] = ['report_name','report_type','report_category'];\n  dataSource = new MatTableDataSource();\n  @ViewChild(MatPaginator) paginator : MatPaginator;\n  @ViewChild(MatSort) sort : MatSort;\n\n  constructor(private reportService:ReportsService) { }\n\n  ngOnInit() {\n    this.reportService.getClientsReports()\n    .subscribe(\n      (res =>{\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n    );\n  }\n  applyFilter(filterValue:string){\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"report_name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Report Name </th>\\n        <td mat-cell *matCellDef=\\\"let report\\\"> {{report.report_name}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"report_type\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Report Type </th>\\n        <td mat-cell *matCellDef=\\\"let report\\\"> {{report.report_type}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"report_category\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Report Category </th>\\n        <td mat-cell *matCellDef=\\\"let report\\\"> {{report.report_category}} </td>\\n      </ng-container>\\n\\n      \\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id]\\\"\\n      class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvZnVuZHMtcmVwb3J0cy9mdW5kcy1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ReportsService } from '../reports.service';\n\n@Component({\n  selector: 'mifosx-funds-reports',\n  templateUrl: './funds-reports.component.html',\n  styleUrls: ['./funds-reports.component.scss']\n})\nexport class FundsReportsComponent implements OnInit {\n\n  displayedColumns:string[] = ['report_name','report_type','report_category'];\n  dataSource = new MatTableDataSource();\n  @ViewChild(MatPaginator) paginator : MatPaginator;\n  @ViewChild(MatSort) sort : MatSort;\n\n  constructor(private reportService:ReportsService) { }\n\n  ngOnInit() {\n    this.reportService.getFundsReports()\n    .subscribe(\n      (res =>{\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n    );\n  }\n  applyFilter(filterValue:string){\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"report_name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Report Name </th>\\n        <td mat-cell *matCellDef=\\\"let report\\\"> {{report.report_name}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"report_type\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Report Type </th>\\n        <td mat-cell *matCellDef=\\\"let report\\\"> {{report.report_type}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"report_category\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Report Category </th>\\n        <td mat-cell *matCellDef=\\\"let report\\\"> {{report.report_category}} </td>\\n      </ng-container>\\n\\n      \\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id]\\\"\\n      class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvbG9hbnMtcmVwb3J0cy9sb2Fucy1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ReportsService } from '../reports.service';\n\n@Component({\n  selector: 'mifosx-loans-reports',\n  templateUrl: './loans-reports.component.html',\n  styleUrls: ['./loans-reports.component.scss']\n})\nexport class LoansReportsComponent implements OnInit {\n\n  displayedColumns:string[] = ['report_name','report_type','report_category'];\n  dataSource = new MatTableDataSource();\n  @ViewChild(MatPaginator) paginator : MatPaginator;\n  @ViewChild(MatSort) sort : MatSort;\n\n  constructor(private reportService:ReportsService) { }\n\n  ngOnInit() {\n    this.reportService.getLoansReports()\n    .subscribe(\n      (res =>{\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n    );\n  }\n  applyFilter(filterValue:string){\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/** Routing Imports */\nimport { Route } from '../core/route/route.service';\n\n/** Translation Imports */\nimport { extract } from '../core/i18n/i18n.service';\n\nimport { ReportsComponent } from './reports.component';\nimport {ClientsReportsComponent} from './clients-reports/clients-reports.component';\nimport {AllReportsComponent} from './all-reports/all-reports.component';\nimport {LoansReportsComponent} from './loans-reports/loans-reports.component';\nimport {SavingsReportsComponent} from './savings-reports/savings-reports.component';\nimport {FundsReportsComponent} from './funds-reports/funds-reports.component';\nimport {AccountingReportsComponent} from './accounting-reports/accounting-reports.component';\n\nconst routes: Routes = [\n  Route.withShell([\n\n    {\n      path: 'reports',\n      component: ReportsComponent,\n      data: { title: extract('Reports'), breadcrumb: 'Reports' }\n    },\n    {\n      path:'clients-reports',\n      component:ClientsReportsComponent,\n      data : { title: extract('Clients'), breadcrumb: 'Clients'}\n    },\n    {\n      path:'all-reports',\n      component:AllReportsComponent,\n      data : { title: extract('All'), breadcrumb: 'All'}\n    },\n    {\n      path:'loans-reports',\n      component:LoansReportsComponent,\n      data : { title: extract('Loans'), breadcrumb: 'Loans'}\n    },\n    {\n      path:'savings-reports',\n      component:SavingsReportsComponent,\n      data : { title: extract('Savings'), breadcrumb: 'Savings'}\n    },\n    {\n      path:'funds-reports',\n      component:FundsReportsComponent,\n      data : { title: extract('Funds'), breadcrumb: 'Funds'}\n    },\n    {\n      path:'accounting-reports',\n      component:AccountingReportsComponent,\n      data : { title: extract('Accounting'), breadcrumb: 'Accounting'}\n    },\n\n\n  ])\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class ReportsRoutingModule { }\n","module.exports = \"<p>\\n  reports works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvcmVwb3J0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ReportsService } from './reports.service';\n@Component({\n  selector: 'mifosx-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.scss']\n})\nexport class ReportsComponent implements OnInit {\n\n  constructor(private reportsService: ReportsService) { }\n\n  ngOnInit() {\n    this.reportsService.getAllReports()\n    this.reportsService.getClientsReports()\n    this.reportsService.getLoansReports()\n    .subscribe();\n    \n  }\n}\n","import { NgModule,  CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '../core/core.module';\nimport { MatTableModule } from '@angular/material/table';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { ReportsComponent } from './reports.component';\nimport { ReportsRoutingModule } from './reports-routing.module';\nimport { ReportsService } from './reports.service';\nimport {ClientsReportsComponent} from './clients-reports/clients-reports.component';\nimport {AllReportsComponent} from './all-reports/all-reports.component';\nimport {LoansReportsComponent} from './loans-reports/loans-reports.component';\nimport {SavingsReportsComponent} from './savings-reports/savings-reports.component';\nimport {FundsReportsComponent} from './funds-reports/funds-reports.component';\nimport {AccountingReportsComponent} from './accounting-reports/accounting-reports.component';\nimport { from } from 'rxjs';\n@NgModule({\n  imports: [\n    CommonModule,\n    ReportsRoutingModule,\n    CoreModule,\n    MatTableModule,\n    FlexLayoutModule\n  ],\n  declarations: [ReportsComponent,\n    ClientsReportsComponent,\n    AllReportsComponent,\n    LoansReportsComponent,\n    SavingsReportsComponent,\n    FundsReportsComponent,\n    AccountingReportsComponent\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class ReportsModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n  })\n\n\nexport class ReportsService {\n    constructor(private http: HttpClient) { }\n\n    getAllReports(): Observable<any> {\n        const httpParams = new HttpParams()\n        return  this.http.get('/runreports/FullReportList?genericResultSet=false&parameterType=true');\n    }\n    getClientsReports():Observable<any>{\n        const httpParams = new HttpParams()\n        return this.http.get('/runreports/reportCategoryList?R_reportCategory=Client&genericResultSet=false&parameterType=true');\n    }\n    getLoansReports():Observable<any>{\n        const httpParams = new HttpParams()\n        return this.http.get('/runreports/reportCategoryList?R_reportCategory=Loan&genericResultSet=false&parameterType=true');\n    }\n    getSavingsReports():Observable<any>{\n        const httpParams = new HttpParams()\n        return this.http.get('/runreports/reportCategoryList?R_reportCategory=Savings&genericResultSet=false&parameterType=true');\n    }\n    getFundsReports():Observable<any>{\n        const httpParams = new HttpParams()\n        return this.http.get('/runreports/reportCategoryList?R_reportCategory=Fund&genericResultSet=false&parameterType=true');\n    }\n    getAccountingReports():Observable<any>{\n        const httpParams = new HttpParams()\n        return this.http.get('/runreports/reportCategoryList?R_reportCategory=Accounting&genericResultSet=false&parameterType=true');\n    }\n\n\n}","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"report_name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Report Name </th>\\n        <td mat-cell *matCellDef=\\\"let report\\\"> {{report.report_name}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"report_type\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Report Type </th>\\n        <td mat-cell *matCellDef=\\\"let report\\\"> {{report.report_type}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"report_category\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Report Category </th>\\n        <td mat-cell *matCellDef=\\\"let report\\\"> {{report.report_category}} </td>\\n      </ng-container>\\n\\n      \\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id]\\\"\\n      class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvc2F2aW5ncy1yZXBvcnRzL3NhdmluZ3MtcmVwb3J0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ReportsService } from '../reports.service';\n\n@Component({\n  selector: 'mifosx-savings-reports',\n  templateUrl: './savings-reports.component.html',\n  styleUrls: ['./savings-reports.component.scss']\n})\nexport class SavingsReportsComponent implements OnInit {\n\n  displayedColumns:string[] = ['report_name','report_type','report_category'];\n  dataSource = new MatTableDataSource();\n  @ViewChild(MatPaginator) paginator : MatPaginator;\n  @ViewChild(MatSort) sort : MatSort;\n\n  constructor(private reportService:ReportsService) { }\n\n  ngOnInit() {\n    this.reportService.getSavingsReports()\n    .subscribe(\n      (res =>{\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n    );\n  }\n  applyFilter(filterValue:string){\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-accordion>\\n\\n    <mat-expansion-panel>\\n\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          Main Configuration\\n        </mat-panel-title>\\n      </mat-expansion-panel-header>\\n\\n      <div fxLayout=\\\"column\\\">\\n\\n        <mat-form-field>\\n          <mat-label>Name of the Organization</mat-label>\\n          <input matInput>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Description</mat-label>\\n          <textarea matInput></textarea>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Summary</mat-label>\\n          <textarea matInput></textarea>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Default Language</mat-label>\\n          <mat-select>\\n            <mat-option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">\\n              {{ language }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Default Date Format</mat-label>\\n          <mat-select>\\n            <mat-option *ngFor=\\\"let dateFormat of dateFormats\\\" [value]=\\\"dateFormat\\\">\\n              {{ dateFormat }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n      </div>\\n\\n    </mat-expansion-panel>\\n\\n    <mat-expansion-panel>\\n\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          Images\\n        </mat-panel-title>\\n      </mat-expansion-panel-header>\\n\\n      <div fxLayout=\\\"column\\\">\\n\\n        <span class=\\\"header\\\">Favicon</span>\\n        <mifosx-file-upload></mifosx-file-upload>\\n\\n        <span class=\\\"header\\\">Cover Image</span>\\n        <mifosx-file-upload></mifosx-file-upload>\\n\\n        <span class=\\\"header\\\">Logo</span>\\n        <mifosx-file-upload></mifosx-file-upload>\\n\\n        <span class=\\\"header\\\">Logo with Organization Name</span>\\n        <mifosx-file-upload></mifosx-file-upload>\\n\\n      </div>\\n\\n    </mat-expansion-panel>\\n\\n    <mat-expansion-panel>\\n\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          Theme and Font\\n        </mat-panel-title>\\n      </mat-expansion-panel-header>\\n\\n      <div fxLayout=\\\"column\\\">\\n\\n        <span class=\\\"header\\\">Mobile Banking App</span>\\n        <mat-form-field>\\n          <mat-label>Default Theme</mat-label>\\n          <mat-select>\\n            <mat-option *ngFor=\\\"let theme of mobileAppThemes\\\" [value]=\\\"theme\\\">\\n              {{ theme }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Default Font</mat-label>\\n          <mat-select>\\n            <mat-option *ngFor=\\\"let font of mobileAppFonts\\\" [value]=\\\"font\\\">\\n              {{ font }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <span class=\\\"header\\\">Online Banking App</span>\\n        <mat-form-field>\\n          <mat-label>Default Theme</mat-label>\\n          <mat-select>\\n            <mat-option *ngFor=\\\"let theme of onlineBankingAppThemes\\\" [value]=\\\"theme\\\">\\n              {{ theme }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Default Font</mat-label>\\n          <mat-select>\\n            <mat-option *ngFor=\\\"let font of onlineBankingAppFonts\\\" [value]=\\\"font\\\">\\n              {{ font }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n      </div>\\n\\n    </mat-expansion-panel>\\n\\n    <mat-expansion-panel>\\n\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          Contact Information\\n        </mat-panel-title>\\n      </mat-expansion-panel-header>\\n\\n      <div fxLayout=\\\"column\\\">\\n\\n        <mat-form-field>\\n          <mat-label>Website</mat-label>\\n          <input type=\\\"url\\\" matInput>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Email</mat-label>\\n          <input type=\\\"email\\\" matInput>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Contact No</mat-label>\\n          <input type=\\\"tel\\\" matInput>\\n        </mat-form-field>\\n\\n      </div>\\n\\n    </mat-expansion-panel>\\n\\n  </mat-accordion>\\n\\n</div>\\n\"","module.exports = \".header {\\n  font-weight: 500; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3NlbGYtc2VydmljZS9hcHAtY29uZmlndXJhdGlvbi9hcHAtY29uZmlndXJhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2VsZi1zZXJ2aWNlL2FwcC1jb25maWd1cmF0aW9uL2FwcC1jb25maWd1cmF0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRlciB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\n\n/**\n * Self service app configuration component.\n *\n * TODO: Complete functionality once API is available.\n */\n@Component({\n  selector: 'mifosx-app-configuration',\n  templateUrl: './app-configuration.component.html',\n  styleUrls: ['./app-configuration.component.scss']\n})\nexport class AppConfigurationComponent implements OnInit {\n\n  /** Placeholder for languages. */\n  languages: any;\n  /** Placeholder for date formats. */\n  dateFormats: any;\n  /** Placeholder for mobile app themes. */\n  mobileAppThemes: any;\n  /** Placeholder for mobile app fonts. */\n  mobileAppFonts: any;\n  /** Placeholder for online banking app themes. */\n  onlineBankingAppThemes: any;\n  /** Placeholder for online banking app fonts. */\n  onlineBankingAppFonts: any;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/** Routing Imports */\nimport { Route } from '../core/route/route.service';\n\n/** Translation Imports */\nimport { extract } from '../core/i18n/i18n.service';\n\n/** Custom Components */\nimport { SelfServiceComponent } from './self-service.component';\nimport { UsersComponent } from './users/users.component';\nimport { CreateUserComponent } from './users/create-user/create-user.component';\nimport { ViewUserComponent } from './users/view-user/view-user.component';\nimport { EditUserComponent } from './users/edit-user/edit-user.component';\nimport { AppConfigurationComponent } from './app-configuration/app-configuration.component';\nimport { TaskManagementComponent } from './task-management/task-management.component';\n\n/** Custom Resolvers */\nimport { UsersResolver } from './users/users.resolver';\nimport { ViewUserResolver } from './users/view-user/view-user.resolver';\n\n/** Self Service Admin Portal Routes */\nconst routes: Routes = [\n  Route.withShell([\n    {\n      path: 'self-service',\n      component: SelfServiceComponent,\n      data: { title: extract('Self Service'), breadcrumb: 'Self Service', addBreadcrumbLink: false },\n      children: [\n        {\n          path: 'users',\n          data: { title: extract('Self Service Users'), breadcrumb: 'Users' },\n          children: [\n            {\n              path: '',\n              component: UsersComponent,\n              resolve: {\n                users: UsersResolver\n              }\n            },\n            {\n              path: 'create',\n              component: CreateUserComponent,\n              data: { title: extract('Create Self Service User'), breadcrumb: 'Create' }\n            },\n            {\n              path: 'view/:id',\n              data: { title: extract('View Self Service User'), routeResolveBreadcrumb: ['user', 'username'] },\n              resolve: {\n                user: ViewUserResolver\n              },\n              children: [\n                {\n                  path: '',\n                  component: ViewUserComponent\n                },\n                {\n                  path: 'edit',\n                  component: EditUserComponent,\n                  data: { title: extract('Edit Self Service User'), breadcrumb: 'Edit', routeResolveBreadcrumb: false }\n                }\n              ]\n            }\n          ]\n        },\n        {\n          path: 'app-configuration',\n          component: AppConfigurationComponent,\n          data: { title: extract('Self Service App Configuration'), breadcrumb: 'App Configuration' }\n        },\n        {\n          path: 'task-management',\n          component: TaskManagementComponent,\n          data: { title: extract('Self Service Task Management'), breadcrumb: 'Task Management' }\n        }\n      ]\n    }\n  ])\n];\n\n/**\n * Self Service Routing Module\n *\n * Configures the self service admin portal routes.\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    UsersResolver,\n    ViewUserResolver\n  ]\n})\nexport class SelfServiceRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbGYtc2VydmljZS9zZWxmLXNlcnZpY2UuY29tcG9uZW50LnNjc3MifQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\n\n/**\n * Self service component.\n *\n * All components related to self service admin portal are routed here.\n */\n@Component({\n  selector: 'mifosx-self-service',\n  templateUrl: './self-service.component.html',\n  styleUrls: ['./self-service.component.scss']\n})\nexport class SelfServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\n\n/** Custom Modules */\nimport { SharedModule } from '../shared/shared.module';\nimport { SelfServiceRoutingModule } from './self-service-routing.module';\n\n/** Custom Components */\nimport { SelfServiceComponent } from './self-service.component';\nimport { UsersComponent } from './users/users.component';\nimport { CreateUserComponent } from './users/create-user/create-user.component';\nimport { ViewUserComponent } from './users/view-user/view-user.component';\nimport { EditUserComponent } from './users/edit-user/edit-user.component';\nimport { AppConfigurationComponent } from './app-configuration/app-configuration.component';\nimport { TaskManagementComponent } from './task-management/task-management.component';\n\n/**\n * Self Service Module\n *\n * All components related to self service admin portal functions should be declared here.\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    SelfServiceRoutingModule\n  ],\n  declarations: [\n    SelfServiceComponent,\n    UsersComponent,\n    CreateUserComponent,\n    ViewUserComponent,\n    EditUserComponent,\n    AppConfigurationComponent,\n    TaskManagementComponent\n  ]\n})\nexport class SelfServiceModule { }\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <p>\\n    TODO: task-management component.\\n  </p>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbGYtc2VydmljZS90YXNrLW1hbmFnZW1lbnQvdGFzay1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mifosx-task-management',\n  templateUrl: './task-management.component.html',\n  styleUrls: ['./task-management.component.scss']\n})\nexport class TaskManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\" [class.small-width-container]=\\\"userType.value === 'Existing User'\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-header class=\\\"m-b-20\\\">\\n      <mat-radio-group fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" [formControl]=\\\"userType\\\">\\n        <mat-radio-button *ngFor=\\\"let type of userTypes\\\" [value]=\\\"type\\\">\\n          {{ type }}\\n        </mat-radio-button>\\n      </mat-radio-group>\\n    </mat-card-header>\\n\\n    <div *ngIf=\\\"userType.value === 'Existing User'\\\">\\n\\n      <form>\\n\\n        <mat-card-content>\\n\\n          <div fxLayout=\\\"column\\\">\\n\\n            <mat-form-field>\\n              <mat-label>Office</mat-label>\\n              <mat-select>\\n                <mat-option *ngFor=\\\"let office of officeData\\\" [value]=\\\"office\\\">\\n                  {{ office }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n              <mat-label>Staff</mat-label>\\n              <mat-select>\\n                <mat-option *ngFor=\\\"let staff of staffData\\\" [value]=\\\"staff\\\">\\n                  {{ staff }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n              <mat-label>Client</mat-label>\\n              <mat-select>\\n                <mat-option *ngFor=\\\"let client of clientData\\\" [value]=\\\"client\\\">\\n                  {{ client }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n          </div>\\n\\n        </mat-card-content>\\n\\n        <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n          <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n          <button mat-raised-button color=\\\"accent\\\">\\n            <fa-icon icon=\\\"lock-open\\\"></fa-icon>&nbsp;&nbsp;\\n            Activate Self Service User\\n          </button>\\n        </mat-card-actions>\\n\\n      </form>\\n\\n    </div>\\n\\n    <div *ngIf=\\\"userType.value === 'New User'\\\">\\n\\n      <form>\\n\\n        <mat-card-content>\\n\\n          <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n            <mat-form-field fxFlex=\\\"48%\\\">\\n              <mat-label>Office</mat-label>\\n              <mat-select>\\n                <mat-option *ngFor=\\\"let office of officeData\\\" [value]=\\\"office\\\">\\n                  {{ office }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlex=\\\"48%\\\">\\n              <mat-label>Staff</mat-label>\\n              <mat-select>\\n                <mat-option *ngFor=\\\"let staff of staffData\\\" [value]=\\\"staff\\\">\\n                  {{ staff }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlex=\\\"48%\\\">\\n              <mat-label>Username</mat-label>\\n              <input type=\\\"text\\\" matInput>\\n            </mat-form-field>\\n\\n            <span fxFlex=\\\"48%\\\" fxHide.lt-md></span>\\n\\n            <mat-form-field fxFlex=\\\"48%\\\">\\n              <mat-label>First Name</mat-label>\\n              <input type=\\\"text\\\" matInput>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlex=\\\"48%\\\">\\n              <mat-label>Last Name</mat-label>\\n              <input type=\\\"text\\\" matInput>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlex=\\\"48%\\\">\\n              <mat-label>Gender</mat-label>\\n              <mat-select>\\n                <mat-option *ngFor=\\\"let gender of genderData\\\" [value]=\\\"gender\\\">\\n                  {{ gender }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlex=\\\"48%\\\">\\n              <mat-label>Date of Birth</mat-label>\\n              <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"dateOfBirthDatePicker\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"dateOfBirthDatePicker\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #dateOfBirthDatePicker></mat-datepicker>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlex=\\\"48%\\\">\\n              <mat-label>Email</mat-label>\\n              <input type=\\\"email\\\" matInput>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlex=\\\"48%\\\">\\n              <mat-label>Mobile No</mat-label>\\n              <input type=\\\"tel\\\" matInput>\\n            </mat-form-field>\\n\\n          </div>\\n\\n        </mat-card-content>\\n\\n        <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n          <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n          <button mat-raised-button color=\\\"primary\\\">Submit</button>\\n        </mat-card-actions>\\n\\n      </form>\\n\\n    </div>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".small-width-container {\\n  max-width: 37rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3NlbGYtc2VydmljZS91c2Vycy9jcmVhdGUtdXNlci9jcmVhdGUtdXNlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2VsZi1zZXJ2aWNlL3VzZXJzL2NyZWF0ZS11c2VyL2NyZWF0ZS11c2VyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNtYWxsLXdpZHRoLWNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMzdyZW07XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n/**\n * Create self service user component.\n *\n * TODO: Complete functionality once API is available.\n */\n@Component({\n  selector: 'mifosx-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.scss']\n})\nexport class CreateUserComponent implements OnInit {\n\n  /** Denotes type of user. */\n  userTypes = ['Existing User', 'New User'];\n  /** Radio button group form control for type of user. */\n  userType = new FormControl(this.userTypes[0]);\n  /** Placeholder for office data. */\n  officeData = ['Office 1', 'Office 2'];\n  /** Placeholder for staff data. */\n  staffData = ['Staff 1', 'Staff 2'];\n  /** Placeholder for client data. */\n  clientData = ['Client 1', 'Client 2'];\n  /** Placeholder for gender data. */\n  genderData = ['Male', 'Female'];\n  /** Minimum date of birth of user allowed. */\n  minDate = new Date(1900, 0, 1);\n  /** Maximum date of birth of user allowed. */\n  maxDate = new Date();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form>\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Office</mat-label>\\n            <mat-select>\\n              <mat-option *ngFor=\\\"let office of officeData\\\" [value]=\\\"office\\\">\\n                {{ office }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Staff</mat-label>\\n            <mat-select>\\n              <mat-option *ngFor=\\\"let staff of staffData\\\" [value]=\\\"staff\\\">\\n                {{ staff }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Username</mat-label>\\n            <input type=\\\"text\\\" matInput>\\n          </mat-form-field>\\n\\n          <span fxFlex=\\\"48%\\\" fxHide.lt-md></span>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>First Name</mat-label>\\n            <input type=\\\"text\\\" matInput>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Last Name</mat-label>\\n            <input type=\\\"text\\\" matInput>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Gender</mat-label>\\n            <mat-select>\\n              <mat-option *ngFor=\\\"let gender of genderData\\\" [value]=\\\"gender\\\">\\n                {{ gender }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Date of Birth</mat-label>\\n            <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"dateOfBirthDatePicker\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"dateOfBirthDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #dateOfBirthDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Email</mat-label>\\n            <input type=\\\"email\\\" matInput>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Mobile No</mat-label>\\n            <input type=\\\"tel\\\" matInput>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbGYtc2VydmljZS91c2Vycy9lZGl0LXVzZXIvZWRpdC11c2VyLmNvbXBvbmVudC5zY3NzIn0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\n\n/**\n * Edit self service user component.\n *\n * TODO: Complete functionality once API is available.\n */\n@Component({\n  selector: 'mifosx-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.scss']\n})\nexport class EditUserComponent implements OnInit {\n\n  /** Placeholder for office data. */\n  officeData: any;\n  /** Placeholder for staff data. */\n  staffData: any;\n  /** Placeholder for gender data. */\n  genderData: any;\n  /** Minimum date of birth of user allowed. */\n  minDate = new Date(1900, 0, 1);\n  /** Maximum date of birth of user allowed. */\n  maxDate = new Date();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/** Angular Routes */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/** Custom Models */\nimport { User } from './user.model';\n\n/**\n * Self service users service.\n *\n * TODO: Complete functionality once API is available.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  /**\n   * @param {HttpClient} http Http Client to send requests.\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Gets all the self service users.\n   *\n   * TODO: To be replaced once API is available.\n   */\n  getUsers(): Observable<User[]> {\n    const httpParams = new HttpParams().set('fields', 'id,firstname,lastname,email,officeName,staff');\n    return this.http.get('/users', { params: httpParams })\n      .pipe(\n        map((users: any) => {\n          users.forEach((user: any) => {\n            user.name = `${user.firstname} ${user.lastname}`;\n            user.staff = user.staff ? `${user.staff.firstname} ${user.staff.lastname}` : '';\n            delete user.firstname;\n            delete user.lastname;\n          });\n          return users as User[];\n        })\n      );\n  }\n\n  /**\n   * Gets a self service user.\n   *\n   * TODO: Mock data to be replaced once API is available.\n   */\n  getUser(): Observable<any> {\n    return this.http.disableApiPrefix().get('/assets/mock/user.mock.json');\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <!-- TODO: Update to show only Activate/Inactivate button at a time according to selection in table. -->\\n  <button mat-raised-button color=\\\"accent\\\">\\n    <fa-icon icon=\\\"lock-open\\\"></fa-icon>&nbsp;&nbsp;\\n    Activate\\n  </button>\\n  <button mat-raised-button color=\\\"warn\\\">\\n    <fa-icon icon=\\\"lock\\\"></fa-icon>&nbsp;&nbsp;\\n    Deactivate\\n  </button>\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['create']\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create User\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput type=\\\"text\\\" (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"select\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n          <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                        [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                        [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n          </mat-checkbox>\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">\\n          <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                        (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                        [checked]=\\\"selection.isSelected(row)\\\">\\n          </mat-checkbox>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let user\\\"> {{ user.name }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"id\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> User ID </th>\\n        <td mat-cell *matCellDef=\\\"let user\\\"> {{ user.id }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"email\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Email ID </th>\\n        <td mat-cell *matCellDef=\\\"let user\\\"> {{ user.email }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"status\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"isSelfServiceUser\\\"> Status </th>\\n        <td mat-cell *matCellDef=\\\"let user\\\">\\n          <div [className]=\\\"user.isSelfServiceUser === true ? 'active' : 'inactive'\\\">\\n            <fa-icon matTooltip=\\\"{{ user.isSelfServiceUser === true ? 'Active' : 'Inactive' }}\\\" matTooltipPosition=\\\"right\\\" icon=\\\"circle\\\" size=\\\"lg\\\"></fa-icon>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"officeName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Office </th>\\n        <td mat-cell *matCellDef=\\\"let user\\\"> {{ user.officeName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"staff\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Staff </th>\\n        <td mat-cell *matCellDef=\\\"let user\\\"> {{ user.staff }} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['view/1600']\\\"></tr>\\n      <!-- TODO: Update route once API is setup. -->\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.inactive {\\n  color: #d3d3d3; }\\n\\n.active {\\n  color: #32cd32; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3NlbGYtc2VydmljZS91c2Vycy91c2Vycy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTs7QUFJYjtFQUNFLGNBQWMsRUFBQTs7QUFHaEI7RUFDRSxjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zZWxmLXNlcnZpY2UvdXNlcnMvdXNlcnMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4vLyBUT0RPOiBDT05GSUdVUkUgVEhFU0UgQ0xBU1NFUyBHTE9CQUxMWVxuLmluYWN0aXZlIHtcbiAgY29sb3I6ICNkM2QzZDM7XG59XG5cbi5hY3RpdmUge1xuICBjb2xvcjogIzMyY2QzMjtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\n\n/** Custom Services */\nimport { UserService } from './user.service';\n\n/** Custom Model */\nimport { User } from './user.model';\n\n/**\n * Self service users component.\n *\n * TODO: Complete functionality once API is available.\n */\n@Component({\n  selector: 'mifosx-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  /** Self service users. */\n  userData: User[];\n  /** Columns to be displayed in users table. */\n  displayedColumns: string[] = ['select', 'name', 'id', 'email', 'status', 'officeName', 'staff'];\n  /** Data source for users table. */\n  dataSource: MatTableDataSource<User>;\n  /** Selection model for users table. */\n  selection = new SelectionModel<User>(true, []);\n\n  /** Paginator for users table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for users table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the users data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { users: User[] }) => {\n      this.userData = data.users;\n    });\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for users table.\n   */\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource(this.userData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n   * Filters data in users table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Checks if all rows of users table are selected.\n   * @returns {boolean} True if all rows are selected.\n   */\n  isAllSelected(): boolean {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /**\n   * Toggles selection for all rows of users table.\n   */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach((row: User) => this.selection.select(row));\n  }\n\n}\n","/** Angular Routes */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { UserService } from './user.service';\n\n/** Custom Model */\nimport { User } from './user.model';\n\n/**\n * Self service users data resolver.\n */\n@Injectable()\nexport class UsersResolver implements Resolve<Object> {\n\n  /**\n   * @param {UserService} userService Self service user service.\n   */\n  constructor(private userService: UserService) {}\n\n  /**\n   * Returns the users data.\n   * @returns {Observable<User[]>}\n   */\n  resolve(): Observable<User[]> {\n    return this.userService.getUsers();\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"2%\\\">\\n  <!-- TODO: Update to show only Activate/Inactivate button at a time according to status of user. -->\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['edit']\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openDialog()\\\">\\n    <fa-icon icon=\\\"cog\\\"></fa-icon>&nbsp;&nbsp;\\n    Change Password\\n  </button>\\n  <button mat-raised-button color=\\\"accent\\\">\\n    <fa-icon icon=\\\"lock-open\\\"></fa-icon>&nbsp;&nbsp;\\n    Activate\\n  </button>\\n  <button mat-raised-button color=\\\"warn\\\">\\n    <fa-icon icon=\\\"lock\\\"></fa-icon>&nbsp;&nbsp;\\n    Deactivate\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-content>\\n\\n      <div fxLayout=\\\"row wrap\\\" class=\\\"content\\\">\\n\\n        <div fxFlex=\\\"100%\\\" class=\\\"header\\\">\\n          <fa-icon icon=\\\"circle\\\" size=\\\"lg\\\" matTooltip=\\\"{{ user.status }}\\\" matTooltipPosition=\\\"above\\\"></fa-icon>&nbsp;&nbsp;\\n          ID: {{ user.id }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Username\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ user.username }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          First Name\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ user.firstName }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Last Name\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ user.lastName }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Gender\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ user.gender }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Date of Birth\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ user.dateOfBirth }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Email\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ user.email }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Mobile\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ user.mobile }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Office\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ user.office }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Staff\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ user.staff }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"header\\\">\\n          Activation Date\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ user.activationDate }}\\n        </div>\\n\\n      </div>\\n\\n    </mat-card-content>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n  .container .content div {\\n    margin: 1rem 0;\\n    word-wrap: break-word; }\\n  .container .content div.header {\\n      font-weight: 500; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3NlbGYtc2VydmljZS91c2Vycy92aWV3LXVzZXIvdmlldy11c2VyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCLEVBQUE7RUFEbEI7SUFLTSxjQUFjO0lBQ2QscUJBQXFCLEVBQUE7RUFOM0I7TUFTUSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NlbGYtc2VydmljZS91c2Vycy92aWV3LXVzZXIvdmlldy11c2VyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMzdyZW07XG5cbiAgLmNvbnRlbnQge1xuICAgIGRpdiB7XG4gICAgICBtYXJnaW46IDFyZW0gMDtcbiAgICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcblxuICAgICAgJi5oZWFkZXIge1xuICAgICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n/**\n * View self service user component.\n *\n * TODO: Complete functionality once API is available.\n */\n@Component({\n  selector: 'mifosx-view-user',\n  templateUrl: './view-user.component.html',\n  styleUrls: ['./view-user.component.scss']\n})\nexport class ViewUserComponent implements OnInit {\n\n  /** Self service user. */\n  user: any;\n\n  /**\n   * Retrieves the user data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { user: any }) => {\n      this.user = data.user;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  openDialog() {\n    // TODO: Open change password dialog.\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { UserService } from '../user.service';\n\n/** Custom Model */\nimport { User } from '../user.model';\n\n/**\n * View self service user data resolver.\n */\n@Injectable()\nexport class ViewUserResolver implements Resolve<Object> {\n\n  /**\n   * @param {UserService} userService Self service user service.\n   */\n  constructor(private userService: UserService) {}\n\n  /**\n   * Returns the user data.\n   * @returns {Observable<User>}\n   */\n  resolve(): Observable<User> {\n    return this.userService.getUser();\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/** Routing Imports */\nimport { Route } from '../core/route/route.service';\n\n/** Translation Imports */\nimport { extract } from '../core/i18n/i18n.service';\n\n/** Custom Components */\nimport { SettingsComponent } from './settings.component';\n\n/** Settings Routes */\nconst routes: Routes = [\n  Route.withShell([\n    {\n      path: 'settings',\n      component: SettingsComponent,\n      data: { title: extract('Settings'), breadcrumb: 'Settings' }\n    }\n  ])\n];\n\n/**\n * Settings Routing Module\n *\n * Configures the settings and web app configuration routes.\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class SettingsRoutingModule { }\n","module.exports = \"<!-- TODO: Add user specific settings for choice of language and date format. -->\\n\\n<!-- Global Web App Configuration Settings -->\\n<div class=\\\"container\\\">\\n\\n  <mat-accordion>\\n\\n    <mat-expansion-panel>\\n\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          Main Configuration\\n        </mat-panel-title>\\n      </mat-expansion-panel-header>\\n\\n      <div fxLayout=\\\"column\\\">\\n\\n        <mat-form-field>\\n          <mat-label>Name of the Organization</mat-label>\\n          <input matInput>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Description</mat-label>\\n          <textarea matInput></textarea>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Summary</mat-label>\\n          <textarea matInput></textarea>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Default Language</mat-label>\\n          <mat-select>\\n            <mat-option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">\\n              {{ language }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Default Date Format</mat-label>\\n          <mat-select>\\n            <mat-option *ngFor=\\\"let dateFormat of dateFormats\\\" [value]=\\\"dateFormat\\\">\\n              {{ dateFormat }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n      </div>\\n\\n    </mat-expansion-panel>\\n\\n    <mat-expansion-panel>\\n\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          Images\\n        </mat-panel-title>\\n      </mat-expansion-panel-header>\\n\\n      <div fxLayout=\\\"column\\\">\\n\\n        <span class=\\\"header\\\">Favicon</span>\\n        <mifosx-file-upload></mifosx-file-upload>\\n\\n        <span class=\\\"header\\\">Cover Image</span>\\n        <mifosx-file-upload></mifosx-file-upload>\\n\\n        <span class=\\\"header\\\">Logo</span>\\n        <mifosx-file-upload></mifosx-file-upload>\\n\\n        <span class=\\\"header\\\">Logo with Organization Name</span>\\n        <mifosx-file-upload></mifosx-file-upload>\\n\\n      </div>\\n\\n    </mat-expansion-panel>\\n\\n    <mat-expansion-panel>\\n\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          Theme and Font\\n        </mat-panel-title>\\n      </mat-expansion-panel-header>\\n\\n      <div fxLayout=\\\"column\\\">\\n\\n        <span class=\\\"header\\\">Theme</span>\\n        <mifosx-theme-picker></mifosx-theme-picker>\\n\\n        <mat-form-field>\\n          <mat-label>Default Font</mat-label>\\n          <mat-select>\\n            <mat-option *ngFor=\\\"let font of fonts\\\" [value]=\\\"font\\\">\\n              {{ font }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n      </div>\\n\\n    </mat-expansion-panel>\\n\\n    <mat-expansion-panel>\\n\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          Contact Information\\n        </mat-panel-title>\\n      </mat-expansion-panel-header>\\n\\n      <div fxLayout=\\\"column\\\">\\n\\n        <mat-form-field>\\n          <mat-label>Website</mat-label>\\n          <input type=\\\"url\\\" matInput>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Email</mat-label>\\n          <input type=\\\"email\\\" matInput>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Contact No</mat-label>\\n          <input type=\\\"tel\\\" matInput>\\n        </mat-form-field>\\n\\n      </div>\\n\\n    </mat-expansion-panel>\\n\\n  </mat-accordion>\\n\\n</div>\\n\"","module.exports = \".header {\\n  font-weight: 500; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zZXR0aW5ncy9zZXR0aW5ncy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWFkZXIge1xuICBmb250LXdlaWdodDogNTAwO1xufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\n\n/**\n * Settings component.\n */\n@Component({\n  selector: 'mifosx-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  /** Placeholder for languages. */\n  languages: any;\n  /** Placeholder for date formats. */\n  dateFormats: any;\n  /** Placeholder for fonts. */\n  fonts: any;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\n\n/** Custom Modules */\nimport { SharedModule } from '../shared/shared.module';\nimport { SettingsRoutingModule } from './settings-routing.module';\n\n/** Custom Components */\nimport { SettingsComponent } from './settings.component';\n\n/**\n * Settings Module\n *\n * All components related to settings and web app configuration should be declared here.\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    SettingsRoutingModule\n  ],\n  declarations: [SettingsComponent]\n})\nexport class SettingsModule { }\n","module.exports = \"<h1 mat-dialog-title>Delete</h1>\\n<div mat-dialog-content>\\n  <p>Are you sure you want to delete {{ data.deleteContext }} ?</p>\\n</div>\\n<mat-dialog-actions align=\\\"end\\\">\\n  <button mat-raised-button mat-dialog-close>Cancel</button>\\n  <button mat-raised-button color=\\\"warn\\\" [mat-dialog-close]=\\\"{ delete: true }\\\">Confirm</button>\\n</mat-dialog-actions>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9kZWxldGUtZGlhbG9nL2RlbGV0ZS1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */\"","/** Angular Imports */\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n/**\n * Delete dialog component.\n */\n@Component({\n  selector: 'mifosx-delete-dialog',\n  templateUrl: './delete-dialog.component.html',\n  styleUrls: ['./delete-dialog.component.scss']\n})\nexport class DeleteDialogComponent implements OnInit {\n\n  /**\n   * @param {MatDialogRef} dialogRef Component reference to dialog.\n   * @param {any} data Provides a deleteContext.\n   */\n  constructor(public dialogRef: MatDialogRef<DeleteDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2%\\\">\\n  <mat-form-field fxFlex=\\\"83%\\\">\\n    <input matInput [readonly]=\\\"true\\\" [value]=\\\"fileName\\\" placeholder=\\\"No file uploaded\\\">\\n  </mat-form-field>\\n  <span fxFlex=\\\"13%\\\" fxFlexAlign=\\\"center\\\">\\n    <button mat-button (click)=\\\"uploadFile.click()\\\">\\n      <fa-icon icon=\\\"file-upload\\\" size=\\\"lg\\\"></fa-icon>\\n      &nbsp;&nbsp;\\n      Upload a file\\n    </button>\\n  </span>\\n</div>\\n<input type=\\\"file\\\" #uploadFile (change)=\\\"onFileSelected($event)\\\" [style.display]=\\\"'none'\\\">\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9maWxlLXVwbG9hZC9maWxlLXVwbG9hZC5jb21wb25lbnQuc2NzcyJ9 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\n\n/**\n * Custom file upload component based on angular material.\n */\n@Component({\n  selector: 'mifosx-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss']\n})\nexport class FileUploadComponent implements OnInit {\n\n  /** Name of file. */\n  fileName = '';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Uploads a file.\n   * @param {any} event The file input change event.\n   */\n  onFileSelected($event: any) {\n    this.fileName = $event.target.files[0].name;\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"column\\\" id=\\\"footer\\\" class=\\\"m-b-20\\\">\\n  <mat-divider fxFlexAlign=\\\"center\\\" class=\\\"divider\\\"></mat-divider>\\n <!-- <p fxFlexAlign=\\\"center\\\" class=\\\"footer-content\\\">Version {{ version }}</p> -->\\n  <p fxFlexAlign=\\\"center\\\" class=\\\"footer-content\\\">© Copyright <a target=\\\"_blank\\\" href=\\\"https://finos.in\\\" >FinOS Technologies</a>. All rights reserved.</p>\\n</div>\\n\"","module.exports = \"#footer .divider {\\n  margin: 2.5rem 1rem 0.5rem;\\n  width: 4rem; }\\n\\n#footer .footer-content {\\n  margin: 0;\\n  color: #777777;\\n  font-size: 90%; }\\n\\n#footer .footer-content a {\\n    color: #4f99ed;\\n    text-decoration: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3NoYXJlZC9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksMEJBQTBCO0VBQzFCLFdBQVcsRUFBQTs7QUFIZjtFQU9JLFNBQVM7RUFDVCxjQUFjO0VBQ2QsY0FBYyxFQUFBOztBQVRsQjtJQVdNLGNBQWE7SUFDYixxQkFBcUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2Zvb3RlciB7XG4gIC5kaXZpZGVyIHtcbiAgICBtYXJnaW46IDIuNXJlbSAxcmVtIDAuNXJlbTtcbiAgICB3aWR0aDogNHJlbTtcbiAgfVxuXG4gIC5mb290ZXItY29udGVudCB7XG4gICAgbWFyZ2luOiAwO1xuICAgIGNvbG9yIDojNzc3Nzc3O1xuICAgIGZvbnQtc2l6ZTogOTAlO1xuICAgIGF7XG4gICAgICBjb2xvcjojNGY5OWVkO1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIH1cbiAgfVxufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\n\n/** Environment Configuration */\nimport { environment } from 'environments/environment';\n\n/**\n *  Footer component.\n */\n@Component({\n  selector: 'mifosx-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  /** Mifos X version. */\n  version: string = environment.version;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<h1 mat-dialog-title>{{ data.title }}</h1>\\n\\n<div mat-dialog-content [formGroup]=\\\"form\\\" [fxLayout]=\\\"layout.columns > 1 ? 'row wrap' : 'column'\\\" fxLayout.lt-md=\\\"column\\\" [fxLayoutGap]=\\\"(layout.columns > 1 ? layout.gap : 0) + '%'\\\" fxLayoutGap.lt-md=\\\"0%\\\">\\n\\n  <div *ngFor=\\\"let formfield of formfields\\\" [fxFlex]=\\\"layout.flex + '%'\\\" fxFlex.lt-md=\\\"100%\\\">\\n    <mifosx-formfield [formfield]=\\\"formfield\\\" [form]=\\\"form\\\" fxFlexFill></mifosx-formfield>\\n  </div>\\n\\n</div>\\n\\n<mat-dialog-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2%\\\">\\n  <button mat-raised-button mat-dialog-close>{{ layout.cancelButtonText }}</button>\\n  <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"{ data: form }\\\" [disabled]=\\\"!form.valid || form.pristine\\\">{{ layout.addButtonText }}</button>\\n</mat-dialog-actions>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9mb3JtLWRpYWxvZy9mb3JtLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormfieldBase } from './formfield/model/formfield-base';\n\nimport { FormGroupService } from './form-group.service';\n\nconst layoutGap = 2;\n\n@Component({\n  selector: 'mifosx-form-dialog',\n  templateUrl: './form-dialog.component.html',\n  styleUrls: ['./form-dialog.component.scss']\n})\nexport class FormDialogComponent implements OnInit {\n\n  layout: {\n    columns: number,\n    columnWidth?: number,\n    flex?: number,\n    gap?: number,\n    cancelButtonText?: string,\n    addButtonText?: string\n  } = {\n    columns: 1,\n    columnWidth: 400,\n    flex: 100,\n    cancelButtonText: 'Cancel',\n    addButtonText: 'Add'\n  };\n\n  form: FormGroup;\n  formfields: FormfieldBase[];\n  pristine: boolean;\n\n  constructor(public dialogRef: MatDialogRef<FormDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private formGroupService: FormGroupService) {\n    this.dialogRef.disableClose = data.disableClose !== undefined ? data.disableClose : true;\n    this.formfields = data.formfields.sort((formfieldA: FormfieldBase, formfieldB: FormfieldBase) => formfieldA.order - formfieldB.order);\n    this.pristine = data.pristine !== undefined ? data.pristine : true;\n    this.layout = { ...this.layout, ...data.layout };\n    this.layout.gap = this.layout.columns > 1 ? layoutGap : 0;\n    this.layout.flex = (this.layout.flex / this.layout.columns) - this.layout.gap;\n  }\n\n  ngOnInit() {\n    this.dialogRef.updateSize(`${this.layout.columnWidth * this.layout.columns}px`);\n    this.form = this.formGroupService.createFormGroup(this.formfields);\n    if (!this.pristine) {\n      this.form.markAsDirty();\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { FormfieldBase } from './formfield/model/formfield-base';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormGroupService {\n\n  constructor() { }\n\n  createFormGroup(formfields: FormfieldBase[]) {\n    const group: any = {};\n\n    formfields.forEach(formfield => {\n      group[formfield.controlName] = formfield.required ? new FormControl(formfield.value, Validators.required) : new FormControl(formfield.value);\n    });\n\n    return new FormGroup(group);\n  }\n\n}\n\n\n","module.exports = \"<div [formGroup]=\\\"form\\\" fxFlexFill>\\n\\n  <div *ngIf=\\\"formfield.controlType==='input' || formfield.controlType==='select'\\\" fxFlexFill>\\n    \\n    <mat-form-field fxFlexFill>\\n\\n      <mat-label>{{ formfield.label }}</mat-label>\\n\\n      <input *ngIf=\\\"formfield.controlType==='input'\\\" [type]=\\\"formfield.type\\\" matInput\\n        [formControlName]=\\\"formfield.controlName\\\" [required]=\\\"formfield.required\\\">\\n\\n      <mat-select *ngIf=\\\"formfield.controlType==='select'\\\" [formControlName]=\\\"formfield.controlName\\\"\\n        [required]=\\\"formfield.required\\\">\\n        <mat-option *ngFor=\\\"let option of formfield.options.data\\\" [value]=\\\"option[formfield.options.value]\\\">\\n          {{ option[formfield.options.label] }}\\n        </mat-option>\\n      </mat-select>\\n\\n      <mat-error *ngIf=\\\"form.controls[formfield.controlName].hasError('required')\\\">\\n        {{ formfield.label }} is <strong>required</strong>\\n      </mat-error>\\n\\n    </mat-form-field>\\n\\n  </div>\\n\\n  <mat-form-field fxFlexFill *ngIf=\\\"formfield.controlType==='datepicker'\\\">\\n    <mat-label>{{ formfield.label }}</mat-label>\\n    <input matInput [matDatepicker]=\\\"datePicker\\\" [min]=\\\"formfield.minDate\\\" [max]=\\\"formfield.maxDate\\\"  \\n      [formControlName]=\\\"formfield.controlName\\\" [required]=\\\"formfield.required\\\">\\n    <mat-datepicker-toggle matSuffix [for]=\\\"datePicker\\\"></mat-datepicker-toggle>\\n    <mat-datepicker #datePicker></mat-datepicker>\\n    <mat-error *ngIf=\\\"form.controls[formfield.controlName].hasError('required')\\\">\\n      {{ formfield.label }} is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-checkbox *ngIf=\\\"formfield.controlType==='checkbox'\\\" labelPosition=\\\"before\\\" [checked]=\\\"formfield.value\\\"\\n    [formControlName]=\\\"formfield.controlName\\\" [required]=\\\"formfield.required\\\">\\n    {{ formfield.label }}\\n  </mat-checkbox>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9mb3JtLWRpYWxvZy9mb3JtZmllbGQvZm9ybWZpZWxkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { FormfieldBase } from './model/formfield-base';\n\n@Component({\n  selector: 'mifosx-formfield',\n  templateUrl: './formfield.component.html',\n  styleUrls: ['./formfield.component.scss']\n})\nexport class FormfieldComponent implements OnInit {\n\n  @Input() form: FormGroup;\n  @Input() formfield: FormfieldBase;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { FormfieldBase } from './formfield-base';\n\nexport class CheckboxBase extends FormfieldBase {\n    controlType = 'checkbox';\n\n    constructor(options: any) {\n        super(options);\n    }\n\n}\n","import { FormfieldBase } from './formfield-base';\n\nexport class DatepickerBase extends FormfieldBase {\n\n  controlType = 'datepicker';\n  minDate: Date;\n  maxDate: Date;\n\n  constructor(options: {} = {}) {\n    super(options);\n    this.minDate = options['minDate'] || new Date(2000, 0, 1);\n    this.maxDate = options['maxDate'] || new Date();\n  }\n\n}\n","export class FormfieldBase {\n\n  controlType: string;\n  controlName: string;\n  label: string;\n  value: string;\n  required: boolean;\n  order: number;\n\n  constructor(options: {\n              controlType?: string,\n              controlName?: string,\n              label?: string,\n              value?: string,\n              required?: boolean,\n              order?: number\n    } = {}) {\n      this.controlType = options.controlType || '';\n      this.controlName = options.controlName || '';\n      this.label = options.label || '';\n      this.value = options.value === undefined ? '' : options.value;\n      this.required = !!options.required;\n      this.order = options.order === undefined ? 1 : options.order;\n  }\n\n}\n","import { FormfieldBase } from './formfield-base';\n\nexport class InputBase extends FormfieldBase {\n\n  controlType = 'input';\n  type: string;\n\n  constructor(options: {} = {}) {\n    super(options);\n    this.type = options['type'] || 'text';\n  }\n\n}\n","import { FormfieldBase } from './formfield-base';\n\nexport class SelectBase extends FormfieldBase {\n\n  controlType = 'select';\n  options: {\n    label: string,\n    value: string,\n    data: {}[]\n  };\n\n  constructor(options: {} = {}) {\n    super(options);\n    this.options = options['options'];\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\n\n/** Angular Font Awesome Imports */\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faAnchor,\n  faArchive,\n  faArrowLeft,\n  faArrowRight,\n  faBars,\n  faBell,\n  faBook,\n  faBriefcase,\n  faBuilding,\n  faCalendar,\n  faCalendarAlt,\n  faChartBar,\n  faCheck,\n  faCheckCircle,\n  faChevronDown,\n  faChevronLeft,\n  faChevronRight,\n  faCircle,\n  faClock,\n  faCloud,\n  faCog,\n  faCogs,\n  faCommentAlt,\n  faDollarSign,\n  faEdit,\n  faEnvelope,\n  faExclamationCircle,\n  faExclamationTriangle,\n  faEye,\n  faEyeSlash,\n  faFileAlt,\n  faFileUpload,\n  faFileWord,\n  faFillDrip,\n  faHandHoldingUsd,\n  faHome,\n  faKey,\n  faLink,\n  faList,\n  faListUl,\n  faLocationArrow,\n  faLock,\n  faLockOpen,\n  faMinusCircle,\n  faMoneyBillAlt,\n  faMoneyCheck,\n  faPencilAlt,\n  faPlay,\n  faPlus,\n  faPlusCircle,\n  faQuestionCircle,\n  faRandom,\n  faRoad,\n  faSearch,\n  faShieldAlt,\n  faSignOutAlt,\n  faSitemap,\n  faSync,\n  faTable,\n  faTachometerAlt,\n  faTag,\n  faTags,\n  faTimesCircle,\n  faTrash,\n  faUndo,\n  faUniversity,\n  faUserCircle,\n  faUser,\n  faUsers,\n  faUserShield,\n  faDownload,\n  faUpload,\n  faCloudDownloadAlt,\n  faCloudUploadAlt,\n  faTimes,\n  faStickyNote,\n  faStop\n} from '@fortawesome/free-solid-svg-icons';\n\n/** Add icons to the library for convenient access in other components. */\nlibrary.add(\n  faAnchor,\n  faArchive,\n  faArrowLeft,\n  faArrowRight,\n  faBars,\n  faBell,\n  faBook,\n  faBriefcase,\n  faBuilding,\n  faCalendar,\n  faCalendarAlt,\n  faChartBar,\n  faCheck,\n  faCheckCircle,\n  faChevronDown,\n  faChevronLeft,\n  faChevronRight,\n  faCircle,\n  faClock,\n  faCloud,\n  faCog,\n  faCogs,\n  faCommentAlt,\n  faDollarSign,\n  faEdit,\n  faEnvelope,\n  faExclamationCircle,\n  faExclamationTriangle,\n  faEye,\n  faEyeSlash,\n  faFileAlt,\n  faFileUpload,\n  faFileWord,\n  faFillDrip,\n  faHandHoldingUsd,\n  faHome,\n  faKey,\n  faLink,\n  faList,\n  faListUl,\n  faLocationArrow,\n  faLock,\n  faLockOpen,\n  faMinusCircle,\n  faMoneyBillAlt,\n  faMoneyCheck,\n  faPencilAlt,\n  faPlay,\n  faPlus,\n  faPlusCircle,\n  faQuestionCircle,\n  faRandom,\n  faRoad,\n  faSearch,\n  faShieldAlt,\n  faSignOutAlt,\n  faSitemap,\n  faSync,\n  faTable,\n  faTachometerAlt,\n  faTag,\n  faTags,\n  faTimesCircle,\n  faTrash,\n  faUndo,\n  faUniversity,\n  faUserCircle,\n  faUser,\n  faUsers,\n  faUserShield,\n  faDownload,\n  faUpload,\n  faCloudDownloadAlt,\n  faCloudUploadAlt,\n  faTimes,\n  faStickyNote,\n  faStop\n);\n\n/**\n * Icons Module\n *\n * Angular Font Awesome module is exported here.\n */\n@NgModule({\n  exports: [FontAwesomeModule]\n})\nexport class IconsModule { }\n","module.exports = \"<mat-form-field id=\\\"language-selector\\\">\\n  <mat-label>Language</mat-label>\\n  <mat-select [formControl]=\\\"languageSelector\\\">\\n    <mat-option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">\\n      {{ language }}\\n    </mat-option>\\n  </mat-select>\\n</mat-form-field>\\n\"","module.exports = \"#language-selector {\\n  max-width: 4rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3NoYXJlZC9sYW5ndWFnZS1zZWxlY3Rvci9sYW5ndWFnZS1zZWxlY3Rvci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9sYW5ndWFnZS1zZWxlY3Rvci9sYW5ndWFnZS1zZWxlY3Rvci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNsYW5ndWFnZS1zZWxlY3RvciB7XG4gIG1heC13aWR0aDogNHJlbTtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n/** Custom Services */\nimport { I18nService } from '../../core/i18n/i18n.service';\n\n/**\n * Language selector component.\n *\n * TODO: Decision to be taken on using ngx-translate or angular-internationalization\n *       to provide language support in the application.\n */\n@Component({\n  selector: 'mifosx-language-selector',\n  templateUrl: './language-selector.component.html',\n  styleUrls: ['./language-selector.component.scss']\n})\nexport class LanguageSelectorComponent implements OnInit {\n\n  /** Language selector form control. */\n  languageSelector = new FormControl();\n\n  /**\n   * Sets the language of the application in the selector on initial setup.\n   * @param {I18nService} i18nService Internationalization Service.\n   */\n  constructor(private i18nService: I18nService) {\n    this.languageSelector.setValue(this.currentLanguage);\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Sets a new language to be used by the application.\n   * @param {string} language New language.\n   */\n  setLanguage(language: string) {\n    this.i18nService.language = language;\n  }\n\n  /**\n   * Returns the current language used by the application.\n   * @returns {string} Current language.\n   */\n  get currentLanguage(): string {\n    return this.i18nService.language;\n  }\n\n  /**\n   * Returns all the languages supported by the application.\n   * @return {string[]} Supported languages.\n   */\n  get languages(): string[] {\n    return this.i18nService.supportedLanguages;\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n  MAT_FORM_FIELD_DEFAULT_OPTIONS,\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule\n} from '@angular/material';\n\n/**\n * Material Module\n *\n * Angular CDK, Angular Material and Flex Layout modules are exported here.\n */\n@NgModule({\n  exports: [\n    FlexLayoutModule,\n    LayoutModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule\n  ],\n  providers: [\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: { appearance: 'standard' }\n    },\n    {\n      provide: STEPPER_GLOBAL_OPTIONS,\n      useValue: {\n        showError: true,\n        displayDefaultIndicatorType: false\n      }\n    }\n  ]\n})\nexport class MaterialModule { }\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n/** Custom Components */\nimport { FormfieldComponent } from './form-dialog/formfield/formfield.component';\nimport { FormDialogComponent } from './form-dialog/form-dialog.component';\nimport { DeleteDialogComponent } from './delete-dialog/delete-dialog.component';\nimport { FileUploadComponent } from './file-upload/file-upload.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LanguageSelectorComponent } from './language-selector/language-selector.component';\nimport { ThemePickerComponent } from './theme-picker/theme-picker.component';\n\n/** Custom Modules */\nimport { IconsModule } from './icons.module';\nimport { MaterialModule } from './material.module';\n\n/**\n * Shared Module\n *\n * Modules and components that are shared throughout the application should be here.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    IconsModule,\n    MaterialModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    FormfieldComponent,\n    FormDialogComponent,\n    DeleteDialogComponent,\n    FileUploadComponent,\n    FooterComponent,\n    LanguageSelectorComponent,\n    ThemePickerComponent,\n  ],\n  exports: [\n    FileUploadComponent,\n    FooterComponent,\n    LanguageSelectorComponent,\n    ThemePickerComponent,\n    CommonModule,\n    IconsModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  entryComponents: [\n    FormDialogComponent,\n    DeleteDialogComponent\n  ]\n})\nexport class SharedModule { }\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\n\n/**\n * Theme manager service.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeManagerService {\n\n  /** Stylesheet class for the theme of the application. */\n  private themeManagerClass = 'theme-manager';\n\n  constructor() { }\n\n  /**\n   * Sets a new theme for the application.\n   * @param {string} href Link to stylesheet.\n   */\n  setTheme(href: string) {\n    this.getLinkElement().setAttribute('href', href);\n  }\n\n  /**\n   * Removes the current theme of the application.\n   */\n  removeTheme() {\n    const existingLinkElement = this.getExistingLinkElement();\n    if (existingLinkElement) {\n      document.head.removeChild(existingLinkElement);\n    }\n  }\n\n  /**\n   * @returns link element of stylesheet\n   */\n  private getLinkElement() {\n    return this.getExistingLinkElement() || this.createLinkElement();\n  }\n\n  /**\n   * @returns existing link element of stylesheet with theme manager class\n   */\n  private getExistingLinkElement() {\n    return document.head.querySelector(`link[rel=\"stylesheet\"].${this.themeManagerClass}`);\n  }\n\n  /**\n   * @returns newly created link element of stylesheet with theme manager class\n   */\n  private createLinkElement() {\n    const linkElement = document.createElement('link');\n    linkElement.setAttribute('rel', 'stylesheet');\n    linkElement.classList.add(this.themeManagerClass);\n    document.head.appendChild(linkElement);\n    return linkElement;\n  }\n\n}\n","module.exports = \"<button mat-icon-button [matMenuTriggerFor]=\\\"themeMenu\\\" matTooltip=\\\"Color Schemes\\\">\\n  <fa-icon icon=\\\"fill-drip\\\" size=\\\"lg\\\"></fa-icon>\\n</button>\\n\\n<mat-menu class=\\\"mifosx-theme-picker-menu\\\" #themeMenu=\\\"matMenu\\\" x-position=\\\"before\\\">\\n  <mat-grid-list cols=\\\"2\\\">\\n    <mat-grid-tile *ngFor=\\\"let theme of themes\\\">\\n      <div mat-menu-item (click)=\\\"installTheme(theme)\\\">\\n        <div class=\\\"mifosx-theme-picker-swatch\\\">\\n          <fa-icon class=\\\"mifosx-theme-chosen-icon\\\" *ngIf=\\\"currentTheme.href === theme.href\\\" icon=\\\"check-circle\\\" size=\\\"lg\\\"></fa-icon>\\n          <div class=\\\"mifosx-theme-picker-primary\\\" [style.background]=\\\"theme.primary\\\"></div>\\n          <div class=\\\"mifosx-theme-picker-accent\\\" [style.background]=\\\"theme.accent\\\"></div>\\n        </div>\\n      </div>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</mat-menu>\\n\"","module.exports = \".mifosx-theme-picker-menu .mat-menu-content {\\n  padding: 8px; }\\n\\n.mifosx-theme-picker-menu [mat-menu-item] {\\n  flex: 0 0 auto;\\n  padding: 0;\\n  overflow: hidden; }\\n\\n.mifosx-theme-picker-menu .mifosx-theme-picker-swatch {\\n  position: relative;\\n  width: 36px;\\n  height: 36px;\\n  margin: 6px;\\n  border-radius: 50%;\\n  overflow: hidden; }\\n\\n.mifosx-theme-picker-menu .mifosx-theme-picker-swatch .mifosx-theme-chosen-icon {\\n    color: white;\\n    position: absolute;\\n    left: 50%;\\n    top: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%); }\\n\\n.mifosx-theme-picker-menu .mifosx-theme-picker-swatch::after {\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    box-sizing: border-box;\\n    border: 1px solid rgba(0, 0, 0, 0.2);\\n    border-radius: 50%; }\\n\\n.mifosx-theme-picker-menu .mifosx-theme-picker-primary {\\n  width: 100%;\\n  height: 100%; }\\n\\n.mifosx-theme-picker-menu .mifosx-theme-picker-accent {\\n  position: absolute;\\n  bottom: 6px;\\n  width: 100%;\\n  height: 6px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3NoYXJlZC90aGVtZS1waWNrZXIvdGhlbWUtcGlja2VyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1BO0VBRUksWUFSMkIsRUFBQTs7QUFNL0I7RUFNSSxjQUFjO0VBQ2QsVUFBVTtFQUNWLGdCQUFnQixFQUFBOztBQVJwQjtFQVlJLGtCQUFrQjtFQUNsQixXQWhCMkI7RUFpQjNCLFlBakIyQjtFQWtCM0IsV0FBc0U7RUFDdEUsa0JBQWtCO0VBQ2xCLGdCQUFnQixFQUFBOztBQWpCcEI7SUFvQk0sWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsUUFBUTtJQUNSLHdDQUFnQztZQUFoQyxnQ0FBZ0MsRUFBQTs7QUF4QnRDO0lBNEJNLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsTUFBTTtJQUNOLE9BQU87SUFDUCxXQUFXO0lBQ1gsWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixvQ0FBb0M7SUFDcEMsa0JBQWtCLEVBQUE7O0FBcEN4QjtFQXlDSSxXQUFXO0VBQ1gsWUFBWSxFQUFBOztBQTFDaEI7RUE4Q0ksa0JBQWtCO0VBQ2xCLFdBakRpQztFQWtEakMsV0FBVztFQUNYLFdBbkRpQyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL3RoZW1lLXBpY2tlci90aGVtZS1waWNrZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIkdGhlbWUtcGlja2VyLW1lbnUtcGFkZGluZzogOHB4O1xuJHRoZW1lLXBpY2tlci1ncmlkLWNlbGwtc2l6ZTogNDhweDtcbiR0aGVtZS1waWNrZXItZ3JpZC1jZWxscy1wZXItcm93OiAyO1xuJHRoZW1lLXBpY2tlci1zd2F0Y2gtc2l6ZTogMzZweDtcbiR0aGVtZS1waWNrZXItYWNjZW50LXN0cmlwZS1zaXplOiA2cHg7XG5cbi5taWZvc3gtdGhlbWUtcGlja2VyLW1lbnUge1xuICAubWF0LW1lbnUtY29udGVudCB7XG4gICAgcGFkZGluZzogJHRoZW1lLXBpY2tlci1tZW51LXBhZGRpbmc7XG4gIH1cblxuICBbbWF0LW1lbnUtaXRlbV0ge1xuICAgIGZsZXg6IDAgMCBhdXRvO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxuXG4gIC5taWZvc3gtdGhlbWUtcGlja2VyLXN3YXRjaCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiAkdGhlbWUtcGlja2VyLXN3YXRjaC1zaXplO1xuICAgIGhlaWdodDogJHRoZW1lLXBpY2tlci1zd2F0Y2gtc2l6ZTtcbiAgICBtYXJnaW46ICgkdGhlbWUtcGlja2VyLWdyaWQtY2VsbC1zaXplIC0gJHRoZW1lLXBpY2tlci1zd2F0Y2gtc2l6ZSkgLyAyO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICAgLm1pZm9zeC10aGVtZS1jaG9zZW4taWNvbiB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgIH1cblxuICAgICY6OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIH1cbiAgfVxuXG4gIC5taWZvc3gtdGhlbWUtcGlja2VyLXByaW1hcnkge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgfVxuXG4gIC5taWZvc3gtdGhlbWUtcGlja2VyLWFjY2VudCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogJHRoZW1lLXBpY2tlci1hY2NlbnQtc3RyaXBlLXNpemU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAkdGhlbWUtcGlja2VyLWFjY2VudC1zdHJpcGUtc2l6ZTtcbiAgfVxufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n/** Custom Model */\nimport { Theme } from './theme.model';\n\n/** Custom Services */\nimport { ThemeStorageService } from './theme-storage.service';\n\n/**\n * Theme picker component.\n *\n * TODO: Customization of theme for every component and custom background with darker contrast.\n */\n@Component({\n  selector: 'mifosx-theme-picker',\n  templateUrl: './theme-picker.component.html',\n  styleUrls: ['./theme-picker.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ThemePickerComponent implements OnInit {\n\n  /** Default theme for the application. */\n  currentTheme: Theme = {\n    href: 'denim-yellowgreen.css',\n    primary: '#1074B9',\n    accent: '#B4D575',\n    isDark: false,\n    isDefault: true\n  };\n  /** Available themes for the application. */\n  themes = [\n    this.currentTheme,\n    {\n      href: 'pictonblue-yellowgreen.css',\n      primary: '#1DAEEC',\n      accent: '#B4D575',\n      isDark: false\n    },\n    {\n      href: 'indigo-pink.css',\n      primary: '#3F51B5',\n      accent: '#E91E63',\n      isDark: false,\n    },\n    {\n      href: 'deeppurple-amber.css',\n      primary: '#673AB7',\n      accent: '#FFC107',\n      isDark: false\n    },\n    {\n      href: 'pink-bluegrey.css',\n      primary: '#E91E63',\n      accent: '#607D8B',\n      isDark: true\n    },\n    {\n      href: 'purple-green.css',\n      primary: '#9C27B0',\n      accent: '#4CAF50',\n      isDark: true\n    }\n  ];\n\n  /**\n   * @param {ThemeStorageService} themeStorageService Theme Storage Service.\n   */\n  constructor(public themeStorageService: ThemeStorageService) {  }\n\n  /**\n   * Initializes the theme for the application.\n   */\n  ngOnInit() {\n    const theme = this.themeStorageService.getTheme();\n    if (theme) {\n      this.currentTheme = theme;\n    }\n  }\n\n  /**\n   * Installs a new theme for the application.\n   * @param {Theme} theme\n   */\n  installTheme(theme: Theme) {\n    this.currentTheme = theme;\n    this.themeStorageService.installTheme(theme);\n  }\n\n}\n","/** Angular Imports */\nimport {Injectable, EventEmitter} from '@angular/core';\n\n/** Custom Model */\nimport { Theme } from './theme.model';\n\n/** Custom Services */\nimport { ThemeManagerService } from './theme-manager.service';\n\n/**\n * Theme storage service.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeStorageService {\n\n  /** Key to store current theme of application in local storage. */\n  private themeStorageKey = 'mifosXTheme';\n  /** Theme update event. */\n  onThemeUpdate: EventEmitter<Theme>;\n\n  /**\n   * Initializes theme update event.\n   * @param {ThemeManagerService} themeManagerService\n   */\n  constructor(public themeManagerService: ThemeManagerService) {\n    this.onThemeUpdate = new EventEmitter<Theme>();\n  }\n\n  /**\n   * Stores current theme in local storage and emits a theme update event.\n   * @param mifosXTheme\n   */\n  storeTheme(mifosXTheme: Theme) {\n    localStorage.setItem(this.themeStorageKey, JSON.stringify(mifosXTheme));\n    this.onThemeUpdate.emit(mifosXTheme);\n  }\n\n  /**\n   * @returns current theme from local storage\n   */\n  getTheme(): Theme {\n    return JSON.parse(localStorage.getItem(this.themeStorageKey));\n  }\n\n  /**\n   * Removes current theme from local storage.\n   */\n  clearTheme() {\n    localStorage.removeItem(this.themeStorageKey);\n  }\n\n  /**\n   * Sets a new theme for the application and stores in local storage.\n   * @param {Theme} theme\n   */\n  installTheme(theme: Theme) {\n    if (theme.isDefault) {\n      this.themeManagerService.removeTheme();\n    } else {\n      this.themeManagerService.setTheme(`theme/${theme.href}`);\n    }\n    this.storeTheme(theme);\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['create']\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Preference\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"accountType\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Account Number Preferences </th>\\n        <td mat-cell *matCellDef=\\\"let accountNumberPreference\\\"> {{ accountNumberPreference.accountType.value }} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id]\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9hY2NvdW50LW51bWJlci1wcmVmZXJlbmNlcy9hY2NvdW50LW51bWJlci1wcmVmZXJlbmNlcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTtFQURiO0lBSUksZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc3lzdGVtL2FjY291bnQtbnVtYmVyLXByZWZlcmVuY2VzL2FjY291bnQtbnVtYmVyLXByZWZlcmVuY2VzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcblxuICAuc2VsZWN0LXJvdzpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/**\n * Account Number Preferences Component.\n */\n@Component({\n  selector: 'mifosx-account-number-preferences',\n  templateUrl: './account-number-preferences.component.html',\n  styleUrls: ['./account-number-preferences.component.scss']\n})\nexport class AccountNumberPreferencesComponent implements OnInit {\n\n  /** Account Number Preferences data. */\n  accountNumberPreferencesData: any;\n  /** Columns to be displayed in account number preferences table. */\n  displayedColumns: string[] = ['accountType'];\n  /** Data source for account number preferences table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for account number preferences table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for account number preferences table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the account number preferences data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { accountNumberPreferences: any }) => {\n      this.accountNumberPreferencesData = data.accountNumberPreferences;\n    });\n  }\n\n  /**\n   * Sets the account number preferences table.\n   */\n  ngOnInit() {\n    this.setAccountNumberPreferences();\n  }\n\n  /**\n   * Initializes the data source, paginator, sorter and filter for account number preferences table.\n   */\n  setAccountNumberPreferences() {\n    this.dataSource = new MatTableDataSource(this.accountNumberPreferencesData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sortingDataAccessor = (accountNumberPreference: any, property: any) => {\n      return accountNumberPreference.accountType.value;\n    };\n    this.dataSource.sort = this.sort;\n    this.dataSource.filterPredicate = (data: any, filter: string) => data.accountType.value.toLowerCase().indexOf(filter) !== -1;\n  }\n\n  /**\n   * Filters data in account number preferences table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.toLowerCase().trim();\n  }\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../system.service';\n\n/**\n * Account Number Preferences data resolver.\n */\n@Injectable()\nexport class AccountNumberPreferencesResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the Account Number Preferences data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.systemService.getAccountNumberPreferences();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../../system.service';\n\n/**\n * Account Number Preferences Template data resolver.\n */\n@Injectable()\nexport class AccountNumberPreferencesTemplateResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the Account Number Preferences Template data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.systemService.getAccountNumberPreferencesTemplate();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"accountNumberPreferenceForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field>\\n            <mat-label>Account Type</mat-label>\\n            <mat-select required formControlName=\\\"accountType\\\">\\n              <mat-option *ngFor=\\\"let accountType of accountNumberPreferencesTemplateData.accountTypeOptions\\\" [value]=\\\"accountType.id\\\">\\n                {{ accountType.value }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"accountNumberPreferenceForm.controls.accountType.hasError('required')\\\">\\n              Account Type is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Prefix Field</mat-label>\\n            <mat-select formControlName=\\\"prefixType\\\">\\n              <mat-option *ngFor=\\\"let prefixType of prefixTypeData\\\" [value]=\\\"prefixType.id\\\">\\n                {{ prefixType.value }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!accountNumberPreferenceForm.valid\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9hY2NvdW50LW51bWJlci1wcmVmZXJlbmNlcy9jcmVhdGUtYWNjb3VudC1udW1iZXItcHJlZmVyZW5jZS9jcmVhdGUtYWNjb3VudC1udW1iZXItcHJlZmVyZW5jZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvc3lzdGVtL2FjY291bnQtbnVtYmVyLXByZWZlcmVuY2VzL2NyZWF0ZS1hY2NvdW50LW51bWJlci1wcmVmZXJlbmNlL2NyZWF0ZS1hY2NvdW50LW51bWJlci1wcmVmZXJlbmNlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAzN3JlbTtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { SystemService } from '../../system.service';\n\n/**\n * Create Account Number Preference Component.\n */\n@Component({\n  selector: 'mifosx-create-account-number-preference',\n  templateUrl: './create-account-number-preference.component.html',\n  styleUrls: ['./create-account-number-preference.component.scss']\n})\nexport class CreateAccountNumberPreferenceComponent implements OnInit {\n\n  /** Account Number Preferences Form */\n  accountNumberPreferenceForm: FormGroup;\n  /** Account Number Preferences Template Data */\n  accountNumberPreferencesTemplateData: any;\n  /** Prefix Type Data */\n  prefixTypeData: any[];\n\n  /**\n   * Retrieves the account number preferences template data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {SystemService} systemService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private systemService: SystemService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: { accountNumberPreferencesTemplate: any }) => {\n      this.accountNumberPreferencesTemplateData = data.accountNumberPreferencesTemplate;\n    });\n  }\n\n  /**\n   * Creates the account number preference form.\n   * Subscribe on Form Controls to change Prefix Type data.\n   */\n  ngOnInit() {\n    this.createAccountNumberPreferenceForm();\n    this.getPrefixTypeValue();\n  }\n\n  /**\n   * Subscribes on Form Controls to change Prefix Type data.\n   */\n  getPrefixTypeValue() {\n    this.accountNumberPreferenceForm.get('accountType').valueChanges\n      .subscribe(accountId => {\n        this.prefixTypeData = this.accountNumberPreferencesTemplateData.prefixTypeOptions[`accountType.${this.accountNumberPreferencesTemplateData.accountTypeOptions.find((accountType: any) => accountType.id === accountId).value.toLowerCase()}`];\n      });\n  }\n\n  /**\n   * Creates the account number preference form.\n   */\n  createAccountNumberPreferenceForm() {\n    this.accountNumberPreferenceForm = this.formBuilder.group({\n      'accountType': ['', Validators.required],\n      'prefixType': ['']\n    });\n  }\n\n  /**\n   * Submits the account number preference form and creates a account number preference,\n   * if successful redirects to view created account number preference.\n   */\n  submit() {\n    const accountNumberPreference = this.accountNumberPreferenceForm.value;\n    if (accountNumberPreference.prefixType === '') {\n      accountNumberPreference.prefixType = undefined;\n    }\n    this.systemService.createAccountNumberPreference(accountNumberPreference)\n      .subscribe((response: any) => {\n        this.router.navigate(['../', response.resourceId], { relativeTo: this.route });\n      });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"accountNumberPreferenceForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field>\\n            <mat-label>Account Type</mat-label>\\n            <mat-select required formControlName=\\\"accountType\\\">\\n              <mat-option *ngFor=\\\"let accountType of accountNumberPreferencesTemplateData.accountTypeOptions\\\" [value]=\\\"accountType.id\\\">\\n                {{ accountType.value }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"accountNumberPreferenceForm.controls.accountType.hasError('required')\\\">\\n              Account Type is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Prefix Field</mat-label>\\n            <mat-select formControlName=\\\"prefixType\\\">\\n              <mat-option *ngFor=\\\"let prefixType of prefixTypeData\\\" [value]=\\\"prefixType.id\\\">\\n                {{ prefixType.value }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\"\\n          [disabled]=\\\"!accountNumberPreferenceForm.valid || accountNumberPreferenceForm.pristine\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9hY2NvdW50LW51bWJlci1wcmVmZXJlbmNlcy9lZGl0LWFjY291bnQtbnVtYmVyLXByZWZlcmVuY2UvZWRpdC1hY2NvdW50LW51bWJlci1wcmVmZXJlbmNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zeXN0ZW0vYWNjb3VudC1udW1iZXItcHJlZmVyZW5jZXMvZWRpdC1hY2NvdW50LW51bWJlci1wcmVmZXJlbmNlL2VkaXQtYWNjb3VudC1udW1iZXItcHJlZmVyZW5jZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICAgIG1heC13aWR0aDogMzdyZW07XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n/** Custom Services */\nimport { SystemService } from 'app/system/system.service';\n\n/**\n * Edit Account Number Preference Component.\n */\n@Component({\n  selector: 'mifosx-edit-account-number-preference',\n  templateUrl: './edit-account-number-preference.component.html',\n  styleUrls: ['./edit-account-number-preference.component.scss']\n})\nexport class EditAccountNumberPreferenceComponent implements OnInit {\n\n  /** Account Number Preference Form */\n  accountNumberPreferenceForm: FormGroup;\n  /** Account Number Preference Data */\n  accountNumberPreferenceData: any;\n  /** Account Number Preferences Template Data */\n  accountNumberPreferencesTemplateData: any;\n  /** Prefix Type Data */\n  prefixTypeData: any[];\n\n  /**\n   * Retrieves the account number preference and account number preferences template data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {SystemService} systemService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private route: ActivatedRoute,\n              private formBuilder: FormBuilder,\n              private systemService: SystemService,\n              private router: Router) {\n    this.route.data.subscribe((data: { accountNumberPreference: any, accountNumberPreferencesTemplate: any }) => {\n      this.accountNumberPreferenceData = data.accountNumberPreference;\n      this.accountNumberPreferencesTemplateData = data.accountNumberPreferencesTemplate;\n    });\n  }\n\n  /**\n   * Sets Prefix type data.\n   * Creates and sets account number preference form.\n   */\n  ngOnInit() {\n    this.prefixTypeData = this.accountNumberPreferencesTemplateData.prefixTypeOptions[this.accountNumberPreferenceData.accountType.code];\n    this.createAccountNumberPreferenceForm();\n  }\n\n  /**\n   * Creates and sets the edit account number preference form.\n   */\n  createAccountNumberPreferenceForm() {\n    this.accountNumberPreferenceForm = this.formBuilder.group({\n      'accountType': [{ value: this.accountNumberPreferenceData.accountType.id, disabled: true }, Validators.required],\n      'prefixType': [this.accountNumberPreferenceData.prefixType ? this.accountNumberPreferenceData.prefixType.id : 0]\n    });\n  }\n\n  /**\n   * Submits the account number preference form and updates the account number preference,\n   * if successful redirects to view account number preference.\n   */\n  submit() {\n    const accountNumberPreferenceValue = this.accountNumberPreferenceForm.value;\n    if (accountNumberPreferenceValue.prefixType === '') {\n      accountNumberPreferenceValue.prefixType = undefined;\n    }\n    this.systemService.updateAccountNumberPreference(this.accountNumberPreferenceData.id, accountNumberPreferenceValue)\n      .subscribe((response: any) => {\n        this.router.navigate(['../'], { relativeTo: this.route });\n      });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../../system.service';\n\n/**\n * Account Number Preference data resolver.\n */\n@Injectable()\nexport class AccountNumberPreferenceResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the Account Number Preference data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const accountNumberPreferenceId = route.paramMap.get('id');\n    return this.systemService.getAccountNumberPreference(accountNumberPreferenceId);\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['edit']\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"delete()\\\">\\n    <fa-icon icon=\\\"trash\\\"></fa-icon>&nbsp;&nbsp;\\n    Delete\\n  </button>\\n\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-content>\\n\\n      <div fxLayout=\\\"row wrap\\\" class=\\\"content\\\">\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Account Type\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ accountNumberPreferenceData.accountType.value }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\" *ngIf=\\\"accountNumberPreferenceData.prefixType\\\">\\n          Prefix Type\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" *ngIf=\\\"accountNumberPreferenceData.prefixType\\\">\\n          {{ accountNumberPreferenceData.prefixType.value }}\\n        </div>\\n\\n      </div>\\n\\n    </mat-card-content>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n  .container .content div {\\n    margin: 1rem 0;\\n    word-wrap: break-word; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9hY2NvdW50LW51bWJlci1wcmVmZXJlbmNlcy92aWV3LWFjY291bnQtbnVtYmVyLXByZWZlcmVuY2Uvdmlldy1hY2NvdW50LW51bWJlci1wcmVmZXJlbmNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCLEVBQUE7RUFEbEI7SUFLUSxjQUFjO0lBQ2QscUJBQXFCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zeXN0ZW0vYWNjb3VudC1udW1iZXItcHJlZmVyZW5jZXMvdmlldy1hY2NvdW50LW51bWJlci1wcmVmZXJlbmNlL3ZpZXctYWNjb3VudC1udW1iZXItcHJlZmVyZW5jZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDM3cmVtO1xuICBcbiAgICAuY29udGVudCB7XG4gICAgICBkaXYge1xuICAgICAgICBtYXJnaW46IDFyZW0gMDtcbiAgICAgICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICAgICAgfVxuICAgIH1cbiAgfVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\n\n/** Custom Services */\nimport { SystemService } from '../../system.service';\n\n/** Custom Components */\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\n\n/**\n * View Account Number Preference Component.\n */\n@Component({\n  selector: 'mifosx-view-account-number-preference',\n  templateUrl: './view-account-number-preference.component.html',\n  styleUrls: ['./view-account-number-preference.component.scss']\n})\nexport class ViewAccountNumberPreferenceComponent implements OnInit {\n\n  /** Account Number Preference Data */\n  accountNumberPreferenceData: any;\n\n  /**\n   * Retrieves the account number preference data from `resolve`.\n   * @param {SystemService} systemService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   * @param {MatDialog} dialog Dialog reference.\n   */\n  constructor(private route: ActivatedRoute,\n              private systemService: SystemService,\n              private router: Router,\n              private dialog: MatDialog) {\n    this.route.data.subscribe((data: { accountNumberPreference: any }) => {\n      this.accountNumberPreferenceData = data.accountNumberPreference;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Deletes the account number preference and redirects to account number preferences.\n   */\n  delete() {\n    const deleteAccountNumberPreferenceDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `account number preference ${this.accountNumberPreferenceData.id}` }\n    });\n    deleteAccountNumberPreferenceDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.systemService.deleteAccountNumberPreference(this.accountNumberPreferenceData.id)\n          .subscribe(() => {\n            this.router.navigate(['/system/account-number-preferences']);\n          });\n      }\n    });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../system.service';\n\n/**\n * Code data resolver.\n */\n@Injectable()\nexport class CodeResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the Code data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const id = route.paramMap.get('id');\n    return this.systemService.getCode(id);\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['create']\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Code\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Code Name </th>\\n        <td mat-cell *matCellDef=\\\"let code\\\"> {{ code.name }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"systemDefined\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> System Defined </th>\\n        <td mat-cell *matCellDef=\\\"let code\\\">\\n          <fa-icon *ngIf=\\\"code.systemDefined\\\" icon=\\\"check-circle\\\" size=\\\"lg\\\" class=\\\"system-defined\\\" matTooltip=\\\"Yes\\\" matTooltipPosition=\\\"right\\\"></fa-icon>\\n          <fa-icon *ngIf=\\\"!code.systemDefined\\\" icon=\\\"times-circle\\\" size=\\\"lg\\\" class=\\\"not-system-defined\\\" matTooltip=\\\"No\\\" matTooltipPosition=\\\"right\\\"></fa-icon>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id]\\\" class=\\\"select-row\\\"></tr>\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n  .system-defined {\\n  color: #32cd32; }\\n  .not-system-defined {\\n  color: #f44366; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9jb2Rlcy9jb2Rlcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTtFQURiO0lBSUksZUFBZSxFQUFBO0VBS25CO0VBQ0UsY0FBYyxFQUFBO0VBR2hCO0VBQ0UsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc3lzdGVtL2NvZGVzL2NvZGVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcblxuICAuc2VsZWN0LXJvdzpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG59XG5cbi8vIFRPRE86IENPTkZJR1VSRSBUSEVTRSBDTEFTU0VTIEdMT0JBTExZXG4uc3lzdGVtLWRlZmluZWQge1xuICBjb2xvcjogIzMyY2QzMjtcbn1cblxuLm5vdC1zeXN0ZW0tZGVmaW5lZCB7XG4gIGNvbG9yOiAjZjQ0MzY2O1xufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'mifosx-codes',\n  templateUrl: './codes.component.html',\n  styleUrls: ['./codes.component.scss']\n})\nexport class CodesComponent implements OnInit {\n\n  /** Codes data. */\n  codesData: any;\n  /** Columns to be displayed in codes table. */\n  displayedColumns: string[] = ['name', 'systemDefined'];\n  /** Data source for codes table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for codes table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for codes table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the codes data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { codes: any }) => {\n      this.codesData = data.codes;\n    });\n  }\n\n  /**\n   * Sets the codes table.\n   */\n  ngOnInit() {\n    this.setCodes();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for codes table.\n   */\n  setCodes() {\n    this.dataSource = new MatTableDataSource(this.codesData);\n    console.log(this.codesData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n   * Filters data in codes table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../system.service';\n\n/**\n * Codes data resolver.\n */\n@Injectable()\nexport class CodesResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the Codes data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.systemService.getCodes();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"codeForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n          <div fxLayout=\\\"column\\\">\\n\\n            <mat-form-field>\\n              <mat-label>Code Name</mat-label>\\n              <input matInput required formControlName=\\\"name\\\">\\n              <mat-error *ngIf=\\\"codeForm.controls.name.hasError('required')\\\">\\n                Code Name is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n\\n          </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!codeForm.valid\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9jb2Rlcy9jcmVhdGUtY29kZS9jcmVhdGUtY29kZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvc3lzdGVtL2NvZGVzL2NyZWF0ZS1jb2RlL2NyZWF0ZS1jb2RlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMzdyZW07XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { SystemService } from '../../system.service';\n\n@Component({\n  selector: 'mifosx-create-code',\n  templateUrl: './create-code.component.html',\n  styleUrls: ['./create-code.component.scss']\n})\nexport class CreateCodeComponent implements OnInit {\n\n  /** Code form. */\n  codeForm: FormGroup;\n\n  /**\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {SystemService} systemService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private systemService: SystemService,\n              private route: ActivatedRoute,\n              private router: Router) { }\n\n  /**\n   * Creates the code form.\n   */\n  ngOnInit() {\n    this.createCodeForm();\n  }\n\n  /**\n   * Creates the create code form.\n   */\n  createCodeForm() {\n    this.codeForm = this.formBuilder.group({\n      'name': ['', Validators.required]\n    });\n  }\n\n  /**\n   * Submits the code form and creates a code,\n   * if successful redirects to view created code.\n   */\n  submit() {\n    this.systemService.createCode(this.codeForm.value)\n      .subscribe((response: any) => {\n        this.router.navigate(['../', response.resourceId], { relativeTo: this.route });\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"codeForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n          <div fxLayout=\\\"column\\\">\\n\\n            <mat-form-field>\\n              <mat-label>Code Name</mat-label>\\n              <input matInput required formControlName=\\\"name\\\">\\n              <mat-error *ngIf=\\\"codeForm.controls.name.hasError('required')\\\">\\n                Code Name is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n\\n          </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!codeForm.valid || codeForm.pristine\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9jb2Rlcy9lZGl0LWNvZGUvZWRpdC1jb2RlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zeXN0ZW0vY29kZXMvZWRpdC1jb2RlL2VkaXQtY29kZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICAgIG1heC13aWR0aDogMzdyZW07XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n/** Custom Services */\nimport { SystemService } from '../../system.service';\n\n/**\n * Edit Code Component.\n */\n@Component({\n  selector: 'mifosx-edit-code',\n  templateUrl: './edit-code.component.html',\n  styleUrls: ['./edit-code.component.scss']\n})\nexport class EditCodeComponent implements OnInit {\n\n  /** Code Form */\n  codeForm: FormGroup;\n  /** Code Data */\n  codeData: any;\n\n  /**\n   * Retrieves the code data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {SystemService} systemService System Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private systemService: SystemService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: { code: any }) => {\n      this.codeData = data.code;\n    });\n  }\n\n  /**\n   * Creates and sets the code form.\n   */\n  ngOnInit() {\n    this.createCodeForm();\n  }\n\n  /**\n   * Creates and sets code form.\n   */\n  createCodeForm() {\n    this.codeForm = this.formBuilder.group({\n      'name': [this.codeData.name, Validators.required]\n    });\n  }\n\n  /**\n   * Submits the code form and updates code,\n   * if successful redirects to view updated code.\n   */\n  submit() {\n    this.systemService.updateCode(this.codeForm.value, this.codeData.id)\n      .subscribe((response: any) => {\n        this.router.navigate(['../../', response.resourceId], { relativeTo: this.route });\n      });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../../system.service';\n\n/**\n * Code Values data resolver.\n */\n@Injectable()\nexport class CodeValuesResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the Code Values data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const codeId = route.paramMap.get('id');\n    return this.systemService.getCodeValues(codeId);\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\" fxLayout.xs=\\\"column\\\">\\n\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addCodeValueRow()\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Add Code Value\\n  </button>\\n\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['edit']\\\" *ngIf=\\\"!codeData.systemDefined\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit Code\\n  </button>\\n\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"delete()\\\" *ngIf=\\\"!codeData.systemDefined\\\">\\n    <fa-icon icon=\\\"trash\\\"></fa-icon>&nbsp;&nbsp;\\n    Delete Code\\n  </button>\\n\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-title>{{ codeData.name }}</mat-card-title>\\n\\n    <form [formGroup]=\\\"codeValuesForm\\\">\\n\\n      <mat-card-content>\\n\\n        <div formArrayName=\\\"codeValues\\\" *ngFor=\\\"let codeValue of codeValues.controls; let i = index;\\\">\\n\\n          <div fxFlexFill fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\" [formGroupName]=\\\"i\\\">\\n\\n            <mat-form-field fxFlex=\\\"20%\\\">\\n              <mat-label>Name</mat-label>\\n              <input required matInput formControlName=\\\"name\\\">\\n              <mat-error *ngIf=\\\"codeValues.at(i).controls.name.hasError('required')\\\">\\n                Name is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlex=\\\"22%\\\">\\n              <mat-label>Description</mat-label>\\n              <input matInput formControlName=\\\"description\\\">\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlex=\\\"18%\\\">\\n              <mat-label>Position</mat-label>\\n              <input required matInput formControlName=\\\"position\\\" type=\\\"number\\\">\\n              <mat-error *ngIf=\\\"codeValues.at(i).controls.position.hasError('required')\\\">\\n                Name is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n\\n            <div class=\\\"active-wrapper\\\" fxFlex=\\\"8%\\\">\\n              <mat-checkbox formControlName=\\\"isActive\\\" class=\\\"active\\\">Active</mat-checkbox>\\n            </div>\\n\\n            <div fxLayoutGap=\\\"2%\\\" fxFlex=\\\"22%\\\" class=\\\"options-wrapper\\\">\\n              <button mat-stroked-button color=\\\"primary\\\" *ngIf=\\\"codeValueRowStatus[i] === 'edit'\\\" [disabled]=\\\"codeValues.at(i).pristine\\\" (click)=\\\"updateCodeValue(i)\\\">\\n                Submit\\n              </button>\\n              <button mat-button *ngIf=\\\"codeValueRowStatus[i] === 'edit'\\\" (click)=\\\"disableRow(i)\\\">\\n                Cancel\\n              </button>\\n              <button mat-icon-button color=\\\"primary\\\" [disabled]=\\\"!codeValuesForm.get('codeValues').at(i).valid\\\" *ngIf=\\\"codeValueRowStatus[i] === 'new'\\\" matTooltip=\\\"Add\\\" matTooltipPosition=\\\"above\\\" (click)=\\\"addCodeValue(i)\\\">\\n                <fa-icon icon=\\\"plus\\\" size=\\\"lg\\\"></fa-icon>\\n              </button>\\n              <button type=\\\"button\\\" color=\\\"primary\\\" *ngIf=\\\"codeValueRowStatus[i] === 'disabled'\\\" mat-icon-button matTooltip=\\\"Edit\\\" matTooltipPosition=\\\"above\\\" (click)=\\\"enableRow(i)\\\">\\n                <fa-icon icon=\\\"edit\\\" size=\\\"lg\\\"></fa-icon>\\n              </button>\\n              <button type=\\\"button\\\" color=\\\"warn\\\" mat-icon-button matTooltip=\\\"Delete\\\" matTooltipPosition=\\\"above\\\" (click)=\\\"codeValueRowStatus[i] === 'new' ? removeNewCodeValue(i) : deleteCodeValue(i)\\\">\\n                <fa-icon icon=\\\"trash\\\" size=\\\"lg\\\"></fa-icon>\\n              </button>\\n            </div>\\n\\n          </div>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \"@media (min-width: 992px) {\\n  .active-wrapper {\\n    position: relative; }\\n    .active-wrapper .active {\\n      padding: 0 0 17.5px 0;\\n      position: absolute;\\n      bottom: 0;\\n      right: 0; } }\\n\\n.options-wrapper {\\n  padding: 18px 0 0 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9jb2Rlcy92aWV3LWNvZGUvdmlldy1jb2RlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUU7SUFDSSxrQkFBa0IsRUFBQTtJQUR0QjtNQUlNLHFCQUFxQjtNQUNyQixrQkFBa0I7TUFDbEIsU0FBUztNQUNULFFBQVEsRUFBQSxFQUNUOztBQUtQO0VBQ0ksbUJBQW1CLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zeXN0ZW0vY29kZXMvdmlldy1jb2RlL3ZpZXctY29kZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuXG4gIC5hY3RpdmUtd3JhcHBlciB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIFxuICAgICAgLmFjdGl2ZSB7XG4gICAgICAgIHBhZGRpbmc6IDAgMCAxNy41cHggMDtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgfVxuICB9XG5cbn1cblxuLm9wdGlvbnMtd3JhcHBlciB7XG4gICAgcGFkZGluZzogMThweCAwIDAgMDtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { MatDialog } from '@angular/material';\n\n/** Custom Services */\nimport { SystemService } from 'app/system/system.service';\n\n/** Custom Components */\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\n\n/**\n * View Code Component.\n */\n@Component({\n  selector: 'mifosx-view-code',\n  templateUrl: './view-code.component.html',\n  styleUrls: ['./view-code.component.scss']\n})\nexport class ViewCodeComponent implements OnInit {\n\n  /** Code Data */\n  codeData: any;\n  /** Code Values Data */\n  codeValuesData: any[];\n  /** Code Values Form */\n  codeValuesForm: FormGroup;\n  /** Code Value Row Status */\n  codeValueRowStatus: string[] = [];\n\n  /**\n   * Retrieves the codes and code values data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {SystemService} systemService System Service.\n   * @param {Router} router Router for navigation.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {MatDialog} dialog Dialog reference.\n   */\n  constructor(private route: ActivatedRoute,\n              private systemService: SystemService,\n              private router: Router,\n              private formBuilder: FormBuilder,\n              private dialog: MatDialog) {\n    this.route.data.subscribe((data: { code: any, codeValues: any }) => {\n      this.codeData = data.code;\n      this.codeValuesData = data.codeValues;\n    });\n  }\n\n  /**\n   * Creates and initializes the code values form.\n   */\n  ngOnInit() {\n    this.createCodeValuesForm();\n    this.initCodeValuesForm();\n  }\n\n  /**\n   * Initializes the code values form.\n   */\n  initCodeValuesForm() {\n    this.codeValuesData.forEach((codeValue: any) => {\n      this.codeValues.push(this.createCodeValuesRow(codeValue));\n      this.codeValueRowStatus.push('disabled');\n    });\n  }\n\n  /**\n   * Gets the code values form array.\n   * @returns {FormArray} Code values form array.\n   */\n  get codeValues(): FormArray {\n    return this.codeValuesForm.get('codeValues') as FormArray;\n  }\n\n  /**\n   * Creates the code values form.\n   */\n  createCodeValuesForm() {\n    this.codeValuesForm = this.formBuilder.group({\n      'codeValues': this.formBuilder.array([])\n    });\n  }\n\n  /**\n   * Adds a row to the code values form.\n   */\n  addCodeValueRow() {\n    this.codeValues.push(this.createCodeValuesRow());\n    this.codeValues.at(this.codeValues.length - 1).enable();\n    this.codeValueRowStatus.push('new');\n  }\n\n  /**\n   * Creates a code value row in code values form.\n   * @param {any} codeValue Code value.\n   */\n  createCodeValuesRow(codeValue?: any): FormGroup {\n    return this.formBuilder.group({\n      'name': [{ value: codeValue ? codeValue.name : '', disabled: true }, Validators.required],\n      'description': [{ value: codeValue ? codeValue.description : '', disabled: true }],\n      'position': [{ value: codeValue ? codeValue.position : 0, disabled: true }, Validators.required],\n      'isActive': [{ value: codeValue ? codeValue.active : false, disabled: true }]\n    });\n  }\n\n  /**\n   * Deletes the particular code value.\n   * @param {number} index Index of the row.\n   */\n  deleteCodeValue(index: number) {\n    const codeValueId = this.codeValuesData[index].id;\n    this.systemService.deleteCodeValue(this.codeData.id, codeValueId)\n      .subscribe((response: any) => {\n        this.codeValuesData.splice(index, 1);\n        this.codeValues.removeAt(index);\n        this.codeValueRowStatus.splice(index, 1);\n      });\n  }\n\n  /**\n   * Removes/Deletes the particular code value which has not been intialised.\n   * @param {number} index Index of the row.\n   */\n  removeNewCodeValue(index: number) {\n    this.codeValues.removeAt(index);\n    this.codeValueRowStatus.splice(index, 1);\n  }\n\n  /**\n   * Updates the particular code value.\n   * @param {number} index Index of the row.\n   */\n  updateCodeValue(index: number) {\n    const updatedCodeValue: { name: string, description: string, position: number, isActive: boolean } = this.codeValues.at(index).value;\n    this.systemService.updateCodeValue(this.codeData.id, this.codeValuesData[index].id, updatedCodeValue)\n      .subscribe((response: any) => {\n        this.codeValues.at(index).disable();\n        this.codeValueRowStatus[index] = 'disabled';\n        this.codeValues.at(index).markAsPristine();\n      });\n  }\n\n  /**\n   * Deletes the code.\n   */\n  delete() {\n    const deleteCodeDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `code ${this.codeData.name}` }\n    });\n    deleteCodeDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.systemService.deleteCode(this.codeData.id)\n          .subscribe(() => {\n            this.router.navigate(['/system/codes']);\n          });\n      }\n    });\n  }\n\n  /**\n   * Disables the particular row.\n   * @param {number} index Index of the row.\n   */\n  disableRow(index: number) {\n    this.codeValues.at(index).get('name').setValue(this.codeValuesData[index].name);\n    this.codeValues.at(index).get('description').setValue(this.codeValuesData[index].description);\n    this.codeValues.at(index).get('position').setValue(this.codeValuesData[index].position);\n    this.codeValues.at(index).get('isActive').setValue(this.codeValuesData[index].isActive);\n    this.codeValues.at(index).disable();\n    this.codeValueRowStatus[index] = 'disabled';\n    this.codeValues.at(index).markAsPristine();\n  }\n\n  /**\n   * Adds the given code value.\n   * @param {number} index Index of the row.\n   */\n  addCodeValue(index: number) {\n    const newCodeValue: { name: string, description: string, position: string, isActive: boolean } = this.codeValues.at(index).value;\n    this.systemService.createCodeValue(this.codeData.id, newCodeValue)\n      .subscribe((response: any) => {\n        this.codeValues.at(index).disable();\n        this.codeValueRowStatus[index] = 'disabled';\n        this.codeValuesData.push({\n          id: response.subResourceId,\n          name: this.codeValues.at(index).get('name').value,\n          description: this.codeValues.at(index).get('description').value,\n          position: this.codeValues.at(index).get('position').value,\n          isActive: this.codeValues.at(index).get('isActive').value\n        });\n        this.codeValues.at(index).markAsPristine();\n      });\n  }\n\n  /**\n   * Enables the given row.\n   * @param {number} index Index of the row.\n   */\n  enableRow(index: number) {\n    this.codeValues.at(index).enable();\n    this.codeValueRowStatus[index] = 'edit';\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['edit']\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n</div>\\n\\n<div class=\\\"container mat-elevation-z8\\\">\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n      <td mat-cell *matCellDef=\\\"let configuration\\\"> {{ configuration.name }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"value\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Value </th>\\n      <td mat-cell *matCellDef=\\\"let configuration\\\"> {{ configuration.value }} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n  </table>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9leHRlcm5hbC1zZXJ2aWNlcy9hbWF6b24tczMvYW1hem9uLXMzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc3lzdGVtL2V4dGVybmFsLXNlcnZpY2VzL2FtYXpvbi1zMy9hbWF6b24tczMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/**\n * Amazon S3 Component.\n */\n@Component({\n  selector: 'mifosx-amazon-s3',\n  templateUrl: './amazon-s3.component.html',\n  styleUrls: ['./amazon-s3.component.scss']\n})\nexport class AmazonS3Component implements OnInit {\n\n  /** Amazon S3 configuration data. */\n  amazonS3ConfigurationData: any;\n  /** Columns to be displayed in Amazon S3 configuration table. */\n  displayedColumns: string[] = ['name', 'value'];\n  /** Data source for Amazon S3 configuration table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Sorter for Amazon S3 configuration table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the Amazon S3 configuration data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { amazonS3Configuration: any }) => {\n      this.amazonS3ConfigurationData = data.amazonS3Configuration;\n    });\n  }\n\n  /**\n   * Sets the Amazon S3 Configuration table.\n   */\n  ngOnInit() {\n    this.setAmazonS3Configuration();\n  }\n\n  /**\n   * Initializes the data source and sorter for Amazon S3 configuration table.\n   */\n  setAmazonS3Configuration() {\n    this.dataSource = new MatTableDataSource(this.amazonS3ConfigurationData);\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../../system.service';\n\n/**\n * Amazon S3 Configuration data resolver.\n */\n@Injectable()\nexport class AmazonS3ConfigurationResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the Amazon S3 Configuration data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.systemService.getExternalConfiguration('S3');\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"amazonS3ConfigurationForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field>\\n            <mat-label>S3 Access Key</mat-label>\\n            <input matInput required formControlName=\\\"s3_access_key\\\">\\n            <mat-error *ngIf=\\\"amazonS3ConfigurationForm.controls.s3_access_key.hasError('required')\\\">\\n              S3 Access Key is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>S3 Bucket Name</mat-label>\\n            <input matInput required formControlName=\\\"s3_bucket_name\\\">\\n            <mat-error *ngIf=\\\"amazonS3ConfigurationForm.controls.s3_bucket_name.hasError('required')\\\">\\n              S3 Bucket Name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>S3 Secret Key</mat-label>\\n            <input matInput required formControlName=\\\"s3_secret_key\\\">\\n            <mat-error *ngIf=\\\"amazonS3ConfigurationForm.controls.s3_secret_key.hasError('required')\\\">\\n              S3 Secret Key is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!amazonS3ConfigurationForm.valid || amazonS3ConfigurationForm.pristine\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9leHRlcm5hbC1zZXJ2aWNlcy9hbWF6b24tczMvZWRpdC1hbWF6b24tczMvZWRpdC1hbWF6b24tczMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS9leHRlcm5hbC1zZXJ2aWNlcy9hbWF6b24tczMvZWRpdC1hbWF6b24tczMvZWRpdC1hbWF6b24tczMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDM3cmVtO1xufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n/** Custom Services */\nimport { SystemService } from 'app/system/system.service';\n\n/**\n * Edit Amazon S3 Component.\n */\n@Component({\n  selector: 'mifosx-edit-amazon-s3',\n  templateUrl: './edit-amazon-s3.component.html',\n  styleUrls: ['./edit-amazon-s3.component.scss']\n})\nexport class EditAmazonS3Component implements OnInit {\n\n  /** Amazon S3 Configuration data */\n  amazonS3ConfigurationData: any;\n  /** Amazon S3 Configuration Form */\n  amazonS3ConfigurationForm: FormGroup;\n\n  /**\n   * Retrieves the Amazon S3 configuration data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {SystemService} systemService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private systemService: SystemService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: { amazonS3Configuration: any }) => {\n      this.amazonS3ConfigurationData = data.amazonS3Configuration;\n    });\n  }\n\n  /**\n   * Creates Amazon S3 configuration form.\n   */\n  ngOnInit() {\n    this.createAmazonS3ConfigurationForm();\n  }\n\n  /**\n   * Creates Amazon S3 configuration form.\n   */\n  createAmazonS3ConfigurationForm() {\n    this.amazonS3ConfigurationForm = this.formBuilder.group({\n      's3_access_key': [this.amazonS3ConfigurationData[0].value, Validators.required],\n      's3_bucket_name': [this.amazonS3ConfigurationData[1].value, Validators.required],\n      's3_secret_key': [this.amazonS3ConfigurationData[2].value, Validators.required]\n    });\n  }\n\n  /**\n   * Submits the Amazon S3 configuration and updates the Amazon S3 configuration,\n   * if successful redirects to view Amazon S3 configuration.\n   */\n  submit() {\n    this.systemService\n      .updateExternalConfiguration('S3', this.amazonS3ConfigurationForm.value)\n      .subscribe((response: any) => {\n        this.router.navigate(['../'], { relativeTo: this.route });\n      });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"emailConfigurationForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field>\\n            <mat-label>Username</mat-label>\\n            <input matInput required formControlName=\\\"username\\\">\\n            <mat-error *ngIf=\\\"emailConfigurationForm.controls.username.hasError('required')\\\">\\n              Username is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Password</mat-label>\\n            <input matInput required formControlName=\\\"password\\\">\\n            <mat-error *ngIf=\\\"emailConfigurationForm.controls.password.hasError('required')\\\">\\n              Password is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Host</mat-label>\\n            <input matInput required formControlName=\\\"host\\\">\\n            <mat-error *ngIf=\\\"emailConfigurationForm.controls.host.hasError('required')\\\">\\n              Host is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Port</mat-label>\\n            <input matInput required formControlName=\\\"port\\\">\\n            <mat-error *ngIf=\\\"emailConfigurationForm.controls.port.hasError('required')\\\">\\n              Port is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Use TLS</mat-label>\\n            <input matInput required formControlName=\\\"useTLS\\\">\\n            <mat-error *ngIf=\\\"emailConfigurationForm.controls.useTLS.hasError('required')\\\">\\n              Use TLS is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!emailConfigurationForm.valid || emailConfigurationForm.pristine\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9leHRlcm5hbC1zZXJ2aWNlcy9lbWFpbC9lZGl0LWVtYWlsL2VkaXQtZW1haWwuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS9leHRlcm5hbC1zZXJ2aWNlcy9lbWFpbC9lZGl0LWVtYWlsL2VkaXQtZW1haWwuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDM3cmVtO1xufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n/** Custom Services */\nimport { SystemService } from 'app/system/system.service';\n\n/**\n * Edit Email Configuration Component.\n */\n@Component({\n  selector: 'mifosx-edit-email',\n  templateUrl: './edit-email.component.html',\n  styleUrls: ['./edit-email.component.scss']\n})\nexport class EditEmailComponent implements OnInit {\n\n  /** Email Configuration data */\n  emailConfigurationData: any;\n  /** Email Configuration Form */\n  emailConfigurationForm: FormGroup;\n\n  /**\n   * Retrieves the Email configuration data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {SystemService} systemService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private systemService: SystemService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: { emailConfiguration: any }) => {\n      this.emailConfigurationData = data.emailConfiguration;\n    });\n  }\n\n  /**\n   * Creates Email configuration form.\n   */\n  ngOnInit() {\n    this.setEmailConfigurationForm();\n  }\n\n  /**\n   * Creates Email configuration form.\n   */\n  setEmailConfigurationForm() {\n    this.emailConfigurationForm = this.formBuilder.group({\n      'username': [this.emailConfigurationData[0].value, Validators.required],\n      'password': [this.emailConfigurationData[1].value, Validators.required],\n      'host': [this.emailConfigurationData[2].value, Validators.required],\n      'port': [this.emailConfigurationData[3].value, Validators.required],\n      'useTLS': [this.emailConfigurationData[4].value, Validators.required]\n    });\n  }\n\n  /**\n   * Submits the Email configuration and updates the Email configuration,\n   * if successful redirects to view Email configuration.\n   */\n  submit() {\n    this.systemService\n      .updateExternalConfiguration('SMTP', this.emailConfigurationForm.value)\n      .subscribe((response: any) => {\n        this.router.navigate(['../'], { relativeTo: this.route });\n      });\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['edit']\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n</div>\\n\\n<div class=\\\"container mat-elevation-z8\\\">\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n      <td mat-cell *matCellDef=\\\"let configuration\\\"> {{ configuration.name }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"value\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Value </th>\\n      <td mat-cell *matCellDef=\\\"let configuration\\\"> {{ configuration.value }} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n  </table>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9leHRlcm5hbC1zZXJ2aWNlcy9lbWFpbC9lbWFpbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS9leHRlcm5hbC1zZXJ2aWNlcy9lbWFpbC9lbWFpbC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatTableDataSource, MatSort } from '@angular/material';\n\n/**\n * Email Configuration Component.\n */\n@Component({\n  selector: 'mifosx-email',\n  templateUrl: './email.component.html',\n  styleUrls: ['./email.component.scss']\n})\nexport class EmailComponent implements OnInit {\n\n  /** Email configuration data. */\n  emailConfigurationData: any;\n  /** Columns to be displayed in Email configuration table. */\n  displayedColumns: string[] = ['name', 'value'];\n  /** Data source for Email configuration table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Sorter for Email configuration table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the Email configuration data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { emailConfiguration: any }) => {\n      this.emailConfigurationData = data.emailConfiguration;\n    });\n  }\n\n  /**\n   * Sets the Email Configuration table.\n   */\n  ngOnInit() {\n    this.setEmailConfiguration();\n  }\n\n  /**\n   * Initializes the data source and sorter for Email configuration table.\n   */\n  setEmailConfiguration() {\n    this.dataSource = new MatTableDataSource(this.emailConfigurationData);\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../../system.service';\n\n/**\n * Email Configuration data resolver.\n */\n@Injectable()\nexport class EmailConfigurationResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the Email Configuration data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.systemService.getExternalConfiguration('SMTP');\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <div fxFlex=\\\"50%\\\">\\n\\n        <mat-nav-list>\\n\\n          <mat-list-item [routerLink]=\\\"['amazon-s3']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"cloud\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>S3 Amazon External Service</h4>\\n            <p matLine>S3 Amazon Service Configuration</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['sms']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"comment-alt\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>SMS External Service</h4>\\n            <p matLine>SMS Service Configuration</p>\\n          </mat-list-item>\\n\\n        </mat-nav-list>\\n\\n      </div>\\n\\n      <div fxFlex=\\\"50%\\\">\\n\\n        <mat-nav-list>\\n\\n          <mat-list-item [routerLink]=\\\"['email']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"envelope\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Email External Service</h4>\\n            <p matLine>Email Service Configuration</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['notification']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"bell\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Notification External Service</h4>\\n            <p matLine>Notification Service Configuration</p>\\n          </mat-list-item>\\n\\n        </mat-nav-list>\\n\\n      </div>\\n\\n    </div>\\n\\n  </mat-card>\\n\\n</div>\\n\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\n\n/**\n * External Services component.\n */\n@Component({\n  selector: 'mifosx-external-services',\n  templateUrl: './external-services.component.html',\n})\nexport class ExternalServicesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"notificationConfigurationForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field>\\n            <mat-label>Server Key</mat-label>\\n            <input matInput required formControlName=\\\"server_key\\\">\\n            <mat-error *ngIf=\\\"notificationConfigurationForm.controls.server_key.hasError('required')\\\">\\n              Server Key is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>GCM End Point</mat-label>\\n            <input matInput required formControlName=\\\"gcm_end_point\\\">\\n            <mat-error *ngIf=\\\"notificationConfigurationForm.controls.gcm_end_point.hasError('required')\\\">\\n              GCM End Point is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>FCM End Point</mat-label>\\n            <input matInput required formControlName=\\\"fcm_end_point\\\">\\n            <mat-error *ngIf=\\\"notificationConfigurationForm.controls.fcm_end_point.hasError('required')\\\">\\n              FCM End Point is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!notificationConfigurationForm.valid || notificationConfigurationForm.pristine\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9leHRlcm5hbC1zZXJ2aWNlcy9ub3RpZmljYXRpb24vZWRpdC1ub3RpZmljYXRpb24vZWRpdC1ub3RpZmljYXRpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS9leHRlcm5hbC1zZXJ2aWNlcy9ub3RpZmljYXRpb24vZWRpdC1ub3RpZmljYXRpb24vZWRpdC1ub3RpZmljYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDM3cmVtO1xufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n/** Custom Services */\nimport { SystemService } from 'app/system/system.service';\n\n/**\n * Edit Notification Configuration Component.\n */\n@Component({\n  selector: 'mifosx-edit-notification',\n  templateUrl: './edit-notification.component.html',\n  styleUrls: ['./edit-notification.component.scss']\n})\nexport class EditNotificationComponent implements OnInit {\n\n  /** Notification Configuration data */\n  notificationConfigurationData: any;\n  /** Notification Configuration Form */\n  notificationConfigurationForm: FormGroup;\n\n  /**\n   * Retrieves the Notification configuration data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {SystemService} systemService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private systemService: SystemService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: { notificationConfiguration: any }) => {\n      this.notificationConfigurationData = data.notificationConfiguration;\n    });\n  }\n\n  /**\n   * Creates Notification configuration form.\n   */\n  ngOnInit() {\n    this.setNotificationConfigurationForm();\n  }\n\n  /**\n   * Creates Notification configuration form.\n   */\n  setNotificationConfigurationForm() {\n    this.notificationConfigurationForm = this.formBuilder.group({\n      'server_key': [this.notificationConfigurationData[0].value, Validators.required],\n      'gcm_end_point': [this.notificationConfigurationData[1].value, Validators.required],\n      'fcm_end_point': [this.notificationConfigurationData[2].value, Validators.required]\n    });\n  }\n\n  /**\n   * Submits the Notification configuration and updates the Notification configuration,\n   * if successful redirects to view Notification configuration.\n   */\n  submit() {\n    this.systemService\n      .updateExternalConfiguration('NOTIFICATION', this.notificationConfigurationForm.value)\n      .subscribe((response: any) => {\n        this.router.navigate(['../'], { relativeTo: this.route });\n      });\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['edit']\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n</div>\\n\\n<div class=\\\"container mat-elevation-z8\\\">\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n      <td mat-cell *matCellDef=\\\"let configuration\\\"> {{ configuration.name }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"value\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Value </th>\\n      <td mat-cell *matCellDef=\\\"let configuration\\\"> {{ configuration.value }} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n  </table>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9leHRlcm5hbC1zZXJ2aWNlcy9ub3RpZmljYXRpb24vbm90aWZpY2F0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc3lzdGVtL2V4dGVybmFsLXNlcnZpY2VzL25vdGlmaWNhdGlvbi9ub3RpZmljYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatTableDataSource, MatSort } from '@angular/material';\n\n/**\n * Notification Configuration Component.\n */\n@Component({\n  selector: 'mifosx-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.scss']\n})\nexport class NotificationComponent implements OnInit {\n\n  /** Notification configuration data. */\n  notificationConfigurationData: any;\n  /** Columns to be displayed in Notification configuration table. */\n  displayedColumns: string[] = ['name', 'value'];\n  /** Data source for Notification configuration table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Sorter for Notification configuration table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the Notification configuration data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { notificationConfiguration: any }) => {\n      this.notificationConfigurationData = data.notificationConfiguration;\n    });\n  }\n\n  /**\n   * Sets the Notification Configuration table.\n   */\n  ngOnInit() {\n    this.setNotificationConfiguration();\n  }\n\n  /**\n   * Initializes the data source and sorter for Notification configuration table.\n   */\n  setNotificationConfiguration() {\n    this.dataSource = new MatTableDataSource(this.notificationConfigurationData);\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../../system.service';\n\n/**\n * Notification Configuration data resolver.\n */\n@Injectable()\nexport class NotificationConfigurationResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the Notification Configuration data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.systemService.getExternalConfiguration('NOTIFICATION');\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n    <mat-card>\\n  \\n      <form [formGroup]=\\\"smsConfigurationForm\\\" (ngSubmit)=\\\"submit()\\\">\\n  \\n        <mat-card-content>\\n  \\n          <div fxLayout=\\\"column\\\">\\n  \\n            <mat-form-field>\\n              <mat-label>Host Name</mat-label>\\n              <input matInput required formControlName=\\\"host_name\\\">\\n              <mat-error *ngIf=\\\"smsConfigurationForm.controls.host_name.hasError('required')\\\">\\n                Host Name is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n  \\n            <mat-form-field>\\n              <mat-label>Port Number</mat-label>\\n              <input matInput required formControlName=\\\"port_number\\\">\\n              <mat-error *ngIf=\\\"smsConfigurationForm.controls.port_number.hasError('required')\\\">\\n                Port Number is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n  \\n            <mat-form-field>\\n              <mat-label>End Point</mat-label>\\n              <input matInput required formControlName=\\\"end_point\\\">\\n              <mat-error *ngIf=\\\"smsConfigurationForm.controls.end_point.hasError('required')\\\">\\n                End Point is <strong>required</strong>\\n              </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <mat-label>Tenant App Key</mat-label>\\n                <input matInput required formControlName=\\\"tenant_app_key\\\">\\n                <mat-error *ngIf=\\\"smsConfigurationForm.controls.tenant_app_key.hasError('required')\\\">\\n                  Tenant App Key is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n  \\n          </div>\\n  \\n        </mat-card-content>\\n  \\n        <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n          <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n          <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!smsConfigurationForm.valid || smsConfigurationForm.pristine\\\">Submit</button>\\n        </mat-card-actions>\\n  \\n      </form>\\n  \\n    </mat-card>\\n  \\n  </div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9leHRlcm5hbC1zZXJ2aWNlcy9zbXMvZWRpdC1zbXMvZWRpdC1zbXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS9leHRlcm5hbC1zZXJ2aWNlcy9zbXMvZWRpdC1zbXMvZWRpdC1zbXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDM3cmVtO1xufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n/** Custom Services */\nimport { SystemService } from 'app/system/system.service';\n\n/**\n * Edit SMS Configuration Component.\n */\n@Component({\n  selector: 'mifosx-edit-sms',\n  templateUrl: './edit-sms.component.html',\n  styleUrls: ['./edit-sms.component.scss']\n})\nexport class EditSMSComponent implements OnInit {\n\n  /** SMS Configuration data */\n  smsConfigurationData: any;\n  /** SMS Configuration Form */\n  smsConfigurationForm: FormGroup;\n\n  /**\n   * Retrieves the SMS configuration data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {SystemService} systemService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private systemService: SystemService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: { smsConfiguration: any }) => {\n      this.smsConfigurationData = data.smsConfiguration;\n    });\n  }\n\n  /**\n   * Creates SMS configuration form.\n   */\n  ngOnInit() {\n    this.setSMSConfigurationForm();\n  }\n\n  /**\n   * Creates SMS configuration form.\n   */\n  setSMSConfigurationForm() {\n    this.smsConfigurationForm = this.formBuilder.group({\n      'host_name': [this.smsConfigurationData[0].value, Validators.required],\n      'port_number': [this.smsConfigurationData[1].value, Validators.required],\n      'end_point': [this.smsConfigurationData[2].value, Validators.required],\n      'tenant_app_key': [this.smsConfigurationData[3].value, Validators.required]\n    });\n  }\n\n  /**\n   * Submits the SMS configuration and updates the SMS configuration,\n   * if successful redirects to view SMS configuration.\n   */\n  submit() {\n    this.systemService\n      .updateExternalConfiguration('SMS', this.smsConfigurationForm.value)\n      .subscribe((response: any) => {\n        this.router.navigate(['../'], { relativeTo: this.route });\n      });\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['edit']\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n</div>\\n\\n<div class=\\\"container mat-elevation-z8\\\">\\n\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n      <td mat-cell *matCellDef=\\\"let configuration\\\"> {{ configuration.name }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"value\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Value </th>\\n      <td mat-cell *matCellDef=\\\"let configuration\\\"> {{ configuration.value }} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n  </table>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9leHRlcm5hbC1zZXJ2aWNlcy9zbXMvc21zLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc3lzdGVtL2V4dGVybmFsLXNlcnZpY2VzL3Ntcy9zbXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatTableDataSource, MatSort } from '@angular/material';\n\n/**\n * SMS Configuration Component.\n */\n@Component({\n  selector: 'mifosx-sms',\n  templateUrl: './sms.component.html',\n  styleUrls: ['./sms.component.scss']\n})\nexport class SMSComponent implements OnInit {\n\n  /** SMS configuration data. */\n  smsConfigurationData: any;\n  /** Columns to be displayed in SMS configuration table. */\n  displayedColumns: string[] = ['name', 'value'];\n  /** Data source for SMS configuration table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Sorter for SMS configuration table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the SMS configuration data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: {smsConfiguration: any}) => {\n      this.smsConfigurationData = data.smsConfiguration;\n    });\n   }\n\n  /**\n   * Sets the SMS Configuration table.\n   */\n  ngOnInit() {\n    this.setSMSConfiguration();\n  }\n\n  /**\n   * Initializes the data source and sorter for SMS configuration table.\n   */\n  setSMSConfiguration() {\n    this.dataSource = new MatTableDataSource(this.smsConfigurationData);\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../../system.service';\n\n/**\n * SMS Configuration data resolver.\n */\n@Injectable()\nexport class SMSConfigurationResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the SMS Configuration data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.systemService.getExternalConfiguration('SMS');\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"configurationForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field>\\n            <mat-label>Configuration Name</mat-label>\\n            <input matInput required formControlName=\\\"name\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Configuration Value</mat-label>\\n            <input matInput required type=\\\"number\\\" formControlName=\\\"value\\\">\\n            <mat-error *ngIf=\\\"configurationForm.controls.value.hasError('required')\\\">\\n              Configuration Value is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../../']\\\"> Cancel </button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"configurationForm.pristine || !configurationForm.valid\\\"> Submit </button>\\n      </mat-card-actions>\\n\\n    </form>\\n    \\n  </mat-card>\\n  \\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9nbG9iYWwtY29uZmlndXJhdGlvbnMvZWRpdC1jb25maWd1cmF0aW9uL2VkaXQtY29uZmlndXJhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvc3lzdGVtL2dsb2JhbC1jb25maWd1cmF0aW9ucy9lZGl0LWNvbmZpZ3VyYXRpb24vZWRpdC1jb25maWd1cmF0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMzdyZW07XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n/** Custom Services */\nimport { SystemService } from '../../system.service';\n\n/**\n * Edit Configuration Component\n */\n@Component({\n  selector: 'mifosx-edit-configuration',\n  templateUrl: './edit-configuration.component.html',\n  styleUrls: ['./edit-configuration.component.scss']\n})\nexport class EditConfigurationComponent implements OnInit {\n\n  /** Global Configuration form. */\n  configurationForm: FormGroup;\n  /** Configuration. */\n  configuration: any;\n\n  /**\n   * Retrieves the configuration data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {SystemService} systemService System Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private systemService: SystemService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: { configuration: any }) => {\n      this.configuration = data.configuration;\n    });\n  }\n\n  /**\n   * Creates and sets the configuration form.\n   */\n  ngOnInit() {\n    this.createConfigurationForm();\n  }\n\n  /**\n   * Creates and sets the global configuration form.\n   */\n  createConfigurationForm() {\n    this.configurationForm = this.formBuilder.group({\n      'name': [{ value: this.configuration.name, disabled: true }, Validators.required],\n      'value': [this.configuration.value, Validators.required]\n    });\n  }\n\n  /**\n   * Submits the global configuration form and updates global configuration,\n   * if successful redirects to view all global configurations.\n   */\n  submit() {\n    this.systemService\n      .updateConfiguration(this.configuration.id, this.configurationForm.value)\n      .subscribe((response: any) => {\n        this.router.navigate(['../../'], { relativeTo: this.route });\n      });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../system.service';\n\n/**\n * Global Configuration data resolver.\n */\n@Injectable()\nexport class GlobalConfigurationResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the Configuration data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const configurationId = route.paramMap.get('id');\n    return this.systemService.getConfiguration(configurationId);\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let configuration\\\"> {{ configuration.name }}&nbsp;&nbsp;\\n        <fa-icon icon=\\\"question-circle\\\" matTooltip=\\\"{{ configuration.description === undefined ? 'No Description' : configuration.description }}\\\" matTooltipPosition=\\\"right\\\"></fa-icon>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"enabled\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\n        <td mat-cell *matCellDef=\\\"let configuration\\\">\\n          <div [className]=\\\"configuration.enabled ? 'enabled' : 'disabled'\\\">\\n            <fa-icon icon=\\\"circle\\\" size=\\\"lg\\\" matTooltip=\\\"{{ configuration.enabled ? 'Enabled' : 'Disabled' }}\\\" matTooltipPosition=\\\"right\\\"></fa-icon>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"value\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Value </th>\\n        <td mat-cell *matCellDef=\\\"let configuration\\\"> {{ configuration.value }}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"action\\\">\\n        <th mat-header-cell *matHeaderCellDef> Action </th>\\n        <td mat-cell *matCellDef=\\\"let configuration\\\">\\n          <button mat-button *ngIf=\\\"!configuration.enabled\\\" color=\\\"accent\\\" (click)=\\\"toggleStatus(configuration)\\\">\\n            <fa-icon icon=\\\"lock-open\\\"></fa-icon>&nbsp;&nbsp;Enable\\n          </button>\\n          <button mat-button *ngIf=\\\"configuration.enabled\\\" color=\\\"warn\\\" (click)=\\\"toggleStatus(configuration)\\\">\\n            <fa-icon icon=\\\"lock\\\"></fa-icon>&nbsp;&nbsp;Disable\\n          </button>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"edit\\\">\\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\\n        <td mat-cell *matCellDef=\\\"let configuration\\\">\\n          <button mat-button color=\\\"primary\\\" [routerLink]=\\\"[configuration.id, 'edit']\\\">\\n            <fa-icon icon=\\\"edit\\\"></fa-icon>\\n          </button>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.enabled {\\n  color: #32cd32; }\\n\\n.disabled {\\n  color: #f44366; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9nbG9iYWwtY29uZmlndXJhdGlvbnMvZ2xvYmFsLWNvbmZpZ3VyYXRpb25zLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBOztBQUliO0VBQ0UsY0FBYyxFQUFBOztBQUdoQjtFQUNFLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS9nbG9iYWwtY29uZmlndXJhdGlvbnMvZ2xvYmFsLWNvbmZpZ3VyYXRpb25zLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLy8gVE9ETzogQ09ORklHVVJFIFRIRVNFIENMQVNTRVMgR0xPQkFMTFlcbi5lbmFibGVkIHtcbiAgY29sb3I6ICMzMmNkMzI7XG59XG5cbi5kaXNhYmxlZCB7XG4gIGNvbG9yOiAjZjQ0MzY2O1xufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n/** Custom Services */\nimport { SystemService } from '../system.service';\n\n/**\n * Global Configurations Component\n */\n@Component({\n  selector: 'mifosx-global-configurations',\n  templateUrl: './global-configurations.component.html',\n  styleUrls: ['./global-configurations.component.scss']\n})\nexport class GlobalConfigurationsComponent implements OnInit {\n\n  /** Configuration data. */\n  configurationData: any;\n  /** Columns to be displayed in configurations table. */\n  displayedColumns: string[] = ['name', 'enabled', 'value', 'action', 'edit'];\n  /** Data source for configurations table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for configurations table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for configurations table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the configurations data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {SystemService} systemService System Service.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private route: ActivatedRoute,\n              private systemService: SystemService,\n              private router: Router) {\n    this.route.data.subscribe((data: { configurations: any }) => {\n      this.configurationData = data.configurations.globalConfiguration;\n    });\n  }\n\n  /**\n   * Sets the configurations table.\n   */\n  ngOnInit() {\n    this.setConfigurations();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for configurations table.\n   */\n  setConfigurations() {\n    this.dataSource = new MatTableDataSource(this.configurationData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n   * Filters data in configurations table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Enables/Disables respective configuration\n   */\n  toggleStatus(configuration: any) {\n    this.systemService.updateConfiguration(configuration.id, { enabled: !configuration.enabled })\n      .subscribe((response: any) => {\n        configuration.enabled = response.changes.enabled;\n      });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../system.service';\n\n/**\n * Configurations data resolver.\n */\n@Injectable()\nexport class GlobalConfigurationsResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the configurations data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.systemService.getConfigurations();\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Data Table\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"registeredTableName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Data Table Name </th>\\n        <td mat-cell *matCellDef=\\\"let dataTable\\\"> {{ dataTable.registeredTableName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"applicationTableName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Associated With </th>\\n        <td mat-cell *matCellDef=\\\"let dataTable\\\"> {{ dataTable.applicationTableName }} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9tYW5hZ2UtZGF0YS10YWJsZXMvbWFuYWdlLWRhdGEtdGFibGVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBO0VBRGI7SUFJSSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zeXN0ZW0vbWFuYWdlLWRhdGEtdGFibGVzL21hbmFnZS1kYXRhLXRhYmxlcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG5cbiAgLnNlbGVjdC1yb3c6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/**\n * Manage Data Tables component.\n */\n@Component({\n  selector: 'mifosx-manage-data-tables',\n  templateUrl: './manage-data-tables.component.html',\n  styleUrls: ['./manage-data-tables.component.scss']\n})\nexport class ManageDataTablesComponent implements OnInit {\n\n  /** Data table data. */\n  dataTableData: any;\n  /** Columns to be displayed in manage data tables table. */\n  displayedColumns: string[] = ['registeredTableName', 'applicationTableName'];\n  /** Data source for manage data tables table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for manage data tables table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for manage data tables table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the data tables data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { dataTables: any }) => {\n      this.dataTableData = data.dataTables;\n    });\n  }\n\n  /**\n   * Filters data in manage data tables table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the manage data tables table.\n   */\n  ngOnInit() {\n    this.setDataTables();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for manage data tables table.\n   */\n  setDataTables() {\n    this.dataSource = new MatTableDataSource(this.dataTableData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../system.service';\n\n/**\n * Manage data tables data resolver.\n */\n@Injectable()\nexport class ManageDataTablesResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the manage data tables data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.systemService.getDataTables();\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Hook\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Hook Template </th>\\n        <td mat-cell *matCellDef=\\\"let hook\\\"> {{ hook.name }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"displayName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Hook Name </th>\\n        <td mat-cell *matCellDef=\\\"let hook\\\"> {{ hook.displayName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"isActive\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\n        <td mat-cell *matCellDef=\\\"let hook\\\">\\n          <div [className]=\\\"hook.isActive === true ? 'true' : 'false'\\\">\\n            <fa-icon matTooltip=\\\"{{ hook.isActive === true ? 'Active' : 'Inactive' }}\\\" matTooltipPosition=\\\"right\\\" icon=\\\"circle\\\" size=\\\"lg\\\"></fa-icon>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n  .true {\\n  color: #32cd32; }\\n  .false {\\n  color: #f44366; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9tYW5hZ2UtaG9va3MvbWFuYWdlLWhvb2tzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBO0VBRGI7SUFJSSxlQUFlLEVBQUE7RUFJbkI7RUFDRSxjQUFjLEVBQUE7RUFHaEI7RUFDRSxjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zeXN0ZW0vbWFuYWdlLWhvb2tzL21hbmFnZS1ob29rcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG5cbiAgLnNlbGVjdC1yb3c6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxufVxuXG4udHJ1ZSB7XG4gIGNvbG9yOiAjMzJjZDMyO1xufVxuXG4uZmFsc2Uge1xuICBjb2xvcjogI2Y0NDM2Njtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/**\n * Manage Hooks component.\n */\n@Component({\n  selector: 'mifosx-manage-hooks',\n  templateUrl: './manage-hooks.component.html',\n  styleUrls: ['./manage-hooks.component.scss']\n})\nexport class ManageHooksComponent implements OnInit {\n\n  /** Hook data. */\n  hookData: any;\n  /** Columns to be displayed in manage hooks table. */\n  displayedColumns: string[] = ['name', 'displayName', 'isActive'];\n  /** Data source for manage hooks table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for manage hooks table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for manage hooks table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the hooks data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { hooks: any }) => {\n      this.hookData = data.hooks;\n    });\n  }\n\n  /**\n   * Filters data in manage data tables table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the manage hooks table.\n   */\n  ngOnInit() {\n    this.setHooks();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for manage hooks table.\n   */\n  setHooks() {\n    this.dataSource = new MatTableDataSource(this.hookData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../system.service';\n\n/**\n * Manage hooks data resolver.\n */\n@Injectable()\nexport class ManageHooksResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the manage hooks data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.systemService.getHooks();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"4%\\\">\\n\\n          <mat-form-field fxFlex=\\\"30%\\\">\\n            <mat-label>Report Name</mat-label>\\n            <input matInput required formControlName=\\\"reportName\\\">\\n            <mat-error *ngIf=\\\"reportForm.controls.reportName.hasError('required')\\\">\\n              Report Name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"30%\\\">\\n            <mat-label>Report Type</mat-label>\\n            <mat-select required formControlName=\\\"reportType\\\">\\n              <mat-option *ngFor=\\\"let allowedReportType of reportTemplateData.allowedReportTypes\\\"\\n                [value]=\\\"allowedReportType\\\">\\n                {{ allowedReportType }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"reportForm.controls.reportType.hasError('required')\\\">\\n              Report Type is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"30%\\\">\\n            <mat-label>Report Sub Type</mat-label>\\n            <mat-select formControlName=\\\"reportSubType\\\">\\n              <mat-option *ngFor=\\\"let allowedReportSubType of reportTemplateData.allowedReportSubTypes\\\"\\n                [value]=\\\"allowedReportSubType\\\">\\n                {{ allowedReportSubType }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n        </div>\\n\\n        <div fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"4%\\\">\\n\\n          <mat-form-field fxFlex=\\\"40%\\\">\\n            <mat-label>Report Category</mat-label>\\n            <input matInput formControlName=\\\"reportCategory\\\">\\n          </mat-form-field>\\n\\n          <div fxFlex=\\\"10%\\\" class=\\\"user-report-wrapper\\\">\\n            <mat-checkbox class=\\\"user-report\\\" labelPosition=\\\"before\\\" formControlName=\\\"useReport\\\">\\n              User Report (UI)\\n            </mat-checkbox>\\n          </div>\\n\\n        </div>\\n\\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field fxFlex=\\\"98%\\\">\\n            <mat-label>Description</mat-label>\\n            <textarea matInput formControlName=\\\"description\\\"></textarea>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"98%\\\">\\n            <mat-label>SQL</mat-label>\\n            <textarea matInput required formControlName=\\\"reportSql\\\"></textarea>\\n            <mat-error *ngIf=\\\"reportForm.controls.reportSql.hasError('required')\\\">\\n              SQL is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n        </div>\\n\\n        <br>\\n\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"60%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n          <p fxFlex=\\\"20%\\\" class=\\\"mat-title\\\">Report Parameters</p>\\n\\n          <button mat-raised-button fxFlex=\\\"20%\\\" type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"addReportParameter()\\\">\\n            <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n            Add Report Parameter\\n          </button>\\n\\n        </div>\\n\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n          <ng-container matColumnDef=\\\"parameterName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Parameter </th>\\n            <td mat-cell *matCellDef=\\\"let reportParameter\\\"> {{ reportParameter.parameterName }} </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"parameterNamePassed\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Parameter Name Passed to Pentaho </th>\\n            <td mat-cell *matCellDef=\\\"let reportParameter\\\"> {{ reportParameter.reportParameterName }} </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"actions\\\">\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\n            <td mat-cell *matCellDef=\\\"let reportParameter\\\" fxLayoutGap=\\\"15%\\\">\\n              <button type=\\\"button\\\" fxFlex=\\\"8%\\\" color=\\\"primary\\\" mat-icon-button\\n                (click)=\\\"editReportParameter(reportParameter)\\\">\\n                <fa-icon icon=\\\"edit\\\" size=\\\"lg\\\"></fa-icon>\\n              </button>\\n              <button type=\\\"button\\\" fxFlex=\\\"8%\\\" color=\\\"warn\\\" mat-icon-button\\n                (click)=\\\"deleteReportParameter(reportParameter)\\\">\\n                <fa-icon icon=\\\"trash\\\" size=\\\"lg\\\"></fa-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n        <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\"\\n          [disabled]=\\\"!reportForm.valid && reportParametersData.length === 0\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \"@media (min-width: 992px) {\\n  .user-report-wrapper {\\n    position: relative; }\\n    .user-report-wrapper .user-report {\\n      padding: 0 0 17.5px 0;\\n      position: absolute;\\n      bottom: 0; } }\\n\\ntable {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9tYW5hZ2UtcmVwb3J0cy9jcmVhdGUtcmVwb3J0L2NyZWF0ZS1yZXBvcnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFRTtJQUNFLGtCQUFrQixFQUFBO0lBRHBCO01BSUkscUJBQXFCO01BQ3JCLGtCQUFrQjtNQUNsQixTQUFTLEVBQUEsRUFDVjs7QUFLTDtFQUNFLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS9tYW5hZ2UtcmVwb3J0cy9jcmVhdGUtcmVwb3J0L2NyZWF0ZS1yZXBvcnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcblxuICAudXNlci1yZXBvcnQtd3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBcbiAgICAudXNlci1yZXBvcnQge1xuICAgICAgcGFkZGluZzogMCAwIDE3LjVweCAwO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiAwO1xuICAgIH1cbiAgfVxuICBcbn1cblxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatTableDataSource, MatPaginator, MatSort, MatDialog } from '@angular/material';\n\n/** Custom Services */\nimport { SystemService } from 'app/system/system.service';\n\n/** Custom Components */\nimport { ReportParameterDialogComponent } from '../report-parameter-dialog/report-parameter-dialog.component';\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\n\n/**\n * Create Report Component.\n */\n@Component({\n  selector: 'mifosx-create-report',\n  templateUrl: './create-report.component.html',\n  styleUrls: ['./create-report.component.scss']\n})\nexport class CreateReportComponent implements OnInit {\n\n  /** Report Form. */\n  reportForm: FormGroup;\n  /** Report Template Data. */\n  reportTemplateData: any;\n  /** Data passed to dialog. */\n  dataForDialog: { allowedParameters: any[], parameterName: string, reportParameterName: string } =\n    {\n      allowedParameters: undefined,\n      parameterName: undefined,\n      reportParameterName: undefined\n    };\n  /** Columns to be displayed in report parameters table. */\n  displayedColumns: string[] = ['parameterName', 'parameterNamePassed', 'actions'];\n  /** Data source for report parameters table. */\n  dataSource: MatTableDataSource<any>;\n  /** Report Parameters Data. */\n  reportParametersData: any[] = [];\n  /** Paginator for report parameters table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for report parameters table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the report template data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {SystemService} systemService System Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   * @param {MatDialog} dialog Dialog Reference.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private systemService: SystemService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private dialog: MatDialog) {\n    this.route.data.subscribe((data: { reportTemplate: any }) => {\n      this.reportTemplateData = data.reportTemplate;\n      this.dataForDialog.allowedParameters = this.reportTemplateData.allowedParameters;\n    });\n  }\n\n  /**\n   * Creates the report form.\n   */\n  ngOnInit() {\n    this.createReportForm();\n    this.toggleVisibility();\n    this.setReportParameters();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for report parameters table.\n   */\n  setReportParameters() {\n    this.dataSource = new MatTableDataSource(this.reportParametersData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n   * Creates the report form.\n   */\n  createReportForm() {\n    this.reportForm = this.formBuilder.group({\n      'reportName': ['', Validators.required],\n      'reportCategory': [''],\n      'description': [''],\n      'reportType': ['', Validators.required],\n      'reportSubType': [{ value: '', disabled: true }],\n      'useReport': [false],\n      'reportSql': ['', Validators.required]\n    });\n  }\n\n  /**\n   * Adds a new report parameter.\n   */\n  addReportParameter() {\n    this.dataForDialog.parameterName = undefined;\n    this.dataForDialog.reportParameterName = undefined;\n    const addReportParameterDialogRef = this.dialog.open(ReportParameterDialogComponent, {\n      data: this.dataForDialog\n    });\n    addReportParameterDialogRef.afterClosed().subscribe((response: any) => {\n      if (response !== '') {\n        this.reportParametersData.push({ id: '',\n                                         parameterName: this.reportTemplateData.allowedParameters.find((allowedParameter: any) => allowedParameter.id === response.parameterName).parameterName,\n                                         parameterId: response.parameterName,\n                                         reportParameterName: response.reportParameterName });\n        this.dataSource.connect().next(this.reportParametersData);\n      }\n    });\n  }\n\n  /**\n   * Edits report parameter.\n   * @param {any} reportParameter Report Parameter.\n   */\n  editReportParameter(reportParameter: any) {\n    this.dataForDialog.parameterName = reportParameter.parameterId;\n    this.dataForDialog.reportParameterName = reportParameter.reportParameterName;\n    const editReportParameterDialogRef = this.dialog.open(ReportParameterDialogComponent, {\n      data: this.dataForDialog\n    });\n    editReportParameterDialogRef.afterClosed().subscribe((response: any) => {\n      if (response !== '') {\n        this.reportParametersData[this.reportParametersData.indexOf(reportParameter)] = { id: '',\n          parameterName: this.reportTemplateData.allowedParameters.find((allowedParameter: any) => allowedParameter.id === response.parameterName).parameterName,\n          parameterId: response.parameterName,\n          reportParameterName: response.reportParameterName };\n        this.dataSource.connect().next(this.reportParametersData);\n      }\n    });\n  }\n\n  /**\n   * Deletes the report parameter.\n   * @param {any} reportParameter Report Parameter.\n   */\n  deleteReportParameter(reportParameter: any) {\n    const deleteReportDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `report parameter ${reportParameter.parameterName}` }\n    });\n    deleteReportDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.reportParametersData.splice(this.reportParametersData.indexOf(reportParameter), 1);\n        this.dataSource.connect().next(this.reportParametersData);\n      }\n    });\n  }\n\n  /**\n   * Toggles the visibility status of Report Sub Type dropdown.\n   */\n  toggleVisibility() {\n    this.reportForm.get('reportType').valueChanges\n      .subscribe(type => {\n        switch (type) {\n          case 'Chart':\n            this.reportForm.get('reportSubType').enable();\n            this.reportForm.get('reportSql').enable();\n            break;\n          case 'Pentaho':\n            this.reportForm.get('reportSql').disable();\n            this.reportForm.get('reportSubType').disable();\n            break;\n          default:\n            this.reportForm.get('reportSql').enable();\n            this.reportForm.get('reportSubType').disable();\n        }\n      });\n  }\n\n  /**\n   * Submits the report form and creates report,\n   * if successful redirects to view created report.\n   */\n  submit() {\n    this.reportForm.value.reportParameters = this.reportParametersData.map( function(reportParameter: any) {\n      reportParameter.parameterName = undefined;\n      return reportParameter;\n    });\n    this.systemService.createReport(this.reportForm.value)\n      .subscribe((response: any) => {\n        // TODO: Implement Maker Checker Component.\n        this.router.navigate(['../', response.resourceId], { relativeTo: this.route });\n      });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"4%\\\">\\n\\n          <mat-form-field fxFlex=\\\"30%\\\">\\n            <mat-label>Report Name</mat-label>\\n            <input matInput required formControlName=\\\"reportName\\\">\\n            <mat-error *ngIf=\\\"reportForm.controls.reportName.hasError('required')\\\">\\n              Report Name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"30%\\\">\\n            <mat-label>Report Type</mat-label>\\n            <mat-select required formControlName=\\\"reportType\\\">\\n              <mat-option *ngFor=\\\"let allowedReportType of reportData.allowedReportTypes\\\" [value]=\\\"allowedReportType\\\">\\n                {{ allowedReportType }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"reportForm.controls.reportType.hasError('required')\\\">\\n              Report Type is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"30%\\\">\\n            <mat-label>Report Sub Type</mat-label>\\n            <mat-select formControlName=\\\"reportSubType\\\">\\n              <mat-option *ngFor=\\\"let allowedReportSubType of reportData.allowedReportSubTypes\\\"\\n                [value]=\\\"allowedReportSubType\\\">\\n                {{ allowedReportSubType }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n        </div>\\n\\n        <div fxLayout=\\\"row wrap\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"4%\\\">\\n\\n          <mat-form-field fxFlex=\\\"40%\\\">\\n            <mat-label>Report Category</mat-label>\\n            <input matInput formControlName=\\\"reportCategory\\\">\\n          </mat-form-field>\\n\\n          <div fxFlex=\\\"10%\\\" class=\\\"user-report-wrapper\\\">\\n            <mat-checkbox class=\\\"user-report\\\" labelPosition=\\\"before\\\" formControlName=\\\"useReport\\\">\\n              User Report (UI)\\n            </mat-checkbox>\\n          </div>\\n\\n        </div>\\n\\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field fxFlex=\\\"98%\\\">\\n            <mat-label>Description</mat-label>\\n            <textarea matInput formControlName=\\\"description\\\"></textarea>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"98%\\\">\\n            <mat-label>SQL</mat-label>\\n            <textarea matInput required formControlName=\\\"reportSql\\\"></textarea>\\n            <mat-error *ngIf=\\\"reportForm.controls.reportSql.hasError('required')\\\">\\n              SQL is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n        </div>\\n\\n        <br>\\n\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"60%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n          <p fxFlex=\\\"20%\\\" class=\\\"mat-title\\\">Report Parameters</p>\\n\\n          <button mat-raised-button fxFlex=\\\"20%\\\" type=\\\"button\\\" *ngIf=\\\"!reportData.coreReport\\\" color=\\\"primary\\\"\\n            (click)=\\\"addReportParameter()\\\">\\n            <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n            Add Report Parameter\\n          </button>\\n\\n        </div>\\n\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n          <ng-container matColumnDef=\\\"parameterName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Parameter </th>\\n            <td mat-cell *matCellDef=\\\"let reportParameter\\\"> {{ reportParameter.parameterName }} </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"parameterNamePassed\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Parameter Name Passed to Pentaho </th>\\n            <td mat-cell *matCellDef=\\\"let reportParameter\\\"> {{ reportParameter.reportParameterName }} </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"actions\\\">\\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\\n            <td mat-cell *matCellDef=\\\"let reportParameter\\\" fxLayoutGap=\\\"15%\\\">\\n              <button *ngIf=\\\"!reportData.coreReport\\\" type=\\\"button\\\" fxFlex=\\\"8%\\\" color=\\\"primary\\\" mat-icon-button\\n                (click)=\\\"editReportParameter(reportParameter)\\\">\\n                <fa-icon icon=\\\"edit\\\" size=\\\"lg\\\"></fa-icon>\\n              </button>\\n              <button *ngIf=\\\"!reportData.coreReport\\\" type=\\\"button\\\" fxFlex=\\\"8%\\\" color=\\\"warn\\\" mat-icon-button\\n                (click)=\\\"deleteReportParameter(reportParameter)\\\">\\n                <fa-icon icon=\\\"trash\\\" size=\\\"lg\\\"></fa-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n        </table>\\n\\n        <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\"\\n          [disabled]=\\\"(!reportForm.valid || reportForm.pristine) && !isReportParametersChanged\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \"@media (min-width: 992px) {\\n  .user-report-wrapper {\\n    position: relative; }\\n    .user-report-wrapper .user-report {\\n      padding: 0 0 17.5px 0;\\n      position: absolute;\\n      bottom: 0; } }\\n\\ntable {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9tYW5hZ2UtcmVwb3J0cy9lZGl0LXJlcG9ydC9lZGl0LXJlcG9ydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVFO0lBQ0Usa0JBQWtCLEVBQUE7SUFEcEI7TUFJSSxxQkFBcUI7TUFDckIsa0JBQWtCO01BQ2xCLFNBQVMsRUFBQSxFQUNWOztBQUtMO0VBQ0UsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc3lzdGVtL21hbmFnZS1yZXBvcnRzL2VkaXQtcmVwb3J0L2VkaXQtcmVwb3J0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG5cbiAgLnVzZXItcmVwb3J0LXdyYXBwZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgXG4gICAgLnVzZXItcmVwb3J0IHtcbiAgICAgIHBhZGRpbmc6IDAgMCAxNy41cHggMDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogMDtcbiAgICB9XG4gIH1cbiAgXG59XG5cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatTableDataSource, MatPaginator, MatSort, MatDialog } from '@angular/material';\n\n/** Custom Services */\nimport { SystemService } from 'app/system/system.service';\n\n/** Custom Components */\nimport { ReportParameterDialogComponent } from '../report-parameter-dialog/report-parameter-dialog.component';\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\n\n/**\n * Edit Report Component.\n */\n@Component({\n  selector: 'mifosx-edit-report',\n  templateUrl: './edit-report.component.html',\n  styleUrls: ['./edit-report.component.scss']\n})\nexport class EditReportComponent implements OnInit {\n\n  /** Report Data. */\n  reportData: any;\n  /** Report Template Data. */\n  reportTemplateData: any;\n  /** Report Parameters Data. */\n  reportParametersData: any[] = [];\n  /** Data passed to dialog. */\n  dataForDialog: { allowedParameters: any[], parameterName: string, reportParameterName: string } =\n    {\n      allowedParameters: undefined,\n      parameterName: undefined,\n      reportParameterName: undefined\n    };\n  /** Report Form. */\n  reportForm: FormGroup;\n  /** Columns to be displayed in report parameters table. */\n  displayedColumns: string[] = ['parameterName', 'parameterNamePassed', 'actions'];\n  /** Data source for report parameters table. */\n  dataSource: MatTableDataSource<any>;\n  /** Boolean to check if report parameters data is changed or not. */\n  isReportParametersChanged: Boolean = false;\n\n  /** Paginator for report parameters table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for report parameters table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the report and report template data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {SystemService} systemService System Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   * @param {MatDialog} dialog Dialog Reference.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private systemService: SystemService,\n              private dialog: MatDialog) {\n    this.route.data.subscribe((data: { report: any, reportTemplate: any }) => {\n      this.reportData = data.report;\n      this.reportParametersData = data.report.reportParameters ? data.report.reportParameters : [];\n      this.reportTemplateData = data.reportTemplate;\n      this.dataForDialog.allowedParameters = this.reportData.allowedParameters;\n    });\n  }\n\n  /**\n   * Creates the report form.\n   */\n  ngOnInit() {\n    this.createReportForm();\n    this.setReportParameters();\n    this.toggleVisibility();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for report parameters table.\n   */\n  setReportParameters() {\n    this.dataSource = new MatTableDataSource(this.reportParametersData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n   * Creates and sets the report form.\n   */\n  createReportForm() {\n    this.reportForm = this.formBuilder.group({\n      'reportName': [{ value: this.reportData.reportName, disabled: this.reportData.coreReport }, Validators.required],\n      'reportCategory': [{ value: this.reportData.reportCategory ? this.reportData.reportCategory : '', disabled: this.reportData.coreReport }],\n      'description': [{ value: this.reportData.description ? this.reportData.description : '', disabled: this.reportData.coreReport }],\n      'reportType': [{ value: this.reportData.reportType, disabled: this.reportData.coreReport }, Validators.required],\n      'reportSubType': [{ value: this.reportData.reportSubType ? this.reportData.reportSubType : '', disabled: this.reportData.reportType !== 'Chart' || this.reportData.coreReport }],\n      'useReport': [this.reportData.useReport ? this.reportData.useReport : false],\n      'reportSql': [{ value: this.reportData.reportSql, disabled: this.reportData.coreReport || this.reportData.reportType === 'Pentaho' }, Validators.required]\n    });\n  }\n\n  /**\n   * Adds a new report parameter.\n   */\n  addReportParameter() {\n    this.dataForDialog.parameterName = undefined;\n    this.dataForDialog.reportParameterName = undefined;\n    const addReportParameterDialogRef = this.dialog.open(ReportParameterDialogComponent, {\n      data: this.dataForDialog\n    });\n    addReportParameterDialogRef.afterClosed().subscribe((response: any) => {\n      if (response !== '') {\n        this.reportParametersData.push({ id: '',\n                                         parameterName: this.reportTemplateData.allowedParameters.find((allowedParameter: any) => allowedParameter.id === response.parameterName).parameterName,\n                                         parameterId: response.parameterName,\n                                         reportParameterName: response.reportParameterName ? response.reportParameterName : undefined });\n        this.dataSource.connect().next(this.reportParametersData);\n        this.isReportParametersChanged = true;\n      }\n    });\n  }\n\n  /**\n   * Edits report parameter.\n   * @param {any} reportParameter Report Parameter.\n   */\n  editReportParameter(reportParameter: any) {\n    this.dataForDialog.parameterName = reportParameter.parameterId;\n    this.dataForDialog.reportParameterName = reportParameter.reportParameterName;\n    const editReportParameterDialogRef = this.dialog.open(ReportParameterDialogComponent, {\n      data: this.dataForDialog\n    });\n    editReportParameterDialogRef.afterClosed().subscribe((response: any) => {\n      if (response !== '') {\n        this.reportParametersData[this.reportParametersData.indexOf(reportParameter)] = { id: reportParameter.id,\n          parameterName: this.reportTemplateData.allowedParameters.find((allowedParameter: any) => allowedParameter.id === response.parameterName).parameterName,\n          parameterId: response.parameterName,\n          reportParameterName: response.reportParameterName };\n        this.dataSource.connect().next(this.reportParametersData);\n        this.isReportParametersChanged = true;\n      }\n    });\n  }\n\n  /**\n   * Deletes the report parameter.\n   * @param {any} reportParameter Report Parameter.\n   */\n  deleteReportParameter(reportParameter: any) {\n    const deleteReportDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `report parameter ${reportParameter.parameterName}` }\n    });\n    deleteReportDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.reportParametersData.splice(this.reportParametersData.indexOf(reportParameter), 1);\n        this.dataSource.connect().next(this.reportParametersData);\n        this.isReportParametersChanged = true;\n      }\n    });\n  }\n\n  /**\n   * Toggles the visibility status of Report Sub Type dropdown.\n   */\n  toggleVisibility() {\n    this.reportForm.get('reportType').valueChanges\n      .subscribe(type => {\n        switch (type) {\n          case 'Chart':\n            this.reportForm.get('reportSubType').enable();\n            this.reportForm.get('reportSql').enable();\n            break;\n          case 'Pentaho':\n            this.reportForm.get('reportSql').disable();\n            this.reportForm.get('reportSubType').disable();\n            break;\n          default:\n            this.reportForm.get('reportSql').enable();\n            this.reportForm.get('reportSubType').disable();\n        }\n      });\n  }\n\n  /**\n   * Submits the report form and updates report,\n   * if successful redirects to view updated report.\n   */\n  submit() {\n    console.log(this.reportParametersData);\n    if (this.reportData.coreReport) {\n      this.reportForm.value.reportParameters = undefined;\n    } else {\n      this.reportForm.value.reportParameters = this.reportParametersData;\n      this.reportForm.value.reportParameters.map( function(reportParameter: any) {\n        reportParameter.parameterName = undefined;\n        return reportParameter;\n      });\n    }\n    this.systemService.updateReport(this.reportData.id, this.reportForm.value)\n      .subscribe(() => {\n        this.router.navigate(['../'], { relativeTo: this.route });\n      });\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n    <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['create']\\\">\\n        <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n        Create Report\\n    </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n    <div fxLayout=\\\"row\\\">\\n        <mat-form-field fxFlex>\\n            <mat-label>Filter</mat-label>\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n        </mat-form-field>\\n    </div>\\n\\n    <div class=\\\"mat-elevation-z8\\\">\\n\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n            <ng-container matColumnDef=\\\"reportName\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Report Name </th>\\n                <td mat-cell *matCellDef=\\\"let report\\\"> {{ report.reportName }} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"reportType\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Report Type </th>\\n                <td mat-cell *matCellDef=\\\"let report\\\"> {{ report.reportType }} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"reportSubType\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Report Sub Type </th>\\n                <td mat-cell *matCellDef=\\\"let report\\\"> {{ report.reportSubType }} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"reportCategory\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Report Category </th>\\n                <td mat-cell *matCellDef=\\\"let report\\\"> {{ report.reportCategory }} </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"coreReport\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Core Report </th>\\n                <td mat-cell *matCellDef=\\\"let report\\\">\\n                    <fa-icon *ngIf=\\\"report.coreReport\\\" icon=\\\"check-circle\\\" size=\\\"lg\\\" class=\\\"true\\\" matTooltip=\\\"Yes\\\"\\n                        matTooltipPosition=\\\"right\\\"></fa-icon>\\n                    <fa-icon *ngIf=\\\"!report.coreReport\\\" icon=\\\"times-circle\\\" size=\\\"lg\\\" class=\\\"false\\\" matTooltip=\\\"No\\\"\\n                        matTooltipPosition=\\\"right\\\"></fa-icon>\\n                </td>\\n            </ng-container>\\n\\n            <ng-container matColumnDef=\\\"userReport\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> User Report </th>\\n                <td mat-cell *matCellDef=\\\"let report\\\">\\n                    <fa-icon *ngIf=\\\"report.useReport\\\" icon=\\\"check-circle\\\" size=\\\"lg\\\" class=\\\"true\\\" matTooltip=\\\"Yes\\\"\\n                        matTooltipPosition=\\\"right\\\"></fa-icon>\\n                    <fa-icon *ngIf=\\\"!report.useReport\\\" icon=\\\"times-circle\\\" size=\\\"lg\\\" class=\\\"false\\\" matTooltip=\\\"No\\\"\\n                        matTooltipPosition=\\\"right\\\"></fa-icon>\\n                </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id]\\\"\\n                class=\\\"select-row\\\"></tr>\\n        </table>\\n\\n        <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n    </div>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n  .true {\\n  color: #32cd32; }\\n  .false {\\n  color: #f44366; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9tYW5hZ2UtcmVwb3J0cy9tYW5hZ2UtcmVwb3J0cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTtFQURiO0lBSU0sZUFBZSxFQUFBO0VBS3JCO0VBQ0UsY0FBYyxFQUFBO0VBR2hCO0VBQ0UsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc3lzdGVtL21hbmFnZS1yZXBvcnRzL21hbmFnZS1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcblxuICAuc2VsZWN0LXJvdzpob3ZlciB7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cbiAgXG4vLyBUT0RPOiBDT05GSUdVUkUgVEhFU0UgQ0xBU1NFUyBHTE9CQUxMWVxuLnRydWUge1xuICBjb2xvcjogIzMyY2QzMjtcbn1cbiAgXG4uZmFsc2Uge1xuICBjb2xvcjogI2Y0NDM2Njtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\n\n/**\n * Manage Reports Component.\n */\n@Component({\n  selector: 'mifosx-manage-reports',\n  templateUrl: './manage-reports.component.html',\n  styleUrls: ['./manage-reports.component.scss']\n})\nexport class ManageReportsComponent implements OnInit {\n\n  /** Reports Data. */\n  reportsData: any;\n  /** Columns to be displayed in reports table. */\n  displayedColumns: string[] = ['reportName', 'reportType', 'reportSubType', 'reportCategory', 'coreReport', 'userReport'];\n  /** Data source for reports table. */\n  dataSource: MatTableDataSource<any>;\n\n   /** Paginator for reports table. */\n   @ViewChild(MatPaginator) paginator: MatPaginator;\n   /** Sorter for reports table. */\n   @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the reports data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { reports: any }) => {\n      this.reportsData = data.reports;\n    });\n  }\n\n  /**\n   * Sets the reports table.\n   */\n  ngOnInit() {\n    this.setReports();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for reports table.\n   */\n  setReports() {\n    this.dataSource = new MatTableDataSource(this.reportsData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n   * Filters data in reports table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","module.exports = \"<h1 mat-dialog-title>{{ data.parameterName ? \\\"Edit\\\" : \\\"Add\\\" }} Report Parameter</h1>\\n\\n<mat-dialog-content>\\n\\n  <form [formGroup]=\\\"reportParameterForm\\\">\\n\\n    <div fxLayout=\\\"column\\\">\\n\\n      <mat-form-field>\\n        <mat-label>Select allowed parameter</mat-label>\\n        <mat-select required formControlName=\\\"parameterName\\\">\\n          <mat-option *ngFor=\\\"let allowedParameter of data.allowedParameters\\\" [value]=\\\"allowedParameter.id\\\">\\n            {{ allowedParameter.parameterName }}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error *ngIf=\\\"reportParameterForm.controls.parameterName.hasError('required')\\\">\\n          Report Parameter is <strong>required</strong>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <mat-label>Parameter name passed to Pentaho</mat-label>\\n        <input matInput formControlName=\\\"reportParameterName\\\">\\n      </mat-form-field>\\n\\n    </div>\\n\\n  </form>\\n\\n</mat-dialog-content>\\n\\n<mat-dialog-actions align=\\\"end\\\">\\n  <button mat-button mat-dialog-close>Cancel</button>\\n  <button mat-raised-button color=\\\"primary\\\"\\n    [disabled]=\\\"!reportParameterForm.valid || reportParameterForm.pristine\\\" (click)=\\\"submit()\\\">Submit</button>\\n</mat-dialog-actions>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS9tYW5hZ2UtcmVwb3J0cy9yZXBvcnQtcGFyYW1ldGVyLWRpYWxvZy9yZXBvcnQtcGFyYW1ldGVyLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","/** Angular Imports */\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n/**\n * Report Parameter Dialog Component.\n */\n@Component({\n  selector: 'mifosx-add-report-parameter-dialog',\n  templateUrl: './report-parameter-dialog.component.html',\n  styleUrls: ['./report-parameter-dialog.component.scss']\n})\nexport class ReportParameterDialogComponent implements OnInit {\n\n  /** Report Parameter Form. */\n  reportParameterForm: FormGroup;\n\n  /**\n   * @param {MatDialogRef} dialogRef Component reference to dialog.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {any} data Provides the allowed parameters and values for the form (if available).\n   */\n  constructor(public dialogRef: MatDialogRef<ReportParameterDialogComponent>,\n              public formBuilder: FormBuilder,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n  }\n\n  /**\n   * Creates the add report parameter form.\n   */\n  ngOnInit() {\n    this.reportParameterForm = this.formBuilder.group({\n      'parameterName': [this.data.parameterName, Validators.required],\n      'reportParameterName': [this.data.reportParameterName]\n    });\n  }\n\n  /**\n   * Closes the dialog and returns value of the form.\n   */\n  submit() {\n    this.dialogRef.close(this.reportParameterForm.value);\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../system.service';\n\n/**\n * Report Template data resolver.\n */\n@Injectable()\nexport class ReportTemplateResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the Report Template data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.systemService.getReportTemplate();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../system.service';\n\n/**\n * Report data resolver.\n */\n@Injectable()\nexport class ReportResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the Report data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const reportId = route.paramMap.get('id');\n    return this.systemService.getReport(reportId);\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../system.service';\n\n/**\n * Reports data resolver.\n */\n@Injectable()\nexport class ReportsResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the Reports data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.systemService.getReports();\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['edit']\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"delete()\\\" *ngIf=\\\"!reportData.coreReport\\\">\\n    <fa-icon icon=\\\"trash\\\"></fa-icon>&nbsp;&nbsp;\\n    Delete\\n  </button>\\n\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-title>{{ reportData.reportName }}</mat-card-title>\\n\\n    <mat-card-content>\\n\\n      <div fxLayout=\\\"row wrap\\\" class=\\\"content\\\">\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Report Type:\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ reportData.reportType }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Report Subtype:\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ reportData.reportSubType }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Report Category:\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ reportData.reportCategory }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Core Report:\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ reportData.coreReport ? 'Yes' : 'No' }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          User Report:\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ reportData.useReport ? 'Yes' : 'No' }}\\n        </div>\\n\\n      </div>\\n\\n    </mat-card-content>\\n\\n  </mat-card>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n  .container .content div {\\n    margin: 1rem 0;\\n    word-wrap: break-word; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9tYW5hZ2UtcmVwb3J0cy92aWV3LXJlcG9ydC92aWV3LXJlcG9ydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFnQixFQUFBO0VBRHBCO0lBS1EsY0FBYztJQUNkLHFCQUFxQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvc3lzdGVtL21hbmFnZS1yZXBvcnRzL3ZpZXctcmVwb3J0L3ZpZXctcmVwb3J0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAzN3JlbTtcbiAgXG4gICAgLmNvbnRlbnQge1xuICAgICAgZGl2IHtcbiAgICAgICAgbWFyZ2luOiAxcmVtIDA7XG4gICAgICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgICAgIH1cbiAgICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\n\n/** Custom Services */\nimport { SystemService } from 'app/system/system.service';\n\n/** Custom Components */\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\n\n/**\n * View Report Component.\n */\n@Component({\n  selector: 'mifosx-view-report',\n  templateUrl: './view-report.component.html',\n  styleUrls: ['./view-report.component.scss']\n})\nexport class ViewReportComponent implements OnInit {\n\n  /** Report Data. */\n  reportData: any;\n\n  /**\n   * Retrieves the report data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {SystemService} systemService System Service.\n   * @param {MatDialog} dialog Dialog Reference.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private route: ActivatedRoute,\n              private systemService: SystemService,\n              private dialog: MatDialog,\n              private router: Router) {\n    this.route.data.subscribe((data: { report: any }) => {\n      this.reportData = data.report;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Deletes the current report.\n   */\n  delete() {\n    const deleteReportDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `report ${this.reportData.id}` }\n    });\n    deleteReportDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.systemService.deleteReport(this.reportData.id)\n          .subscribe(() => {\n            this.router.navigate(['/system/reports']);\n          });\n      }\n    });\n  }\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n  <h2 class=\\\"no-m\\\">Scheduler Status: {{ schedulerData.active === true ? 'Active' : 'Inactive' }}</h2>\\n  <button mat-raised-button class=\\\"suspend\\\">\\n    <fa-icon icon=\\\"times-circle\\\"></fa-icon>&nbsp;&nbsp;\\n    Suspend\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"select\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n          <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                        [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                        [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n          </mat-checkbox>\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">\\n          <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                        (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                        [checked]=\\\"selection.isSelected(row)\\\">\\n          </mat-checkbox>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"displayName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let job\\\"> {{ job.displayName }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"nextRunTime\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Next Run </th>\\n        <td mat-cell *matCellDef=\\\"let job\\\"> {{ job.nextRunTime }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"previousRunTime\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Previous Run </th>\\n        <td mat-cell *matCellDef=\\\"let job\\\"> {{ job.lastRunHistory.jobRunStartTime }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"previousRunStatus\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Previous Run Status </th>\\n        <td mat-cell *matCellDef=\\\"let job\\\">\\n          <fa-icon *ngIf=\\\"job.lastRunHistory.status === 'success'\\\" class=\\\"success\\\" matTooltip=\\\"Successful\\\" matTooltipPosition=\\\"right\\\" icon=\\\"check-circle\\\" size=\\\"lg\\\"></fa-icon>\\n          <fa-icon *ngIf=\\\"!(job.lastRunHistory.status == 'success')\\\" class=\\\"fail\\\" matTooltip=\\\"Failed\\\" matTooltipPosition=\\\"right\\\" icon=\\\"times-circle\\\" size=\\\"lg\\\"></fa-icon>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"currentlyRunning\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Currently Running </th>\\n        <td mat-cell *matCellDef=\\\"let job\\\">\\n          <div [className]=\\\"job.currentlyRunning === true ? 'currently-running' : 'not-currently-running'\\\">\\n              <fa-icon matTooltip=\\\"{{ job.currentlyRunning === true ? 'Yes' : 'No' }}\\\" matTooltipPosition=\\\"right\\\" icon=\\\"circle\\\" size=\\\"lg\\\"></fa-icon>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"errorLog\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Error Log </th>\\n        <td mat-cell *matCellDef=\\\"let job\\\">\\n          <button mat-icon-button class=\\\"errorlog\\\" *ngIf=\\\"!(job.lastRunHistory.status == 'success')\\\" matTooltip=\\\"Error Log\\\" matTooltipPosition=\\\"right\\\" >\\n              <fa-icon icon=\\\"exclamation-circle\\\" size=\\\"lg\\\"></fa-icon>\\n          </button>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"play\\\"></fa-icon>&nbsp;&nbsp;\\n    Run Selected Jobs\\n  </button>\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"sync\\\"></fa-icon>&nbsp;&nbsp;\\n    Refresh\\n  </button>\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n  .success {\\n  color: #32cd32; }\\n  .fail {\\n  color: #f44366; }\\n  .currently-running {\\n  color: #32cd32; }\\n  .not-currently-running {\\n  color: #f44366; }\\n  .errorlog {\\n  color: #ffa726; }\\n  .suspend {\\n  background: #ffa726;\\n  color: #ffffff; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9tYW5hZ2Utc2NoZWR1bGVyLWpvYnMvbWFuYWdlLXNjaGVkdWxlci1qb2JzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBO0VBRGI7SUFJSSxlQUFlLEVBQUE7RUFJbkI7RUFDRSxjQUFjLEVBQUE7RUFHaEI7RUFDRSxjQUFjLEVBQUE7RUFHaEI7RUFDRSxjQUFjLEVBQUE7RUFHaEI7RUFDRSxjQUFjLEVBQUE7RUFHaEI7RUFDRSxjQUFjLEVBQUE7RUFHaEI7RUFDRSxtQkFBbUI7RUFDbkIsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc3lzdGVtL21hbmFnZS1zY2hlZHVsZXItam9icy9tYW5hZ2Utc2NoZWR1bGVyLWpvYnMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuXG4gIC5zZWxlY3Qtcm93OmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cblxuLnN1Y2Nlc3Mge1xuICBjb2xvcjogIzMyY2QzMjtcbn1cblxuLmZhaWwge1xuICBjb2xvcjogI2Y0NDM2Njtcbn1cblxuLmN1cnJlbnRseS1ydW5uaW5nIHtcbiAgY29sb3I6ICMzMmNkMzI7XG59XG5cbi5ub3QtY3VycmVudGx5LXJ1bm5pbmcge1xuICBjb2xvcjogI2Y0NDM2Njtcbn1cblxuLmVycm9ybG9nIHtcbiAgY29sb3I6ICNmZmE3MjY7XG59XG5cbi5zdXNwZW5kIHtcbiAgYmFja2dyb3VuZDogI2ZmYTcyNjtcbiAgY29sb3I6ICNmZmZmZmY7XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/**\n * Manage scheduler jobs component.\n */\n@Component({\n  selector: 'mifosx-manage-scheduler-jobs',\n  templateUrl: './manage-scheduler-jobs.component.html',\n  styleUrls: ['./manage-scheduler-jobs.component.scss']\n})\nexport class ManageSchedulerJobsComponent implements OnInit {\n\n  /** Jobs data. */\n  jobData: any;\n  /** Scheduler data */\n  schedulerData: any;\n  /** Columns to be displayed in manage scheduler jobs table. */\n  displayedColumns: string[] = ['select', 'displayName', 'nextRunTime', 'previousRunTime', 'previousRunStatus', 'currentlyRunning', 'errorLog'];\n  /** Data source for manage scheduler jobs table. */\n  dataSource: MatTableDataSource<any>;\n  /** Initialize Selection */\n  selection = new SelectionModel<any>(true, []);\n\n  /** Paginator for table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for manage scheduler jobs table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the scheduler jobs data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe((data: { jobsScheduler: any }) => {\n      this.jobData = data.jobsScheduler[0];\n      this.schedulerData = data.jobsScheduler[1];\n    });\n  }\n\n  /**\n   * Filters data in manage scheduler jobs table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Whether the number of selected elements matches the total number of rows.\n   */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /**\n   * Selects all rows if they are not all selected; otherwise clear selection.\n   */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /**\n   * Sets the manage scheduler jobs table.\n   */\n  ngOnInit() {\n    this.setJobs();\n    this.dataSource.sortingDataAccessor = (item, property) => {\n      switch (property) {\n        case 'previousRunStatus': return item.lastRunHistory.status;\n        case 'errorLog': return item.lastRunHistory.status;\n        case 'previousRunTime': return new Date(item.lastRunHistory.jobRunStartTime);\n        case 'nextRunTime': return new Date(item.nextRunTime);\n        default: return item[property];\n      }\n    };\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for manage scheduler jobs table.\n   */\n  setJobs() {\n    this.dataSource = new MatTableDataSource(this.jobData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable, forkJoin } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../system.service';\n\n/**\n * Manage Scheduler Jobs data resolver.\n */\n@Injectable()\nexport class ManageSchedulerJobsResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the manage scheduler jobs data.\n   * @returns {Observable<any>}\n   */\n  resolve() {\n    return forkJoin([\n      this.systemService.getJobs(),\n      this.systemService.getScheduler()\n    ]);\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Surveys\\n  </button>\\n</div>\\n  \\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n  \\n  <div class=\\\"mat-elevation-z8\\\">\\n    \\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"key\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Key </th>\\n          <td mat-cell *matCellDef=\\\"let survey\\\"> {{ survey.key }} </td>\\n      </ng-container>\\n        \\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let survey\\\"> {{ survey.name }} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"description\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\\n        <td mat-cell *matCellDef=\\\"let survey\\\"> {{ survey.description }} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"countryCode\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Country Code </th>\\n        <td mat-cell *matCellDef=\\\"let survey\\\"> {{ survey.countryCode }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"status\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\n        <td mat-cell *matCellDef=\\\"let survey\\\">\\n            <div [className]=\\\"!isActive(survey.validFrom, survey.validTo) === true ? 'disabled' : 'enabled'\\\">\\n                <fa-icon matTooltip=\\\"{{ !isActive(survey.validFrom, survey.validTo) === true ? 'Disabled' : 'Enabled' }}\\\" matTooltipPosition=\\\"right\\\" icon=\\\"circle\\\" size=\\\"lg\\\"></fa-icon>\\n            </div>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"action\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\\n        <td mat-cell *matCellDef=\\\"let survey\\\">\\n          <button mat-button *ngIf=\\\"!isActive(survey.validFrom, survey.validTo)\\\" color=\\\"accent\\\">\\n            <fa-icon icon=\\\"lock-open\\\"></fa-icon>&nbsp;&nbsp;Activate\\n          </button>\\n          <button mat-button *ngIf=\\\"isActive(survey.validFrom, survey.validTo)\\\" color=\\\"warn\\\">\\n            <fa-icon icon=\\\"lock\\\"></fa-icon>&nbsp;&nbsp;Deactivate\\n          </button>\\n        </td> \\n      </ng-container>\\n  \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let survey; columns: displayedColumns;\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n  .enabled {\\n  color: #32cd32; }\\n  .disabled {\\n  color: #f44366; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9tYW5hZ2Utc3VydmV5cy9tYW5hZ2Utc3VydmV5cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTtFQURiO0lBSUksZUFBZSxFQUFBO0VBS25CO0VBQ0UsY0FBYyxFQUFBO0VBR2hCO0VBQ0UsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc3lzdGVtL21hbmFnZS1zdXJ2ZXlzL21hbmFnZS1zdXJ2ZXlzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcblxuICAuc2VsZWN0LXJvdzpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG59XG5cbi8vIFRPRE86IENPTkZJR1VSRSBUSEVTRSBDTEFTU0VTIEdMT0JBTExZXG4uZW5hYmxlZCB7XG4gIGNvbG9yOiAjMzJjZDMyO1xufVxuXG4uZGlzYWJsZWQge1xuICBjb2xvcjogI2Y0NDM2Njtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/**\n * Manage Surveys component.\n */\n@Component({\n  selector: 'mifosx-manage-surveys',\n  templateUrl: './manage-surveys.component.html',\n  styleUrls: ['./manage-surveys.component.scss'],\n})\nexport class ManageSurveysComponent implements OnInit {\n\n  /* Surveys data */\n  surveysData: any;\n  /* Columns to be displayed in manage surveys data table */\n  displayedColumns: string[] = ['key', 'name', 'description', 'countryCode', 'status', 'action'];\n  /* Data source for manage surveys data table */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for manage surveys table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for manage surveys table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the surveys data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { surveys: any }) => {\n      this.surveysData = data.surveys;\n    });\n  }\n\n  /**\n   * Returns whether an survey is active based on its duration\n   * @param {number} validFrom Date valid from\n   * @param {number} validTo Date valid to\n   */\n  isActive(validFrom: number, validTo: number) {\n    const curdate = new Date().getTime();\n    return (curdate > validFrom && curdate < validTo);\n  }\n\n  /**\n   * Sets the manage surveys table. And initiates button and action sort\n   */\n  ngOnInit() {\n    this.setSurveys();\n    this.dataSource.sortingDataAccessor = (item, property) => {\n      switch (property) {\n        case 'status': return this.isActive(item.validFrom, item.validTo);\n        case 'action': return this.isActive(item.validFrom, item.validTo);\n        default: return item[property];\n      }\n    };\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for surveys table.\n   */\n  setSurveys() {\n    this.dataSource = new MatTableDataSource(this.surveysData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n   * Filters data in surveys table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../system.service';\n\n/**\n * Surveys data resolver.\n */\n@Injectable()\nexport class ManageSurveysResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the Surveys data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.systemService.getSurveys();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"roleForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"column\\\">\\n\\n          <mat-form-field>\\n            <mat-label>Name</mat-label>\\n            <input matInput required formControlName=\\\"name\\\">\\n            <mat-error *ngIf=\\\"roleForm.controls.name.hasError('required')\\\">\\n              Role Name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-label>Description</mat-label>\\n            <textarea matInput required formControlName=\\\"description\\\"></textarea>\\n            <mat-error *ngIf=\\\"roleForm.controls.description.hasError('required')\\\">\\n              Role Description is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n        </div>\\n\\n        </mat-card-content>\\n\\n        <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n          <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n          <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!roleForm.valid\\\">Submit</button>\\n        </mat-card-actions>\\n\\n      </form>\\n\\n    </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9yb2xlcy1hbmQtcGVybWlzc2lvbnMvYWRkLXJvbGUvYWRkLXJvbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS9yb2xlcy1hbmQtcGVybWlzc2lvbnMvYWRkLXJvbGUvYWRkLXJvbGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAzN3JlbTtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { SystemService } from '../../system.service';\n\n/**\n * Add Role Component.\n */\n@Component({\n  selector: 'mifosx-add-role',\n  templateUrl: './add-role.component.html',\n  styleUrls: ['./add-role.component.scss']\n})\nexport class AddRoleComponent implements OnInit {\n\n  /** Role form. */\n  roleForm: FormGroup;\n\n  /**\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {SystemService} systemService System Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private systemService: SystemService,\n              private route: ActivatedRoute,\n              private router: Router) { }\n\n  /**\n   * Creates the role form.\n   */\n  ngOnInit() {\n    this.createRoleForm();\n  }\n\n  /**\n   * Creates the create role form.\n   */\n  createRoleForm() {\n    this.roleForm = this.formBuilder.group({\n      'name': ['', Validators.required],\n      'description': ['', Validators.required]\n    });\n  }\n\n  /**\n   * Submits the role form and creates a role,\n   * if successful redirects back to roles and permission.\n   */\n  submit() {\n    this.systemService.createRole(this.roleForm.value)\n      .subscribe((response: any) => {\n        this.router.navigate(['../'], { relativeTo: this.route });\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\" [routerLink]=\\\"['add']\\\">\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Add Role\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let role\\\"> {{ role.name }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"description\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\\n        <td mat-cell *matCellDef=\\\"let role\\\"> {{ role.description }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"disabled\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\n        <td mat-cell *matCellDef=\\\"let role\\\">\\n          <div [className]=\\\"role.disabled === true ? 'false' : 'true'\\\">\\n            <fa-icon matTooltip=\\\"{{ role.disabled === true ? 'Disabled' : 'Enabled' }}\\\" matTooltipPosition=\\\"right\\\" icon=\\\"circle\\\" size=\\\"lg\\\"></fa-icon>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n  .true {\\n  color: #32cd32; }\\n  .false {\\n  color: #f44366; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3N5c3RlbS9yb2xlcy1hbmQtcGVybWlzc2lvbnMvcm9sZXMtYW5kLXBlcm1pc3Npb25zLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBO0VBRGI7SUFJSSxlQUFlLEVBQUE7RUFJbkI7RUFDRSxjQUFjLEVBQUE7RUFHaEI7RUFDRSxjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zeXN0ZW0vcm9sZXMtYW5kLXBlcm1pc3Npb25zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG5cbiAgLnNlbGVjdC1yb3c6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxufVxuXG4udHJ1ZSB7XG4gIGNvbG9yOiAjMzJjZDMyO1xufVxuXG4uZmFsc2Uge1xuICBjb2xvcjogI2Y0NDM2Njtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/**\n * Roles and Permissions component.\n */\n@Component({\n  selector: 'mifosx-roles-and-permissions',\n  templateUrl: './roles-and-permissions.component.html',\n  styleUrls: ['./roles-and-permissions.component.scss']\n})\nexport class RolesAndPermissionsComponent implements OnInit {\n\n  /** Role data. */\n  roleData: any;\n  /** Columns to be displayed in roles and permissions table. */\n  displayedColumns: string[] = ['name', 'description', 'disabled'];\n  /** Data source for roles and permissions table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for roles and permissions table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for roles and permissions table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the roles data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { roles: any }) => {\n      this.roleData = data.roles;\n    });\n  }\n\n  /**\n   * Filters data in roles and permissions table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the roles and permissions table.\n   */\n  ngOnInit() {\n    this.setRoles();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for roles and permissions table.\n   */\n  setRoles() {\n    this.dataSource = new MatTableDataSource(this.roleData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { SystemService } from '../system.service';\n\n/**\n * Roles and Permissions data resolver.\n */\n@Injectable()\nexport class RolesAndPermissionsResolver implements Resolve<Object> {\n\n  /**\n   * @param {SystemService} systemService System service.\n   */\n  constructor(private systemService: SystemService) {}\n\n  /**\n   * Returns the roles and permissions data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.systemService.getRoles();\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\n/** Routing Imports */\nimport { Routes, RouterModule } from '@angular/router';\nimport { Route } from '../core/route/route.service';\nimport { extract } from '../core/i18n/i18n.service';\n\n/** Component Imports */\nimport { SystemComponent } from './system.component';\nimport { CodesComponent } from './codes/codes.component';\nimport { CreateCodeComponent } from './codes/create-code/create-code.component';\nimport { ViewCodeComponent } from './codes/view-code/view-code.component';\nimport { EditCodeComponent } from './codes/edit-code/edit-code.component';\nimport { ExternalServicesComponent } from './external-services/external-services.component';\nimport { ManageDataTablesComponent } from './manage-data-tables/manage-data-tables.component';\nimport { ManageHooksComponent } from './manage-hooks/manage-hooks.component';\nimport { RolesAndPermissionsComponent } from './roles-and-permissions/roles-and-permissions.component';\nimport { AddRoleComponent } from './roles-and-permissions/add-role/add-role.component';\nimport { ManageSurveysComponent } from './manage-surveys/manage-surveys.component';\nimport { ManageSchedulerJobsComponent } from './manage-scheduler-jobs/manage-scheduler-jobs.component';\nimport { GlobalConfigurationsComponent } from './global-configurations/global-configurations.component';\nimport { EditConfigurationComponent } from './global-configurations/edit-configuration/edit-configuration.component';\nimport { AmazonS3Component } from './external-services/amazon-s3/amazon-s3.component';\nimport { EmailComponent } from './external-services/email/email.component';\nimport { SMSComponent } from './external-services/sms/sms.component';\nimport { NotificationComponent } from './external-services/notification/notification.component';\nimport { EditAmazonS3Component } from './external-services/amazon-s3/edit-amazon-s3/edit-amazon-s3.component';\nimport { EditEmailComponent } from './external-services/email/edit-email/edit-email.component';\nimport { EditNotificationComponent } from './external-services/notification/edit-notification/edit-notification.component';\nimport { EditSMSComponent } from './external-services/sms/edit-sms/edit-sms.component';\nimport { AccountNumberPreferencesComponent } from './account-number-preferences/account-number-preferences.component';\nimport { CreateAccountNumberPreferenceComponent } from './account-number-preferences/create-account-number-preference/create-account-number-preference.component';\nimport { ViewAccountNumberPreferenceComponent } from './account-number-preferences/view-account-number-preference/view-account-number-preference.component';\nimport { EditAccountNumberPreferenceComponent } from './account-number-preferences/edit-account-number-preference/edit-account-number-preference.component';\nimport { ManageReportsComponent } from './manage-reports/manage-reports.component';\nimport { EditReportComponent } from './manage-reports/edit-report/edit-report.component';\nimport { CreateReportComponent } from './manage-reports/create-report/create-report.component';\nimport { ViewReportComponent } from './manage-reports/view-report/view-report.component';\n\n/** Custom Resolvers */\nimport { CodesResolver } from './codes/codes.resolver';\nimport { CodeResolver } from './codes/code.resolver';\nimport { CodeValuesResolver } from './codes/view-code/code-values.resolver';\nimport { ManageDataTablesResolver } from './manage-data-tables/manage-data-tables.resolver';\nimport { ManageHooksResolver } from './manage-hooks/manage-hooks.resolver';\nimport { RolesAndPermissionsResolver } from './roles-and-permissions/roles-and-permissions.resolver';\nimport { ManageSurveysResolver } from './manage-surveys/manage-surveys.resolver';\nimport { ManageSchedulerJobsResolver } from './manage-scheduler-jobs/manage-scheduler-jobs.resolver';\nimport { GlobalConfigurationsResolver } from './global-configurations/global-configurations.resolver';\nimport { GlobalConfigurationResolver } from './global-configurations/global-configuration.resolver';\nimport { AmazonS3ConfigurationResolver } from './external-services/amazon-s3/amazon-s3.resolver';\nimport { EmailConfigurationResolver } from './external-services/email/email.resolver';\nimport { SMSConfigurationResolver } from './external-services/sms/sms.resolver';\nimport { NotificationConfigurationResolver } from './external-services/notification/notification.resolver';\nimport { AccountNumberPreferencesResolver } from './account-number-preferences/account-number-preferences.resolver';\nimport { AccountNumberPreferencesTemplateResolver } from './account-number-preferences/create-account-number-preference/account-number-preferences-template.resolver';\nimport { AccountNumberPreferenceResolver } from './account-number-preferences/view-account-number-preference/account-number-preference.resolver';\nimport { ReportsResolver } from './manage-reports/reports.resolver';\nimport { ReportResolver } from './manage-reports/report.resolver';\nimport { ReportTemplateResolver } from './manage-reports/report-template.resolver';\n\nconst routes: Routes = [\n  Route.withShell([\n    {\n      path: 'system',\n      data: { title: extract('System'), breadcrumb: 'System' },\n      children: [\n      {\n        path: '',\n        component: SystemComponent\n      },\n      {\n        path: 'codes',\n        data: { title: extract('View Codes'), breadcrumb: 'Codes' },\n        children: [\n          {\n            path: '',\n            component: CodesComponent,\n            resolve: {\n              codes: CodesResolver\n            }\n          },\n          {\n            path: 'create',\n            component: CreateCodeComponent,\n            data: { title: extract('Create Code'), breadcrumb: 'Create' }\n            },\n            {\n              path: ':id',\n              data: { title: extract('View Code'), routeParamBreadcrumb: 'id' },\n              children: [\n                {\n                  path: '',\n                  component: ViewCodeComponent,\n                  resolve: {\n                    code: CodeResolver,\n                    codeValues: CodeValuesResolver\n                  }\n                },\n                {\n                  path: 'edit',\n                  component: EditCodeComponent,\n                  data: { title: extract('Edit Code'), breadcrumb: 'Edit', routeParamBreadcrumb: false },\n                  resolve: {\n                    code: CodeResolver\n                  }\n                }\n              ]\n          }\n        ],\n\n      },\n      {\n          path: 'external-services',\n          data: { title: extract('External Services'), breadcrumb: 'External Services' },\n          children: [\n            {\n              path: '',\n              component: ExternalServicesComponent\n            },\n            {\n              path: 'amazon-s3',\n              data: { title: extract('View Amazon S3 Configuration'), breadcrumb: 'Amazon S3' },\n              children: [\n                {\n                  path: '',\n                  component: AmazonS3Component,\n                  resolve: {\n                    amazonS3Configuration: AmazonS3ConfigurationResolver\n                  }\n                },\n                {\n                  path: 'edit',\n                  component: EditAmazonS3Component,\n                  data: {title: extract('Edit Amazon S3 Configuration'), breadcrumb: 'Edit'},\n                  resolve: {\n                    amazonS3Configuration: AmazonS3ConfigurationResolver\n                  }\n                }\n              ]\n            },\n            {\n              path: 'email',\n              data: { title: extract('View Email Configuration'), breadcrumb: 'Email' },\n              children: [\n                {\n                  path: '',\n                  component: EmailComponent,\n                  resolve: {\n                    emailConfiguration: EmailConfigurationResolver\n                  }\n                },\n                {\n                  path: 'edit',\n                  component: EditEmailComponent,\n                  data: { title: extract('Edit Email Configuration'), breadcrumb: 'Edit' },\n                  resolve: {\n                    emailConfiguration: EmailConfigurationResolver\n                  }\n                }\n              ]\n            },\n            {\n              path: 'sms',\n              data: { title: extract('View SMS Configuration'), breadcrumb: 'SMS' },\n              children: [\n                {\n                  path: '',\n                  component: SMSComponent,\n                  resolve: {\n                    smsConfiguration: SMSConfigurationResolver\n                  }\n                },\n                {\n                  path: 'edit',\n                  data: { title: extract('Edit SMS Configuration'), breadcrumb: 'Edit' },\n                  component: EditSMSComponent,\n                  resolve: {\n                    smsConfiguration: SMSConfigurationResolver\n                  }\n                }\n              ]\n            },\n            {\n              path: 'notification',\n              data: { title: extract('View Notification Configuration'), breadcrumb: 'Notification' },\n              children: [\n                {\n                  path: '',\n                  component: NotificationComponent,\n                  resolve: {\n                    notificationConfiguration: NotificationConfigurationResolver\n                  }\n                },\n                {\n                  path: 'edit',\n                  component: EditNotificationComponent,\n                  data: { title: extract('Edit Notification Configuration'), breadcrumb: 'Edit' },\n                  resolve: {\n                    notificationConfiguration: NotificationConfigurationResolver\n                  }\n                }\n              ]\n            }\n          ]\n        },\n        {\n          path: 'data-tables',\n          component: ManageDataTablesComponent,\n          resolve: {\n                dataTables: ManageDataTablesResolver\n          },\n          data: { title:  extract('Manage Data Tables'), breadcrumb: 'Manage Data Tables' },\n      },\n      {\n          path: 'hooks',\n          component: ManageHooksComponent,\n          resolve: {\n                hooks: ManageHooksResolver\n          },\n          data: { title:  extract('Manage Hooks'), breadcrumb: 'Manage Hooks' },\n      },\n      {\n          path: 'roles-and-permissions',\n          data: { title:  extract('Roles and Permissions'), breadcrumb: 'Roles and Permissions' },\n          children: [\n            {\n              path: '',\n              component: RolesAndPermissionsComponent,\n              resolve: {\n                roles: RolesAndPermissionsResolver\n              }\n            },\n            {\n              path: 'add',\n              component: AddRoleComponent,\n              data: { title: extract('Add Role'), breadcrumb: 'Add' }\n            }\n          ]\n      },\n      {\n        path: 'surveys',\n        component: ManageSurveysComponent,\n        resolve: {\n              surveys: ManageSurveysResolver\n        },\n        data: { title:  extract('Manage Surveys'), breadcrumb: 'Manage Surveys' },\n      },\n      {\n        path: 'scheduler-jobs',\n        component: ManageSchedulerJobsComponent,\n        resolve: {\n              jobsScheduler: ManageSchedulerJobsResolver\n        },\n        data: { title:  extract('Manage Scheduler Jobs'), breadcrumb: 'Manage Scheduler Jobs' },\n      },\n      {\n        path: 'global-configurations',\n        data: { title: extract('Global Configurations'), breadcrumb: 'Global Configurations' },\n        children: [\n          {\n            path: '',\n            component: GlobalConfigurationsComponent,\n            resolve: {\n              configurations: GlobalConfigurationsResolver\n            }\n          },\n          {\n            path: ':id/edit',\n            component: EditConfigurationComponent,\n            data: { title: extract('Edit Configuration'), breadcrumb: 'Edit' },\n            resolve: {\n              configuration: GlobalConfigurationResolver\n            }\n          }\n        ],\n        },\n        {\n          path: 'account-number-preferences',\n          data: { title: extract('Account Number Preferences'), breadcrumb: 'Account Number Preferences' },\n          children: [\n            {\n              path: '',\n              component: AccountNumberPreferencesComponent,\n              resolve: {\n                accountNumberPreferences: AccountNumberPreferencesResolver\n              }\n            },\n            {\n              path: 'create',\n              component: CreateAccountNumberPreferenceComponent,\n              data: { title: extract('Create Account Number Preference'), breadcrumb: 'Create' },\n              resolve: {\n                accountNumberPreferencesTemplate: AccountNumberPreferencesTemplateResolver\n              }\n            },\n            {\n              path: ':id',\n              data: { title: extract('View Account Number Preference'), routeParamBreadcrumb: 'id' },\n              children: [\n                {\n                  path: '',\n                  component: ViewAccountNumberPreferenceComponent,\n                  resolve: {\n                    accountNumberPreference: AccountNumberPreferenceResolver\n                  }\n                },\n                {\n                  path: 'edit',\n                  component: EditAccountNumberPreferenceComponent,\n                  data: { title: extract('Edit Account Number Preference'), breadcrumb: 'Edit', routeParamBreadcrumb: false },\n                  resolve: {\n                    accountNumberPreference: AccountNumberPreferenceResolver,\n                    accountNumberPreferencesTemplate: AccountNumberPreferencesTemplateResolver\n                  }\n                }\n              ]\n            }\n          ]\n        },\n        {\n          path: 'reports',\n          data: { title: extract('Manage Reports'), breadcrumb: 'Manage Reports' },\n          children: [\n            {\n              path: '',\n              component: ManageReportsComponent,\n              resolve: {\n                reports: ReportsResolver\n              }\n            },\n            {\n              path: 'create',\n              component: CreateReportComponent,\n              data: { title: extract('Create Report'), breadcrumb: 'Create' },\n              resolve: {\n                reportTemplate: ReportTemplateResolver\n              }\n            },\n            {\n              path: ':id',\n              data: { title: extract('View Report'), routeParamBreadcrumb: 'id' },\n              children: [\n                {\n                  path: '',\n                  component: ViewReportComponent,\n                  resolve: {\n                    report: ReportResolver\n                  }\n                },\n                {\n                  path: 'edit',\n                  component: EditReportComponent,\n                  data: { title: extract('Edit Report'), routeParamBreadcrumb: false, breadcrumb: 'Edit' },\n                  resolve: {\n                    report: ReportResolver,\n                    reportTemplate: ReportTemplateResolver\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ])\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    CodesResolver,\n    CodeResolver,\n    CodeValuesResolver,\n    ManageDataTablesResolver,\n    ManageHooksResolver,\n    RolesAndPermissionsResolver,\n    ManageSurveysResolver,\n    ManageSchedulerJobsResolver,\n    GlobalConfigurationsResolver,\n    GlobalConfigurationResolver,\n    AmazonS3ConfigurationResolver,\n    EmailConfigurationResolver,\n    SMSConfigurationResolver,\n    NotificationConfigurationResolver,\n    AccountNumberPreferencesResolver,\n    AccountNumberPreferencesTemplateResolver,\n    AccountNumberPreferenceResolver,\n    ReportsResolver,\n    ReportResolver,\n    ReportTemplateResolver\n  ]\n})\nexport class SystemRoutingModule { }\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n      <div fxFlex=\\\"50%\\\">\\n\\n        <mat-nav-list>\\n\\n          <mat-list-item [routerLink]=\\\"['data-tables']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"table\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Manage Data tables</h4>\\n            <p matLine>Add new extra fields to any entity in the form of data table</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['codes']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"list-ul\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Manage Codes</h4>\\n            <p matLine>Codes are used to define drop down values</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['roles-and-permissions']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"key\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Manage Roles and Permissions</h4>\\n            <p matLine>Define or modify roles and associated permissions</p>\\n          </mat-list-item>\\n\\n          <mat-list-item>\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"sitemap\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Configure Maker Checker Tasks</h4>\\n            <p matLine>Define or modify Maker Checker tasks</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['hooks']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"anchor\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Manage Hooks</h4>\\n            <p matLine>Define Hooks</p>\\n          </mat-list-item>\\n\\n          <mat-list-item>\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"road\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Entity to Entity Mapping</h4>\\n            <p matLine>Define or modify entity to entity mappings</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['surveys']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"file-alt\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Manage Surveys</h4>\\n            <p matLine>Manage your Services</p>\\n          </mat-list-item>\\n\\n        </mat-nav-list>\\n\\n      </div>\\n\\n      <div fxFlex=\\\"50%\\\">\\n\\n        <mat-nav-list>\\n\\n          <mat-list-item>\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"money-check\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Audit Trails</h4>\\n            <p matLine>Audit logs of all the activities, such as create client, disburse loans etc</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['reports']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"file-word\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Manage Reports</h4>\\n            <p matLine>Add new report and classify reports</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['scheduler-jobs']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"clock\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Scheduler Jobs</h4>\\n            <p matLine>Schedule a job, modify or delete jobs</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['global-configurations']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"cogs\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Configurations</h4>\\n            <p matLine>Global configurations and Cache settings</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['account-number-preferences']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"key\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Account Number Preferences</h4>\\n            <p matLine>Preferences for generating account numbers for client, loan and savings accounts</p>\\n          </mat-list-item>\\n\\n          <mat-list-item [routerLink]=\\\"['external-services']\\\">\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"cog\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>External Services</h4>\\n            <p matLine>External Services Configuration</p>\\n          </mat-list-item>\\n\\n          <mat-list-item>\\n            <mat-icon matListIcon>\\n              <fa-icon icon=\\\"key\\\" size=\\\"sm\\\"></fa-icon>\\n            </mat-icon>\\n            <h4 matLine>Two-Factor Configuration</h4>\\n            <p matLine>Two-factor authentication configuration settings</p>\\n          </mat-list-item>\\n\\n        </mat-nav-list>\\n\\n      </div>\\n\\n    </div>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS9zeXN0ZW0uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mifosx-system',\n  templateUrl: './system.component.html',\n  styleUrls: ['./system.component.scss']\n})\nexport class SystemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\n\n/** Module Imports */\nimport { SharedModule } from '../shared/shared.module';\nimport { SystemRoutingModule } from './system-routing.module';\n\n/** Component Imports */\nimport { CodesComponent } from './codes/codes.component';\nimport { SystemComponent } from './system.component';\nimport { CreateCodeComponent } from './codes/create-code/create-code.component';\nimport { ExternalServicesComponent } from './external-services/external-services.component';\nimport { ManageDataTablesComponent } from './manage-data-tables/manage-data-tables.component';\nimport { ManageHooksComponent } from './manage-hooks/manage-hooks.component';\nimport { RolesAndPermissionsComponent } from './roles-and-permissions/roles-and-permissions.component';\nimport { AddRoleComponent } from './roles-and-permissions/add-role/add-role.component';\nimport { ManageSurveysComponent } from './manage-surveys/manage-surveys.component';\nimport { ManageSchedulerJobsComponent } from './manage-scheduler-jobs/manage-scheduler-jobs.component';\nimport { GlobalConfigurationsComponent } from './global-configurations/global-configurations.component';\nimport { EditConfigurationComponent } from './global-configurations/edit-configuration/edit-configuration.component';\nimport { AmazonS3Component } from './external-services/amazon-s3/amazon-s3.component';\nimport { EmailComponent } from './external-services/email/email.component';\nimport { SMSComponent } from './external-services/sms/sms.component';\nimport { NotificationComponent } from './external-services/notification/notification.component';\nimport { EditAmazonS3Component } from './external-services/amazon-s3/edit-amazon-s3/edit-amazon-s3.component';\nimport { EditEmailComponent } from './external-services/email/edit-email/edit-email.component';\nimport { EditNotificationComponent } from './external-services/notification/edit-notification/edit-notification.component';\nimport { EditSMSComponent } from './external-services/sms/edit-sms/edit-sms.component';\nimport { ViewCodeComponent } from './codes/view-code/view-code.component';\nimport { EditCodeComponent } from './codes/edit-code/edit-code.component';\nimport { AccountNumberPreferencesComponent } from './account-number-preferences/account-number-preferences.component';\nimport { CreateAccountNumberPreferenceComponent } from './account-number-preferences/create-account-number-preference/create-account-number-preference.component';\nimport { ViewAccountNumberPreferenceComponent } from './account-number-preferences/view-account-number-preference/view-account-number-preference.component';\nimport { EditAccountNumberPreferenceComponent } from './account-number-preferences/edit-account-number-preference/edit-account-number-preference.component';\nimport { ManageReportsComponent } from './manage-reports/manage-reports.component';\nimport { ViewReportComponent } from './manage-reports/view-report/view-report.component';\nimport { CreateReportComponent } from './manage-reports/create-report/create-report.component';\nimport { EditReportComponent } from './manage-reports/edit-report/edit-report.component';\n\n/** Dialog Component Imports */\nimport { ReportParameterDialogComponent } from './manage-reports/report-parameter-dialog/report-parameter-dialog.component';\n\n@NgModule({\n  imports: [\n    SystemRoutingModule,\n    SharedModule\n  ],\n  declarations: [\n    SystemComponent,\n    CodesComponent,\n    ViewCodeComponent,\n    CreateCodeComponent,\n    EditCodeComponent,\n    ExternalServicesComponent,\n    ManageDataTablesComponent,\n    ManageHooksComponent,\n    RolesAndPermissionsComponent,\n    ManageSurveysComponent,\n    ManageSchedulerJobsComponent,\n    GlobalConfigurationsComponent,\n    EditConfigurationComponent,\n    AmazonS3Component,\n    EmailComponent,\n    SMSComponent,\n    NotificationComponent,\n    EditAmazonS3Component,\n    EditEmailComponent,\n    EditNotificationComponent,\n    EditSMSComponent,\n    AccountNumberPreferencesComponent,\n    CreateAccountNumberPreferenceComponent,\n    ViewAccountNumberPreferenceComponent,\n    EditAccountNumberPreferenceComponent,\n    ManageReportsComponent,\n    ViewReportComponent,\n    CreateReportComponent,\n    EditReportComponent,\n    ReportParameterDialogComponent,\n    AddRoleComponent\n  ],\n  entryComponents: [\n    ReportParameterDialogComponent\n  ]\n})\nexport class SystemModule { }\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/**\n * System service.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SystemService {\n\n  /**\n   * @param {HttpClient} http Http Client to send requests.\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * @returns {Observable<any>} Data tables.\n   */\n  getDataTables(): Observable<any> {\n    return this.http.get('/datatables');\n  }\n\n  /**\n   * @returns {Observable<any>} Hooks.\n   */\n  getHooks(): Observable<any> {\n    return this.http.get('/hooks');\n  }\n\n  /**\n   * @returns {Observable<any>} Fetches Roles and Permissions\n   */\n  getRoles(): Observable<any> {\n    return this.http.get('/roles');\n  }\n\n  /**\n   * @param {any} role Role to be created.\n   * @returns {Observable<any>}\n   */\n  createRole(role: any): Observable<any> {\n    return this.http.post('/roles', role);\n  }\n\n  /**\n   * @returns {Observable<any>} Fetches Codes.\n   */\n  getCodes(): Observable<any> {\n    return this.http.get('/codes');\n  }\n\n  /**\n   * @param codeId Code ID.\n   * @returns {Observable<any>} Fetches Code.\n   */\n  getCode(codeId: string): Observable<any> {\n    return this.http.get(`/codes/${codeId}`);\n  }\n\n  /**\n   * @param code Code.\n   * @param codeId Code ID.\n   * @returns {Observable<any>}\n   */\n  updateCode(code: any, codeId: string): Observable<any> {\n    return this.http.put(`/codes/${codeId}`, code);\n  }\n\n  /**\n   * @param codeId Code ID.\n   * @returns {Observable<any>} Code Values.\n   */\n  getCodeValues(codeId: string): Observable<any> {\n    return this.http.get(`/codes/${codeId}/codevalues`);\n  }\n\n  /**\n   * @param codeId Code ID.\n   * @param codeValueId Code value ID.\n   * @returns {Observable<any>}\n   */\n  deleteCodeValue(codeId: string, codeValueId: string): Observable<any> {\n    return this.http.delete(`/codes/${codeId}/codevalues/${codeValueId}`);\n  }\n\n  /**\n   * @param codeId Code ID.\n   * @param codeValueId Code value ID.\n   * @param codeValueChanges Code value changes.\n   * @returns {Observable<any>}\n   */\n  updateCodeValue(codeId: string, codeValueId: string, codeValueChanges: any): Observable<any> {\n    return this.http.put(`/codes/${codeId}/codevalues/${codeValueId}`, codeValueChanges);\n  }\n\n  /**\n   * @param codeId Code ID.\n   * @param codeValueId Code value.\n   * @returns {Observable<any>}\n   */\n  createCodeValue(codeId: string, codeValue: any): Observable<any> {\n    return this.http.post(`/codes/${codeId}/codevalues`, codeValue);\n  }\n\n  /**\n   * @param codeId Code ID.\n   * @returns {Observable<any>}\n   */\n  deleteCode(codeId: string): Observable<any> {\n    return this.http.delete(`/codes/${codeId}`);\n  }\n\n  /**\n   * @returns {Observable<any>} Fetches Surveys.\n   */\n  getSurveys(): Observable<any> {\n    return this.http.get('/surveys');\n  }\n\n  /**\n   * @returns {Observable<any>} Fetches Jobs.\n   */\n  getJobs(): Observable<any> {\n    return this.http.get('/jobs');\n  }\n\n  /**\n   * @returns {Observable<any>} Fetches Scheduler.\n   */\n  getScheduler(): Observable<any> {\n    return this.http.get('/scheduler');\n  }\n\n  /**\n   * @param {any} code Code to be created.\n   * @returns {Observable<any>}\n   */\n  createCode(code: any): Observable<any> {\n    return this.http.post('/codes', code);\n  }\n\n  /**\n   * @returns {Observable<any>} Configurations data.\n   */\n  getConfigurations(): Observable<any> {\n    return this.http.get('/configurations');\n  }\n\n  /**\n   * @param {string} configurationId Configuration ID of configuration.\n   * @returns {Observable<any>} Configuration.\n   */\n  getConfiguration(configurationId: string): Observable<any> {\n    return this.http.get(`/configurations/${configurationId}`);\n  }\n\n  /**\n   * @param {string} configurationId Configuration ID of configuration to be updated.\n   * @param {any} configuration Configuration to be updated.\n   * @returns {Observable<any>}\n   */\n  updateConfiguration(configurationId: string, configuration: any): Observable<any> {\n    return this.http.put(`/configurations/${configurationId}`, configuration);\n  }\n\n  /**\n   * @param {string} externalConfigurationName External Configuration Name.\n   * @returns {Observable<any>} External Configuration.\n   */\n  getExternalConfiguration(externalConfigurationName: string): Observable<any> {\n    return this.http.get(`/externalservice/${externalConfigurationName}`);\n  }\n\n  /**\n   * @param {string} externalConfigurationName External Configuration Name.\n   * @param {any} externalConfiguration External Configuration.\n   * @returns {Observable<any>}\n   */\n  updateExternalConfiguration(externalConfigurationName: string, externalConfiguration: any): Observable<any> {\n    return this.http.put(`/externalservice/${externalConfigurationName}`, externalConfiguration);\n  }\n\n  /**\n   * @returns {Observable<any>} Account number preferences.\n   */\n  getAccountNumberPreferences(): Observable<any> {\n    return this.http.get('/accountnumberformats');\n  }\n\n  /**\n   * @returns {Observable<any>} Fetches Account Number Preferences Template.\n   */\n  getAccountNumberPreferencesTemplate(): Observable<any> {\n    return this.http.get('/accountnumberformats/template');\n  }\n\n  /**\n   * @param {string} accountNumberPreferenceId Account Number Preference ID.\n   * @returns {Observable<any>} Fetches Account Number Preference.\n   */\n  getAccountNumberPreference(accountNumberPreferenceId: string): Observable<any> {\n    return this.http.get(`/accountnumberformats/${accountNumberPreferenceId}`);\n  }\n\n  /**\n   * @param accountNumberPreference Account Number Preference.\n   * @returns {Observable<any>}\n   */\n  createAccountNumberPreference(accountNumberPreference: any): Observable<any> {\n    return this.http.post('/accountnumberformats', accountNumberPreference);\n  }\n\n  /**\n   * @param {string} accountNumberPreferenceId Account Number Preference ID.\n   * @returns {Observable<any>}\n   */\n  deleteAccountNumberPreference(accountNumberPreferenceId: string): Observable<any> {\n    return this.http.delete(`/accountnumberformats/${accountNumberPreferenceId}`);\n  }\n\n  /**\n   * @param {string} accountNumberPreferenceId Account Number Preference ID.\n   * @param {any} accountNumberPreferenceChanges Changes in Account Number Preference.\n   * @returns {Observable<any>}\n   */\n  updateAccountNumberPreference(accountNumberPreferenceId: string, accountNumberPreferenceChanges: any): Observable<any> {\n    return this.http.put(`/accountnumberformats/${accountNumberPreferenceId}`, accountNumberPreferenceChanges);\n  }\n\n  /**\n   * @returns {Observable<any>} Reports.\n   */\n  getReports(): Observable<any> {\n    return this.http.get('/reports');\n  }\n\n  /**\n   * @param {string} reportId Report ID.\n   * @returns {Observable<any>} Report.\n   */\n  getReport(reportId: string): Observable<any> {\n    return this.http.get(`/reports/${reportId}?template=true`);\n  }\n\n  /**\n   * @returns {Observable<any>} Report Template.\n   */\n  getReportTemplate(): Observable<any> {\n    return this.http.get('/reports/template');\n  }\n\n  /**\n   * @param {any} report Report.\n   * @returns {Observable<any>}\n   */\n  createReport(report: any): Observable<any> {\n    return this.http.post('/reports', report);\n  }\n\n  /**\n   * @param {string} reportId Report ID.\n   * @param {any} report Report.\n   * @returns {Observable<any>}\n   */\n  updateReport(reportId: string, report: any): Observable<any> {\n    return this.http.put(`/reports/${reportId}`, report);\n  }\n\n  /**\n   * @param {string} reportId Report ID.\n   * @returns {Observable<any>}\n   */\n  deleteReport(reportId: string): Observable<any> {\n    return this.http.delete(`/reports/${reportId}`);\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { TemplatesService } from './templates.service';\n\n/**\n * Template data resolver.\n */\n@Injectable()\nexport class TemplateResolver implements Resolve<Object> {\n\n  /**\n   * @param {TemplatesService} templatesService Templates service.\n   */\n  constructor(private templatesService: TemplatesService) {}\n\n  /**\n   * Returns the Template data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const templateId = route.paramMap.get('id');\n    return this.templatesService.getTemplate(templateId);\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/** Routing Imports */\nimport { Route } from '../core/route/route.service';\n\n/** Translation Imports */\nimport { extract } from '../core/i18n/i18n.service';\n\n/** Custom Components */\nimport { TemplatesComponent } from './templates.component';\nimport { ViewTemplateComponent } from './view-template/view-template.component';\n\n/** Custom Resolvers */\nimport { TemplatesResolver } from './templates.resolver';\nimport { TemplateResolver } from './template.resolver';\n\n/** Templates Routes */\nconst routes: Routes = [\n  Route.withShell([\n    {\n      path: 'templates',\n      data: { title: extract('Templates'), breadcrumb: 'Templates' },\n      children: [\n        {\n          path: '',\n          component: TemplatesComponent,\n          resolve: {\n            templates: TemplatesResolver\n          }\n        },\n        {\n          path: ':id',\n          data: { title: extract('View Template'), routeResolveBreadcrumb: ['template', 'name'] },\n          resolve: {\n            template: TemplateResolver\n          },\n          children: [\n            {\n              path: '',\n              component: ViewTemplateComponent,\n            }\n          ]\n        }\n      ]\n    }\n  ])\n];\n\n/**\n * Templates Routing Module\n *\n * Configures the templates routes.\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    TemplatesResolver,\n    TemplateResolver\n  ]\n})\nexport class TemplatesRoutingModule { }\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create Template\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"entity\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Entity </th>\\n        <td mat-cell *matCellDef=\\\"let template\\\"> {{ template.entity }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"type\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Type </th>\\n        <td mat-cell *matCellDef=\\\"let template\\\"> {{ template.type }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let template\\\"> {{ template.name }} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id]\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3RlbXBsYXRlcy90ZW1wbGF0ZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7RUFEYjtJQUlJLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3RlbXBsYXRlcy90ZW1wbGF0ZXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuXG4gIC5zZWxlY3Qtcm93OmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/**\n * Templates component.\n */\n@Component({\n  selector: 'mifosx-templates',\n  templateUrl: './templates.component.html',\n  styleUrls: ['./templates.component.scss']\n})\nexport class TemplatesComponent implements OnInit {\n\n  /** Templates data. */\n  templatesData: any;\n  /** Columns to be displayed in templates table. */\n  displayedColumns: string[] = ['entity', 'type', 'name'];\n  /** Data source for templates table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for templates table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for templates table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the templates data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { templates: any }) => {\n      this.templatesData = data.templates;\n    });\n  }\n\n  /**\n   * Filters data in templates table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the templates table.\n   */\n  ngOnInit() {\n    this.setTemplates();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for templates table.\n   */\n  setTemplates() {\n    this.dataSource = new MatTableDataSource(this.templatesData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\n\n/** Custom Modules */\nimport { SharedModule } from '../shared/shared.module';\nimport { TemplatesRoutingModule } from './templates-routing.module';\n\n/** Custom Components */\nimport { TemplatesComponent } from './templates.component';\nimport { ViewTemplateComponent } from './view-template/view-template.component';\n\n/**\n * Templates Module\n *\n * Templates components should be declared here.\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    TemplatesRoutingModule\n  ],\n  declarations: [\n    TemplatesComponent,\n    ViewTemplateComponent,\n  ]\n})\nexport class TemplatesModule { }\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { TemplatesService } from './templates.service';\n\n/**\n * Templates data resolver.\n */\n@Injectable()\nexport class TemplatesResolver implements Resolve<Object> {\n\n  /**\n   * @param {TemplatesService} templatesService Templates service.\n   */\n  constructor(private templatesService: TemplatesService) {}\n\n  /**\n   * Returns the templates data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.templatesService.getTemplates();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/**\n * Templates service.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TemplatesService {\n\n  /**\n   * @param {HttpClient} http Http Client to send requests.\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * @returns {Observable<any>} Templates data\n   */\n  getTemplates(): Observable<any> {\n    return this.http.get('/templates');\n  }\n\n  /**\n   * @param templateId Template ID.\n   * @returns {Observable<any>} Fetches Template.\n   */\n  getTemplate(templateId: string): Observable<any> {\n    return this.http.get(`/templates/${templateId}`);\n  }\n\n  /**\n   * @param templateId Template ID.\n   * @returns {Observable<any>}\n   */\n  deleteTemplate(templateId: string): Observable<any> {\n    return this.http.delete(`/templates/${templateId}`);\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"delete()\\\">\\n    <fa-icon icon=\\\"trash\\\"></fa-icon>&nbsp;&nbsp;\\n    Delete\\n  </button>\\n\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-content>\\n\\n      <div fxLayout=\\\"row wrap\\\" class=\\\"content\\\">\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Entity\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ templateData.entity }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Type\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ templateData.type }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Text\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" [innerHTML]=\\\"templateData.text\\\"></div>\\n\\n      </div>\\n\\n    </mat-card-content>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n  .container .content div {\\n    margin: 1rem 0;\\n    word-wrap: break-word; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3RlbXBsYXRlcy92aWV3LXRlbXBsYXRlL3ZpZXctdGVtcGxhdGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0IsRUFBQTtFQURsQjtJQUtNLGNBQWM7SUFDZCxxQkFBcUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3RlbXBsYXRlcy92aWV3LXRlbXBsYXRlL3ZpZXctdGVtcGxhdGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAzN3JlbTtcbiAgXG4gIC5jb250ZW50IHtcbiAgICBkaXYge1xuICAgICAgbWFyZ2luOiAxcmVtIDA7XG4gICAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gICAgfVxuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\n\n/** Custom Services */\nimport { TemplatesService } from '../templates.service';\n\n/** Custom Components */\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\n\n/**\n * View Template Component.\n */\n@Component({\n  selector: 'mifosx-view-template',\n  templateUrl: './view-template.component.html',\n  styleUrls: ['./view-template.component.scss']\n})\nexport class ViewTemplateComponent implements OnInit {\n\n  /** Template Data */\n  templateData: any;\n\n  /**\n   * Retrieves the template data from `resolve`.\n   * @param {TemplateService} templateService Accounting Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   * @param {MatDialog} dialog Dialog reference.\n   */\n  constructor(private route: ActivatedRoute,\n              private templatesService: TemplatesService,\n              private router: Router,\n              private dialog: MatDialog) {\n    this.route.data.subscribe((data: { template: any }) => {\n      this.templateData = data.template;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Deletes the template and redirects to templates.\n   */\n  delete() {\n    const deleteTemplateDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `template ${this.templateData.id}` }\n    });\n    deleteTemplateDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.templatesService.deleteTemplate(this.templateData.id)\n          .subscribe(() => {\n            this.router.navigate(['/templates']);\n          });\n      }\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n      <mat-card-content>\\n\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"2%\\\" fxLayout.lt-md=\\\"column\\\">\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Username</mat-label>\\n            <input matInput required formControlName=\\\"username\\\">\\n            <mat-error *ngIf=\\\"userForm.controls.username.hasError('required')\\\">\\n              Username is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Email</mat-label>\\n            <input matInput [required]=\\\"userForm.controls.sendPasswordToEmail.value\\\" formControlName=\\\"email\\\">\\n            <mat-error *ngIf=\\\"userForm.controls.email.hasError('email')\\\">\\n              Email is <strong>invalid</strong>\\n            </mat-error>\\n            <mat-error *ngIf=\\\"userForm.controls.email.hasError('required')\\\">\\n              Email is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>First Name</mat-label>\\n            <input matInput required formControlName=\\\"firstname\\\">\\n            <mat-error *ngIf=\\\"userForm.controls.firstname.hasError('pattern')\\\">\\n              First Name <strong>cannot begin with a special character or number</strong>\\n            </mat-error>\\n            <mat-error *ngIf=\\\"userForm.controls.firstname.hasError('required')\\\">\\n              First Name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Last Name</mat-label>\\n            <input matInput required formControlName=\\\"lastname\\\">\\n            <mat-error *ngIf=\\\"userForm.controls.lastname.hasError('pattern')\\\">\\n              Last Name <strong>cannot begin with a special character or number</strong>\\n            </mat-error>\\n            <mat-error *ngIf=\\\"userForm.controls.lastname.hasError('required')\\\">\\n              Last Name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <div fxFlex=\\\"48%\\\" class=\\\"password-never-expires-wrapper\\\">\\n            <mat-checkbox labelPosition=\\\"before\\\" formControlName=\\\"passwordNeverExpires\\\" >\\n              Override password expiry policy\\n            </mat-checkbox>\\n          </div>\\n\\n          <div fxFlex=\\\"48%\\\" class=\\\"send-password-to-email-wrapper\\\">\\n            <mat-checkbox labelPosition=\\\"before\\\" formControlName=\\\"sendPasswordToEmail\\\">\\n              Auto generate password\\n            </mat-checkbox>\\n          </div>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\" *ngIf=\\\"!userForm.controls.sendPasswordToEmail.value\\\">\\n            <mat-label>Password</mat-label>\\n            <input matInput required type=\\\"password\\\" formControlName=\\\"password\\\">\\n            <mat-error *ngIf=\\\"userForm.controls.password.hasError('required')\\\">\\n              Password is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\" *ngIf=\\\"!userForm.controls.sendPasswordToEmail.value\\\">\\n            <mat-label>Repeat Password</mat-label>\\n            <input matInput required type=\\\"password\\\" formControlName=\\\"repeatPassword\\\">\\n            <mat-error *ngIf=\\\"userForm.controls.repeatPassword.hasError('required')\\\">\\n              Password is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <p fxFlex=\\\"98%\\\" class=\\\"reset-password-error\\\" *ngIf=\\\"userForm.errors?.passwordsDoNotMatch &&\\n          (!userForm.controls.password.hasError('required') && !userForm.controls.repeatPassword.hasError('required'))\\\">\\n          Passwords <strong>do not match</strong>\\n          </p>      \\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Office</mat-label>\\n            <mat-select required formControlName=\\\"officeId\\\">\\n              <mat-option *ngFor=\\\"let office of officesData\\\" [value]=\\\"office.id\\\">\\n                {{ office.name }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"userForm.controls.officeId.hasError('required')\\\">\\n              Office is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Staff</mat-label>\\n            <mat-select formControlName=\\\"staffId\\\">\\n              <mat-option *ngFor=\\\"let staff of staffData\\\" [value]=\\\"staff.id\\\">\\n                {{ staff.displayName }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"48%\\\">\\n            <mat-label>Roles</mat-label>\\n            <mat-select required formControlName=\\\"roles\\\" multiple>\\n              <mat-option *ngFor=\\\"let role of rolesData\\\" [value]=\\\"role.id\\\">\\n                {{ role.name }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"userForm.controls.roles.hasError('required')\\\">\\n              At least one role <strong>must be selected</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n        </div>\\n\\n      </mat-card-content>\\n\\n      <mat-card-actions fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"5px\\\">\\n        <button type=\\\"button\\\" mat-raised-button [routerLink]=\\\"['../']\\\">Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!userForm.valid\\\">Submit</button>\\n      </mat-card-actions>\\n\\n    </form>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".password-never-expires-wrapper {\\n  padding: 17.5px 0 17.5px 0; }\\n\\n.send-password-to-email-wrapper {\\n  padding: 17.5px 0 17.5px 0; }\\n\\n.reset-password-error {\\n  color: #f44336;\\n  font-size: 80%;\\n  margin: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3VzZXJzL2NyZWF0ZS11c2VyL2NyZWF0ZS11c2VyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsMEJBQTBCLEVBQUE7O0FBRzVCO0VBQ0UsMEJBQTBCLEVBQUE7O0FBRzVCO0VBQ0UsY0FBYztFQUNkLGNBQWM7RUFDZCxTQUFTLEVBQUEiLCJmaWxlIjoic3JjL2FwcC91c2Vycy9jcmVhdGUtdXNlci9jcmVhdGUtdXNlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wYXNzd29yZC1uZXZlci1leHBpcmVzLXdyYXBwZXIge1xuICBwYWRkaW5nOiAxNy41cHggMCAxNy41cHggMDtcbn1cblxuLnNlbmQtcGFzc3dvcmQtdG8tZW1haWwtd3JhcHBlciB7XG4gIHBhZGRpbmc6IDE3LjVweCAwIDE3LjVweCAwO1xufVxuXG4ucmVzZXQtcGFzc3dvcmQtZXJyb3Ige1xuICBjb2xvcjogI2Y0NDMzNjtcbiAgZm9udC1zaXplOiA4MCU7XG4gIG1hcmdpbjogMDtcbn1cbiJdfQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/** Custom Services */\nimport { UsersService } from '../users.service';\n\n/** Custom Validators */\nimport { confirmPasswordValidator } from '../../login/reset-password/confirm-password.validator';\n\n/**\n * Create user component.\n */\n@Component({\n  selector: 'mifosx-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.scss']\n})\nexport class CreateUserComponent implements OnInit {\n\n  /** User form. */\n  userForm: FormGroup;\n  /** Offices data. */\n  officesData: any;\n  /** Roles data. */\n  rolesData: any;\n  /** Staff data. */\n  staffData: any;\n\n  /**\n   * Retrieves the offices and roles data from `resolve`.\n   * @param {FormBuilder} formBuilder Form Builder.\n   * @param {UsersService} UsersService Users Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   */\n  constructor(private formBuilder: FormBuilder,\n              private usersService: UsersService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.route.data.subscribe((data: {\n        usersTemplate: any\n      }) => {\n        this.officesData = data.usersTemplate.allowedOffices;\n        this.rolesData = data.usersTemplate.availableRoles;\n      });\n  }\n\n  /**\n   * Creates the user form, sets the staff data and conditional controls of the user form.\n   */\n  ngOnInit() {\n    this.createUserForm();\n    this.setStaffData();\n    this.setConditionalControls();\n  }\n\n  /**\n   * Creates the user form.\n   */\n  createUserForm() {\n    this.userForm = this.formBuilder.group({\n      'username': ['', Validators.required],\n      'email': ['', [Validators.required, Validators.email]],\n      'firstname': ['', [Validators.required, Validators.pattern('(^[A-z]).*')]],\n      'lastname': ['', [Validators.required, Validators.pattern('(^[A-z]).*')]],\n      'sendPasswordToEmail': [true],\n      'passwordNeverExpires': [false],\n      'officeId': ['', Validators.required],\n      'staffId': [''],\n      'roles': ['', Validators.required]\n    }, { validator: confirmPasswordValidator });\n  }\n\n  /**\n   * Sets the staff data each time the user selects a new office\n   */\n  setStaffData() {\n    this.userForm.get('officeId').valueChanges.subscribe((officeId: string) => {\n      this.staffData = [];\n      this.usersService.getStaff(officeId).subscribe((staff: any) => {\n        this.staffData = staff;\n      });\n    });\n  }\n\n  /**\n   * Sets the conditional controls of the user form\n   */\n  setConditionalControls() {\n    this.userForm.get('sendPasswordToEmail').valueChanges.subscribe((sendPasswordToEmail: boolean) => {\n      if (sendPasswordToEmail) {\n        this.userForm.removeControl('password');\n        this.userForm.removeControl('repeatPassword');\n        this.userForm.get('email').setValidators([Validators.required, Validators.email]);\n      } else {\n        this.userForm.addControl('password', new FormControl('', Validators.required));\n        this.userForm.addControl('repeatPassword', new FormControl('', Validators.required));\n        this.userForm.get('email').setValidators([Validators.email]);\n      }\n      this.userForm.get('email').updateValueAndValidity();\n    });\n  }\n\n  /**\n   * Submits the user form and creates user,\n   * if successful redirects to users.\n   */\n  submit() {\n    const user = this.userForm.value;\n    this.usersService.createUser(user).subscribe((response: any) => {\n      this.router.navigate(['../'], { relativeTo: this.route });\n    });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { UsersService } from './users.service';\n\n/**\n * User data resolver.\n */\n@Injectable()\nexport class UserResolver implements Resolve<Object> {\n\n  /**\n   * @param {UsersService} usersService Users service.\n   */\n  constructor(private usersService: UsersService) {}\n\n  /**\n   * Returns the user data.\n   * @returns {Observable<any>}\n   */\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    const userId = route.paramMap.get('id');\n    return this.usersService.getUser(userId);\n  }\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/** Routing Imports */\nimport { Route } from '../core/route/route.service';\n\n/** Translation Imports */\nimport { extract } from '../core/i18n/i18n.service';\n\n/** Custom Components */\nimport { UsersComponent } from './users.component';\nimport { CreateUserComponent } from './create-user/create-user.component';\nimport { ViewUserComponent } from './view-user/view-user.component';\n\n/** Custom Resolvers */\nimport { UsersResolver } from './users.resolver';\nimport { UsersTemplateResolver } from './users-template.resolver';\nimport { UserResolver } from './user.resolver';\n\n/** Users Routes */\nconst routes: Routes = [\n  Route.withShell([\n    {\n      path: 'users',\n      data: { title: extract('Users'), breadcrumb: 'Users' },\n      children: [\n        {\n          path: '',\n          component: UsersComponent,\n          resolve: {\n            users: UsersResolver\n          }\n        },\n        {\n          path: 'create',\n          component: CreateUserComponent,\n          data: { title: extract('Create User'), breadcrumb: 'Create User' },\n          resolve: {\n            usersTemplate: UsersTemplateResolver\n          }\n        },\n        {\n          path: ':id',\n          data: { title: extract('View User'), routeResolveBreadcrumb: ['user', 'username'] },\n          resolve: {\n            user: UserResolver\n          },\n          children: [\n            {\n              path: '',\n              component: ViewUserComponent\n            }\n          ]\n        }\n      ]\n    }\n  ])\n];\n\n/**\n * Users Routing Module\n *\n * Configures the users routes.\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    UsersResolver,\n    UsersTemplateResolver,\n    UserResolver\n  ]\n})\nexport class UsersRoutingModule { }\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { UsersService } from './users.service';\n\n/**\n * Users template data resolver.\n */\n@Injectable()\nexport class UsersTemplateResolver implements Resolve<Object> {\n\n  /**\n   * @param {UsersService} usersService Users service.\n   */\n  constructor(private usersService: UsersService) {}\n\n  /**\n   * Returns the users template data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.usersService.getUsersTemplate();\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"20px\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['create']\\\">\\n    <fa-icon icon=\\\"plus\\\"></fa-icon>&nbsp;&nbsp;\\n    Create User\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\">\\n    <mat-form-field fxFlex>\\n      <mat-label>Filter</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <ng-container matColumnDef=\\\"firstname\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name </th>\\n        <td mat-cell *matCellDef=\\\"let user\\\"> {{ user.firstname }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"lastname\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\\n        <td mat-cell *matCellDef=\\\"let user\\\"> {{ user.lastname }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"email\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\n        <td mat-cell *matCellDef=\\\"let user\\\"> {{ user.email }} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"officeName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Office </th>\\n        <td mat-cell *matCellDef=\\\"let user\\\"> {{ user.officeName }} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"[row.id]\\\" class=\\\"select-row\\\"></tr>\\n\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n\\n  </div>\\n\\n</div>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n  table .select-row:hover {\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBO0VBRGI7SUFJSSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC91c2Vycy91c2Vycy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG5cbiAgLnNlbGVjdC1yb3c6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxufVxuIl19 */\"","/** Angular Imports */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\n\n/** rxjs Imports */\nimport { of } from 'rxjs';\n\n/**\n * Users component.\n */\n@Component({\n  selector: 'mifosx-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  /** Users data. */\n  usersData: any;\n  /** Columns to be displayed in users table. */\n  displayedColumns: string[] = ['firstname', 'lastname', 'email', 'officeName'];\n  /** Data source for users table. */\n  dataSource: MatTableDataSource<any>;\n\n  /** Paginator for users table. */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  /** Sorter for users table. */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n   * Retrieves the users data from `resolve`.\n   * @param {ActivatedRoute} route Activated Route.\n   */\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(( data: { users: any }) => {\n      this.usersData = data.users;\n    });\n  }\n\n  /**\n   * Filters data in users table based on passed value.\n   * @param {string} filterValue Value to filter data.\n   */\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  /**\n   * Sets the users table.\n   */\n  ngOnInit() {\n    this.setUsers();\n  }\n\n  /**\n   * Initializes the data source, paginator and sorter for users table.\n   */\n  setUsers() {\n    this.dataSource = new MatTableDataSource(this.usersData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\n\n/** Custom Modules */\nimport { SharedModule } from '../shared/shared.module';\nimport { UsersRoutingModule } from './users-routing.module';\n\n/** Custom Components */\nimport { UsersComponent } from './users.component';\nimport { CreateUserComponent } from './create-user/create-user.component';\nimport { ViewUserComponent } from './view-user/view-user.component';\n\n/**\n * Users Module\n *\n * Users components should be declared here.\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    UsersRoutingModule\n  ],\n  declarations: [\n    UsersComponent,\n    CreateUserComponent,\n    ViewUserComponent\n  ]\n})\nexport class UsersModule { }\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { UsersService } from './users.service';\n\n/**\n * Users data resolver.\n */\n@Injectable()\nexport class UsersResolver implements Resolve<Object> {\n\n  /**\n   * @param {UsersService} usersService Users service.\n   */\n  constructor(private usersService: UsersService) {}\n\n  /**\n   * Returns the users data.\n   * @returns {Observable<any>}\n   */\n  resolve(): Observable<any> {\n    return this.usersService.getUsers();\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/**\n * Users service.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  /**\n   * @param {HttpClient} http Http Client to send requests.\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * @returns {Observable<any>} Users data\n   */\n  getUsers(): Observable<any> {\n    return this.http.get('/users');\n  }\n\n  /**\n   * @returns {Observable<any>} Users template data\n   */\n  getUsersTemplate(): Observable<any> {\n    return this.http.get('/users/template');\n  }\n\n  /**\n   * @param {any} user User to be created.\n   * @returns {Observable<any>}\n   */\n  createUser(user: any): Observable<any> {\n    return this.http.post('/users', user);\n  }\n\n  /**\n   * @param {string} userId user ID of user.\n   * @returns {Observable<any>} User.\n   */\n  getUser(userId: string): Observable<any> {\n    return this.http.get(`/users/${userId}`);\n  }\n\n  /**\n   * @param {string} userId user ID of user.\n   * @returns {Observable<any>}\n   */\n  deleteUser(userId: string): Observable<any> {\n    return this.http.delete(`/users/${userId}`);\n  }\n\n  /**\n   * @param {any} officeId ID of office to retrieve staff from.\n   * @returns {Observable<any>} Staff data.\n   */\n  getStaff(officeId: any): Observable<any> {\n    const httpParams = new HttpParams()\n      .set('officeId', officeId.toString());\n    return this.http.get('/staff', { params: httpParams });\n  }\n\n}\n","module.exports = \"<div class=\\\"container m-b-20\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"2%\\\">\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"edit\\\"></fa-icon>&nbsp;&nbsp;\\n    Edit\\n  </button>\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"delete()\\\">\\n    <fa-icon icon=\\\"trash\\\"></fa-icon>&nbsp;&nbsp;\\n    Delete\\n  </button>\\n  <button mat-raised-button color=\\\"primary\\\">\\n    <fa-icon icon=\\\"cog\\\"></fa-icon>&nbsp;&nbsp;\\n    Change Password\\n  </button>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <mat-card>\\n\\n    <mat-card-content>\\n\\n      <div fxLayout=\\\"row wrap\\\" class=\\\"content\\\">\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Login Name\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ userData.username }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          First Name\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ userData.firstname }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Last Name\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ userData.lastname }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Email\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ userData.email }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Office\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          {{ userData.officeName }}\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\" class=\\\"mat-body-strong\\\">\\n          Roles\\n        </div>\\n\\n        <div fxFlex=\\\"50%\\\">\\n          <span *ngFor=\\\"let role of userData.selectedRoles\\\">\\n            {{ role.name }}\\n          </span>\\n        </div>\\n\\n      </div>\\n\\n    </mat-card-content>\\n\\n  </mat-card>\\n\\n</div>\\n\"","module.exports = \".container {\\n  max-width: 37rem; }\\n  .container .content div {\\n    margin: 1rem 0;\\n    word-wrap: break-word; }\\n  .container .content div span {\\n      display: block; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xhcDE0L0RvY3VtZW50cy9yci9zcmMvYXBwL3VzZXJzL3ZpZXctdXNlci92aWV3LXVzZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0IsRUFBQTtFQURsQjtJQUtNLGNBQWM7SUFDZCxxQkFBcUIsRUFBQTtFQU4zQjtNQVNRLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3ZpZXctdXNlci92aWV3LXVzZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAzN3JlbTtcblxuICAuY29udGVudCB7XG4gICAgZGl2IHtcbiAgICAgIG1hcmdpbjogMXJlbSAwO1xuICAgICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuXG4gICAgICBzcGFuIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0= */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\n\n/** Custom Services */\nimport { UsersService } from '../users.service';\n\n/** Custom Components */\nimport { DeleteDialogComponent } from 'app/shared/delete-dialog/delete-dialog.component';\n\n/**\n * View user component.\n */\n@Component({\n  selector: 'mifosx-view-user',\n  templateUrl: './view-user.component.html',\n  styleUrls: ['./view-user.component.scss']\n})\nexport class ViewUserComponent implements OnInit {\n\n  /** User Data. */\n  userData: any;\n\n  /**\n   * Retrieves the user data from `resolve`.\n   * @param {UsersService} usersService Users Service.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router for navigation.\n   * @param {MatDialog} dialog Dialog reference.\n   */\n  constructor(private usersService: UsersService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private dialog: MatDialog) {\n    this.route.data.subscribe((data: { user: any }) => {\n      this.userData = data.user;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Deletes the user and redirects to users.\n   */\n  delete() {\n    const deleteUserDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `user ${this.userData.id}` }\n    });\n    deleteUserDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.usersService.deleteUser(this.userData.id)\n          .subscribe(() => {\n            this.router.navigate(['/users']);\n          });\n      }\n    });\n  }\n\n}\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dlYi1hcHAuY29tcG9uZW50LnNjc3MifQ== */\"","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { MatSnackBar } from '@angular/material';\n\n/** rxjs Imports */\nimport { merge } from 'rxjs';\nimport { filter, map, mergeMap } from 'rxjs/operators';\n\n/** Translation Imports */\nimport { TranslateService } from '@ngx-translate/core';\n\n/** Environment Configuration */\nimport { environment } from '../environments/environment';\n\n/** Custom Services */\nimport { Logger } from './core/logger/logger.service';\nimport { I18nService } from './core/i18n/i18n.service';\nimport { ThemeStorageService } from './shared/theme-picker/theme-storage.service';\nimport { AlertService } from './core/alert/alert.service';\n\n/** Custom Models */\nimport { Alert } from './core/alert/alert.model';\n\n/** Initialize Logger */\nconst log = new Logger('MifosX');\n\n/**\n * Main web app component.\n */\n@Component({\n  selector: 'mifosx-web-app',\n  templateUrl: './web-app.component.html',\n  styleUrls: ['./web-app.component.scss']\n})\nexport class WebAppComponent implements OnInit {\n\n  /**\n   * @param {Router} router Router for navigation.\n   * @param {ActivatedRoute} activatedRoute Activated Route.\n   * @param {Title} titleService Title Service.\n   * @param {TranslateService} translateService Translate Service.\n   * @param {I18nService} i18nService I18n Service.\n   * @param {ThemeStorageService} themeStorageService Theme Storage Service.\n   * @param {MatSnackBar} snackBar Material Snackbar for notifications.\n   * @param {AlertService} alertService Alert Service.\n   */\n  constructor(private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private titleService: Title,\n              private translateService: TranslateService,\n              private i18nService: I18nService,\n              private themeStorageService: ThemeStorageService,\n              public snackBar: MatSnackBar,\n              private alertService: AlertService) { }\n\n  /**\n   * Initial Setup:\n   *\n   * 1) Logger\n   *\n   * 2) Language and Translations\n   *\n   * 3) Page Title\n   *\n   * 4) Theme\n   *\n   * 5) Alerts\n   */\n  ngOnInit() {\n    // Setup logger\n    if (environment.production) {\n      Logger.enableProductionMode();\n    }\n    log.debug('init');\n\n    // Setup translations\n    this.i18nService.init(environment.defaultLanguage, environment.supportedLanguages);\n\n    // Change page title on navigation or language change, based on route data\n    const onNavigationEnd = this.router.events.pipe(filter(event => event instanceof NavigationEnd));\n    merge(this.translateService.onLangChange, onNavigationEnd)\n      .pipe(\n        map(() => {\n          let route = this.activatedRoute;\n          while (route.firstChild) {\n            route = route.firstChild;\n          }\n          return route;\n        }),\n        filter(route => route.outlet === 'primary'),\n        mergeMap(route => route.data)\n      )\n      .subscribe(event => {\n        const title = event['title'];\n        if (title) {\n          this.titleService.setTitle(`${this.translateService.instant(title)} | FinOS`);\n        }\n      });\n\n    // Setup theme\n    const theme = this.themeStorageService.getTheme();\n    if (theme) {\n      this.themeStorageService.installTheme(theme);\n    }\n\n    // Setup alerts\n    this.alertService.alertEvent.subscribe((alertEvent: Alert) => {\n      this.snackBar.open(`${alertEvent.message}`, 'Close', {\n        duration: 2000,\n        horizontalPosition: 'right',\n        verticalPosition: 'top'\n      });\n    });\n  }\n\n}\n","export default {\n  'npm_package_version': '0.0.0'\n};\n","// `.env.ts` is generated by the `npm run env` command\nimport env from './.env';\n\nexport const environment = {\n  production: true,\n  version: env.npm_package_version,\n  fineractPlatformTenantId: 'staging',  // For connecting to server running elsewhere update the tenant identifier\n  baseApiUrl: 'https://staging.openmf.org',  // For connecting to server running elsewhere update the base API URL\n  apiProvider: '/fineract-provider/api',\n  apiVersion: '/v1',\n  serverUrl: '',\n  oauth: {\n    enabled: false,  // For connecting to Mifos X using OAuth2 Authentication change the value to true\n    serverUrl: ''\n  },\n  defaultLanguage: 'en-US',\n  supportedLanguages: [\n    'en-US',\n    'fr-FR'\n  ]\n};\n\n// Server URL\nenvironment.serverUrl = `${environment.baseApiUrl}${environment.apiProvider}${environment.apiVersion}`;\nenvironment.oauth.serverUrl = `${environment.baseApiUrl}${environment.apiProvider}`;\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\n// `.env.ts` is generated by the `npm run env` command\nimport env from './.env';\n\nexport const environment = {\n  production: false,\n  version: env.npm_package_version + '-dev',\n  fineractPlatformTenantId: 'default',  // For connecting to server running elsewhere update the tenant identifier\n  baseApiUrl: 'https://test.finos.in',  // For connecting to server running elsewhere update the base API URL\n  apiProvider: '/fineract-provider/api',\n  apiVersion: '/v1',\n  serverUrl: '',\n  oauth: {\n    enabled: false,  // For connecting to Mifos X using OAuth2 Authentication change the value to true\n    serverUrl: ''\n  },\n  defaultLanguage: 'en-US',\n  supportedLanguages: [\n    'en-US',\n    'fr-FR'\n  ]\n};\n\n// Server URL\nenvironment.serverUrl = `${environment.baseApiUrl}${environment.apiProvider}${environment.apiVersion}`;\nenvironment.oauth.serverUrl = `${environment.baseApiUrl}${environment.apiProvider}`;\n","/**\n * Entry point of the application.\n * Only platform bootstrapping code should be here.\n * For app-specific initialization, use `app/web-app.component.ts`.\n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\n/** Provides gesture support for angular-material components */\nimport 'hammerjs';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}